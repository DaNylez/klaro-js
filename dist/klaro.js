!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.klaro=t():e.klaro=t()}(self,(()=>(()=>{var e={2690:(e,t,n)=>{"use strict";function r(){for(var e=document.cookie.split(";"),t=[],n=new RegExp("^\\s*([^=]+)\\s*=\\s*(.*?)$"),r=0;r<e.length;r++){var o=e[r],i=n.exec(o);null!==i&&t.push({name:i[1],value:i[2]})}return t}function o(e,t,n){var r=e+"=; Max-Age=-99999999;";document.cookie=r,r+=" path="+(t||"/")+";",document.cookie=r,void 0!==n&&(r+=" domain="+n+";",document.cookie=r)}n.d(t,{default:()=>z}),n(9305),n(2733),n(4701),n(1678),n(4776),n(4382),n(9892),n(4962),n(6584),n(9336),n(4754),n(1908),n(94),n(7132),n(6457),n(8908),n(3810),n(8557),n(646),n(5021),n(3687),n(2745),n(3994),n(3062),n(4062),n(3630),n(2367);var i=n(5482);function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function c(e,t,n){return t=l(t),function(e,t){if(t&&("object"===a(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,s()?Reflect.construct(t,n||[],l(e).constructor):t.apply(e,n))}function s(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(s=function(){return!!e})()}function l(e){return l=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},l(e)}function u(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&p(e,t)}function p(e,t){return p=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},p(e,t)}function d(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,v(r.key),r)}}function m(e,t,n){return t&&f(e.prototype,t),n&&f(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function v(e){var t=function(e,t){if("object"!=a(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=a(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==a(t)?t:String(t)}n(6437),n(2697),n(1359);var y=function(){function e(){d(this,e),this.value=null}return m(e,[{key:"get",value:function(){return this.value}},{key:"set",value:function(e){this.value=e}},{key:"delete",value:function(){this.value=null}}]),e}(),h=function(){function e(t){d(this,e),this.cookieName=t.storageName,this.cookieDomain=t.cookieDomain,this.cookiePath=t.cookiePath,this.cookieExpiresAfterDays=t.cookieExpiresAfterDays}return m(e,[{key:"get",value:function(){var e=function(e){for(var t=r(),n=0;n<t.length;n++)if(t[n].name===e)return t[n];return null}(this.cookieName);return e?e.value:null}},{key:"set",value:function(e){return function(e,t,n,r,o){var i="";if(n){var a=new Date;a.setTime(a.getTime()+24*n*60*60*1e3),i="; expires="+a.toUTCString()}void 0!==r&&(i+="; domain="+r),i+=void 0!==o?"; path="+o:"; path=/",document.cookie=e+"="+(t||"")+i+"; SameSite=Lax"}(this.cookieName,e,this.cookieExpiresAfterDays,this.cookieDomain,this.cookiePath)}},{key:"delete",value:function(){return o(this.cookieName)}}]),e}(),A=function(){function e(t,n){d(this,e),this.key=t.storageName,this.handle=n}return m(e,[{key:"get",value:function(){return this.handle.getItem(this.key)}},{key:"getWithKey",value:function(e){return this.handle.getItem(e)}},{key:"set",value:function(e){return this.handle.setItem(this.key,e)}},{key:"setWithKey",value:function(e,t){return this.handle.setItem(e,t)}},{key:"delete",value:function(){return this.handle.removeItem(this.key)}},{key:"deleteWithKey",value:function(e){return this.handle.removeItem(e)}}]),e}(),b=function(e){function t(e){return d(this,t),c(this,t,[e,localStorage])}return u(t,e),m(t)}(A),g=function(e){function t(e){return d(this,t),c(this,t,[e,sessionStorage])}return u(t,e),m(t)}(A);const k={cookie:h,test:y,localStorage:b,sessionStorage:g};function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function C(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=x(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,c=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){c=!0,i=e},f:function(){try{a||null==n.return||n.return()}finally{if(c)throw i}}}}function w(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i,a,c=[],s=!0,l=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=i.call(n)).done)&&(c.push(r.value),c.length!==t);s=!0);}catch(e){l=!0,o=e}finally{try{if(!s&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return c}}(e,t)||x(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function x(e,t){if(e){if("string"==typeof e)return S(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?S(e,t):void 0}}function S(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function j(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function O(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?j(Object(n),!0).forEach((function(t){var r,o,i;r=e,o=t,i=n[t],(o=P(o))in r?Object.defineProperty(r,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):r[o]=i})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):j(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,P(r.key),r)}}function P(e){var t=function(e,t){if("object"!=_(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=_(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==_(t)?t:String(t)}var z=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.config=t,this.store=void 0!==n?n:new k[this.storageMethod](this),void 0===this.store&&(this.store=k.cookie),this.auxiliaryStore=void 0!==r?r:new g(this),this.consents=this.defaultConsents,this.confirmed=!1,this.changed=!1,this.states={},this.initialized={},this.executedOnce={},this.watchers=new Set([]),this.loadConsents(),this.applyConsents(),this.savedConsents=O({},this.consents)}var t,n;return t=e,(n=[{key:"storageMethod",get:function(){return this.config.storageMethod||"cookie"}},{key:"storageName",get:function(){return this.config.storageName||this.config.cookieName||"klaro"}},{key:"cookieDomain",get:function(){return this.config.cookieDomain||void 0}},{key:"cookiePath",get:function(){return this.config.cookiePath||void 0}},{key:"cookieExpiresAfterDays",get:function(){return this.config.cookieExpiresAfterDays||120}},{key:"defaultConsents",get:function(){for(var e={},t=0;t<this.config.services.length;t++){var n=this.config.services[t];e[n.name]=this.getDefaultConsent(n)}return e}},{key:"watch",value:function(e){this.watchers.has(e)||this.watchers.add(e)}},{key:"unwatch",value:function(e){this.watchers.has(e)&&this.watchers.delete(e)}},{key:"notify",value:function(e,t){var n=this;this.watchers.forEach((function(r){r.update(n,e,t)}))}},{key:"getService",value:function(e){var t=this.config.services.filter((function(t){return t.name===e}));if(t.length>0)return t[0]}},{key:"getDefaultConsent",value:function(e){var t=e.default||e.required;return void 0===t&&(t=this.config.default),void 0===t&&(t=!1),t}},{key:"changeAll",value:function(e){var t=this,n=0;return this.config.services.filter((function(e){return!e.contextualConsentOnly})).map((function(r){r.required||t.config.required||e?t.updateConsent(r.name,!0)&&n++:t.updateConsent(r.name,!1)&&n++})),n}},{key:"updateConsent",value:function(e,t){var n=(this.consents[e]||!1)!==t;return this.consents[e]=t,this.notify("consents",this.consents),n}},{key:"resetConsents",value:function(){this.consents=this.defaultConsents,this.states={},this.confirmed=!1,this.applyConsents(),this.savedConsents=O({},this.consents),this.store.delete(),this.notify("consents",this.consents)}},{key:"getConsent",value:function(e){return this.consents[e]||!1}},{key:"loadConsents",value:function(){var e=this.store.get();return null!==e&&(this.consents=JSON.parse(decodeURIComponent(e)),this._checkConsents(),this.notify("consents",this.consents)),this.consents}},{key:"saveAndApplyConsents",value:function(e){this.saveConsents(e),this.applyConsents()}},{key:"changedConsents",value:function(){for(var e={},t=0,n=Object.entries(this.consents);t<n.length;t++){var r=w(n[t],2),o=r[0],i=r[1];this.savedConsents[o]!==i&&(e[o]=i)}return e}},{key:"saveConsents",value:function(e){var t=encodeURIComponent(JSON.stringify(this.consents));this.store.set(t),this.confirmed=!0,this.changed=!1;var n=this.changedConsents();this.savedConsents=O({},this.consents),this.notify("saveConsents",{changes:n,consents:this.consents,type:e||"script"})}},{key:"applyConsents",value:function(e,t,n){function r(e,t){if(void 0!==e)return("function"==typeof e?e:new Function("opts",e))(t)}for(var o=0,i=0;i<this.config.services.length;i++){var a=this.config.services[i];if(void 0===n||n===a.name){var c=a.vars||{},s={service:a,config:this.config,vars:c};this.initialized[a.name]||(this.initialized[a.name]=!0,r(a.onInit,s))}}for(var l=0;l<this.config.services.length;l++){var u=this.config.services[l];if(void 0===n||n===u.name){var p=this.states[u.name],d=u.vars||{},f=void 0!==u.optOut?u.optOut:this.config.optOut||!1,m=void 0!==u.required?u.required:this.config.required||!1,v=this.confirmed||f||e||t,y=this.getConsent(u.name)&&v||m,h={service:u,config:this.config,vars:d,consents:this.consents,confirmed:this.confirmed};p!==y&&o++,e||(r(y?u.onAccept:u.onDecline,h),this.updateServiceElements(u,y),this.updateServiceStorage(u,y),void 0!==u.callback&&u.callback(y,u),void 0!==this.config.callback&&this.config.callback(y,u),this.states[u.name]=y)}}return this.notify("applyConsents",o,n),o}},{key:"updateServiceElements",value:function(e,t){if(t){if(e.onlyOnce&&this.executedOnce[e.name])return;this.executedOnce[e.name]=!0}for(var n=document.querySelectorAll("[data-name='"+e.name+"']"),r=0;r<n.length;r++){var o=n[r],a=o.parentElement,c=(0,i.RT)(o),s=c.type,l=c.src,u=c.href,p=["href","src","type"];if("placeholder"!==s)if("IFRAME"===o.tagName){if(t&&o.src===l){console.debug("Skipping ".concat(o.tagName," for service ").concat(e.name,", as it already has the correct type..."));continue}var d,f=document.createElement(o.tagName),m=C(o.attributes);try{for(m.s();!(d=m.n()).done;){var v=d.value;f.setAttribute(v.name,v.value)}}catch(e){m.e(e)}finally{m.f()}f.innerText=o.innerText,f.text=o.text,t?(void 0!==c["original-display"]&&(f.style.display=c["original-display"]),void 0!==c.src&&(f.src=c.src)):(f.src="",void 0!==c["modified-by-klaro"]&&void 0!==c["original-display"]?f.setAttribute("data-original-display",c["original-display"]):(void 0!==o.style.display&&f.setAttribute("data-original-display",o.style.display),f.setAttribute("data-modified-by-klaro","yes")),f.style.display="none"),a.insertBefore(f,o),a.removeChild(o)}else if("SCRIPT"===o.tagName||"LINK"===o.tagName){if(t&&o.type===(s||"")&&o.src===l){console.debug("Skipping ".concat(o.tagName," for service ").concat(e.name,", as it already has the correct type or src..."));continue}var y,h=document.createElement(o.tagName),A=C(o.attributes);try{for(A.s();!(y=A.n()).done;){var b=y.value;h.setAttribute(b.name,b.value)}}catch(e){A.e(e)}finally{A.f()}h.innerText=o.innerText,h.text=o.text,t?(h.type=s||"",void 0!==l&&(h.src=l),void 0!==u&&(h.href=u)):h.type="text/plain",a.insertBefore(h,o),a.removeChild(o)}else{if(t){var g,k=C(p);try{for(k.s();!(g=k.n()).done;){var _=g.value,w=c[_];void 0!==w&&(void 0===c["original-"+_]&&(c["original-"+_]=o[_]),o[_]=w)}}catch(e){k.e(e)}finally{k.f()}void 0!==c.title&&(o.title=c.title),void 0!==c["original-display"]?o.style.display=c["original-display"]:o.style.removeProperty("display")}else{void 0!==c.title&&o.removeAttribute("title"),void 0===c["original-display"]&&void 0!==o.style.display&&(c["original-display"]=o.style.display),o.style.display="none";var x,S=C(p);try{for(S.s();!(x=S.n()).done;){var j=x.value;void 0!==c[j]&&(void 0!==c["original-"+j]?o[j]=c["original-"+j]:o.removeAttribute(j))}}catch(e){S.e(e)}finally{S.f()}}(0,i.X7)(c,o)}else t?(o.style.display="none",c["original-display"]=o.style.display):o.style.display=c["original-display"]||"block"}}},{key:"updateServiceStorage",value:function(e,t){if(!t&&void 0!==e.cookies&&e.cookies.length>0)for(var n=r(),i=0;i<e.cookies.length;i++){var a=e.cookies[i],c=void 0,s=void 0;if(a instanceof Array){var l=w(a,3);a=l[0],c=l[1],s=l[2]}else if(a instanceof Object&&!(a instanceof RegExp)){var u=a;a=u.pattern,c=u.path,s=u.domain}if(void 0!==a){a instanceof RegExp||(a=a.startsWith("^")?new RegExp(a):new RegExp("^"+a.replace(/[-[\]/{}()*+?.\\^$|]/g,"\\$&")+"$"));for(var p=0;p<n.length;p++){var d=n[p];null!==a.exec(d.name)&&(console.debug("Deleting cookie:",d.name,"Matched pattern:",a,"Path:",c,"Domain:",s),o(d.name,c,s),void 0===s&&o(d.name,c,"."+window.location.hostname))}}}}},{key:"_checkConsents",value:function(){for(var e=!0,t=new Set(this.config.services.map((function(e){return e.name}))),n=new Set(Object.keys(this.consents)),r=0,o=Object.keys(this.consents);r<o.length;r++){var i=o[r];t.has(i)||delete this.consents[i]}var a,c=C(this.config.services);try{for(c.s();!(a=c.n()).done;){var s=a.value;n.has(s.name)||(this.consents[s.name]=this.getDefaultConsent(s),e=!1)}}catch(e){c.e(e)}finally{c.f()}this.confirmed=e,e||(this.changed=!0)}}])&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}()},5482:(e,t,n)=>{"use strict";function r(e,t){if(e){if("string"==typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?o(e,t):void 0}}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function i(e){if(null!==document.currentScript&&void 0!==document.currentScript)return document.currentScript;for(var t=document.getElementsByTagName("script"),n=0;n<t.length;n++){var r=t[n];if(r.src.includes(e))return r}return null}function a(e){for(var t={},n=0;n<e.attributes.length;n++){var r=e.attributes[n];r.name.startsWith("data-")&&(t[r.name.slice(5)]=r.value)}return t}function c(e,t){for(var n=Object.keys(e),r=0;r<n.length;r++){var o=n[r],i=e[o];t[o]!==i&&t.setAttribute("data-"+o,i)}}function s(e){var t,n=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=r(e))){n&&(e=n);var o=0,i=function(){};return{s:i,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,c=!0,s=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return c=e.done,e},e:function(e){s=!0,a=e},f:function(){try{c||null==n.return||n.return()}finally{if(s)throw a}}}}(document.querySelectorAll("style[data-context=klaro-styles]"));try{for(n.s();!(t=n.n()).done;){var o=t.value,i=o.innerText;void 0!==o.styleSheet&&(i=o.styleSheet.cssText);for(var a=function(){var e,t,n=(e=s[c],t=2,function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i,a,c=[],s=!0,l=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=i.call(n)).done)&&(c.push(r.value),c.length!==t);s=!0);}catch(e){l=!0,o=e}finally{try{if(!s&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return c}}(e,t)||r(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=n[0],a=n[1],l=new RegExp("([a-z0-9-]+):[^;]+;[\\s\\n]*\\1:\\s*var\\(--"+o+",\\s*[^\\)]+\\)","g");i=i.replace(l,(function(e,t){return"".concat(t,": ").concat(a,"; ").concat(t,": var(--").concat(o,", ").concat(a,")")}))},c=0,s=Object.entries(e);c<s.length;c++)a();var l=document.createElement("style");l.setAttribute("type","text/css"),l.setAttribute("data-context","klaro-styles"),void 0!==l.styleSheet?l.styleSheet.cssText=i:l.innerText=i,o.parentElement.appendChild(l),o.parentElement.removeChild(o)}}catch(e){n.e(e)}finally{n.f()}}n.d(t,{N3:()=>s,RT:()=>a,X7:()=>c,XZ:()=>i}),n(9305),n(2733),n(4701),n(4776),n(9892),n(6281),n(4962),n(9336),n(1908),n(7132),n(3810),n(8557),n(646),n(5021),n(3687),n(9425),n(3994),n(3062),n(4062),n(2367)},679:(e,t,n)=>{"use strict";n.d(t,{A:()=>c});var r=n(4942),o=n.n(r),i=n(278),a=n.n(i)()(o());a.push([e.id,'.klaro{font-family:inherit;font-family:var(--font-family, inherit);font-size:14px;font-size:var(--font-size, 14px)}.klaro button{font-family:inherit;font-family:var(--font-family, inherit);font-size:14px;font-size:var(--font-size, 14px)}.klaro.cm-as-context-notice{height:100%;padding-bottom:12px;padding-top:12px}.klaro .cookie-modal .cm-switch-container,.klaro .context-notice .cm-switch-container,.klaro .cookie-notice .cm-switch-container{border-bottom-style:solid;border-bottom-style:var(--border-style, solid);border-bottom-width:1px;border-bottom-width:var(--border-width, 1px);border-bottom-color:#c8c8c8;border-bottom-color:var(--light2, #c8c8c8);display:block;position:relative;padding:10px;padding-left:66px;line-height:20px;vertical-align:middle;min-height:40px}.klaro .cookie-modal .cm-switch-container:last-child,.klaro .context-notice .cm-switch-container:last-child,.klaro .cookie-notice .cm-switch-container:last-child{border-bottom:0}.klaro .cookie-modal .cm-switch-container:first-child,.klaro .context-notice .cm-switch-container:first-child,.klaro .cookie-notice .cm-switch-container:first-child{margin-top:0}.klaro .cookie-modal .cm-switch-container p,.klaro .context-notice .cm-switch-container p,.klaro .cookie-notice .cm-switch-container p{margin-top:0}.klaro .cookie-modal .cm-switch,.klaro .context-notice .cm-switch,.klaro .cookie-notice .cm-switch{position:relative;display:inline-block;width:50px;height:30px}.klaro .cookie-modal .cm-list-input:checked+.cm-list-label .slider,.klaro .context-notice .cm-list-input:checked+.cm-list-label .slider,.klaro .cookie-notice .cm-list-input:checked+.cm-list-label .slider{background-color:#1a936f;background-color:var(--green1, #1a936f)}.klaro .cookie-modal .cm-list-input.half-checked:checked+.cm-list-label .slider,.klaro .context-notice .cm-list-input.half-checked:checked+.cm-list-label .slider,.klaro .cookie-notice .cm-list-input.half-checked:checked+.cm-list-label .slider{background-color:#1a936f;background-color:var(--green1, #1a936f);opacity:.6}.klaro .cookie-modal .cm-list-input.half-checked:checked+.cm-list-label .slider::before,.klaro .context-notice .cm-list-input.half-checked:checked+.cm-list-label .slider::before,.klaro .cookie-notice .cm-list-input.half-checked:checked+.cm-list-label .slider::before{-ms-transform:translateX(10px);transform:translateX(10px)}.klaro .cookie-modal .cm-list-input.only-required+.cm-list-label .slider,.klaro .context-notice .cm-list-input.only-required+.cm-list-label .slider,.klaro .cookie-notice .cm-list-input.only-required+.cm-list-label .slider{background-color:#24cc9a;background-color:var(--green2, #24cc9a);opacity:.8}.klaro .cookie-modal .cm-list-input.only-required+.cm-list-label .slider::before,.klaro .context-notice .cm-list-input.only-required+.cm-list-label .slider::before,.klaro .cookie-notice .cm-list-input.only-required+.cm-list-label .slider::before{-ms-transform:translateX(10px);transform:translateX(10px)}.klaro .cookie-modal .cm-list-input.required:checked+.cm-list-label .slider,.klaro .context-notice .cm-list-input.required:checked+.cm-list-label .slider,.klaro .cookie-notice .cm-list-input.required:checked+.cm-list-label .slider{background-color:#24cc9a;background-color:var(--green2, #24cc9a);opacity:.8;cursor:not-allowed}.klaro .cookie-modal .slider,.klaro .context-notice .slider,.klaro .cookie-notice .slider{box-shadow:0 4px 6px 0 rgba(0,0,0,.2),5px 5px 10px 0 rgba(0,0,0,.19)}.klaro .cookie-modal .cm-list-input,.klaro .context-notice .cm-list-input,.klaro .cookie-notice .cm-list-input{position:absolute;top:0;left:0;opacity:0;width:50px;height:30px}.klaro .cookie-modal .cm-list-title,.klaro .context-notice .cm-list-title,.klaro .cookie-notice .cm-list-title{font-size:.9em;font-weight:600}.klaro .cookie-modal .cm-list-description,.klaro .context-notice .cm-list-description,.klaro .cookie-notice .cm-list-description{color:#7c7c7c;color:var(--dark3, #7c7c7c);font-size:.9em;padding-top:4px}.klaro .cookie-modal .cm-list-label .cm-switch,.klaro .context-notice .cm-list-label .cm-switch,.klaro .cookie-notice .cm-list-label .cm-switch{position:absolute;left:0}.klaro .cookie-modal .cm-list-label .slider,.klaro .context-notice .cm-list-label .slider,.klaro .cookie-notice .cm-list-label .slider{background-color:#f2f2f2;background-color:var(--white2, #f2f2f2);position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;transition:.4s;width:50px;display:inline-block}.klaro .cookie-modal .cm-list-label .slider::before,.klaro .context-notice .cm-list-label .slider::before,.klaro .cookie-notice .cm-list-label .slider::before{background-color:#e6e6e6;background-color:var(--white3, #e6e6e6);position:absolute;content:"";height:20px;width:20px;left:5px;bottom:5px;transition:.4s}.klaro .cookie-modal .cm-list-label .slider.round,.klaro .context-notice .cm-list-label .slider.round,.klaro .cookie-notice .cm-list-label .slider.round{border-radius:30px}.klaro .cookie-modal .cm-list-label .slider.round::before,.klaro .context-notice .cm-list-label .slider.round::before,.klaro .cookie-notice .cm-list-label .slider.round::before{border-radius:50%}.klaro .cookie-modal .cm-list-label input:focus+.slider,.klaro .context-notice .cm-list-label input:focus+.slider,.klaro .cookie-notice .cm-list-label input:focus+.slider{box-shadow-color:#48dfb2;box-shadow-color:var(--green3, #48dfb2);box-shadow:0 0 1px var(--box-shadow-color, green3)}.klaro .cookie-modal .cm-list-label input:checked+.slider::before,.klaro .context-notice .cm-list-label input:checked+.slider::before,.klaro .cookie-notice .cm-list-label input:checked+.slider::before{-ms-transform:translateX(20px);transform:translateX(20px)}.klaro .cookie-modal .cm-list-input:focus+.cm-list-label .slider,.klaro .context-notice .cm-list-input:focus+.cm-list-label .slider,.klaro .cookie-notice .cm-list-input:focus+.cm-list-label .slider{box-shadow:0 4px 6px 0 rgba(125,125,125,.2),5px 5px 10px 0 rgba(125,125,125,.19)}.klaro .cookie-modal .cm-list-input:checked+.cm-list-label .slider::before,.klaro .context-notice .cm-list-input:checked+.cm-list-label .slider::before,.klaro .cookie-notice .cm-list-input:checked+.cm-list-label .slider::before{-ms-transform:translateX(20px);transform:translateX(20px)}.klaro .cookie-modal .slider,.klaro .context-notice .slider,.klaro .cookie-notice .slider{box-shadow:0 4px 6px 0 rgba(0,0,0,.2),5px 5px 10px 0 rgba(0,0,0,.19)}.klaro .cookie-modal a,.klaro .context-notice a,.klaro .cookie-notice a{color:#1a936f;color:var(--green1, #1a936f);text-decoration:none}.klaro .cookie-modal p,.klaro .cookie-modal strong,.klaro .cookie-modal h1,.klaro .cookie-modal h2,.klaro .cookie-modal ul,.klaro .cookie-modal li,.klaro .context-notice p,.klaro .context-notice strong,.klaro .context-notice h1,.klaro .context-notice h2,.klaro .context-notice ul,.klaro .context-notice li,.klaro .cookie-notice p,.klaro .cookie-notice strong,.klaro .cookie-notice h1,.klaro .cookie-notice h2,.klaro .cookie-notice ul,.klaro .cookie-notice li{color:#fafafa;color:var(--light1, #fafafa)}.klaro .cookie-modal p,.klaro .cookie-modal h1,.klaro .cookie-modal h2,.klaro .cookie-modal ul,.klaro .cookie-modal li,.klaro .context-notice p,.klaro .context-notice h1,.klaro .context-notice h2,.klaro .context-notice ul,.klaro .context-notice li,.klaro .cookie-notice p,.klaro .cookie-notice h1,.klaro .cookie-notice h2,.klaro .cookie-notice ul,.klaro .cookie-notice li{display:block;text-align:left;margin:0;padding:0;margin-top:.7em}.klaro .cookie-modal h1,.klaro .cookie-modal h2,.klaro .cookie-modal h3,.klaro .cookie-modal h4,.klaro .cookie-modal h5,.klaro .cookie-modal h6,.klaro .context-notice h1,.klaro .context-notice h2,.klaro .context-notice h3,.klaro .context-notice h4,.klaro .context-notice h5,.klaro .context-notice h6,.klaro .cookie-notice h1,.klaro .cookie-notice h2,.klaro .cookie-notice h3,.klaro .cookie-notice h4,.klaro .cookie-notice h5,.klaro .cookie-notice h6{font-family:inherit;font-family:var(--title-font-family, inherit)}.klaro .cookie-modal .cm-link,.klaro .context-notice .cm-link,.klaro .cookie-notice .cm-link{margin-right:.5em;vertical-align:middle}.klaro .cookie-modal .cm-btn,.klaro .context-notice .cm-btn,.klaro .cookie-notice .cm-btn{color:#fff;color:var(--button-text-color, #fff);background-color:#5c5c5c;background-color:var(--dark2, #5c5c5c);border-radius:4px;border-radius:var(--border-radius, 4px);padding:6px 10px;margin-right:.5em;border-style:none;padding:.4em;font-size:1em;cursor:pointer}.klaro .cookie-modal .cm-btn:disabled,.klaro .context-notice .cm-btn:disabled,.klaro .cookie-notice .cm-btn:disabled{opacity:.5}.klaro .cookie-modal .cm-btn.cm-btn-close,.klaro .context-notice .cm-btn.cm-btn-close,.klaro .cookie-notice .cm-btn.cm-btn-close{background-color:#c8c8c8;background-color:var(--light2, #c8c8c8)}.klaro .cookie-modal .cm-btn.cm-btn-success,.klaro .context-notice .cm-btn.cm-btn-success,.klaro .cookie-notice .cm-btn.cm-btn-success{background-color:#1a936f;background-color:var(--green1, #1a936f)}.klaro .cookie-modal .cm-btn.cm-btn-success-var,.klaro .context-notice .cm-btn.cm-btn-success-var,.klaro .cookie-notice .cm-btn.cm-btn-success-var{background-color:#24cc9a;background-color:var(--green2, #24cc9a)}.klaro .cookie-modal .cm-btn.cm-btn-info,.klaro .context-notice .cm-btn.cm-btn-info,.klaro .cookie-notice .cm-btn.cm-btn-info{background-color:#2581c4;background-color:var(--blue1, #2581c4)}.klaro .context-notice{border-radius:4px;border-radius:var(--border-radius, 4px);border-style:solid;border-style:var(--border-style, solid);border-width:1px;border-width:var(--border-width, 1px);border-color:#c8c8c8;border-color:var(--light2, #c8c8c8);background-color:#fafafa;background-color:var(--light1, #fafafa);display:flex;flex-direction:column;flex-wrap:wrap;align-items:center;justify-content:center;padding:12px;height:100%}.klaro .context-notice.cm-dark{background-color:#333;background-color:var(--dark1, #333);border-color:#5c5c5c;border-color:var(--dark2, #5c5c5c)}.klaro .context-notice.cm-dark p{color:#fafafa;color:var(--light1, #fafafa)}.klaro .context-notice.cm-dark p a{color:#459cdc;color:var(--blue2, #459cdc)}.klaro .context-notice p{color:#333;color:var(--dark1, #333);flex-grow:0;text-align:center;padding-top:0;margin-top:0}.klaro .context-notice p a{color:#24cc9a;color:var(--green2, #24cc9a)}.klaro .context-notice p.cm-buttons{margin-top:12px}.klaro .context-notice p.ccn-description-empty-store{margin-top:24px;font-size:14px;font-size:var(--font-size, 14px)}.klaro .cookie-modal{width:100%;height:100%;position:fixed;overflow:hidden;left:0;top:0;z-index:1000}.klaro .cookie-modal.cm-embedded{position:relative;height:inherit;width:inherit;left:inherit;right:inherit;z-index:0}.klaro .cookie-modal.cm-embedded .cm-modal.cm-klaro{position:relative;-ms-transform:none;transform:none}.klaro .cookie-modal .cm-bg{background:rgba(0,0,0,.5);height:100%;width:100%;position:fixed;top:0;left:0}.klaro .cookie-modal .cm-modal.cm-klaro{background-color:#333;background-color:var(--dark1, #333);color:#fafafa;color:var(--light1, #fafafa);z-index:1001;box-shadow:0 4px 6px 0 rgba(0,0,0,.2),5px 5px 10px 0 rgba(0,0,0,.19);width:100%;max-height:98%;top:50%;-ms-transform:translateY(-50%);transform:translateY(-50%);position:fixed;overflow:auto}@media(min-width: 660px){.klaro .cookie-modal .cm-modal.cm-klaro{border-radius:4px;border-radius:var(--border-radius, 4px);position:relative;margin:0 auto;max-width:640px;height:auto;width:auto}}.klaro .cookie-modal .cm-modal .hide{border-style:none;background:none;cursor:pointer;position:absolute;top:20px;right:20px;z-index:1}.klaro .cookie-modal .cm-modal .hide svg{stroke:#fafafa;stroke:var(--light1, #fafafa)}.klaro .cookie-modal .cm-modal .cm-footer{border-top-color:#5c5c5c;border-top-color:var(--dark2, #5c5c5c);border-top-width:1px;border-top-width:var(--border-width, 1px);border-top-style:solid;border-top-style:var(--border-style, solid);padding:1em}.klaro .cookie-modal .cm-modal .cm-footer-buttons{display:flex;flex-flow:row;justify-content:space-between}.klaro .cookie-modal .cm-modal .cm-footer .cm-powered-by{font-size:.8em;padding-top:4px;text-align:right;padding-right:8px}.klaro .cookie-modal .cm-modal .cm-footer .cm-powered-by a{color:#5c5c5c;color:var(--dark2, #5c5c5c)}.klaro .cookie-modal .cm-modal .cm-header{border-bottom-width:1px;border-bottom-width:var(--border-width, 1px);border-bottom-style:solid;border-bottom-style:var(--border-style, solid);border-bottom-color:#5c5c5c;border-bottom-color:var(--dark2, #5c5c5c);padding:1em;padding-right:24px}.klaro .cookie-modal .cm-modal .cm-header h1{margin:0;font-size:2em;display:block}.klaro .cookie-modal .cm-modal .cm-header h1.title{padding-right:20px}.klaro .cookie-modal .cm-modal .cm-body{padding:1em}.klaro .cookie-modal .cm-modal .cm-body ul{display:block}.klaro .cookie-modal .cm-modal .cm-body span{display:inline-block;width:auto}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes{padding:0;margin:0}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose .cm-services .cm-caret,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose .cm-services .cm-caret{color:#a0a0a0;color:var(--light3, #a0a0a0)}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose .cm-services .cm-content,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose .cm-services .cm-content{margin-left:-40px;display:none}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose .cm-services .cm-content.expanded,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose .cm-services .cm-content.expanded{margin-top:10px;display:block}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-service,.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-service,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose{position:relative;line-height:20px;vertical-align:middle;padding-left:60px;min-height:40px}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-service:first-child,.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose:first-child,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-service:first-child,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose:first-child{margin-top:0}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-service p,.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose p,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-service p,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose p{margin-top:0}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-service p.purposes,.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose p.purposes,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-service p.purposes,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose p.purposes{color:#a0a0a0;color:var(--light3, #a0a0a0);font-size:.8em}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-service.cm-toggle-all,.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose.cm-toggle-all,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-service.cm-toggle-all,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose.cm-toggle-all{border-top-width:1px;border-top-width:var(--border-width, 1px);border-top-style:solid;border-top-style:var(--border-style, solid);border-top-color:#5c5c5c;border-top-color:var(--dark2, #5c5c5c);padding-top:1em}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-service span.cm-list-title,.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose span.cm-list-title,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-service span.cm-list-title,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose span.cm-list-title{font-weight:600}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-service span.cm-opt-out,.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-service span.cm-required,.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose span.cm-opt-out,.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose span.cm-required,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-service span.cm-opt-out,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-service span.cm-required,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose span.cm-opt-out,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose span.cm-required{color:#5c5c5c;color:var(--dark2, #5c5c5c);padding-left:.2em;font-size:.8em}.klaro .cookie-notice:not(.cookie-modal-notice){background-color:#333;background-color:var(--dark1, #333);z-index:999;position:fixed;width:100%;bottom:0;right:0}@media(min-width: 1024px){.klaro .cookie-notice:not(.cookie-modal-notice){border-radius:4px;border-radius:var(--border-radius, 4px);position:fixed;position:var(--notice-position, fixed);right:20px;right:var(--notice-right, 20px);left:auto;left:var(--notice-left, auto);bottom:20px;bottom:var(--notice-bottom, 20px);top:auto;top:var(--notice-top, auto);max-width:400px;max-width:var(--notice-max-width, 400px);box-shadow:0 4px 6px 0 rgba(0,0,0,.2),5px 5px 10px 0 rgba(0,0,0,.19)}}@media(max-width: 1023px){.klaro .cookie-notice:not(.cookie-modal-notice){border-style:none;border-radius:0}}.klaro .cookie-notice:not(.cookie-modal-notice).cn-embedded{position:relative;height:inherit;width:inherit;left:inherit;right:inherit;bottom:inherit;z-index:0}.klaro .cookie-notice:not(.cookie-modal-notice).cn-embedded .cn-body{padding-top:.5em}.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body{margin-bottom:0;margin-right:0;bottom:0;padding:1em;padding-top:0}.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body p{margin-bottom:.5em}.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body p.cn-changes{text-decoration:underline}.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body .cn-learn-more{display:inline-block;flex-grow:1}.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body .cn-buttons{display:inline-block;margin-top:-0.5em}@media(max-width: 384px){.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body .cn-buttons{width:100%}}.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body .cn-buttons button.cm-btn{margin-top:.5em}@media(max-width: 384px){.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body .cn-buttons button.cm-btn{width:calc(50% - 0.5em)}}.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body .cn-ok{margin-top:-0.5em;display:flex;flex-flow:row;flex-wrap:wrap;justify-content:right;align-items:baseline}.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body .cn-ok a,.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body .cn-ok div{margin-top:.5em}.klaro .cookie-modal-notice{background-color:#333;background-color:var(--dark1, #333);color:#fafafa;color:var(--light1, #fafafa);z-index:1001;box-shadow:0 4px 6px 0 rgba(0,0,0,.2),5px 5px 10px 0 rgba(0,0,0,.19);width:100%;max-height:98%;top:50%;-ms-transform:translateY(-50%);transform:translateY(-50%);position:fixed;overflow:auto;padding:1em;padding-top:.2em}@media(min-width: 400px){.klaro .cookie-modal-notice{border-radius:4px;border-radius:var(--border-radius, 4px);position:relative;margin:0 auto;max-width:400px;height:auto;width:auto}}.klaro .cookie-modal-notice .cn-ok{display:flex;flex-flow:row;justify-content:space-between;align-items:center;margin-top:1em}.klaro .cookie-notice-hidden{display:none !important}',"",{version:3,sources:["webpack://./scss/klaro.scss","webpack://./scss/vars.scss","webpack://./scss/switch.scss","webpack://./scss/modal.scss"],names:[],mappings:"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",sourcesContent:["@use \"sass:map\";\n@import './modal';\n@import './vars';\n\n.klaro {\n\n    $btn-margin-right: 0.5em;\n\n    @include var(font-family, font-family);\n    @include var(font-size, font-size);\n\n    // buttons use their own font-family setting so we need to override it explicitly...\n    button {\n        @include var(font-family, font-family);\n        @include var(font-size, font-size);\n    }\n\n    &.cm-as-context-notice {\n        height: 100%;\n        padding-bottom: map.get($cm-space, md);\n        padding-top: map.get($cm-space, md);\n    }\n\n    .cookie-modal,\n    .context-notice,\n    .cookie-notice {\n        @import 'switch';\n\n        .slider {\n            box-shadow: $cm-box-shadow-dark-md;\n        }\n\n        a {\n            @include var(color, green1);\n            text-decoration: none;\n        }\n\n        p,\n        strong,\n        h1,\n        h2,\n        ul,\n        li {\n            @include var(color, light1);\n        }\n\n        p,\n        h1,\n        h2,\n        ul,\n        li {\n            display: block;\n            text-align: left;\n            margin: 0;\n            padding: 0;\n            margin-top: 0.7em;\n        }\n\n        h1,\n        h2,\n        h3,\n        h4,\n        h5,\n        h6 {\n            @include var(font-family, title-font-family);\n        }\n\n        .cm-link {\n            margin-right: 0.5em;\n            vertical-align: middle;\n        }\n\n        .cm-btn {\n\n            @include var(color, button-text-color);\n            @include var(background-color, dark2);\n            @include var(border-radius, border-radius);\n            padding: 6px 10px;\n            margin-right: $btn-margin-right;\n            border-style: none;\n            padding: 0.4em;\n            font-size: 1em;\n            cursor: pointer;\n\n            &:disabled {\n                opacity: 0.5;\n            }\n\n            &.cm-btn-close {\n                @include var(background-color, light2);\n            }\n\n            &.cm-btn-success {\n                @include var(background-color, green1);\n            }\n\n            &.cm-btn-success-var {\n                @include var(background-color, green2);\n            }\n\n            &.cm-btn-info {\n                @include var(background-color, blue1);\n            }\n        }\n    }\n\n    .context-notice {\n        @include var(border-radius, border-radius);\n        @include var(border-style, border-style);\n        @include var(border-width, border-width);\n        @include var(border-color, light2);\n        @include var(background-color, light1);\n\n        display: flex;\n        flex-direction: column;\n        flex-wrap: wrap;\n        align-items: center;\n        justify-content: center;\n        padding: map.get($cm-space, md);\n        height: 100%;\n\n        &.cm-dark {\n            @include var(background-color, dark1);\n            @include var(border-color, dark2);\n\n            p {\n                @include var(color, light1);\n\n                a {\n                    @include var(color, blue2);\n                }\n            }\n        }\n\n        p {\n            @include var(color, dark1);\n\n            flex-grow: 0;\n            text-align: center;\n            padding-top: 0;\n            margin-top: 0;\n\n            a {\n                @include var(color, green2);\n            }\n        }\n\n        p.cm-buttons {\n            margin-top: map.get($cm-space, md);\n        }\n\n        // contextual consent notice\n        p.ccn-description-empty-store {\n            margin-top: map.get($cm-space, lg);            \n            @include var(font-size, font-size);\n        }\n    }\n\n    .cookie-modal {\n        width: 100%;\n        height: 100%;\n        position: fixed;\n        overflow: hidden;\n        left: 0;\n        top: 0;\n        z-index: 1000;\n\n        &.cm-embedded {\n            position: relative;\n            height: inherit;\n            width: inherit;\n            left: inherit;\n            right: inherit;\n            z-index: 0;\n\n            .cm-modal.cm-klaro {\n                position: relative;\n                transform: none;\n            }\n        }\n\n        .cm-bg {\n            background: rgba(0, 0, 0, 0.5);\n            height: 100%;\n            width: 100%;\n            position: fixed;\n            top: 0;\n            left: 0;\n        }\n\n        .cm-modal {\n            &.cm-klaro {\n                @include modal(660px, 640px);\n            }\n\n            .hide {\n                border-style: none;\n                background: none;\n                cursor: pointer;\n                position: absolute;\n                top: 20px;\n                right: 20px;\n                z-index: 1;\n\n                svg {\n                    @include var(stroke, light1);\n                }\n            }\n\n            .cm-footer {\n                @include var(border-top-color, dark2);\n                @include var(border-top-width, border-width);\n                @include var(border-top-style, border-style);\n\n                padding: 1em;\n\n                &-buttons {\n                    display: flex;\n                    flex-flow: row;\n                    justify-content: space-between;\n                }\n\n                .cm-powered-by {\n                    font-size: 0.8em;\n                    padding-top: 4px;\n                    text-align: right;\n                    padding-right: 8px;\n\n                    a {\n                        @include var(color, dark2);\n                    }\n                }\n            }\n\n            .cm-header {\n                @include var(border-bottom-width, border-width);\n                @include var(border-bottom-style, border-style);\n                @include var(border-bottom-color, dark2);\n\n                padding: 1em;\n                padding-right: 24px;\n\n                h1 {\n                    margin: 0;\n                    font-size: 2em;\n                    display: block;\n\n                    &.title {\n                        padding-right: 20px;\n                    }\n                }\n            }\n\n            .cm-body {\n                padding: 1em;\n\n                ul {\n                    display: block;\n                }\n\n                span {\n                    display: inline-block;\n                    width: auto;\n                }\n\n                ul.cm-services,\n                ul.cm-purposes {\n                    padding: 0;\n                    margin: 0;\n\n                    li.cm-purpose {\n                        .cm-services {\n                            .cm-caret {\n                                @include var(color, light3);\n                            }\n\n                            .cm-content {\n                                margin-left: -40px;\n                                display: none;\n\n                                &.expanded {\n                                    margin-top: 10px;\n                                    display: block;\n                                }\n                            }\n                        }\n                    }\n\n                    li.cm-service,\n                    li.cm-purpose {\n                        position: relative;\n                        line-height: 20px;\n                        vertical-align: middle;\n                        padding-left: 60px;\n                        min-height: 40px;\n\n                        &:first-child {\n                            margin-top: 0;\n                        }\n\n                        p {\n                            margin-top: 0;\n                        }\n\n                        p.purposes {\n                            @include var(color, light3);\n                            font-size: 0.8em;\n                        }\n\n                        &.cm-toggle-all {\n\n                            @include var(border-top-width, border-width);\n                            @include var(border-top-style, border-style);\n                            @include var(border-top-color, dark2);\n\n                            padding-top: 1em;\n                        }\n\n                        span.cm-list-title {\n                            font-weight: 600;\n                        }\n\n                        span.cm-opt-out,\n                        span.cm-required {\n                            @include var(color, dark2);\n                            padding-left: 0.2em;\n                            font-size: 0.8em;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    .cookie-notice:not(.cookie-modal-notice) {\n        @include var(background-color, dark1);\n        z-index: 999;\n\n        position: fixed;\n        width: 100%;\n        bottom: 0;\n        right: 0;\n\n        @media (min-width: $cm-desktop) {\n            @include var(border-radius, border-radius);\n            @include var(position, notice-position);\n            @include var(right, notice-right);\n            @include var(left, notice-left);\n            @include var(bottom, notice-bottom);\n            @include var(top, notice-top);\n            @include var(max-width, notice-max-width);\n            box-shadow: $cm-box-shadow-dark-md;\n        }\n\n        @media (max-width: ($cm-desktop - 1)) {\n            border-style: none;\n            border-radius: 0;\n        }\n\n        &.cn-embedded {\n            position: relative;\n            height: inherit;\n            width: inherit;\n            left: inherit;\n            right: inherit;\n            bottom: inherit;\n            z-index: 0;\n\n            .cn-body {\n                padding-top: 0.5em;\n            }\n        }\n\n        .cn-body {\n            margin-bottom: 0;\n            margin-right: 0;\n            bottom: 0;\n\n            padding: 1em;\n            padding-top: 0;\n\n            p {\n                margin-bottom: 0.5em;\n            }\n\n            p.cn-changes {\n                text-decoration: underline;\n            }\n\n            .cn-learn-more {\n                display: inline-block;\n                flex-grow: 1;\n            }\n\n            .cn-buttons {\n                display: inline-block;\n                margin-top: -0.5em;\n\n                @media (max-width: $cm-mobile) {\n                    width: 100%;\n                }\n\n                button.cm-btn {\n                    margin-top: 0.5em;\n\n                    @media (max-width: $cm-mobile) {\n                        width: calc(50% - #{$btn-margin-right});\n                    }\n                }\n            }\n\n            .cn-ok {\n                // we add a margin that cancels out unless the items are wrapped\n                // in which case it will add some spacing between them\n                margin-top: -0.5em;\n                display: flex;\n                flex-flow: row;\n                flex-wrap: wrap;\n                justify-content: right;\n                align-items: baseline;\n\n                a,\n                div {\n                    margin-top: 0.5em;\n                }\n            }\n        }\n    }\n\n    .cookie-modal-notice {\n        @include modal(400px, 400px);\n\n        padding: 1em;\n        padding-top: 0.2em;\n\n        .cn-ok {\n            display: flex;\n            flex-flow: row;\n            justify-content: space-between;\n            align-items: center;\n\n            margin-top: 1em;\n        }\n    }\n\n    .cookie-notice-hidden {\n        display: none !important;\n    }\n}\n","@use \"sass:map\";\n@use 'sass:color';\n\n/*\nWe declare all variables here as default so that they are easy to override...\n*/\n\n/* Border, shadows, ... */\n$cm-box-shadow-dark-md: 0 4px 6px 0 rgba(0, 0, 0, 0.2), 5px 5px 10px 0 rgba(0, 0, 0, 0.19) !default;\n$cm-box-shadow-light-sm: 0 2px 5px 0 rgba(0, 0, 0, 0.11) !default;\n$cm-box-shadow-dark-sm: 0 2px 5px 0 rgba(0, 0, 0, 0.33) !default;\n\n/*\nVariables that begin with $var- should NEVER be used directly in CSS rules.\nthey should only be included via the \"@include var(property, var-name)\"\nmechanism.\n*/\n\n/* Border styles */\n$var-border-radius: 4px !default;\n$var-border-style: solid !default;\n$var-border-width: 1px !default;\n\n/* Cookie notice positioning */\n$var-notice-right: 20px !default;\n$var-notice-left: auto !default;\n$var-notice-top: auto !default;\n$var-notice-bottom: 20px !default;\n$var-notice-max-width: 400px !default;\n$var-notice-position: fixed !default;\n\n/* Text colors */\n$var-button-text-color: #fff !default;\n\n/* Font Families */\n$var-font-family: inherit !default;\n$var-title-font-family: inherit !default;\n$var-font-size: 14px !default;\n\n/* White */\n$var-white1: #fff !default;\n$var-white2: color.scale($var-white1, $lightness: -5%) !default;\n$var-white3: color.scale($var-white2, $lightness: -5%) !default;\n\n/* Differently shaded colors */\n\n// light gray\n$var-light1: #fafafa !default;\n$var-light2: color.scale($var-light1, $lightness: -20%) !default;\n$var-light3: color.scale($var-light2, $lightness: -20%) !default;\n\n// dark gray\n$var-dark1: #333 !default;\n$var-dark2: color.scale($var-dark1, $lightness: 20%) !default;\n$var-dark3: color.scale($var-dark2, $lightness: 20%) !default;\n\n// blue\n$var-blue1: #2581c4 !default;\n$var-blue2: color.scale($var-blue1, $lightness: 20%) !default;\n$var-blue3: color.scale($var-blue2, $lightness: 20%) !default;\n\n// green\n$var-green1: #1a936f !default;\n$var-green2: color.scale($var-green1, $lightness: 20%) !default;\n$var-green3: color.scale($var-green2, $lightness: 20%) !default;\n\n// red\n$var-red1: #da2c43 !default;\n$var-red2: color.scale($var-red1, $lightness: 20%) !default;\n$var-red3: color.scale($var-red2, $lightness: 20%) !default;\n\n// all these variables can be tweaked at runtime by specifying them via the\n// 'styling' config parameter.\n$vars: (\n    button-text-color: $var-button-text-color,\n\n    font-size: $var-font-size,\n    font-family: $var-font-family,\n    title-font-family: $var-title-font-family,\n\n    green1: $var-green1,\n    green2: $var-green2,\n    green3: $var-green3,\n\n    blue1: $var-blue1,\n    blue2: $var-blue2,\n    blue3: $var-blue3,\n\n    red1: $var-red1,\n    red2: $var-red2,\n    red3: $var-red3,\n\n    light1: $var-light1,\n    light2: $var-light2,\n    light3: $var-light3,\n\n    dark1: $var-dark1,\n    dark2: $var-dark2,\n    dark3: $var-dark3,\n\n    white1: $var-white1,\n    white2: $var-white2,\n    white3: $var-white3,\n\n    // non-color options\n\n    border-radius: $var-border-radius,\n    border-style: $var-border-style,\n    border-width: $var-border-width,\n    notice-left: $var-notice-left,\n    notice-right: $var-notice-right,\n    notice-top: $var-notice-top,\n    notice-bottom: $var-notice-bottom,\n    notice-max-width: $var-notice-max-width,\n    notice-position: $var-notice-position,\n);\n\n/*\nUse @include var(property, varname) to include a variable, e.g.\n\n    @include var(background-color, white1);\n\nto create a white background.\n*/\n@mixin var($property, $varName) {\n    #{$property}: map.get($vars, $varName);\n    #{$property}: var(--#{$varName}, map.get($vars, $varName));\n}\n\n/* Spacing */\n$cm-space: (\n    xs: 4px,\n    sm: 8px,\n    md: 12px,\n    lg: 24px,\n    xl: 48px,\n    xxl: 96px\n) !default;\n\n/* Breakpoints */\n$cm-desktop: 1024px !default;\n$cm-mobile: 384px !default;\n$cm-tablet: 768px !default;\n","/* The switch - the box around the slider */\n\n.cm-switch-container {\n    @include var(border-bottom-style, border-style);\n    @include var(border-bottom-width, border-width);\n    @include var(border-bottom-color, light2);\n\n    display: block;\n    position: relative;\n    padding: 10px;\n    padding-left: 66px;\n    line-height: 20px;\n    vertical-align: middle;\n    min-height: 40px;\n\n    &:last-child {\n        border-bottom: 0;\n    }\n\n    &:first-child {\n        margin-top: 0;\n    }\n\n    p {\n        margin-top: 0;\n    }\n}\n\n.cm-switch {\n    position: relative;\n    display: inline-block;\n    width: 50px;\n    height: 30px;\n}\n\n.cm-list-input:checked + .cm-list-label .slider {\n    @include var(background-color, green1);\n}\n\n.cm-list-input.half-checked:checked + .cm-list-label .slider {\n    @include var(background-color, green1);\n    opacity: 0.6;\n\n    &::before {\n        -webkit-transform: translateX(10px);\n        -ms-transform: translateX(10px);\n        transform: translateX(10px);\n    }\n}\n\n.cm-list-input.only-required + .cm-list-label .slider {\n    @include var(background-color, green2);\n    opacity: 0.8;\n\n    &::before {\n        -webkit-transform: translateX(10px);\n        -ms-transform: translateX(10px);\n        transform: translateX(10px);\n    }\n}\n\n.cm-list-input.required:checked + .cm-list-label .slider {\n    @include var(background-color, green2);\n    opacity: 0.8;\n    cursor: not-allowed;\n}\n\n.slider {\n    box-shadow: $cm-box-shadow-dark-md;\n}\n\n.cm-list-input {\n    position: absolute;\n    top: 0;\n    left: 0;\n    opacity: 0;\n    width: 50px;\n    height: 30px;\n}\n\n.cm-list-title {\n    font-size: 0.9em;\n    font-weight: 600;\n}\n\n.cm-list-description {\n    @include var(color, dark3);\n    font-size: 0.9em;\n    padding-top: 4px;\n}\n\n.cm-list-label {\n    /* The slider */\n\n    .cm-switch {\n        position: absolute;\n        left: 0;\n    }\n\n    .slider {\n\n        @include var(background-color, white2);\n\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n        width: 50px;\n        display: inline-block;\n    }\n\n    .slider::before {\n\n        @include var(background-color, white3);\n\n        position: absolute;\n        content: '';\n        height: 20px;\n        width: 20px;\n        left: 5px;\n        bottom: 5px;\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n    }\n\n    /* Rounded sliders */\n    .slider.round {\n        border-radius: 30px;\n    }\n\n    .slider.round::before {\n        border-radius: 50%;\n    }\n\n    input:focus + .slider {\n        @include var(box-shadow-color, green3);\n        box-shadow: 0 0 1px var(--box-shadow-color, green3);\n    }\n\n    input:checked + .slider::before {\n        -webkit-transform: translateX(20px);\n        -ms-transform: translateX(20px);\n        transform: translateX(20px);\n    }\n}\n\n.cm-list-input:focus + .cm-list-label .slider {\n    box-shadow: 0 4px 6px 0 rgba(125, 125, 125, 0.2),\n        5px 5px 10px 0 rgba(125, 125, 125, 0.19);\n}\n\n.cm-list-input:checked + .cm-list-label .slider::before {\n    -webkit-transform: translateX(20px);\n    -ms-transform: translateX(20px);\n    transform: translateX(20px);\n}\n","@mixin modal($centerWidth, $windowWidth) {\n\n    @include var(background-color, dark1);\n    @include var(color, light1);\n\n    z-index: 1001;\n    box-shadow: $cm-box-shadow-dark-md;\n\n    width: 100%;\n    max-height: 98%;\n\n    top: 50%;\n    transform: translateY(-50%);\n\n    position: fixed;\n    overflow: auto;\n\n    @media (min-width: $centerWidth) {\n        @include var(border-radius, border-radius);\n        position: relative;\n        margin: 0 auto;\n        max-width: $windowWidth;\n        height: auto;\n        width: auto;\n    }\n}\n"],sourceRoot:""}]);const c=a},278:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);r&&a[u[0]]||(void 0!==i&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=i),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),t.push(u))}},t}},4942:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},362:(e,t,n)=>{"use strict";var r=n(6441);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var c=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw c.name="Invariant Violation",c}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},2688:(e,t,n)=>{e.exports=n(362)()},6441:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},5292:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},a=[],c=0;c<e.length;c++){var s=e[c],l=r.base?s[0]+r.base:s[0],u=i[l]||0,p="".concat(l," ").concat(u);i[l]=u+1;var d=n(p),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)t[d].references++,t[d].updater(f);else{var m=o(f,r);r.byIndex=c,t.splice(c,0,{identifier:p,updater:m,references:1})}a.push(p)}return a}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var c=n(i[a]);t[c].references--}for(var s=r(e,o),l=0;l<i.length;l++){var u=n(i[l]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}i=s}}},9383:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},9088:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},6884:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},9893:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},7997:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},8120:(e,t,n)=>{"use strict";var r=n(1483),o=n(8761),i=TypeError;e.exports=function(e){if(r(e))return e;throw new i(o(e)+" is not a function")}},2374:(e,t,n)=>{"use strict";var r=n(943),o=n(8761),i=TypeError;e.exports=function(e){if(r(e))return e;throw new i(o(e)+" is not a constructor")}},3852:(e,t,n)=>{"use strict";var r=n(735),o=String,i=TypeError;e.exports=function(e){if(r(e))return e;throw new i("Can't set "+o(e)+" as a prototype")}},7095:(e,t,n)=>{"use strict";var r=n(1),o=n(5290),i=n(5835).f,a=r("unscopables"),c=Array.prototype;void 0===c[a]&&i(c,a,{configurable:!0,value:o(null)}),e.exports=function(e){c[a][e]=!0}},4419:(e,t,n)=>{"use strict";var r=n(9105).charAt;e.exports=function(e,t,n){return t+(n?r(e,t).length:1)}},6021:(e,t,n)=>{"use strict";var r=n(4815),o=TypeError;e.exports=function(e,t){if(r(t,e))return e;throw new o("Incorrect invocation")}},2293:(e,t,n)=>{"use strict";var r=n(1704),o=String,i=TypeError;e.exports=function(e){if(r(e))return e;throw new i(o(e)+" is not an object")}},9214:(e,t,n)=>{"use strict";var r=n(8473);e.exports=r((function(){if("function"==typeof ArrayBuffer){var e=new ArrayBuffer(8);Object.isExtensible(e)&&Object.defineProperty(e,"a",{value:8})}}))},4793:(e,t,n)=>{"use strict";var r=n(2867).forEach,o=n(3152)("forEach");e.exports=o?[].forEach:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}},6142:(e,t,n)=>{"use strict";var r=n(2914),o=n(1807),i=n(2347),a=n(8901),c=n(5299),s=n(943),l=n(6960),u=n(670),p=n(4887),d=n(6665),f=Array;e.exports=function(e){var t=i(e),n=s(this),m=arguments.length,v=m>1?arguments[1]:void 0,y=void 0!==v;y&&(v=r(v,m>2?arguments[2]:void 0));var h,A,b,g,k,_,C=d(t),w=0;if(!C||this===f&&c(C))for(h=l(t),A=n?new this(h):f(h);h>w;w++)_=y?v(t[w],w):t[w],u(A,w,_);else for(k=(g=p(t,C)).next,A=n?new this:[];!(b=o(k,g)).done;w++)_=y?a(g,v,[b.value,w],!0):b.value,u(A,w,_);return A.length=w,A}},6651:(e,t,n)=>{"use strict";var r=n(5599),o=n(3392),i=n(6960),a=function(e){return function(t,n,a){var c=r(t),s=i(c);if(0===s)return!e&&-1;var l,u=o(a,s);if(e&&n!=n){for(;s>u;)if((l=c[u++])!=l)return!0}else for(;s>u;u++)if((e||u in c)&&c[u]===n)return e||u||0;return!e&&-1}};e.exports={includes:a(!0),indexOf:a(!1)}},2867:(e,t,n)=>{"use strict";var r=n(2914),o=n(4762),i=n(2121),a=n(2347),c=n(6960),s=n(4551),l=o([].push),u=function(e){var t=1===e,n=2===e,o=3===e,u=4===e,p=6===e,d=7===e,f=5===e||p;return function(m,v,y,h){for(var A,b,g=a(m),k=i(g),_=c(k),C=r(v,y),w=0,x=h||s,S=t?x(m,_):n||d?x(m,0):void 0;_>w;w++)if((f||w in k)&&(b=C(A=k[w],w,g),e))if(t)S[w]=b;else if(b)switch(e){case 3:return!0;case 5:return A;case 6:return w;case 2:l(S,A)}else switch(e){case 4:return!1;case 7:l(S,A)}return p?-1:o||u?u:S}};e.exports={forEach:u(0),map:u(1),filter:u(2),some:u(3),every:u(4),find:u(5),findIndex:u(6),filterReject:u(7)}},4595:(e,t,n)=>{"use strict";var r=n(8473),o=n(1),i=n(6170),a=o("species");e.exports=function(e){return i>=51||!r((function(){var t=[];return(t.constructor={})[a]=function(){return{foo:1}},1!==t[e](Boolean).foo}))}},3152:(e,t,n)=>{"use strict";var r=n(8473);e.exports=function(e,t){var n=[][e];return!!n&&r((function(){n.call(null,t||function(){return 1},1)}))}},1698:(e,t,n)=>{"use strict";var r=n(4762);e.exports=r([].slice)},7354:(e,t,n)=>{"use strict";var r=n(1698),o=Math.floor,i=function(e,t){var n=e.length;if(n<8)for(var a,c,s=1;s<n;){for(c=s,a=e[s];c&&t(e[c-1],a)>0;)e[c]=e[--c];c!==s++&&(e[c]=a)}else for(var l=o(n/2),u=i(r(e,0,l),t),p=i(r(e,l),t),d=u.length,f=p.length,m=0,v=0;m<d||v<f;)e[m+v]=m<d&&v<f?t(u[m],p[v])<=0?u[m++]:p[v++]:m<d?u[m++]:p[v++];return e};e.exports=i},9703:(e,t,n)=>{"use strict";var r=n(4914),o=n(943),i=n(1704),a=n(1)("species"),c=Array;e.exports=function(e){var t;return r(e)&&(t=e.constructor,(o(t)&&(t===c||r(t.prototype))||i(t)&&null===(t=t[a]))&&(t=void 0)),void 0===t?c:t}},4551:(e,t,n)=>{"use strict";var r=n(9703);e.exports=function(e,t){return new(r(e))(0===t?0:t)}},8901:(e,t,n)=>{"use strict";var r=n(2293),o=n(6721);e.exports=function(e,t,n,i){try{return i?t(r(n)[0],n[1]):t(n)}catch(t){o(e,"throw",t)}}},1554:(e,t,n)=>{"use strict";var r=n(1)("iterator"),o=!1;try{var i=0,a={next:function(){return{done:!!i++}},return:function(){o=!0}};a[r]=function(){return this},Array.from(a,(function(){throw 2}))}catch(e){}e.exports=function(e,t){try{if(!t&&!o)return!1}catch(e){return!1}var n=!1;try{var i={};i[r]=function(){return{next:function(){return{done:n=!0}}}},e(i)}catch(e){}return n}},1278:(e,t,n)=>{"use strict";var r=n(4762),o=r({}.toString),i=r("".slice);e.exports=function(e){return i(o(e),8,-1)}},6145:(e,t,n)=>{"use strict";var r=n(4338),o=n(1483),i=n(1278),a=n(1)("toStringTag"),c=Object,s="Arguments"===i(function(){return arguments}());e.exports=r?i:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=c(e),a))?n:s?i(t):"Object"===(r=i(t))&&o(t.callee)?"Arguments":r}},4092:(e,t,n)=>{"use strict";var r=n(5290),o=n(3864),i=n(2313),a=n(2914),c=n(6021),s=n(5983),l=n(1506),u=n(5662),p=n(5247),d=n(240),f=n(382),m=n(8041).fastKey,v=n(4483),y=v.set,h=v.getterFor;e.exports={getConstructor:function(e,t,n,u){var p=e((function(e,o){c(e,d),y(e,{type:t,index:r(null),first:void 0,last:void 0,size:0}),f||(e.size=0),s(o)||l(o,e[u],{that:e,AS_ENTRIES:n})})),d=p.prototype,v=h(t),A=function(e,t,n){var r,o,i=v(e),a=b(e,t);return a?a.value=n:(i.last=a={index:o=m(t,!0),key:t,value:n,previous:r=i.last,next:void 0,removed:!1},i.first||(i.first=a),r&&(r.next=a),f?i.size++:e.size++,"F"!==o&&(i.index[o]=a)),e},b=function(e,t){var n,r=v(e),o=m(t);if("F"!==o)return r.index[o];for(n=r.first;n;n=n.next)if(n.key===t)return n};return i(d,{clear:function(){for(var e=v(this),t=e.first;t;)t.removed=!0,t.previous&&(t.previous=t.previous.next=void 0),t=t.next;e.first=e.last=void 0,e.index=r(null),f?e.size=0:this.size=0},delete:function(e){var t=this,n=v(t),r=b(t,e);if(r){var o=r.next,i=r.previous;delete n.index[r.index],r.removed=!0,i&&(i.next=o),o&&(o.previous=i),n.first===r&&(n.first=o),n.last===r&&(n.last=i),f?n.size--:t.size--}return!!r},forEach:function(e){for(var t,n=v(this),r=a(e,arguments.length>1?arguments[1]:void 0);t=t?t.next:n.first;)for(r(t.value,t.key,this);t&&t.removed;)t=t.previous},has:function(e){return!!b(this,e)}}),i(d,n?{get:function(e){var t=b(this,e);return t&&t.value},set:function(e,t){return A(this,0===e?0:e,t)}}:{add:function(e){return A(this,e=0===e?0:e,e)}}),f&&o(d,"size",{configurable:!0,get:function(){return v(this).size}}),p},setStrong:function(e,t,n){var r=t+" Iterator",o=h(t),i=h(r);u(e,t,(function(e,t){y(this,{type:r,target:e,state:o(e),kind:t,last:void 0})}),(function(){for(var e=i(this),t=e.kind,n=e.last;n&&n.removed;)n=n.previous;return e.target&&(e.last=n=n?n.next:e.state.first)?p("keys"===t?n.key:"values"===t?n.value:[n.key,n.value],!1):(e.target=void 0,p(void 0,!0))}),n?"entries":"values",!n,!0),d(t)}}},7446:(e,t,n)=>{"use strict";var r=n(8612),o=n(8389),i=n(4762),a=n(8730),c=n(7914),s=n(8041),l=n(1506),u=n(6021),p=n(1483),d=n(5983),f=n(1704),m=n(8473),v=n(1554),y=n(2277),h=n(2429);e.exports=function(e,t,n){var A=-1!==e.indexOf("Map"),b=-1!==e.indexOf("Weak"),g=A?"set":"add",k=o[e],_=k&&k.prototype,C=k,w={},x=function(e){var t=i(_[e]);c(_,e,"add"===e?function(e){return t(this,0===e?0:e),this}:"delete"===e?function(e){return!(b&&!f(e))&&t(this,0===e?0:e)}:"get"===e?function(e){return b&&!f(e)?void 0:t(this,0===e?0:e)}:"has"===e?function(e){return!(b&&!f(e))&&t(this,0===e?0:e)}:function(e,n){return t(this,0===e?0:e,n),this})};if(a(e,!p(k)||!(b||_.forEach&&!m((function(){(new k).entries().next()})))))C=n.getConstructor(t,e,A,g),s.enable();else if(a(e,!0)){var S=new C,j=S[g](b?{}:-0,1)!==S,O=m((function(){S.has(1)})),E=v((function(e){new k(e)})),P=!b&&m((function(){for(var e=new k,t=5;t--;)e[g](t,t);return!e.has(-0)}));E||((C=t((function(e,t){u(e,_);var n=h(new k,e,C);return d(t)||l(t,n[g],{that:n,AS_ENTRIES:A}),n}))).prototype=_,_.constructor=C),(O||P)&&(x("delete"),x("has"),A&&x("get")),(P||j)&&x(g),b&&_.clear&&delete _.clear}return w[e]=C,r({global:!0,constructor:!0,forced:C!==k},w),y(C,e),b||n.setStrong(C,e,A),C}},6726:(e,t,n)=>{"use strict";var r=n(5755),o=n(9497),i=n(4961),a=n(5835);e.exports=function(e,t,n){for(var c=o(t),s=a.f,l=i.f,u=0;u<c.length;u++){var p=c[u];r(e,p)||n&&r(n,p)||s(e,p,l(t,p))}}},4522:(e,t,n)=>{"use strict";var r=n(1)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[r]=!1,"/./"[e](t)}catch(e){}}return!1}},9441:(e,t,n)=>{"use strict";var r=n(8473);e.exports=!r((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},5247:e=>{"use strict";e.exports=function(e,t){return{value:e,done:t}}},9037:(e,t,n)=>{"use strict";var r=n(382),o=n(5835),i=n(7738);e.exports=r?function(e,t,n){return o.f(e,t,i(1,n))}:function(e,t,n){return e[t]=n,e}},7738:e=>{"use strict";e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},670:(e,t,n)=>{"use strict";var r=n(382),o=n(5835),i=n(7738);e.exports=function(e,t,n){r?o.f(e,t,i(0,n)):e[t]=n}},6446:(e,t,n)=>{"use strict";var r=n(2293),o=n(348),i=TypeError;e.exports=function(e){if(r(this),"string"===e||"default"===e)e="string";else if("number"!==e)throw new i("Incorrect hint");return o(this,e)}},3864:(e,t,n)=>{"use strict";var r=n(169),o=n(5835);e.exports=function(e,t,n){return n.get&&r(n.get,t,{getter:!0}),n.set&&r(n.set,t,{setter:!0}),o.f(e,t,n)}},7914:(e,t,n)=>{"use strict";var r=n(1483),o=n(5835),i=n(169),a=n(2095);e.exports=function(e,t,n,c){c||(c={});var s=c.enumerable,l=void 0!==c.name?c.name:t;if(r(n)&&i(n,l,c),c.global)s?e[t]=n:a(t,n);else{try{c.unsafe?e[t]&&(s=!0):delete e[t]}catch(e){}s?e[t]=n:o.f(e,t,{value:n,enumerable:!1,configurable:!c.nonConfigurable,writable:!c.nonWritable})}return e}},2313:(e,t,n)=>{"use strict";var r=n(7914);e.exports=function(e,t,n){for(var o in t)r(e,o,t[o],n);return e}},2095:(e,t,n)=>{"use strict";var r=n(8389),o=Object.defineProperty;e.exports=function(e,t){try{o(r,e,{value:t,configurable:!0,writable:!0})}catch(n){r[e]=t}return t}},6060:(e,t,n)=>{"use strict";var r=n(8761),o=TypeError;e.exports=function(e,t){if(!delete e[t])throw new o("Cannot delete property "+r(t)+" of "+r(e))}},382:(e,t,n)=>{"use strict";var r=n(8473);e.exports=!r((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},3145:(e,t,n)=>{"use strict";var r=n(8389),o=n(1704),i=r.document,a=o(i)&&o(i.createElement);e.exports=function(e){return a?i.createElement(e):{}}},1091:e=>{"use strict";var t=TypeError;e.exports=function(e){if(e>9007199254740991)throw t("Maximum allowed index exceeded");return e}},4842:e=>{"use strict";e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},1902:(e,t,n)=>{"use strict";var r=n(3145)("span").classList,o=r&&r.constructor&&r.constructor.prototype;e.exports=o===Object.prototype?void 0:o},7332:(e,t,n)=>{"use strict";var r=n(9966).match(/firefox\/(\d+)/i);e.exports=!!r&&+r[1]},6956:(e,t,n)=>{"use strict";var r=n(938),o=n(4334);e.exports=!r&&!o&&"object"==typeof window&&"object"==typeof document},5413:e=>{"use strict";e.exports="function"==typeof Bun&&Bun&&"string"==typeof Bun.version},938:e=>{"use strict";e.exports="object"==typeof Deno&&Deno&&"object"==typeof Deno.version},8996:(e,t,n)=>{"use strict";var r=n(9966);e.exports=/MSIE|Trident/.test(r)},4466:(e,t,n)=>{"use strict";var r=n(9966);e.exports=/ipad|iphone|ipod/i.test(r)&&"undefined"!=typeof Pebble},8417:(e,t,n)=>{"use strict";var r=n(9966);e.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(r)},4334:(e,t,n)=>{"use strict";var r=n(8389),o=n(1278);e.exports="process"===o(r.process)},6639:(e,t,n)=>{"use strict";var r=n(9966);e.exports=/web0s(?!.*chrome)/i.test(r)},9966:e=>{"use strict";e.exports="undefined"!=typeof navigator&&String(navigator.userAgent)||""},6170:(e,t,n)=>{"use strict";var r,o,i=n(8389),a=n(9966),c=i.process,s=i.Deno,l=c&&c.versions||s&&s.version,u=l&&l.v8;u&&(o=(r=u.split("."))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!o&&a&&(!(r=a.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=a.match(/Chrome\/(\d+)/))&&(o=+r[1]),e.exports=o},5158:(e,t,n)=>{"use strict";var r=n(9966).match(/AppleWebKit\/(\d+)\./);e.exports=!!r&&+r[1]},4741:e=>{"use strict";e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},8612:(e,t,n)=>{"use strict";var r=n(8389),o=n(4961).f,i=n(9037),a=n(7914),c=n(2095),s=n(6726),l=n(8730);e.exports=function(e,t){var n,u,p,d,f,m=e.target,v=e.global,y=e.stat;if(n=v?r:y?r[m]||c(m,{}):r[m]&&r[m].prototype)for(u in t){if(d=t[u],p=e.dontCallGetSet?(f=o(n,u))&&f.value:n[u],!l(v?u:m+(y?".":"#")+u,e.forced)&&void 0!==p){if(typeof d==typeof p)continue;s(d,p)}(e.sham||p&&p.sham)&&i(d,"sham",!0),a(n,u,d,e)}}},8473:e=>{"use strict";e.exports=function(e){try{return!!e()}catch(e){return!0}}},3358:(e,t,n)=>{"use strict";n(5021);var r=n(1807),o=n(7914),i=n(8865),a=n(8473),c=n(1),s=n(9037),l=c("species"),u=RegExp.prototype;e.exports=function(e,t,n,p){var d=c(e),f=!a((function(){var t={};return t[d]=function(){return 7},7!==""[e](t)})),m=f&&!a((function(){var t=!1,n=/a/;return"split"===e&&((n={}).constructor={},n.constructor[l]=function(){return n},n.flags="",n[d]=/./[d]),n.exec=function(){return t=!0,null},n[d](""),!t}));if(!f||!m||n){var v=/./[d],y=t(d,""[e],(function(e,t,n,o,a){var c=t.exec;return c===i||c===u.exec?f&&!a?{done:!0,value:r(v,t,n,o)}:{done:!0,value:r(e,n,t,o)}:{done:!1}}));o(String.prototype,e,y[0]),o(u,d,y[1])}p&&s(u[d],"sham",!0)}},6530:(e,t,n)=>{"use strict";var r=n(8473);e.exports=!r((function(){return Object.isExtensible(Object.preventExtensions({}))}))},3067:(e,t,n)=>{"use strict";var r=n(274),o=Function.prototype,i=o.apply,a=o.call;e.exports="object"==typeof Reflect&&Reflect.apply||(r?a.bind(i):function(){return a.apply(i,arguments)})},2914:(e,t,n)=>{"use strict";var r=n(3786),o=n(8120),i=n(274),a=r(r.bind);e.exports=function(e,t){return o(e),void 0===t?e:i?a(e,t):function(){return e.apply(t,arguments)}}},274:(e,t,n)=>{"use strict";var r=n(8473);e.exports=!r((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},2164:(e,t,n)=>{"use strict";var r=n(4762),o=n(8120),i=n(1704),a=n(5755),c=n(1698),s=n(274),l=Function,u=r([].concat),p=r([].join),d={};e.exports=s?l.bind:function(e){var t=o(this),n=t.prototype,r=c(arguments,1),s=function(){var n=u(r,c(arguments));return this instanceof s?function(e,t,n){if(!a(d,t)){for(var r=[],o=0;o<t;o++)r[o]="a["+o+"]";d[t]=l("C,a","return new C("+p(r,",")+")")}return d[t](e,n)}(t,n.length,n):t.apply(e,n)};return i(n)&&(s.prototype=n),s}},1807:(e,t,n)=>{"use strict";var r=n(274),o=Function.prototype.call;e.exports=r?o.bind(o):function(){return o.apply(o,arguments)}},2048:(e,t,n)=>{"use strict";var r=n(382),o=n(5755),i=Function.prototype,a=r&&Object.getOwnPropertyDescriptor,c=o(i,"name"),s=c&&"something"===function(){}.name,l=c&&(!r||r&&a(i,"name").configurable);e.exports={EXISTS:c,PROPER:s,CONFIGURABLE:l}},680:(e,t,n)=>{"use strict";var r=n(4762),o=n(8120);e.exports=function(e,t,n){try{return r(o(Object.getOwnPropertyDescriptor(e,t)[n]))}catch(e){}}},3786:(e,t,n)=>{"use strict";var r=n(1278),o=n(4762);e.exports=function(e){if("Function"===r(e))return o(e)}},4762:(e,t,n)=>{"use strict";var r=n(274),o=Function.prototype,i=o.call,a=r&&o.bind.bind(i,i);e.exports=r?a:function(e){return function(){return i.apply(e,arguments)}}},1409:(e,t,n)=>{"use strict";var r=n(8389),o=n(1483);e.exports=function(e,t){return arguments.length<2?(n=r[e],o(n)?n:void 0):r[e]&&r[e][t];var n}},6665:(e,t,n)=>{"use strict";var r=n(6145),o=n(2564),i=n(5983),a=n(6775),c=n(1)("iterator");e.exports=function(e){if(!i(e))return o(e,c)||o(e,"@@iterator")||a[r(e)]}},4887:(e,t,n)=>{"use strict";var r=n(1807),o=n(8120),i=n(2293),a=n(8761),c=n(6665),s=TypeError;e.exports=function(e,t){var n=arguments.length<2?c(e):t;if(o(n))return i(r(n,e));throw new s(a(e)+" is not iterable")}},5215:(e,t,n)=>{"use strict";var r=n(4762),o=n(4914),i=n(1483),a=n(1278),c=n(6261),s=r([].push);e.exports=function(e){if(i(e))return e;if(o(e)){for(var t=e.length,n=[],r=0;r<t;r++){var l=e[r];"string"==typeof l?s(n,l):"number"!=typeof l&&"Number"!==a(l)&&"String"!==a(l)||s(n,c(l))}var u=n.length,p=!0;return function(e,t){if(p)return p=!1,t;if(o(this))return t;for(var r=0;r<u;r++)if(n[r]===e)return t}}}},2564:(e,t,n)=>{"use strict";var r=n(8120),o=n(5983);e.exports=function(e,t){var n=e[t];return o(n)?void 0:r(n)}},708:(e,t,n)=>{"use strict";var r=n(4762),o=n(2347),i=Math.floor,a=r("".charAt),c=r("".replace),s=r("".slice),l=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,u=/\$([$&'`]|\d{1,2})/g;e.exports=function(e,t,n,r,p,d){var f=n+e.length,m=r.length,v=u;return void 0!==p&&(p=o(p),v=l),c(d,v,(function(o,c){var l;switch(a(c,0)){case"$":return"$";case"&":return e;case"`":return s(t,0,n);case"'":return s(t,f);case"<":l=p[s(c,1,-1)];break;default:var u=+c;if(0===u)return o;if(u>m){var d=i(u/10);return 0===d?o:d<=m?void 0===r[d-1]?a(c,1):r[d-1]+a(c,1):o}l=r[u-1]}return void 0===l?"":l}))}},8389:function(e,t,n){"use strict";var r=function(e){return e&&e.Math===Math&&e};e.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof n.g&&n.g)||r("object"==typeof this&&this)||function(){return this}()||Function("return this")()},5755:(e,t,n)=>{"use strict";var r=n(4762),o=n(2347),i=r({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,t){return i(o(e),t)}},1507:e=>{"use strict";e.exports={}},1339:e=>{"use strict";e.exports=function(e,t){try{1===arguments.length?console.error(e):console.error(e,t)}catch(e){}}},2811:(e,t,n)=>{"use strict";var r=n(1409);e.exports=r("document","documentElement")},1799:(e,t,n)=>{"use strict";var r=n(382),o=n(8473),i=n(3145);e.exports=!r&&!o((function(){return 7!==Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},2121:(e,t,n)=>{"use strict";var r=n(4762),o=n(8473),i=n(1278),a=Object,c=r("".split);e.exports=o((function(){return!a("z").propertyIsEnumerable(0)}))?function(e){return"String"===i(e)?c(e,""):a(e)}:a},2429:(e,t,n)=>{"use strict";var r=n(1483),o=n(1704),i=n(1953);e.exports=function(e,t,n){var a,c;return i&&r(a=t.constructor)&&a!==n&&o(c=a.prototype)&&c!==n.prototype&&i(e,c),e}},7268:(e,t,n)=>{"use strict";var r=n(4762),o=n(1483),i=n(1831),a=r(Function.toString);o(i.inspectSource)||(i.inspectSource=function(e){return a(e)}),e.exports=i.inspectSource},8041:(e,t,n)=>{"use strict";var r=n(8612),o=n(4762),i=n(1507),a=n(1704),c=n(5755),s=n(5835).f,l=n(2278),u=n(2020),p=n(706),d=n(1866),f=n(6530),m=!1,v=d("meta"),y=0,h=function(e){s(e,v,{value:{objectID:"O"+y++,weakData:{}}})},A=e.exports={enable:function(){A.enable=function(){},m=!0;var e=l.f,t=o([].splice),n={};n[v]=1,e(n).length&&(l.f=function(n){for(var r=e(n),o=0,i=r.length;o<i;o++)if(r[o]===v){t(r,o,1);break}return r},r({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:u.f}))},fastKey:function(e,t){if(!a(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!c(e,v)){if(!p(e))return"F";if(!t)return"E";h(e)}return e[v].objectID},getWeakData:function(e,t){if(!c(e,v)){if(!p(e))return!0;if(!t)return!1;h(e)}return e[v].weakData},onFreeze:function(e){return f&&m&&p(e)&&!c(e,v)&&h(e),e}};i[v]=!0},4483:(e,t,n)=>{"use strict";var r,o,i,a=n(4644),c=n(8389),s=n(1704),l=n(9037),u=n(5755),p=n(1831),d=n(5409),f=n(1507),m="Object already initialized",v=c.TypeError,y=c.WeakMap;if(a||p.state){var h=p.state||(p.state=new y);h.get=h.get,h.has=h.has,h.set=h.set,r=function(e,t){if(h.has(e))throw new v(m);return t.facade=e,h.set(e,t),t},o=function(e){return h.get(e)||{}},i=function(e){return h.has(e)}}else{var A=d("state");f[A]=!0,r=function(e,t){if(u(e,A))throw new v(m);return t.facade=e,l(e,A,t),t},o=function(e){return u(e,A)?e[A]:{}},i=function(e){return u(e,A)}}e.exports={set:r,get:o,has:i,enforce:function(e){return i(e)?o(e):r(e,{})},getterFor:function(e){return function(t){var n;if(!s(t)||(n=o(t)).type!==e)throw new v("Incompatible receiver, "+e+" required");return n}}}},5299:(e,t,n)=>{"use strict";var r=n(1),o=n(6775),i=r("iterator"),a=Array.prototype;e.exports=function(e){return void 0!==e&&(o.Array===e||a[i]===e)}},4914:(e,t,n)=>{"use strict";var r=n(1278);e.exports=Array.isArray||function(e){return"Array"===r(e)}},1483:e=>{"use strict";var t="object"==typeof document&&document.all;e.exports=void 0===t&&void 0!==t?function(e){return"function"==typeof e||e===t}:function(e){return"function"==typeof e}},943:(e,t,n)=>{"use strict";var r=n(4762),o=n(8473),i=n(1483),a=n(6145),c=n(1409),s=n(7268),l=function(){},u=c("Reflect","construct"),p=/^\s*(?:class|function)\b/,d=r(p.exec),f=!p.test(l),m=function(e){if(!i(e))return!1;try{return u(l,[],e),!0}catch(e){return!1}},v=function(e){if(!i(e))return!1;switch(a(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return f||!!d(p,s(e))}catch(e){return!0}};v.sham=!0,e.exports=!u||o((function(){var e;return m(m.call)||!m(Object)||!m((function(){e=!0}))||e}))?v:m},8730:(e,t,n)=>{"use strict";var r=n(8473),o=n(1483),i=/#|\.prototype\./,a=function(e,t){var n=s[c(e)];return n===u||n!==l&&(o(t)?r(t):!!t)},c=a.normalize=function(e){return String(e).replace(i,".").toLowerCase()},s=a.data={},l=a.NATIVE="N",u=a.POLYFILL="P";e.exports=a},5983:e=>{"use strict";e.exports=function(e){return null==e}},1704:(e,t,n)=>{"use strict";var r=n(1483);e.exports=function(e){return"object"==typeof e?null!==e:r(e)}},735:(e,t,n)=>{"use strict";var r=n(1704);e.exports=function(e){return r(e)||null===e}},9557:e=>{"use strict";e.exports=!1},4786:(e,t,n)=>{"use strict";var r=n(1704),o=n(1278),i=n(1)("match");e.exports=function(e){var t;return r(e)&&(void 0!==(t=e[i])?!!t:"RegExp"===o(e))}},1423:(e,t,n)=>{"use strict";var r=n(1409),o=n(1483),i=n(4815),a=n(5022),c=Object;e.exports=a?function(e){return"symbol"==typeof e}:function(e){var t=r("Symbol");return o(t)&&i(t.prototype,c(e))}},1506:(e,t,n)=>{"use strict";var r=n(2914),o=n(1807),i=n(2293),a=n(8761),c=n(5299),s=n(6960),l=n(4815),u=n(4887),p=n(6665),d=n(6721),f=TypeError,m=function(e,t){this.stopped=e,this.result=t},v=m.prototype;e.exports=function(e,t,n){var y,h,A,b,g,k,_,C=n&&n.that,w=!(!n||!n.AS_ENTRIES),x=!(!n||!n.IS_RECORD),S=!(!n||!n.IS_ITERATOR),j=!(!n||!n.INTERRUPTED),O=r(t,C),E=function(e){return y&&d(y,"normal",e),new m(!0,e)},P=function(e){return w?(i(e),j?O(e[0],e[1],E):O(e[0],e[1])):j?O(e,E):O(e)};if(x)y=e.iterator;else if(S)y=e;else{if(!(h=p(e)))throw new f(a(e)+" is not iterable");if(c(h)){for(A=0,b=s(e);b>A;A++)if((g=P(e[A]))&&l(v,g))return g;return new m(!1)}y=u(e,h)}for(k=x?e.next:y.next;!(_=o(k,y)).done;){try{g=P(_.value)}catch(e){d(y,"throw",e)}if("object"==typeof g&&g&&l(v,g))return g}return new m(!1)}},6721:(e,t,n)=>{"use strict";var r=n(1807),o=n(2293),i=n(2564);e.exports=function(e,t,n){var a,c;o(e);try{if(!(a=i(e,"return"))){if("throw"===t)throw n;return n}a=r(a,e)}catch(e){c=!0,a=e}if("throw"===t)throw n;if(c)throw a;return o(a),n}},1040:(e,t,n)=>{"use strict";var r=n(1851).IteratorPrototype,o=n(5290),i=n(7738),a=n(2277),c=n(6775),s=function(){return this};e.exports=function(e,t,n,l){var u=t+" Iterator";return e.prototype=o(r,{next:i(+!l,n)}),a(e,u,!1,!0),c[u]=s,e}},5662:(e,t,n)=>{"use strict";var r=n(8612),o=n(1807),i=n(9557),a=n(2048),c=n(1483),s=n(1040),l=n(3181),u=n(1953),p=n(2277),d=n(9037),f=n(7914),m=n(1),v=n(6775),y=n(1851),h=a.PROPER,A=a.CONFIGURABLE,b=y.IteratorPrototype,g=y.BUGGY_SAFARI_ITERATORS,k=m("iterator"),_="keys",C="values",w="entries",x=function(){return this};e.exports=function(e,t,n,a,m,y,S){s(n,t,a);var j,O,E,P=function(e){if(e===m&&T)return T;if(!g&&e&&e in D)return D[e];switch(e){case _:case C:case w:return function(){return new n(this,e)}}return function(){return new n(this)}},z=t+" Iterator",I=!1,D=e.prototype,B=D[k]||D["@@iterator"]||m&&D[m],T=!g&&B||P(m),N="Array"===t&&D.entries||B;if(N&&(j=l(N.call(new e)))!==Object.prototype&&j.next&&(i||l(j)===b||(u?u(j,b):c(j[k])||f(j,k,x)),p(j,z,!0,!0),i&&(v[z]=x)),h&&m===C&&B&&B.name!==C&&(!i&&A?d(D,"name",C):(I=!0,T=function(){return o(B,this)})),m)if(O={values:P(C),keys:y?T:P(_),entries:P(w)},S)for(E in O)(g||I||!(E in D))&&f(D,E,O[E]);else r({target:t,proto:!0,forced:g||I},O);return i&&!S||D[k]===T||f(D,k,T,{name:m}),v[t]=T,O}},1851:(e,t,n)=>{"use strict";var r,o,i,a=n(8473),c=n(1483),s=n(1704),l=n(5290),u=n(3181),p=n(7914),d=n(1),f=n(9557),m=d("iterator"),v=!1;[].keys&&("next"in(i=[].keys())?(o=u(u(i)))!==Object.prototype&&(r=o):v=!0),!s(r)||a((function(){var e={};return r[m].call(e)!==e}))?r={}:f&&(r=l(r)),c(r[m])||p(r,m,(function(){return this})),e.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:v}},6775:e=>{"use strict";e.exports={}},6960:(e,t,n)=>{"use strict";var r=n(8324);e.exports=function(e){return r(e.length)}},169:(e,t,n)=>{"use strict";var r=n(4762),o=n(8473),i=n(1483),a=n(5755),c=n(382),s=n(2048).CONFIGURABLE,l=n(7268),u=n(4483),p=u.enforce,d=u.get,f=String,m=Object.defineProperty,v=r("".slice),y=r("".replace),h=r([].join),A=c&&!o((function(){return 8!==m((function(){}),"length",{value:8}).length})),b=String(String).split("String"),g=e.exports=function(e,t,n){"Symbol("===v(f(t),0,7)&&(t="["+y(f(t),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),n&&n.getter&&(t="get "+t),n&&n.setter&&(t="set "+t),(!a(e,"name")||s&&e.name!==t)&&(c?m(e,"name",{value:t,configurable:!0}):e.name=t),A&&n&&a(n,"arity")&&e.length!==n.arity&&m(e,"length",{value:n.arity});try{n&&a(n,"constructor")&&n.constructor?c&&m(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(e){}var r=p(e);return a(r,"source")||(r.source=h(b,"string"==typeof t?t:"")),e};Function.prototype.toString=g((function(){return i(this)&&d(this).source||l(this)}),"toString")},1703:e=>{"use strict";var t=Math.ceil,n=Math.floor;e.exports=Math.trunc||function(e){var r=+e;return(r>0?n:t)(r)}},553:(e,t,n)=>{"use strict";var r,o,i,a,c,s=n(8389),l=n(8123),u=n(2914),p=n(7007).set,d=n(5459),f=n(8417),m=n(4466),v=n(6639),y=n(4334),h=s.MutationObserver||s.WebKitMutationObserver,A=s.document,b=s.process,g=s.Promise,k=l("queueMicrotask");if(!k){var _=new d,C=function(){var e,t;for(y&&(e=b.domain)&&e.exit();t=_.get();)try{t()}catch(e){throw _.head&&r(),e}e&&e.enter()};f||y||v||!h||!A?!m&&g&&g.resolve?((a=g.resolve(void 0)).constructor=g,c=u(a.then,a),r=function(){c(C)}):y?r=function(){b.nextTick(C)}:(p=u(p,s),r=function(){p(C)}):(o=!0,i=A.createTextNode(""),new h(C).observe(i,{characterData:!0}),r=function(){i.data=o=!o}),k=function(e){_.head||r(),_.add(e)}}e.exports=k},1173:(e,t,n)=>{"use strict";var r=n(8120),o=TypeError,i=function(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw new o("Bad Promise constructor");t=e,n=r})),this.resolve=r(t),this.reject=r(n)};e.exports.f=function(e){return new i(e)}},4989:(e,t,n)=>{"use strict";var r=n(4786),o=TypeError;e.exports=function(e){if(r(e))throw new o("The method doesn't accept regular expressions");return e}},1439:(e,t,n)=>{"use strict";var r=n(382),o=n(4762),i=n(1807),a=n(8473),c=n(3658),s=n(4347),l=n(7611),u=n(2347),p=n(2121),d=Object.assign,f=Object.defineProperty,m=o([].concat);e.exports=!d||a((function(){if(r&&1!==d({b:1},d(f({},"a",{enumerable:!0,get:function(){f(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},n=Symbol("assign detection"),o="abcdefghijklmnopqrst";return e[n]=7,o.split("").forEach((function(e){t[e]=e})),7!==d({},e)[n]||c(d({},t)).join("")!==o}))?function(e,t){for(var n=u(e),o=arguments.length,a=1,d=s.f,f=l.f;o>a;)for(var v,y=p(arguments[a++]),h=d?m(c(y),d(y)):c(y),A=h.length,b=0;A>b;)v=h[b++],r&&!i(f,y,v)||(n[v]=y[v]);return n}:d},5290:(e,t,n)=>{"use strict";var r,o=n(2293),i=n(5799),a=n(4741),c=n(1507),s=n(2811),l=n(3145),u=n(5409),p="prototype",d="script",f=u("IE_PROTO"),m=function(){},v=function(e){return"<"+d+">"+e+"</"+d+">"},y=function(e){e.write(v("")),e.close();var t=e.parentWindow.Object;return e=null,t},h=function(){try{r=new ActiveXObject("htmlfile")}catch(e){}var e,t,n;h="undefined"!=typeof document?document.domain&&r?y(r):(t=l("iframe"),n="java"+d+":",t.style.display="none",s.appendChild(t),t.src=String(n),(e=t.contentWindow.document).open(),e.write(v("document.F=Object")),e.close(),e.F):y(r);for(var o=a.length;o--;)delete h[p][a[o]];return h()};c[f]=!0,e.exports=Object.create||function(e,t){var n;return null!==e?(m[p]=o(e),n=new m,m[p]=null,n[f]=e):n=h(),void 0===t?n:i.f(n,t)}},5799:(e,t,n)=>{"use strict";var r=n(382),o=n(3896),i=n(5835),a=n(2293),c=n(5599),s=n(3658);t.f=r&&!o?Object.defineProperties:function(e,t){a(e);for(var n,r=c(t),o=s(t),l=o.length,u=0;l>u;)i.f(e,n=o[u++],r[n]);return e}},5835:(e,t,n)=>{"use strict";var r=n(382),o=n(1799),i=n(3896),a=n(2293),c=n(3815),s=TypeError,l=Object.defineProperty,u=Object.getOwnPropertyDescriptor,p="enumerable",d="configurable",f="writable";t.f=r?i?function(e,t,n){if(a(e),t=c(t),a(n),"function"==typeof e&&"prototype"===t&&"value"in n&&f in n&&!n[f]){var r=u(e,t);r&&r[f]&&(e[t]=n.value,n={configurable:d in n?n[d]:r[d],enumerable:p in n?n[p]:r[p],writable:!1})}return l(e,t,n)}:l:function(e,t,n){if(a(e),t=c(t),a(n),o)try{return l(e,t,n)}catch(e){}if("get"in n||"set"in n)throw new s("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},4961:(e,t,n)=>{"use strict";var r=n(382),o=n(1807),i=n(7611),a=n(7738),c=n(5599),s=n(3815),l=n(5755),u=n(1799),p=Object.getOwnPropertyDescriptor;t.f=r?p:function(e,t){if(e=c(e),t=s(t),u)try{return p(e,t)}catch(e){}if(l(e,t))return a(!o(i.f,e,t),e[t])}},2020:(e,t,n)=>{"use strict";var r=n(1278),o=n(5599),i=n(2278).f,a=n(1698),c="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return c&&"Window"===r(e)?function(e){try{return i(e)}catch(e){return a(c)}}(e):i(o(e))}},2278:(e,t,n)=>{"use strict";var r=n(6742),o=n(4741).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,o)}},4347:(e,t)=>{"use strict";t.f=Object.getOwnPropertySymbols},3181:(e,t,n)=>{"use strict";var r=n(5755),o=n(1483),i=n(2347),a=n(5409),c=n(9441),s=a("IE_PROTO"),l=Object,u=l.prototype;e.exports=c?l.getPrototypeOf:function(e){var t=i(e);if(r(t,s))return t[s];var n=t.constructor;return o(n)&&t instanceof n?n.prototype:t instanceof l?u:null}},706:(e,t,n)=>{"use strict";var r=n(8473),o=n(1704),i=n(1278),a=n(9214),c=Object.isExtensible,s=r((function(){c(1)}));e.exports=s||a?function(e){return!!o(e)&&(!a||"ArrayBuffer"!==i(e))&&(!c||c(e))}:c},4815:(e,t,n)=>{"use strict";var r=n(4762);e.exports=r({}.isPrototypeOf)},6742:(e,t,n)=>{"use strict";var r=n(4762),o=n(5755),i=n(5599),a=n(6651).indexOf,c=n(1507),s=r([].push);e.exports=function(e,t){var n,r=i(e),l=0,u=[];for(n in r)!o(c,n)&&o(r,n)&&s(u,n);for(;t.length>l;)o(r,n=t[l++])&&(~a(u,n)||s(u,n));return u}},3658:(e,t,n)=>{"use strict";var r=n(6742),o=n(4741);e.exports=Object.keys||function(e){return r(e,o)}},7611:(e,t)=>{"use strict";var n={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,o=r&&!n.call({1:2},1);t.f=o?function(e){var t=r(this,e);return!!t&&t.enumerable}:n},1953:(e,t,n)=>{"use strict";var r=n(680),o=n(2293),i=n(3852);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=r(Object.prototype,"__proto__","set"))(n,[]),t=n instanceof Array}catch(e){}return function(n,r){return o(n),i(r),t?e(n,r):n.__proto__=r,n}}():void 0)},5627:(e,t,n)=>{"use strict";var r=n(382),o=n(8473),i=n(4762),a=n(3181),c=n(3658),s=n(5599),l=i(n(7611).f),u=i([].push),p=r&&o((function(){var e=Object.create(null);return e[2]=2,!l(e,2)})),d=function(e){return function(t){for(var n,o=s(t),i=c(o),d=p&&null===a(o),f=i.length,m=0,v=[];f>m;)n=i[m++],r&&!(d?n in o:l(o,n))||u(v,e?[n,o[n]]:o[n]);return v}};e.exports={entries:d(!0),values:d(!1)}},5685:(e,t,n)=>{"use strict";var r=n(4338),o=n(6145);e.exports=r?{}.toString:function(){return"[object "+o(this)+"]"}},348:(e,t,n)=>{"use strict";var r=n(1807),o=n(1483),i=n(1704),a=TypeError;e.exports=function(e,t){var n,c;if("string"===t&&o(n=e.toString)&&!i(c=r(n,e)))return c;if(o(n=e.valueOf)&&!i(c=r(n,e)))return c;if("string"!==t&&o(n=e.toString)&&!i(c=r(n,e)))return c;throw new a("Can't convert object to primitive value")}},9497:(e,t,n)=>{"use strict";var r=n(1409),o=n(4762),i=n(2278),a=n(4347),c=n(2293),s=o([].concat);e.exports=r("Reflect","ownKeys")||function(e){var t=i.f(c(e)),n=a.f;return n?s(t,n(e)):t}},6589:(e,t,n)=>{"use strict";var r=n(8389);e.exports=r},4193:e=>{"use strict";e.exports=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}}},5502:(e,t,n)=>{"use strict";var r=n(8389),o=n(2832),i=n(1483),a=n(8730),c=n(7268),s=n(1),l=n(6956),u=n(938),p=n(9557),d=n(6170),f=o&&o.prototype,m=s("species"),v=!1,y=i(r.PromiseRejectionEvent),h=a("Promise",(function(){var e=c(o),t=e!==String(o);if(!t&&66===d)return!0;if(p&&(!f.catch||!f.finally))return!0;if(!d||d<51||!/native code/.test(e)){var n=new o((function(e){e(1)})),r=function(e){e((function(){}),(function(){}))};if((n.constructor={})[m]=r,!(v=n.then((function(){}))instanceof r))return!0}return!t&&(l||u)&&!y}));e.exports={CONSTRUCTOR:h,REJECTION_EVENT:y,SUBCLASSING:v}},2832:(e,t,n)=>{"use strict";var r=n(8389);e.exports=r.Promise},2172:(e,t,n)=>{"use strict";var r=n(2293),o=n(1704),i=n(1173);e.exports=function(e,t){if(r(e),o(t)&&t.constructor===e)return t;var n=i.f(e);return(0,n.resolve)(t),n.promise}},1407:(e,t,n)=>{"use strict";var r=n(2832),o=n(1554),i=n(5502).CONSTRUCTOR;e.exports=i||!o((function(e){r.all(e).then(void 0,(function(){}))}))},7150:(e,t,n)=>{"use strict";var r=n(5835).f;e.exports=function(e,t,n){n in e||r(e,n,{configurable:!0,get:function(){return t[n]},set:function(e){t[n]=e}})}},5459:e=>{"use strict";var t=function(){this.head=null,this.tail=null};t.prototype={add:function(e){var t={item:e,next:null},n=this.tail;n?n.next=t:this.head=t,this.tail=t},get:function(){var e=this.head;if(e)return null===(this.head=e.next)&&(this.tail=null),e.item}},e.exports=t},2428:(e,t,n)=>{"use strict";var r=n(1807),o=n(2293),i=n(1483),a=n(1278),c=n(8865),s=TypeError;e.exports=function(e,t){var n=e.exec;if(i(n)){var l=r(n,e,t);return null!==l&&o(l),l}if("RegExp"===a(e))return r(c,e,t);throw new s("RegExp#exec called on incompatible receiver")}},8865:(e,t,n)=>{"use strict";var r,o,i=n(1807),a=n(4762),c=n(6261),s=n(6653),l=n(7435),u=n(7255),p=n(5290),d=n(4483).get,f=n(3933),m=n(4528),v=u("native-string-replace",String.prototype.replace),y=RegExp.prototype.exec,h=y,A=a("".charAt),b=a("".indexOf),g=a("".replace),k=a("".slice),_=(o=/b*/g,i(y,r=/a/,"a"),i(y,o,"a"),0!==r.lastIndex||0!==o.lastIndex),C=l.BROKEN_CARET,w=void 0!==/()??/.exec("")[1];(_||w||C||f||m)&&(h=function(e){var t,n,r,o,a,l,u,f=this,m=d(f),x=c(e),S=m.raw;if(S)return S.lastIndex=f.lastIndex,t=i(h,S,x),f.lastIndex=S.lastIndex,t;var j=m.groups,O=C&&f.sticky,E=i(s,f),P=f.source,z=0,I=x;if(O&&(E=g(E,"y",""),-1===b(E,"g")&&(E+="g"),I=k(x,f.lastIndex),f.lastIndex>0&&(!f.multiline||f.multiline&&"\n"!==A(x,f.lastIndex-1))&&(P="(?: "+P+")",I=" "+I,z++),n=new RegExp("^(?:"+P+")",E)),w&&(n=new RegExp("^"+P+"$(?!\\s)",E)),_&&(r=f.lastIndex),o=i(y,O?n:f,I),O?o?(o.input=k(o.input,z),o[0]=k(o[0],z),o.index=f.lastIndex,f.lastIndex+=o[0].length):f.lastIndex=0:_&&o&&(f.lastIndex=f.global?o.index+o[0].length:r),w&&o&&o.length>1&&i(v,o[0],n,(function(){for(a=1;a<arguments.length-2;a++)void 0===arguments[a]&&(o[a]=void 0)})),o&&j)for(o.groups=l=p(null),a=0;a<j.length;a++)l[(u=j[a])[0]]=o[u[1]];return o}),e.exports=h},6653:(e,t,n)=>{"use strict";var r=n(2293);e.exports=function(){var e=r(this),t="";return e.hasIndices&&(t+="d"),e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.unicodeSets&&(t+="v"),e.sticky&&(t+="y"),t}},9736:(e,t,n)=>{"use strict";var r=n(1807),o=n(5755),i=n(4815),a=n(6653),c=RegExp.prototype;e.exports=function(e){var t=e.flags;return void 0!==t||"flags"in c||o(e,"flags")||!i(c,e)?t:r(a,e)}},7435:(e,t,n)=>{"use strict";var r=n(8473),o=n(8389).RegExp,i=r((function(){var e=o("a","y");return e.lastIndex=2,null!==e.exec("abcd")})),a=i||r((function(){return!o("a","y").sticky})),c=i||r((function(){var e=o("^r","gy");return e.lastIndex=2,null!==e.exec("str")}));e.exports={BROKEN_CARET:c,MISSED_STICKY:a,UNSUPPORTED_Y:i}},3933:(e,t,n)=>{"use strict";var r=n(8473),o=n(8389).RegExp;e.exports=r((function(){var e=o(".","s");return!(e.dotAll&&e.test("\n")&&"s"===e.flags)}))},4528:(e,t,n)=>{"use strict";var r=n(8473),o=n(8389).RegExp;e.exports=r((function(){var e=o("(?<a>b)","g");return"b"!==e.exec("b").groups.a||"bc"!=="b".replace(e,"$<a>c")}))},3312:(e,t,n)=>{"use strict";var r=n(5983),o=TypeError;e.exports=function(e){if(r(e))throw new o("Can't call method on "+e);return e}},8123:(e,t,n)=>{"use strict";var r=n(8389),o=n(382),i=Object.getOwnPropertyDescriptor;e.exports=function(e){if(!o)return r[e];var t=i(r,e);return t&&t.value}},9570:(e,t,n)=>{"use strict";var r,o=n(8389),i=n(3067),a=n(1483),c=n(5413),s=n(9966),l=n(1698),u=n(4066),p=o.Function,d=/MSIE .\./.test(s)||c&&((r=o.Bun.version.split(".")).length<3||"0"===r[0]&&(r[1]<3||"3"===r[1]&&"0"===r[2]));e.exports=function(e,t){var n=t?2:1;return d?function(r,o){var c=u(arguments.length,1)>n,s=a(r)?r:p(r),d=c?l(arguments,n):[],f=c?function(){i(s,this,d)}:s;return t?e(f,o):e(f)}:e}},240:(e,t,n)=>{"use strict";var r=n(1409),o=n(3864),i=n(1),a=n(382),c=i("species");e.exports=function(e){var t=r(e);a&&t&&!t[c]&&o(t,c,{configurable:!0,get:function(){return this}})}},2277:(e,t,n)=>{"use strict";var r=n(5835).f,o=n(5755),i=n(1)("toStringTag");e.exports=function(e,t,n){e&&!n&&(e=e.prototype),e&&!o(e,i)&&r(e,i,{configurable:!0,value:t})}},5409:(e,t,n)=>{"use strict";var r=n(7255),o=n(1866),i=r("keys");e.exports=function(e){return i[e]||(i[e]=o(e))}},1831:(e,t,n)=>{"use strict";var r=n(9557),o=n(8389),i=n(2095),a="__core-js_shared__",c=e.exports=o[a]||i(a,{});(c.versions||(c.versions=[])).push({version:"3.36.0",mode:r?"pure":"global",copyright:"© 2014-2024 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.36.0/LICENSE",source:"https://github.com/zloirock/core-js"})},7255:(e,t,n)=>{"use strict";var r=n(1831);e.exports=function(e,t){return r[e]||(r[e]=t||{})}},483:(e,t,n)=>{"use strict";var r=n(2293),o=n(2374),i=n(5983),a=n(1)("species");e.exports=function(e,t){var n,c=r(e).constructor;return void 0===c||i(n=r(c)[a])?t:o(n)}},9105:(e,t,n)=>{"use strict";var r=n(4762),o=n(3005),i=n(6261),a=n(3312),c=r("".charAt),s=r("".charCodeAt),l=r("".slice),u=function(e){return function(t,n){var r,u,p=i(a(t)),d=o(n),f=p.length;return d<0||d>=f?e?"":void 0:(r=s(p,d))<55296||r>56319||d+1===f||(u=s(p,d+1))<56320||u>57343?e?c(p,d):r:e?l(p,d,d+2):u-56320+(r-55296<<10)+65536}};e.exports={codeAt:u(!1),charAt:u(!0)}},4544:(e,t,n)=>{"use strict";var r=n(4762),o=n(3312),i=n(6261),a=n(5870),c=r("".replace),s=RegExp("^["+a+"]+"),l=RegExp("(^|[^"+a+"])["+a+"]+$"),u=function(e){return function(t){var n=i(o(t));return 1&e&&(n=c(n,s,"")),2&e&&(n=c(n,l,"$1")),n}};e.exports={start:u(1),end:u(2),trim:u(3)}},6029:(e,t,n)=>{"use strict";var r=n(6170),o=n(8473),i=n(8389).String;e.exports=!!Object.getOwnPropertySymbols&&!o((function(){var e=Symbol("symbol detection");return!i(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},8192:(e,t,n)=>{"use strict";var r=n(1807),o=n(1409),i=n(1),a=n(7914);e.exports=function(){var e=o("Symbol"),t=e&&e.prototype,n=t&&t.valueOf,c=i("toPrimitive");t&&!t[c]&&a(t,c,(function(e){return r(n,this)}),{arity:1})}},3218:(e,t,n)=>{"use strict";var r=n(6029);e.exports=r&&!!Symbol.for&&!!Symbol.keyFor},7007:(e,t,n)=>{"use strict";var r,o,i,a,c=n(8389),s=n(3067),l=n(2914),u=n(1483),p=n(5755),d=n(8473),f=n(2811),m=n(1698),v=n(3145),y=n(4066),h=n(8417),A=n(4334),b=c.setImmediate,g=c.clearImmediate,k=c.process,_=c.Dispatch,C=c.Function,w=c.MessageChannel,x=c.String,S=0,j={},O="onreadystatechange";d((function(){r=c.location}));var E=function(e){if(p(j,e)){var t=j[e];delete j[e],t()}},P=function(e){return function(){E(e)}},z=function(e){E(e.data)},I=function(e){c.postMessage(x(e),r.protocol+"//"+r.host)};b&&g||(b=function(e){y(arguments.length,1);var t=u(e)?e:C(e),n=m(arguments,1);return j[++S]=function(){s(t,void 0,n)},o(S),S},g=function(e){delete j[e]},A?o=function(e){k.nextTick(P(e))}:_&&_.now?o=function(e){_.now(P(e))}:w&&!h?(a=(i=new w).port2,i.port1.onmessage=z,o=l(a.postMessage,a)):c.addEventListener&&u(c.postMessage)&&!c.importScripts&&r&&"file:"!==r.protocol&&!d(I)?(o=I,c.addEventListener("message",z,!1)):o=O in v("script")?function(e){f.appendChild(v("script"))[O]=function(){f.removeChild(this),E(e)}}:function(e){setTimeout(P(e),0)}),e.exports={set:b,clear:g}},2430:(e,t,n)=>{"use strict";var r=n(4762);e.exports=r(1..valueOf)},3392:(e,t,n)=>{"use strict";var r=n(3005),o=Math.max,i=Math.min;e.exports=function(e,t){var n=r(e);return n<0?o(n+t,0):i(n,t)}},5599:(e,t,n)=>{"use strict";var r=n(2121),o=n(3312);e.exports=function(e){return r(o(e))}},3005:(e,t,n)=>{"use strict";var r=n(1703);e.exports=function(e){var t=+e;return t!=t||0===t?0:r(t)}},8324:(e,t,n)=>{"use strict";var r=n(3005),o=Math.min;e.exports=function(e){var t=r(e);return t>0?o(t,9007199254740991):0}},2347:(e,t,n)=>{"use strict";var r=n(3312),o=Object;e.exports=function(e){return o(r(e))}},2355:(e,t,n)=>{"use strict";var r=n(1807),o=n(1704),i=n(1423),a=n(2564),c=n(348),s=n(1),l=TypeError,u=s("toPrimitive");e.exports=function(e,t){if(!o(e)||i(e))return e;var n,s=a(e,u);if(s){if(void 0===t&&(t="default"),n=r(s,e,t),!o(n)||i(n))return n;throw new l("Can't convert object to primitive value")}return void 0===t&&(t="number"),c(e,t)}},3815:(e,t,n)=>{"use strict";var r=n(2355),o=n(1423);e.exports=function(e){var t=r(e,"string");return o(t)?t:t+""}},4338:(e,t,n)=>{"use strict";var r={};r[n(1)("toStringTag")]="z",e.exports="[object z]"===String(r)},6261:(e,t,n)=>{"use strict";var r=n(6145),o=String;e.exports=function(e){if("Symbol"===r(e))throw new TypeError("Cannot convert a Symbol value to a string");return o(e)}},8761:e=>{"use strict";var t=String;e.exports=function(e){try{return t(e)}catch(e){return"Object"}}},1866:(e,t,n)=>{"use strict";var r=n(4762),o=0,i=Math.random(),a=r(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+a(++o+i,36)}},5022:(e,t,n)=>{"use strict";var r=n(6029);e.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},3896:(e,t,n)=>{"use strict";var r=n(382),o=n(8473);e.exports=r&&o((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},4066:e=>{"use strict";var t=TypeError;e.exports=function(e,n){if(e<n)throw new t("Not enough arguments");return e}},4644:(e,t,n)=>{"use strict";var r=n(8389),o=n(1483),i=r.WeakMap;e.exports=o(i)&&/native code/.test(String(i))},7849:(e,t,n)=>{"use strict";var r=n(6589),o=n(5755),i=n(5373),a=n(5835).f;e.exports=function(e){var t=r.Symbol||(r.Symbol={});o(t,e)||a(t,e,{value:i.f(e)})}},5373:(e,t,n)=>{"use strict";var r=n(1);t.f=r},1:(e,t,n)=>{"use strict";var r=n(8389),o=n(7255),i=n(5755),a=n(1866),c=n(6029),s=n(5022),l=r.Symbol,u=o("wks"),p=s?l.for||l:l&&l.withoutSetter||a;e.exports=function(e){return i(u,e)||(u[e]=c&&i(l,e)?l[e]:p("Symbol."+e)),u[e]}},5870:e=>{"use strict";e.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},4776:(e,t,n)=>{"use strict";var r=n(8612),o=n(8473),i=n(4914),a=n(1704),c=n(2347),s=n(6960),l=n(1091),u=n(670),p=n(4551),d=n(4595),f=n(1),m=n(6170),v=f("isConcatSpreadable"),y=m>=51||!o((function(){var e=[];return e[v]=!1,e.concat()[0]!==e})),h=function(e){if(!a(e))return!1;var t=e[v];return void 0!==t?!!t:i(e)};r({target:"Array",proto:!0,arity:1,forced:!y||!d("concat")},{concat:function(e){var t,n,r,o,i,a=c(this),d=p(a,0),f=0;for(t=-1,r=arguments.length;t<r;t++)if(h(i=-1===t?a:arguments[t]))for(o=s(i),l(f+o),n=0;n<o;n++,f++)n in i&&u(d,f,i[n]);else l(f+1),u(d,f++,i);return d.length=f,d}})},4382:(e,t,n)=>{"use strict";var r=n(8612),o=n(2867).filter;r({target:"Array",proto:!0,forced:!n(4595)("filter")},{filter:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}})},2084:(e,t,n)=>{"use strict";var r=n(8612),o=n(2867).find,i=n(7095),a="find",c=!0;a in[]&&Array(1)[a]((function(){c=!1})),r({target:"Array",proto:!0,forced:c},{find:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),i(a)},9892:(e,t,n)=>{"use strict";var r=n(8612),o=n(6142);r({target:"Array",stat:!0,forced:!n(1554)((function(e){Array.from(e)}))},{from:o})},6281:(e,t,n)=>{"use strict";var r=n(8612),o=n(6651).includes,i=n(8473),a=n(7095);r({target:"Array",proto:!0,forced:i((function(){return!Array(1).includes()}))},{includes:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),a("includes")},4962:(e,t,n)=>{"use strict";var r=n(5599),o=n(7095),i=n(6775),a=n(4483),c=n(5835).f,s=n(5662),l=n(5247),u=n(9557),p=n(382),d="Array Iterator",f=a.set,m=a.getterFor(d);e.exports=s(Array,"Array",(function(e,t){f(this,{type:d,target:r(e),index:0,kind:t})}),(function(){var e=m(this),t=e.target,n=e.index++;if(!t||n>=t.length)return e.target=void 0,l(void 0,!0);switch(e.kind){case"keys":return l(n,!1);case"values":return l(t[n],!1)}return l([n,t[n]],!1)}),"values");var v=i.Arguments=i.Array;if(o("keys"),o("values"),o("entries"),!u&&p&&"values"!==v.name)try{c(v,"name",{value:"values"})}catch(e){}},6216:(e,t,n)=>{"use strict";var r=n(8612),o=n(4762),i=n(2121),a=n(5599),c=n(3152),s=o([].join);r({target:"Array",proto:!0,forced:i!==Object||!c("join",",")},{join:function(e){return s(a(this),void 0===e?",":e)}})},6584:(e,t,n)=>{"use strict";var r=n(8612),o=n(2867).map;r({target:"Array",proto:!0,forced:!n(4595)("map")},{map:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}})},9336:(e,t,n)=>{"use strict";var r=n(8612),o=n(4914),i=n(943),a=n(1704),c=n(3392),s=n(6960),l=n(5599),u=n(670),p=n(1),d=n(4595),f=n(1698),m=d("slice"),v=p("species"),y=Array,h=Math.max;r({target:"Array",proto:!0,forced:!m},{slice:function(e,t){var n,r,p,d=l(this),m=s(d),A=c(e,m),b=c(void 0===t?m:t,m);if(o(d)&&(n=d.constructor,(i(n)&&(n===y||o(n.prototype))||a(n)&&null===(n=n[v]))&&(n=void 0),n===y||void 0===n))return f(d,A,b);for(r=new(void 0===n?y:n)(h(b-A,0)),p=0;A<b;A++,p++)A in d&&u(r,p,d[A]);return r.length=p,r}})},6448:(e,t,n)=>{"use strict";var r=n(8612),o=n(4762),i=n(8120),a=n(2347),c=n(6960),s=n(6060),l=n(6261),u=n(8473),p=n(7354),d=n(3152),f=n(7332),m=n(8996),v=n(6170),y=n(5158),h=[],A=o(h.sort),b=o(h.push),g=u((function(){h.sort(void 0)})),k=u((function(){h.sort(null)})),_=d("sort"),C=!u((function(){if(v)return v<70;if(!(f&&f>3)){if(m)return!0;if(y)return y<603;var e,t,n,r,o="";for(e=65;e<76;e++){switch(t=String.fromCharCode(e),e){case 66:case 69:case 70:case 72:n=3;break;case 68:case 71:n=4;break;default:n=2}for(r=0;r<47;r++)h.push({k:t+r,v:n})}for(h.sort((function(e,t){return t.v-e.v})),r=0;r<h.length;r++)t=h[r].k.charAt(0),o.charAt(o.length-1)!==t&&(o+=t);return"DGBEFHACIJK"!==o}}));r({target:"Array",proto:!0,forced:g||!k||!_||!C},{sort:function(e){void 0!==e&&i(e);var t=a(this);if(C)return void 0===e?A(t):A(t,e);var n,r,o=[],u=c(t);for(r=0;r<u;r++)r in t&&b(o,t[r]);for(p(o,function(e){return function(t,n){return void 0===n?-1:void 0===t?1:void 0!==e?+e(t,n)||0:l(t)>l(n)?1:-1}}(e)),n=c(o),r=0;r<n;)t[r]=o[r++];for(;r<u;)s(t,r++);return t}})},4754:(e,t,n)=>{"use strict";var r=n(5755),o=n(7914),i=n(6446),a=n(1)("toPrimitive"),c=Date.prototype;r(c,a)||o(c,a,i)},1908:(e,t,n)=>{"use strict";var r=n(382),o=n(2048).EXISTS,i=n(4762),a=n(3864),c=Function.prototype,s=i(c.toString),l=/function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/,u=i(l.exec);r&&!o&&a(c,"name",{configurable:!0,get:function(){try{return u(l,s(this))[1]}catch(e){return""}}})},6184:(e,t,n)=>{"use strict";var r=n(8612),o=n(1409),i=n(3067),a=n(1807),c=n(4762),s=n(8473),l=n(1483),u=n(1423),p=n(1698),d=n(5215),f=n(6029),m=String,v=o("JSON","stringify"),y=c(/./.exec),h=c("".charAt),A=c("".charCodeAt),b=c("".replace),g=c(1..toString),k=/[\uD800-\uDFFF]/g,_=/^[\uD800-\uDBFF]$/,C=/^[\uDC00-\uDFFF]$/,w=!f||s((function(){var e=o("Symbol")("stringify detection");return"[null]"!==v([e])||"{}"!==v({a:e})||"{}"!==v(Object(e))})),x=s((function(){return'"\\udf06\\ud834"'!==v("\udf06\ud834")||'"\\udead"'!==v("\udead")})),S=function(e,t){var n=p(arguments),r=d(t);if(l(r)||void 0!==e&&!u(e))return n[1]=function(e,t){if(l(r)&&(t=a(r,this,m(e),t)),!u(t))return t},i(v,null,n)},j=function(e,t,n){var r=h(n,t-1),o=h(n,t+1);return y(_,e)&&!y(C,o)||y(C,e)&&!y(_,r)?"\\u"+g(A(e,0),16):e};v&&r({target:"JSON",stat:!0,arity:3,forced:w||x},{stringify:function(e,t,n){var r=p(arguments),o=i(w?S:v,null,r);return x&&"string"==typeof o?b(o,k,j):o}})},2725:(e,t,n)=>{"use strict";n(7446)("Map",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),n(4092))},8551:(e,t,n)=>{"use strict";n(2725)},94:(e,t,n)=>{"use strict";var r=n(8612),o=n(9557),i=n(382),a=n(8389),c=n(6589),s=n(4762),l=n(8730),u=n(5755),p=n(2429),d=n(4815),f=n(1423),m=n(2355),v=n(8473),y=n(2278).f,h=n(4961).f,A=n(5835).f,b=n(2430),g=n(4544).trim,k="Number",_=a[k],C=c[k],w=_.prototype,x=a.TypeError,S=s("".slice),j=s("".charCodeAt),O=l(k,!_(" 0o1")||!_("0b1")||_("+0x1")),E=function(e){var t,n=arguments.length<1?0:_(function(e){var t=m(e,"number");return"bigint"==typeof t?t:function(e){var t,n,r,o,i,a,c,s,l=m(e,"number");if(f(l))throw new x("Cannot convert a Symbol value to a number");if("string"==typeof l&&l.length>2)if(l=g(l),43===(t=j(l,0))||45===t){if(88===(n=j(l,2))||120===n)return NaN}else if(48===t){switch(j(l,1)){case 66:case 98:r=2,o=49;break;case 79:case 111:r=8,o=55;break;default:return+l}for(a=(i=S(l,2)).length,c=0;c<a;c++)if((s=j(i,c))<48||s>o)return NaN;return parseInt(i,r)}return+l}(t)}(e));return d(w,t=this)&&v((function(){b(t)}))?p(Object(n),this,E):n};E.prototype=w,O&&!o&&(w.constructor=E),r({global:!0,constructor:!0,wrap:!0,forced:O},{Number:E});var P=function(e,t){for(var n,r=i?y(t):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(","),o=0;r.length>o;o++)u(t,n=r[o])&&!u(e,n)&&A(e,n,h(t,n))};o&&C&&P(c[k],C),(O||o)&&P(c[k],_)},7575:(e,t,n)=>{"use strict";var r=n(8612),o=n(1439);r({target:"Object",stat:!0,arity:2,forced:Object.assign!==o},{assign:o})},7132:(e,t,n)=>{"use strict";var r=n(8612),o=n(5627).entries;r({target:"Object",stat:!0},{entries:function(e){return o(e)}})},6457:(e,t,n)=>{"use strict";var r=n(8612),o=n(8473),i=n(5599),a=n(4961).f,c=n(382);r({target:"Object",stat:!0,forced:!c||o((function(){a(1)})),sham:!c},{getOwnPropertyDescriptor:function(e,t){return a(i(e),t)}})},8908:(e,t,n)=>{"use strict";var r=n(8612),o=n(382),i=n(9497),a=n(5599),c=n(4961),s=n(670);r({target:"Object",stat:!0,sham:!o},{getOwnPropertyDescriptors:function(e){for(var t,n,r=a(e),o=c.f,l=i(r),u={},p=0;l.length>p;)void 0!==(n=o(r,t=l[p++]))&&s(u,t,n);return u}})},7859:(e,t,n)=>{"use strict";var r=n(8612),o=n(6029),i=n(8473),a=n(4347),c=n(2347);r({target:"Object",stat:!0,forced:!o||i((function(){a.f(1)}))},{getOwnPropertySymbols:function(e){var t=a.f;return t?t(c(e)):[]}})},6437:(e,t,n)=>{"use strict";var r=n(8612),o=n(8473),i=n(2347),a=n(3181),c=n(9441);r({target:"Object",stat:!0,forced:o((function(){a(1)})),sham:!c},{getPrototypeOf:function(e){return a(i(e))}})},3810:(e,t,n)=>{"use strict";var r=n(8612),o=n(2347),i=n(3658);r({target:"Object",stat:!0,forced:n(8473)((function(){i(1)}))},{keys:function(e){return i(o(e))}})},2697:(e,t,n)=>{"use strict";n(8612)({target:"Object",stat:!0},{setPrototypeOf:n(1953)})},8557:(e,t,n)=>{"use strict";var r=n(4338),o=n(7914),i=n(5685);r||o(Object.prototype,"toString",i,{unsafe:!0})},6249:(e,t,n)=>{"use strict";var r=n(8612),o=n(1807),i=n(8120),a=n(1173),c=n(4193),s=n(1506);r({target:"Promise",stat:!0,forced:n(1407)},{all:function(e){var t=this,n=a.f(t),r=n.resolve,l=n.reject,u=c((function(){var n=i(t.resolve),a=[],c=0,u=1;s(e,(function(e){var i=c++,s=!1;u++,o(n,t,e).then((function(e){s||(s=!0,a[i]=e,--u||r(a))}),l)})),--u||r(a)}));return u.error&&l(u.value),n.promise}})},6681:(e,t,n)=>{"use strict";var r=n(8612),o=n(9557),i=n(5502).CONSTRUCTOR,a=n(2832),c=n(1409),s=n(1483),l=n(7914),u=a&&a.prototype;if(r({target:"Promise",proto:!0,forced:i,real:!0},{catch:function(e){return this.then(void 0,e)}}),!o&&s(a)){var p=c("Promise").prototype.catch;u.catch!==p&&l(u,"catch",p,{unsafe:!0})}},8786:(e,t,n)=>{"use strict";var r,o,i,a=n(8612),c=n(9557),s=n(4334),l=n(8389),u=n(1807),p=n(7914),d=n(1953),f=n(2277),m=n(240),v=n(8120),y=n(1483),h=n(1704),A=n(6021),b=n(483),g=n(7007).set,k=n(553),_=n(1339),C=n(4193),w=n(5459),x=n(4483),S=n(2832),j=n(5502),O=n(1173),E="Promise",P=j.CONSTRUCTOR,z=j.REJECTION_EVENT,I=j.SUBCLASSING,D=x.getterFor(E),B=x.set,T=S&&S.prototype,N=S,R=T,M=l.TypeError,q=l.document,$=l.process,U=O.f,F=U,L=!!(q&&q.createEvent&&l.dispatchEvent),H="unhandledrejection",W=function(e){var t;return!(!h(e)||!y(t=e.then))&&t},G=function(e,t){var n,r,o,i=t.value,a=1===t.state,c=a?e.ok:e.fail,s=e.resolve,l=e.reject,p=e.domain;try{c?(a||(2===t.rejection&&Q(t),t.rejection=1),!0===c?n=i:(p&&p.enter(),n=c(i),p&&(p.exit(),o=!0)),n===e.promise?l(new M("Promise-chain cycle")):(r=W(n))?u(r,n,s,l):s(n)):l(i)}catch(e){p&&!o&&p.exit(),l(e)}},V=function(e,t){e.notified||(e.notified=!0,k((function(){for(var n,r=e.reactions;n=r.get();)G(n,e);e.notified=!1,t&&!e.rejection&&J(e)})))},K=function(e,t,n){var r,o;L?((r=q.createEvent("Event")).promise=t,r.reason=n,r.initEvent(e,!1,!0),l.dispatchEvent(r)):r={promise:t,reason:n},!z&&(o=l["on"+e])?o(r):e===H&&_("Unhandled promise rejection",n)},J=function(e){u(g,l,(function(){var t,n=e.facade,r=e.value;if(Y(e)&&(t=C((function(){s?$.emit("unhandledRejection",r,n):K(H,n,r)})),e.rejection=s||Y(e)?2:1,t.error))throw t.value}))},Y=function(e){return 1!==e.rejection&&!e.parent},Q=function(e){u(g,l,(function(){var t=e.facade;s?$.emit("rejectionHandled",t):K("rejectionhandled",t,e.value)}))},X=function(e,t,n){return function(r){e(t,r,n)}},Z=function(e,t,n){e.done||(e.done=!0,n&&(e=n),e.value=t,e.state=2,V(e,!0))},ee=function(e,t,n){if(!e.done){e.done=!0,n&&(e=n);try{if(e.facade===t)throw new M("Promise can't be resolved itself");var r=W(t);r?k((function(){var n={done:!1};try{u(r,t,X(ee,n,e),X(Z,n,e))}catch(t){Z(n,t,e)}})):(e.value=t,e.state=1,V(e,!1))}catch(t){Z({done:!1},t,e)}}};if(P&&(R=(N=function(e){A(this,R),v(e),u(r,this);var t=D(this);try{e(X(ee,t),X(Z,t))}catch(e){Z(t,e)}}).prototype,(r=function(e){B(this,{type:E,done:!1,notified:!1,parent:!1,reactions:new w,rejection:!1,state:0,value:void 0})}).prototype=p(R,"then",(function(e,t){var n=D(this),r=U(b(this,N));return n.parent=!0,r.ok=!y(e)||e,r.fail=y(t)&&t,r.domain=s?$.domain:void 0,0===n.state?n.reactions.add(r):k((function(){G(r,n)})),r.promise})),o=function(){var e=new r,t=D(e);this.promise=e,this.resolve=X(ee,t),this.reject=X(Z,t)},O.f=U=function(e){return e===N||void 0===e?new o(e):F(e)},!c&&y(S)&&T!==Object.prototype)){i=T.then,I||p(T,"then",(function(e,t){var n=this;return new N((function(e,t){u(i,n,e,t)})).then(e,t)}),{unsafe:!0});try{delete T.constructor}catch(e){}d&&d(T,R)}a({global:!0,constructor:!0,wrap:!0,forced:P},{Promise:N}),f(N,E,!1,!0),m(E)},76:(e,t,n)=>{"use strict";n(8786),n(6249),n(6681),n(1681),n(9231),n(5774)},1681:(e,t,n)=>{"use strict";var r=n(8612),o=n(1807),i=n(8120),a=n(1173),c=n(4193),s=n(1506);r({target:"Promise",stat:!0,forced:n(1407)},{race:function(e){var t=this,n=a.f(t),r=n.reject,l=c((function(){var a=i(t.resolve);s(e,(function(e){o(a,t,e).then(n.resolve,r)}))}));return l.error&&r(l.value),n.promise}})},9231:(e,t,n)=>{"use strict";var r=n(8612),o=n(1173);r({target:"Promise",stat:!0,forced:n(5502).CONSTRUCTOR},{reject:function(e){var t=o.f(this);return(0,t.reject)(e),t.promise}})},5774:(e,t,n)=>{"use strict";var r=n(8612),o=n(1409),i=n(9557),a=n(2832),c=n(5502).CONSTRUCTOR,s=n(2172),l=o("Promise"),u=i&&!c;r({target:"Promise",stat:!0,forced:i||c},{resolve:function(e){return s(u&&this===l?a:this,e)}})},1359:(e,t,n)=>{"use strict";var r=n(8612),o=n(1409),i=n(3067),a=n(2164),c=n(2374),s=n(2293),l=n(1704),u=n(5290),p=n(8473),d=o("Reflect","construct"),f=Object.prototype,m=[].push,v=p((function(){function e(){}return!(d((function(){}),[],e)instanceof e)})),y=!p((function(){d((function(){}))})),h=v||y;r({target:"Reflect",stat:!0,forced:h,sham:h},{construct:function(e,t){c(e),s(t);var n=arguments.length<3?e:c(arguments[2]);if(y&&!v)return d(e,t,n);if(e===n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var r=[null];return i(m,r,t),new(i(a,e,r))}var o=n.prototype,p=u(l(o)?o:f),h=i(e,p,t);return l(h)?h:p}})},646:(e,t,n)=>{"use strict";var r=n(382),o=n(8389),i=n(4762),a=n(8730),c=n(2429),s=n(9037),l=n(5290),u=n(2278).f,p=n(4815),d=n(4786),f=n(6261),m=n(9736),v=n(7435),y=n(7150),h=n(7914),A=n(8473),b=n(5755),g=n(4483).enforce,k=n(240),_=n(1),C=n(3933),w=n(4528),x=_("match"),S=o.RegExp,j=S.prototype,O=o.SyntaxError,E=i(j.exec),P=i("".charAt),z=i("".replace),I=i("".indexOf),D=i("".slice),B=/^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/,T=/a/g,N=/a/g,R=new S(T)!==T,M=v.MISSED_STICKY,q=v.UNSUPPORTED_Y;if(a("RegExp",r&&(!R||M||C||w||A((function(){return N[x]=!1,S(T)!==T||S(N)===N||"/a/i"!==String(S(T,"i"))}))))){for(var $=function(e,t){var n,r,o,i,a,u,v=p(j,this),y=d(e),h=void 0===t,A=[],k=e;if(!v&&y&&h&&e.constructor===$)return e;if((y||p(j,e))&&(e=e.source,h&&(t=m(k))),e=void 0===e?"":f(e),t=void 0===t?"":f(t),k=e,C&&"dotAll"in T&&(r=!!t&&I(t,"s")>-1)&&(t=z(t,/s/g,"")),n=t,M&&"sticky"in T&&(o=!!t&&I(t,"y")>-1)&&q&&(t=z(t,/y/g,"")),w&&(i=function(e){for(var t,n=e.length,r=0,o="",i=[],a=l(null),c=!1,s=!1,u=0,p="";r<=n;r++){if("\\"===(t=P(e,r)))t+=P(e,++r);else if("]"===t)c=!1;else if(!c)switch(!0){case"["===t:c=!0;break;case"("===t:E(B,D(e,r+1))&&(r+=2,s=!0),o+=t,u++;continue;case">"===t&&s:if(""===p||b(a,p))throw new O("Invalid capture group name");a[p]=!0,i[i.length]=[p,u],s=!1,p="";continue}s?p+=t:o+=t}return[o,i]}(e),e=i[0],A=i[1]),a=c(S(e,t),v?this:j,$),(r||o||A.length)&&(u=g(a),r&&(u.dotAll=!0,u.raw=$(function(e){for(var t,n=e.length,r=0,o="",i=!1;r<=n;r++)"\\"!==(t=P(e,r))?i||"."!==t?("["===t?i=!0:"]"===t&&(i=!1),o+=t):o+="[\\s\\S]":o+=t+P(e,++r);return o}(e),n)),o&&(u.sticky=!0),A.length&&(u.groups=A)),e!==k)try{s(a,"source",""===k?"(?:)":k)}catch(e){}return a},U=u(S),F=0;U.length>F;)y($,S,U[F++]);j.constructor=$,$.prototype=j,h(o,"RegExp",$,{constructor:!0})}k("RegExp")},5021:(e,t,n)=>{"use strict";var r=n(8612),o=n(8865);r({target:"RegExp",proto:!0,forced:/./.exec!==o},{exec:o})},3687:(e,t,n)=>{"use strict";var r=n(2048).PROPER,o=n(7914),i=n(2293),a=n(6261),c=n(8473),s=n(9736),l="toString",u=RegExp.prototype,p=u[l],d=c((function(){return"/a/b"!==p.call({source:"a",flags:"b"})})),f=r&&p.name!==l;(d||f)&&o(u,l,(function(){var e=i(this);return"/"+a(e.source)+"/"+a(s(e))}),{unsafe:!0})},9203:(e,t,n)=>{"use strict";n(7446)("Set",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),n(4092))},2745:(e,t,n)=>{"use strict";n(9203)},987:(e,t,n)=>{"use strict";var r,o=n(8612),i=n(3786),a=n(4961).f,c=n(8324),s=n(6261),l=n(4989),u=n(3312),p=n(4522),d=n(9557),f=i("".slice),m=Math.min,v=p("endsWith");o({target:"String",proto:!0,forced:!(!d&&!v&&(r=a(String.prototype,"endsWith"),r&&!r.writable)||v)},{endsWith:function(e){var t=s(u(this));l(e);var n=arguments.length>1?arguments[1]:void 0,r=t.length,o=void 0===n?r:m(c(n),r),i=s(e);return f(t,o-i.length,o)===i}})},9425:(e,t,n)=>{"use strict";var r=n(8612),o=n(4762),i=n(4989),a=n(3312),c=n(6261),s=n(4522),l=o("".indexOf);r({target:"String",proto:!0,forced:!s("includes")},{includes:function(e){return!!~l(c(a(this)),c(i(e)),arguments.length>1?arguments[1]:void 0)}})},3994:(e,t,n)=>{"use strict";var r=n(9105).charAt,o=n(6261),i=n(4483),a=n(5662),c=n(5247),s="String Iterator",l=i.set,u=i.getterFor(s);a(String,"String",(function(e){l(this,{type:s,string:o(e),index:0})}),(function(){var e,t=u(this),n=t.string,o=t.index;return o>=n.length?c(void 0,!0):(e=r(n,o),t.index+=e.length,c(e,!1))}))},3819:(e,t,n)=>{"use strict";var r=n(1807),o=n(3358),i=n(2293),a=n(5983),c=n(8324),s=n(6261),l=n(3312),u=n(2564),p=n(4419),d=n(2428);o("match",(function(e,t,n){return[function(t){var n=l(this),o=a(t)?void 0:u(t,e);return o?r(o,t,n):new RegExp(t)[e](s(n))},function(e){var r=i(this),o=s(e),a=n(t,r,o);if(a.done)return a.value;if(!r.global)return d(r,o);var l=r.unicode;r.lastIndex=0;for(var u,f=[],m=0;null!==(u=d(r,o));){var v=s(u[0]);f[m]=v,""===v&&(r.lastIndex=p(o,c(r.lastIndex),l)),m++}return 0===m?null:f}]}))},3062:(e,t,n)=>{"use strict";var r=n(3067),o=n(1807),i=n(4762),a=n(3358),c=n(8473),s=n(2293),l=n(1483),u=n(5983),p=n(3005),d=n(8324),f=n(6261),m=n(3312),v=n(4419),y=n(2564),h=n(708),A=n(2428),b=n(1)("replace"),g=Math.max,k=Math.min,_=i([].concat),C=i([].push),w=i("".indexOf),x=i("".slice),S="$0"==="a".replace(/./,"$0"),j=!!/./[b]&&""===/./[b]("a","$0");a("replace",(function(e,t,n){var i=j?"$":"$0";return[function(e,n){var r=m(this),i=u(e)?void 0:y(e,b);return i?o(i,e,r,n):o(t,f(r),e,n)},function(e,o){var a=s(this),c=f(e);if("string"==typeof o&&-1===w(o,i)&&-1===w(o,"$<")){var u=n(t,a,c,o);if(u.done)return u.value}var m=l(o);m||(o=f(o));var y,b=a.global;b&&(y=a.unicode,a.lastIndex=0);for(var S,j=[];null!==(S=A(a,c))&&(C(j,S),b);)""===f(S[0])&&(a.lastIndex=v(c,d(a.lastIndex),y));for(var O,E="",P=0,z=0;z<j.length;z++){for(var I,D=f((S=j[z])[0]),B=g(k(p(S.index),c.length),0),T=[],N=1;N<S.length;N++)C(T,void 0===(O=S[N])?O:String(O));var R=S.groups;if(m){var M=_([D],T,B,c);void 0!==R&&C(M,R),I=f(r(o,void 0,M))}else I=h(D,c,B,T,R,o);B>=P&&(E+=x(c,P,B)+I,P=B+D.length)}return E+x(c,P)}]}),!!c((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")}))||!S||j)},4062:(e,t,n)=>{"use strict";var r,o=n(8612),i=n(3786),a=n(4961).f,c=n(8324),s=n(6261),l=n(4989),u=n(3312),p=n(4522),d=n(9557),f=i("".slice),m=Math.min,v=p("startsWith");o({target:"String",proto:!0,forced:!(!d&&!v&&(r=a(String.prototype,"startsWith"),r&&!r.writable)||v)},{startsWith:function(e){var t=s(u(this));l(e);var n=c(m(arguments.length>1?arguments[1]:void 0,t.length)),r=s(e);return f(t,n,n+r.length)===r}})},5443:(e,t,n)=>{"use strict";var r=n(8612),o=n(8389),i=n(1807),a=n(4762),c=n(9557),s=n(382),l=n(6029),u=n(8473),p=n(5755),d=n(4815),f=n(2293),m=n(5599),v=n(3815),y=n(6261),h=n(7738),A=n(5290),b=n(3658),g=n(2278),k=n(2020),_=n(4347),C=n(4961),w=n(5835),x=n(5799),S=n(7611),j=n(7914),O=n(3864),E=n(7255),P=n(5409),z=n(1507),I=n(1866),D=n(1),B=n(5373),T=n(7849),N=n(8192),R=n(2277),M=n(4483),q=n(2867).forEach,$=P("hidden"),U="Symbol",F="prototype",L=M.set,H=M.getterFor(U),W=Object[F],G=o.Symbol,V=G&&G[F],K=o.RangeError,J=o.TypeError,Y=o.QObject,Q=C.f,X=w.f,Z=k.f,ee=S.f,te=a([].push),ne=E("symbols"),re=E("op-symbols"),oe=E("wks"),ie=!Y||!Y[F]||!Y[F].findChild,ae=function(e,t,n){var r=Q(W,t);r&&delete W[t],X(e,t,n),r&&e!==W&&X(W,t,r)},ce=s&&u((function(){return 7!==A(X({},"a",{get:function(){return X(this,"a",{value:7}).a}})).a}))?ae:X,se=function(e,t){var n=ne[e]=A(V);return L(n,{type:U,tag:e,description:t}),s||(n.description=t),n},le=function(e,t,n){e===W&&le(re,t,n),f(e);var r=v(t);return f(n),p(ne,r)?(n.enumerable?(p(e,$)&&e[$][r]&&(e[$][r]=!1),n=A(n,{enumerable:h(0,!1)})):(p(e,$)||X(e,$,h(1,A(null))),e[$][r]=!0),ce(e,r,n)):X(e,r,n)},ue=function(e,t){f(e);var n=m(t),r=b(n).concat(me(n));return q(r,(function(t){s&&!i(pe,n,t)||le(e,t,n[t])})),e},pe=function(e){var t=v(e),n=i(ee,this,t);return!(this===W&&p(ne,t)&&!p(re,t))&&(!(n||!p(this,t)||!p(ne,t)||p(this,$)&&this[$][t])||n)},de=function(e,t){var n=m(e),r=v(t);if(n!==W||!p(ne,r)||p(re,r)){var o=Q(n,r);return!o||!p(ne,r)||p(n,$)&&n[$][r]||(o.enumerable=!0),o}},fe=function(e){var t=Z(m(e)),n=[];return q(t,(function(e){p(ne,e)||p(z,e)||te(n,e)})),n},me=function(e){var t=e===W,n=Z(t?re:m(e)),r=[];return q(n,(function(e){!p(ne,e)||t&&!p(W,e)||te(r,ne[e])})),r};l||(j(V=(G=function(){if(d(V,this))throw new J("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?y(arguments[0]):void 0,t=I(e),n=function(e){var r=void 0===this?o:this;r===W&&i(n,re,e),p(r,$)&&p(r[$],t)&&(r[$][t]=!1);var a=h(1,e);try{ce(r,t,a)}catch(e){if(!(e instanceof K))throw e;ae(r,t,a)}};return s&&ie&&ce(W,t,{configurable:!0,set:n}),se(t,e)})[F],"toString",(function(){return H(this).tag})),j(G,"withoutSetter",(function(e){return se(I(e),e)})),S.f=pe,w.f=le,x.f=ue,C.f=de,g.f=k.f=fe,_.f=me,B.f=function(e){return se(D(e),e)},s&&(O(V,"description",{configurable:!0,get:function(){return H(this).description}}),c||j(W,"propertyIsEnumerable",pe,{unsafe:!0}))),r({global:!0,constructor:!0,wrap:!0,forced:!l,sham:!l},{Symbol:G}),q(b(oe),(function(e){T(e)})),r({target:U,stat:!0,forced:!l},{useSetter:function(){ie=!0},useSimple:function(){ie=!1}}),r({target:"Object",stat:!0,forced:!l,sham:!s},{create:function(e,t){return void 0===t?A(e):ue(A(e),t)},defineProperty:le,defineProperties:ue,getOwnPropertyDescriptor:de}),r({target:"Object",stat:!0,forced:!l},{getOwnPropertyNames:fe}),N(),R(G,U),z[$]=!0},2733:(e,t,n)=>{"use strict";var r=n(8612),o=n(382),i=n(8389),a=n(4762),c=n(5755),s=n(1483),l=n(4815),u=n(6261),p=n(3864),d=n(6726),f=i.Symbol,m=f&&f.prototype;if(o&&s(f)&&(!("description"in m)||void 0!==f().description)){var v={},y=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:u(arguments[0]),t=l(m,this)?new f(e):void 0===e?f():f(e);return""===e&&(v[t]=!0),t};d(y,f),y.prototype=m,m.constructor=y;var h="Symbol(description detection)"===String(f("description detection")),A=a(m.valueOf),b=a(m.toString),g=/^Symbol\((.*)\)[^)]+$/,k=a("".replace),_=a("".slice);p(m,"description",{configurable:!0,get:function(){var e=A(this);if(c(v,e))return"";var t=b(e),n=h?_(t,7,-1):k(t,g,"$1");return""===n?void 0:n}}),r({global:!0,constructor:!0,forced:!0},{Symbol:y})}},2484:(e,t,n)=>{"use strict";var r=n(8612),o=n(1409),i=n(5755),a=n(6261),c=n(7255),s=n(3218),l=c("string-to-symbol-registry"),u=c("symbol-to-string-registry");r({target:"Symbol",stat:!0,forced:!s},{for:function(e){var t=a(e);if(i(l,t))return l[t];var n=o("Symbol")(t);return l[t]=n,u[n]=t,n}})},4701:(e,t,n)=>{"use strict";n(7849)("iterator")},9305:(e,t,n)=>{"use strict";n(5443),n(2484),n(1894),n(6184),n(7859)},1894:(e,t,n)=>{"use strict";var r=n(8612),o=n(5755),i=n(1423),a=n(8761),c=n(7255),s=n(3218),l=c("symbol-to-string-registry");r({target:"Symbol",stat:!0,forced:!s},{keyFor:function(e){if(!i(e))throw new TypeError(a(e)+" is not a symbol");if(o(l,e))return l[e]}})},1678:(e,t,n)=>{"use strict";var r=n(7849),o=n(8192);r("toPrimitive"),o()},3630:(e,t,n)=>{"use strict";var r=n(8389),o=n(4842),i=n(1902),a=n(4793),c=n(9037),s=function(e){if(e&&e.forEach!==a)try{c(e,"forEach",a)}catch(t){e.forEach=a}};for(var l in o)o[l]&&s(r[l]&&r[l].prototype);s(i)},2367:(e,t,n)=>{"use strict";var r=n(8389),o=n(4842),i=n(1902),a=n(4962),c=n(9037),s=n(2277),l=n(1)("iterator"),u=a.values,p=function(e,t){if(e){if(e[l]!==u)try{c(e,l,u)}catch(t){e[l]=u}if(s(e,t,!0),o[t])for(var n in a)if(e[n]!==a[n])try{c(e,n,a[n])}catch(t){e[n]=a[n]}}};for(var d in o)p(r[d]&&r[d].prototype,d);p(i,"DOMTokenList")},9833:(e,t,n)=>{"use strict";var r=n(8612),o=n(8389),i=n(9570)(o.setInterval,!0);r({global:!0,bind:!0,forced:o.setInterval!==i},{setInterval:i})},3989:(e,t,n)=>{"use strict";var r=n(8612),o=n(8389),i=n(9570)(o.setTimeout,!0);r({global:!0,bind:!0,forced:o.setTimeout!==i},{setTimeout:i})},7089:(e,t,n)=>{"use strict";n(9833),n(3989)}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nc=void 0;var r={};return(()=>{"use strict";n.r(r),n.d(r,{addEventListener:()=>hr,defaultConfig:()=>pr,defaultTranslations:()=>dr,getConfigTranslations:()=>br,getElement:()=>yr,getElementID:()=>vr,getManager:()=>Er,language:()=>ct,render:()=>kr,renderContextualConsentNotices:()=>_r,resetManagers:()=>Or,setup:()=>xr,show:()=>Sr,updateConfig:()=>cn,validateConfig:()=>wr,version:()=>Pr}),n(9305),n(2733),n(4701),n(1678),n(4776),n(4382),n(2084),n(9892),n(4962),n(6584),n(9336),n(4754),n(1908),n(8551),n(94),n(6457),n(8908),n(3810),n(8557),n(5021),n(3687),n(3994),n(3630),n(2367);var e,t,o,i,a,c,s,l,u={},p=[],d=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,f=Array.isArray;function m(e,t){for(var n in t)e[n]=t[n];return e}function v(e){var t=e.parentNode;t&&t.removeChild(e)}function y(t,n,r){var o,i,a,c={};for(a in n)"key"==a?o=n[a]:"ref"==a?i=n[a]:c[a]=n[a];if(arguments.length>2&&(c.children=arguments.length>3?e.call(arguments,2):r),"function"==typeof t&&null!=t.defaultProps)for(a in t.defaultProps)void 0===c[a]&&(c[a]=t.defaultProps[a]);return h(t,c,o,i,null)}function h(e,n,r,i,a){var c={type:e,props:n,key:r,ref:i,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:null==a?++o:a,__i:-1,__u:0};return null==a&&null!=t.vnode&&t.vnode(c),c}function A(e){return e.children}function b(e,t){this.props=e,this.context=t}function g(e,t){if(null==t)return e.__?g(e.__,e.__i+1):null;for(var n;t<e.__k.length;t++)if(null!=(n=e.__k[t])&&null!=n.__e)return n.__e;return"function"==typeof e.type?g(e):null}function k(e,n,r){var o,i=e.__v,a=i.__e,c=e.__P;if(c)return(o=m({},i)).__v=i.__v+1,t.vnode&&t.vnode(o),B(c,o,i,e.__n,void 0!==c.ownerSVGElement,32&i.__u?[a]:null,n,null==a?g(i):a,!!(32&i.__u),r),o.__v=i.__v,o.__.__k[o.__i]=o,o.__d=void 0,o.__e!=a&&_(o),o}function _(e){var t,n;if(null!=(e=e.__)&&null!=e.__c){for(e.__e=e.__c.base=null,t=0;t<e.__k.length;t++)if(null!=(n=e.__k[t])&&null!=n.__e){e.__e=e.__c.base=n.__e;break}return _(e)}}function C(e){(!e.__d&&(e.__d=!0)&&i.push(e)&&!w.__r++||a!==t.debounceRendering)&&((a=t.debounceRendering)||c)(w)}function w(){var e,n,r,o=[],a=[];for(i.sort(s);e=i.shift();)e.__d&&(r=i.length,n=k(e,o,a)||n,0===r||i.length>r?(T(o,n,a),a.length=o.length=0,n=void 0,i.sort(s)):n&&t.__c&&t.__c(n,p));n&&T(o,n,a),w.__r=0}function x(e,t,n,r,o,i,a,c,s,l,d){var f,m,v,y,h,A=r&&r.__k||p,b=t.length;for(n.__d=s,S(n,t,A),s=n.__d,f=0;f<b;f++)null!=(v=n.__k[f])&&"boolean"!=typeof v&&"function"!=typeof v&&(m=-1===v.__i?u:A[v.__i]||u,v.__i=f,B(e,v,m,o,i,a,c,s,l,d),y=v.__e,v.ref&&m.ref!=v.ref&&(m.ref&&R(m.ref,null,v),d.push(v.ref,v.__c||y,v)),null==h&&null!=y&&(h=y),65536&v.__u||m.__k===v.__k?s=j(v,s,e):"function"==typeof v.type&&void 0!==v.__d?s=v.__d:y&&(s=y.nextSibling),v.__d=void 0,v.__u&=-196609);n.__d=s,n.__e=h}function S(e,t,n){var r,o,i,a,c,s=t.length,l=n.length,u=l,p=0;for(e.__k=[],r=0;r<s;r++)a=r+p,null!=(o=e.__k[r]=null==(o=t[r])||"boolean"==typeof o||"function"==typeof o?null:"string"==typeof o||"number"==typeof o||"bigint"==typeof o||o.constructor==String?h(null,o,null,null,null):f(o)?h(A,{children:o},null,null,null):void 0===o.constructor&&o.__b>0?h(o.type,o.props,o.key,o.ref?o.ref:null,o.__v):o)?(o.__=e,o.__b=e.__b+1,c=E(o,n,a,u),o.__i=c,i=null,-1!==c&&(u--,(i=n[c])&&(i.__u|=131072)),null==i||null===i.__v?(-1==c&&p--,"function"!=typeof o.type&&(o.__u|=65536)):c!==a&&(c===a+1?p++:c>a?u>s-a?p+=c-a:p--:c<a?c==a-1&&(p=c-a):p=0,c!==r+p&&(o.__u|=65536))):(i=n[a])&&null==i.key&&i.__e&&0==(131072&i.__u)&&(i.__e==e.__d&&(e.__d=g(i)),M(i,i,!1),n[a]=null,u--);if(u)for(r=0;r<l;r++)null!=(i=n[r])&&0==(131072&i.__u)&&(i.__e==e.__d&&(e.__d=g(i)),M(i,i))}function j(e,t,n){var r,o;if("function"==typeof e.type){for(r=e.__k,o=0;r&&o<r.length;o++)r[o]&&(r[o].__=e,t=j(r[o],t,n));return t}e.__e!=t&&(n.insertBefore(e.__e,t||null),t=e.__e);do{t=t&&t.nextSibling}while(null!=t&&8===t.nodeType);return t}function O(e,t){return t=t||[],null==e||"boolean"==typeof e||(f(e)?e.some((function(e){O(e,t)})):t.push(e)),t}function E(e,t,n,r){var o=e.key,i=e.type,a=n-1,c=n+1,s=t[n];if(null===s||s&&o==s.key&&i===s.type&&0==(131072&s.__u))return n;if(r>(null!=s&&0==(131072&s.__u)?1:0))for(;a>=0||c<t.length;){if(a>=0){if((s=t[a])&&0==(131072&s.__u)&&o==s.key&&i===s.type)return a;a--}if(c<t.length){if((s=t[c])&&0==(131072&s.__u)&&o==s.key&&i===s.type)return c;c++}}return-1}function P(e,t,n){"-"===t[0]?e.setProperty(t,null==n?"":n):e[t]=null==n?"":"number"!=typeof n||d.test(t)?n:n+"px"}function z(e,t,n,r,o){var i;e:if("style"===t)if("string"==typeof n)e.style.cssText=n;else{if("string"==typeof r&&(e.style.cssText=r=""),r)for(t in r)n&&t in n||P(e.style,t,"");if(n)for(t in n)r&&n[t]===r[t]||P(e.style,t,n[t])}else if("o"===t[0]&&"n"===t[1])i=t!==(t=t.replace(/(PointerCapture)$|Capture$/i,"$1")),t=t.toLowerCase()in e?t.toLowerCase().slice(2):t.slice(2),e.l||(e.l={}),e.l[t+i]=n,n?r?n.u=r.u:(n.u=Date.now(),e.addEventListener(t,i?D:I,i)):e.removeEventListener(t,i?D:I,i);else{if(o)t=t.replace(/xlink(H|:h)/,"h").replace(/sName$/,"s");else if("width"!==t&&"height"!==t&&"href"!==t&&"list"!==t&&"form"!==t&&"tabIndex"!==t&&"download"!==t&&"rowSpan"!==t&&"colSpan"!==t&&"role"!==t&&t in e)try{e[t]=null==n?"":n;break e}catch(e){}"function"==typeof n||(null==n||!1===n&&"-"!==t[4]?e.removeAttribute(t):e.setAttribute(t,n))}}function I(e){if(this.l){var n=this.l[e.type+!1];if(e.t){if(e.t<=n.u)return}else e.t=Date.now();return n(t.event?t.event(e):e)}}function D(e){if(this.l)return this.l[e.type+!0](t.event?t.event(e):e)}function B(e,n,r,o,i,a,c,s,l,u){var p,d,v,y,h,g,k,_,C,w,S,j,O,E,P,z=n.type;if(void 0!==n.constructor)return null;128&r.__u&&(l=!!(32&r.__u),a=[s=n.__e=r.__e]),(p=t.__b)&&p(n);e:if("function"==typeof z)try{if(_=n.props,C=(p=z.contextType)&&o[p.__c],w=p?C?C.props.value:p.__:o,r.__c?k=(d=n.__c=r.__c).__=d.__E:("prototype"in z&&z.prototype.render?n.__c=d=new z(_,w):(n.__c=d=new b(_,w),d.constructor=z,d.render=q),C&&C.sub(d),d.props=_,d.state||(d.state={}),d.context=w,d.__n=o,v=d.__d=!0,d.__h=[],d._sb=[]),null==d.__s&&(d.__s=d.state),null!=z.getDerivedStateFromProps&&(d.__s==d.state&&(d.__s=m({},d.__s)),m(d.__s,z.getDerivedStateFromProps(_,d.__s))),y=d.props,h=d.state,d.__v=n,v)null==z.getDerivedStateFromProps&&null!=d.componentWillMount&&d.componentWillMount(),null!=d.componentDidMount&&d.__h.push(d.componentDidMount);else{if(null==z.getDerivedStateFromProps&&_!==y&&null!=d.componentWillReceiveProps&&d.componentWillReceiveProps(_,w),!d.__e&&(null!=d.shouldComponentUpdate&&!1===d.shouldComponentUpdate(_,d.__s,w)||n.__v===r.__v)){for(n.__v!==r.__v&&(d.props=_,d.state=d.__s,d.__d=!1),n.__e=r.__e,n.__k=r.__k,n.__k.forEach((function(e){e&&(e.__=n)})),S=0;S<d._sb.length;S++)d.__h.push(d._sb[S]);d._sb=[],d.__h.length&&c.push(d);break e}null!=d.componentWillUpdate&&d.componentWillUpdate(_,d.__s,w),null!=d.componentDidUpdate&&d.__h.push((function(){d.componentDidUpdate(y,h,g)}))}if(d.context=w,d.props=_,d.__P=e,d.__e=!1,j=t.__r,O=0,"prototype"in z&&z.prototype.render){for(d.state=d.__s,d.__d=!1,j&&j(n),p=d.render(d.props,d.state,d.context),E=0;E<d._sb.length;E++)d.__h.push(d._sb[E]);d._sb=[]}else do{d.__d=!1,j&&j(n),p=d.render(d.props,d.state,d.context),d.state=d.__s}while(d.__d&&++O<25);d.state=d.__s,null!=d.getChildContext&&(o=m(m({},o),d.getChildContext())),v||null==d.getSnapshotBeforeUpdate||(g=d.getSnapshotBeforeUpdate(y,h)),x(e,f(P=null!=p&&p.type===A&&null==p.key?p.props.children:p)?P:[P],n,r,o,i,a,c,s,l,u),d.base=n.__e,n.__u&=-161,d.__h.length&&c.push(d),k&&(d.__E=d.__=null)}catch(e){n.__v=null,l||null!=a?(n.__e=s,n.__u|=l?160:32,a[a.indexOf(s)]=null):(n.__e=r.__e,n.__k=r.__k),t.__e(e,n,r)}else null==a&&n.__v===r.__v?(n.__k=r.__k,n.__e=r.__e):n.__e=N(r.__e,n,r,o,i,a,c,l,u);(p=t.diffed)&&p(n)}function T(e,n,r){for(var o=0;o<r.length;o++)R(r[o],r[++o],r[++o]);t.__c&&t.__c(n,e),e.some((function(n){try{e=n.__h,n.__h=[],e.some((function(e){e.call(n)}))}catch(e){t.__e(e,n.__v)}}))}function N(t,n,r,o,i,a,c,s,l){var p,d,m,y,h,A,b,k=r.props,_=n.props,C=n.type;if("svg"===C&&(i=!0),null!=a)for(p=0;p<a.length;p++)if((h=a[p])&&"setAttribute"in h==!!C&&(C?h.localName===C:3===h.nodeType)){t=h,a[p]=null;break}if(null==t){if(null===C)return document.createTextNode(_);t=i?document.createElementNS("http://www.w3.org/2000/svg",C):document.createElement(C,_.is&&_),a=null,s=!1}if(null===C)k===_||s&&t.data===_||(t.data=_);else{if(a=a&&e.call(t.childNodes),k=r.props||u,!s&&null!=a)for(k={},p=0;p<t.attributes.length;p++)k[(h=t.attributes[p]).name]=h.value;for(p in k)h=k[p],"children"==p||("dangerouslySetInnerHTML"==p?m=h:"key"===p||p in _||z(t,p,null,h,i));for(p in _)h=_[p],"children"==p?y=h:"dangerouslySetInnerHTML"==p?d=h:"value"==p?A=h:"checked"==p?b=h:"key"===p||s&&"function"!=typeof h||k[p]===h||z(t,p,h,k[p],i);if(d)s||m&&(d.__html===m.__html||d.__html===t.innerHTML)||(t.innerHTML=d.__html),n.__k=[];else if(m&&(t.innerHTML=""),x(t,f(y)?y:[y],n,r,o,i&&"foreignObject"!==C,a,c,a?a[0]:r.__k&&g(r,0),s,l),null!=a)for(p=a.length;p--;)null!=a[p]&&v(a[p]);s||(p="value",void 0!==A&&(A!==t[p]||"progress"===C&&!A||"option"===C&&A!==k[p])&&z(t,p,A,k[p],!1),p="checked",void 0!==b&&b!==t[p]&&z(t,p,b,k[p],!1))}return t}function R(e,n,r){try{"function"==typeof e?e(n):e.current=n}catch(e){t.__e(e,r)}}function M(e,n,r){var o,i;if(t.unmount&&t.unmount(e),(o=e.ref)&&(o.current&&o.current!==e.__e||R(o,null,n)),null!=(o=e.__c)){if(o.componentWillUnmount)try{o.componentWillUnmount()}catch(e){t.__e(e,n)}o.base=o.__P=null,e.__c=void 0}if(o=e.__k)for(i=0;i<o.length;i++)o[i]&&M(o[i],n,r||"function"!=typeof e.type);r||null==e.__e||v(e.__e),e.__=e.__e=e.__d=void 0}function q(e,t,n){return this.constructor(e,n)}function $(n,r,o){var i,a,c,s;t.__&&t.__(n,r),a=(i="function"==typeof o)?null:o&&o.__k||r.__k,c=[],s=[],B(r,n=(!i&&o||r).__k=y(A,null,[n]),a||u,u,void 0!==r.ownerSVGElement,!i&&o?[o]:a?null:r.firstChild?e.call(r.childNodes):null,c,!i&&o?o:a?a.__e:r.firstChild,i,s),n.__d=void 0,T(c,n,s)}function U(e,t){$(e,t,U)}function F(t,n,r){var o,i,a,c,s=m({},t.props);for(a in t.type&&t.type.defaultProps&&(c=t.type.defaultProps),n)"key"==a?o=n[a]:"ref"==a?i=n[a]:s[a]=void 0===n[a]&&void 0!==c?c[a]:n[a];return arguments.length>2&&(s.children=arguments.length>3?e.call(arguments,2):r),h(t.type,s,o||t.key,i||t.ref,null)}e=p.slice,t={__e:function(e,t,n,r){for(var o,i,a;t=t.__;)if((o=t.__c)&&!o.__)try{if((i=o.constructor)&&null!=i.getDerivedStateFromError&&(o.setState(i.getDerivedStateFromError(e)),a=o.__d),null!=o.componentDidCatch&&(o.componentDidCatch(e,r||{}),a=o.__d),a)return o.__E=o}catch(t){e=t}throw e}},o=0,b.prototype.setState=function(e,t){var n;n=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=m({},this.state),"function"==typeof e&&(e=e(m({},n),this.props)),e&&m(n,e),null!=e&&this.__v&&(t&&this._sb.push(t),C(this))},b.prototype.forceUpdate=function(e){this.__v&&(this.__e=!0,e&&this.__h.push(e),C(this))},b.prototype.render=A,i=[],c="function"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,s=function(e,t){return e.__v.__b-t.__v.__b},w.__r=0,l=0;var L,H,W,G,V=0,K=[],J=[],Y=t,Q=Y.__b,X=Y.__r,Z=Y.diffed,ee=Y.__c,te=Y.unmount,ne=Y.__;function re(e,t){Y.__h&&Y.__h(H,e,V||t),V=0;var n=H.__H||(H.__H={__:[],__h:[]});return e>=n.__.length&&n.__.push({__V:J}),n.__[e]}function oe(e){return V=1,ie(ve,e)}function ie(e,t,n){var r=re(L++,2);if(r.t=e,!r.__c&&(r.__=[n?n(t):ve(void 0,t),function(e){var t=r.__N?r.__N[0]:r.__[0],n=r.t(t,e);t!==n&&(r.__N=[n,r.__[1]],r.__c.setState({}))}],r.__c=H,!H.u)){var o=function(e,t,n){if(!r.__c.__H)return!0;var o=r.__c.__H.__.filter((function(e){return!!e.__c}));if(o.every((function(e){return!e.__N})))return!i||i.call(this,e,t,n);var a=!1;return o.forEach((function(e){if(e.__N){var t=e.__[0];e.__=e.__N,e.__N=void 0,t!==e.__[0]&&(a=!0)}})),!(!a&&r.__c.props===e)&&(!i||i.call(this,e,t,n))};H.u=!0;var i=H.shouldComponentUpdate,a=H.componentWillUpdate;H.componentWillUpdate=function(e,t,n){if(this.__e){var r=i;i=void 0,o(e,t,n),i=r}a&&a.call(this,e,t,n)},H.shouldComponentUpdate=o}return r.__N||r.__}function ae(e,t){var n=re(L++,3);!Y.__s&&me(n.__H,t)&&(n.__=e,n.i=t,H.__H.__h.push(n))}function ce(e,t){var n=re(L++,4);!Y.__s&&me(n.__H,t)&&(n.__=e,n.i=t,H.__h.push(n))}function se(e,t){var n=re(L++,7);return me(n.__H,t)?(n.__V=e(),n.i=t,n.__h=e,n.__V):n.__}function le(){for(var e;e=K.shift();)if(e.__P&&e.__H)try{e.__H.__h.forEach(de),e.__H.__h.forEach(fe),e.__H.__h=[]}catch(t){e.__H.__h=[],Y.__e(t,e.__v)}}Y.__b=function(e){H=null,Q&&Q(e)},Y.__=function(e,t){e&&t.__k&&t.__k.__m&&(e.__m=t.__k.__m),ne&&ne(e,t)},Y.__r=function(e){X&&X(e),L=0;var t=(H=e.__c).__H;t&&(W===H?(t.__h=[],H.__h=[],t.__.forEach((function(e){e.__N&&(e.__=e.__N),e.__V=J,e.__N=e.i=void 0}))):(t.__h.forEach(de),t.__h.forEach(fe),t.__h=[],L=0)),W=H},Y.diffed=function(e){Z&&Z(e);var t=e.__c;t&&t.__H&&(t.__H.__h.length&&(1!==K.push(t)&&G===Y.requestAnimationFrame||((G=Y.requestAnimationFrame)||pe)(le)),t.__H.__.forEach((function(e){e.i&&(e.__H=e.i),e.__V!==J&&(e.__=e.__V),e.i=void 0,e.__V=J}))),W=H=null},Y.__c=function(e,t){t.some((function(e){try{e.__h.forEach(de),e.__h=e.__h.filter((function(e){return!e.__||fe(e)}))}catch(n){t.some((function(e){e.__h&&(e.__h=[])})),t=[],Y.__e(n,e.__v)}})),ee&&ee(e,t)},Y.unmount=function(e){te&&te(e);var t,n=e.__c;n&&n.__H&&(n.__H.__.forEach((function(e){try{de(e)}catch(e){t=e}})),n.__H=void 0,t&&Y.__e(t,n.__v))};var ue="function"==typeof requestAnimationFrame;function pe(e){var t,n=function(){clearTimeout(r),ue&&cancelAnimationFrame(t),setTimeout(e)},r=setTimeout(n,100);ue&&(t=requestAnimationFrame(n))}function de(e){var t=H,n=e.__c;"function"==typeof n&&(e.__c=void 0,n()),H=t}function fe(e){var t=H;e.__c=e.__(),H=t}function me(e,t){return!e||e.length!==t.length||t.some((function(t,n){return t!==e[n]}))}function ve(e,t){return"function"==typeof t?t(e):t}function ye(e,t){for(var n in t)e[n]=t[n];return e}function he(e,t){for(var n in e)if("__source"!==n&&!(n in t))return!0;for(var r in t)if("__source"!==r&&e[r]!==t[r])return!0;return!1}function Ae(e,t){this.props=e,this.context=t}(Ae.prototype=new b).isPureReactComponent=!0,Ae.prototype.shouldComponentUpdate=function(e,t){return he(this.props,e)||he(this.state,t)};var be=t.__b;t.__b=function(e){e.type&&e.type.__f&&e.ref&&(e.props.ref=e.ref,e.ref=null),be&&be(e)};var ge="undefined"!=typeof Symbol&&Symbol.for&&Symbol.for("react.forward_ref")||3911,ke=function(e,t){return null==e?null:O(O(e).map(t))},_e={map:ke,forEach:ke,count:function(e){return e?O(e).length:0},only:function(e){var t=O(e);if(1!==t.length)throw"Children.only";return t[0]},toArray:O},Ce=t.__e;t.__e=function(e,t,n,r){if(e.then)for(var o,i=t;i=i.__;)if((o=i.__c)&&o.__c)return null==t.__e&&(t.__e=n.__e,t.__k=n.__k),o.__c(e,t);Ce(e,t,n,r)};var we=t.unmount;function xe(e,t,n){return e&&(e.__c&&e.__c.__H&&(e.__c.__H.__.forEach((function(e){"function"==typeof e.__c&&e.__c()})),e.__c.__H=null),null!=(e=ye({},e)).__c&&(e.__c.__P===n&&(e.__c.__P=t),e.__c=null),e.__k=e.__k&&e.__k.map((function(e){return xe(e,t,n)}))),e}function Se(e,t,n){return e&&n&&(e.__v=null,e.__k=e.__k&&e.__k.map((function(e){return Se(e,t,n)})),e.__c&&e.__c.__P===t&&(e.__e&&n.appendChild(e.__e),e.__c.__e=!0,e.__c.__P=n)),e}function je(){this.__u=0,this.t=null,this.__b=null}function Oe(e){var t=e.__.__c;return t&&t.__a&&t.__a(e)}function Ee(){this.u=null,this.o=null}t.unmount=function(e){var t=e.__c;t&&t.__R&&t.__R(),t&&32&e.__u&&(e.type=null),we&&we(e)},(je.prototype=new b).__c=function(e,t){var n=t.__c,r=this;null==r.t&&(r.t=[]),r.t.push(n);var o=Oe(r.__v),i=!1,a=function(){i||(i=!0,n.__R=null,o?o(c):c())};n.__R=a;var c=function(){if(! --r.__u){if(r.state.__a){var e=r.state.__a;r.__v.__k[0]=Se(e,e.__c.__P,e.__c.__O)}var t;for(r.setState({__a:r.__b=null});t=r.t.pop();)t.forceUpdate()}};r.__u++||32&t.__u||r.setState({__a:r.__b=r.__v.__k[0]}),e.then(a,a)},je.prototype.componentWillUnmount=function(){this.t=[]},je.prototype.render=function(e,t){if(this.__b){if(this.__v.__k){var n=document.createElement("div"),r=this.__v.__k[0].__c;this.__v.__k[0]=xe(this.__b,n,r.__O=r.__P)}this.__b=null}var o=t.__a&&y(A,null,e.fallback);return o&&(o.__u&=-33),[y(A,null,t.__a?null:e.children),o]};var Pe=function(e,t,n){if(++n[1]===n[0]&&e.o.delete(t),e.props.revealOrder&&("t"!==e.props.revealOrder[0]||!e.o.size))for(n=e.u;n;){for(;n.length>3;)n.pop()();if(n[1]<n[0])break;e.u=n=n[2]}};function ze(e){return this.getChildContext=function(){return e.context},e.children}function Ie(e){var t=this,n=e.i;t.componentWillUnmount=function(){$(null,t.l),t.l=null,t.i=null},t.i&&t.i!==n&&t.componentWillUnmount(),t.l||(t.i=n,t.l={nodeType:1,parentNode:n,childNodes:[],appendChild:function(e){this.childNodes.push(e),t.i.appendChild(e)},insertBefore:function(e,n){this.childNodes.push(e),t.i.appendChild(e)},removeChild:function(e){this.childNodes.splice(this.childNodes.indexOf(e)>>>1,1),t.i.removeChild(e)}}),$(y(ze,{context:t.context},e.__v),t.l)}(Ee.prototype=new b).__a=function(e){var t=this,n=Oe(t.__v),r=t.o.get(e);return r[0]++,function(o){var i=function(){t.props.revealOrder?(r.push(o),Pe(t,e,r)):o()};n?n(i):i()}},Ee.prototype.render=function(e){this.u=null,this.o=new Map;var t=O(e.children);e.revealOrder&&"b"===e.revealOrder[0]&&t.reverse();for(var n=t.length;n--;)this.o.set(t[n],this.u=[1,0,this.u]);return e.children},Ee.prototype.componentDidUpdate=Ee.prototype.componentDidMount=function(){var e=this;this.o.forEach((function(t,n){Pe(e,n,t)}))};var De="undefined"!=typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103,Be=/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image(!S)|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/,Te=/^on(Ani|Tra|Tou|BeforeInp|Compo)/,Ne=/[A-Z0-9]/g,Re="undefined"!=typeof document,Me=function(e){return("undefined"!=typeof Symbol&&"symbol"==typeof Symbol()?/fil|che|rad/:/fil|che|ra/).test(e)};function qe(e,t,n){return null==t.__k&&(t.textContent=""),$(e,t),"function"==typeof n&&n(),e?e.__c:null}b.prototype.isReactComponent={},["componentWillMount","componentWillReceiveProps","componentWillUpdate"].forEach((function(e){Object.defineProperty(b.prototype,e,{configurable:!0,get:function(){return this["UNSAFE_"+e]},set:function(t){Object.defineProperty(this,e,{configurable:!0,writable:!0,value:t})}})}));var $e=t.event;function Ue(){}function Fe(){return this.cancelBubble}function Le(){return this.defaultPrevented}t.event=function(e){return $e&&(e=$e(e)),e.persist=Ue,e.isPropagationStopped=Fe,e.isDefaultPrevented=Le,e.nativeEvent=e};var He,We={enumerable:!1,configurable:!0,get:function(){return this.class}},Ge=t.vnode;t.vnode=function(e){"string"==typeof e.type&&function(e){var t=e.props,n=e.type,r={};for(var o in t){var i=t[o];if(!("value"===o&&"defaultValue"in t&&null==i||Re&&"children"===o&&"noscript"===n||"class"===o||"className"===o)){var a=o.toLowerCase();"defaultValue"===o&&"value"in t&&null==t.value?o="value":"download"===o&&!0===i?i="":"translate"===a&&"no"===i?i=!1:"ondoubleclick"===a?o="ondblclick":"onchange"!==a||"input"!==n&&"textarea"!==n||Me(t.type)?"onfocus"===a?o="onfocusin":"onblur"===a?o="onfocusout":Te.test(o)?o=a:-1===n.indexOf("-")&&Be.test(o)?o=o.replace(Ne,"-$&").toLowerCase():null===i&&(i=void 0):a=o="oninput","oninput"===a&&r[o=a]&&(o="oninputCapture"),r[o]=i}}"select"==n&&r.multiple&&Array.isArray(r.value)&&(r.value=O(t.children).forEach((function(e){e.props.selected=-1!=r.value.indexOf(e.props.value)}))),"select"==n&&null!=r.defaultValue&&(r.value=O(t.children).forEach((function(e){e.props.selected=r.multiple?-1!=r.defaultValue.indexOf(e.props.value):r.defaultValue==e.props.value}))),t.class&&!t.className?(r.class=t.class,Object.defineProperty(r,"className",We)):(t.className&&!t.class||t.class&&t.className)&&(r.class=r.className=t.className),e.props=r}(e),e.$$typeof=De,Ge&&Ge(e)};var Ve=t.__r;t.__r=function(e){Ve&&Ve(e),He=e.__c};var Ke=t.diffed;t.diffed=function(e){Ke&&Ke(e);var t=e.props,n=e.__e;null!=n&&"textarea"===e.type&&"value"in t&&t.value!==n.value&&(n.value=null==t.value?"":t.value),He=null};var Je={ReactCurrentDispatcher:{current:{readContext:function(e){return He.__n[e.__c].props.value}}}};function Ye(e){return!!e&&e.$$typeof===De}function Qe(e){e()}function Xe(e){var t,n,r=e.v,o=e.__;try{var i=r();return!((t=o)===(n=i)&&(0!==t||1/t==1/n)||t!=t&&n!=n)}catch(e){return!0}}var Ze={useState:oe,useId:function(){var e=re(L++,11);if(!e.__){for(var t=H.__v;null!==t&&!t.__m&&null!==t.__;)t=t.__;var n=t.__m||(t.__m=[0,0]);e.__="P"+n[0]+"-"+n[1]++}return e.__},useReducer:ie,useEffect:ae,useLayoutEffect:ce,useInsertionEffect:ce,useTransition:function(){return[!1,Qe]},useDeferredValue:function(e){return e},useSyncExternalStore:function(e,t){var n=t(),r=oe({h:{__:n,v:t}}),o=r[0].h,i=r[1];return ce((function(){o.__=n,o.v=t,Xe(o)&&i({h:o})}),[e,n,t]),ae((function(){return Xe(o)&&i({h:o}),e((function(){Xe(o)&&i({h:o})}))}),[e]),n},startTransition:Qe,useRef:function(e){return V=5,se((function(){return{current:e}}),[])},useImperativeHandle:function(e,t,n){V=6,ce((function(){return"function"==typeof e?(e(t()),function(){return e(null)}):e?(e.current=t(),function(){return e.current=null}):void 0}),null==n?n:n.concat(e))},useMemo:se,useCallback:function(e,t){return V=8,se((function(){return e}),t)},useContext:function(e){var t=H.context[e.__c],n=re(L++,9);return n.c=e,t?(null==n.__&&(n.__=!0,t.sub(H)),t.props.value):e.__},useDebugValue:function(e,t){Y.useDebugValue&&Y.useDebugValue(t?t(e):e)},version:"17.0.2",Children:_e,render:qe,hydrate:function(e,t,n){return U(e,t),"function"==typeof n&&n(),e?e.__c:null},unmountComponentAtNode:function(e){return!!e.__k&&($(null,e),!0)},createPortal:function(e,t){var n=y(Ie,{__v:e,i:t});return n.containerInfo=t,n},createElement:y,createContext:function(e,t){var n={__c:t="__cC"+l++,__:e,Consumer:function(e,t){return e.children(t)},Provider:function(e){var n,r;return this.getChildContext||(n=[],(r={})[t]=this,this.getChildContext=function(){return r},this.shouldComponentUpdate=function(e){this.props.value!==e.value&&n.some((function(e){e.__e=!0,C(e)}))},this.sub=function(e){n.push(e);var t=e.componentWillUnmount;e.componentWillUnmount=function(){n.splice(n.indexOf(e),1),t&&t.call(e)}}),e.children}};return n.Provider.__=n.Consumer.contextType=n},createFactory:function(e){return y.bind(null,e)},cloneElement:function(e){return Ye(e)?F.apply(null,arguments):e},createRef:function(){return{current:null}},Fragment:A,isValidElement:Ye,isElement:Ye,isFragment:function(e){return Ye(e)&&e.type===A},findDOMNode:function(e){return e&&(e.base||1===e.nodeType&&e)||null},Component:b,PureComponent:Ae,memo:function(e,t){function n(e){var n=this.props.ref,r=n==e.ref;return!r&&n&&(n.call?n(null):n.current=null),t?!t(this.props,e)||!r:he(this.props,e)}function r(t){return this.shouldComponentUpdate=n,y(e,t)}return r.displayName="Memo("+(e.displayName||e.name)+")",r.prototype.isReactComponent=!0,r.__f=!0,r},forwardRef:function(e){function t(t){var n=ye({},t);return delete n.ref,e(n,t.ref||null)}return t.$$typeof=ge,t.render=t,t.prototype.isReactComponent=t.__f=!0,t.displayName="ForwardRef("+(e.displayName||e.name)+")",t},flushSync:function(e,t){return e(t)},unstable_batchedUpdates:function(e,t){return e(t)},StrictMode:A,Suspense:je,SuspenseList:Ee,lazy:function(e){var t,n,r;function o(o){if(t||(t=e()).then((function(e){n=e.default||e}),(function(e){r=e})),r)throw r;if(!n)throw t;return y(n,o)}return o.displayName="Lazy",o.__f=!0,o},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:Je},et=(n(6437),n(2697),n(1359),n(6216),n(6448),n(7089),n(2688)),tt=function(e){var t=e.t;return Ze.createElement("svg",{role:"img","aria-label":t(["close"]),width:"12",height:"12",version:"1.1",xmlns:"http://www.w3.org/2000/svg"},Ze.createElement("title",null,t(["close"])),Ze.createElement("line",{x1:"1",y1:"11",x2:"11",y2:"1",strokeWidth:"1"}),Ze.createElement("line",{x1:"1",y1:"1",x2:"11",y2:"11",strokeWidth:"1"}))};function nt(e){return e.split("-").map((function(e){return e.slice(0,1).toUpperCase()+e.slice(1)})).join(" ")}function rt(e){return function(e){if(Array.isArray(e))return ot(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return ot(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ot(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ot(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function it(e){return it="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},it(e)}tt.propTypes={t:n.n(et)().func},n(7575),n(646),n(987),n(3819);var at=function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];var o,i=it(n[0]);o=0===n.length?{}:"string"===i||"number"===i?Array.prototype.slice.call(n):n[0];for(var a=[],c=e.toString();c.length>0;){var s=c.match(/\{(?!\{)([\w\d]+)\}(?!\})/);if(null!==s){var l=c.substr(0,s.index);c=c.substr(s.index+s[0].length);var u=parseInt(s[1]);a.push(l),u!=u?a.push(o[s[1]]):a.push(o[u])}else a.push(c),c=""}return a};function ct(e){if(void 0!==e&&void 0!==e.lang&&"zz"!==e.lang)return e.lang;var t=(("string"==typeof window.language?window.language:null)||document.documentElement.lang||(void 0!==e&&void 0!==e.languages&&void 0!==e.languages[0]?e.languages[0]:"en")).toLowerCase(),n=new RegExp("^([\\w]+)-([\\w]+)$").exec(t);return null===n?t:n[1]}function st(e,t,n){var r=t;Array.isArray(r)||(r=[r]);for(var o=e,i=0;i<r.length;i++){if(void 0===o)return n;if(void 0!==r[i]&&r[i].endsWith("?")){var a,c=r[i].slice(0,r[i].length-1);void 0!==(a=o instanceof Map?o.get(c):o[c])&&"string"==typeof a&&(o=a)}else o=o instanceof Map?o.get(r[i]):o[r[i]]}return void 0===o||"string"!=typeof o?n:""!==o?o:void 0}function lt(e,t,n,r){var o=r,i=!1;"!"===o[0]&&(o=o.slice(1),i=!0),Array.isArray(o)||(o=[o]);var a=st(e,[t].concat(rt(o)));if(void 0===a&&void 0!==n&&(a=st(e,[n].concat(rt(o)))),void 0===a){if(i)return;return["[missing translation: ".concat(t,"/").concat(o.join("/"),"]")]}for(var c=arguments.length,s=new Array(c>4?c-4:0),l=4;l<c;l++)s[l-4]=arguments[l];return s.length>0?at.apply(void 0,[a].concat(s)):a}const ut=function(e){var t=e.text,n=e.config;if(t instanceof Array||(t=[t]),!0===n.htmlTexts){var r=!1;"<"===t[0][0]&&(r=!0);var o=t.map((function(e,t){return"string"==typeof e?Ze.createElement("span",{key:t,dangerouslySetInnerHTML:{__html:e}}):e}));return r?Ze.createElement(Ze.Fragment,null,o):Ze.createElement("span",null,o)}return Ze.createElement("span",null,t)};function pt(e){return pt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},pt(e)}function dt(){return dt=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},dt.apply(this,arguments)}function ft(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,mt(r.key),r)}}function mt(e){var t=function(e,t){if("object"!=pt(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=pt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==pt(t)?t:String(t)}function vt(e,t,n){return t=ht(t),function(e,t){if(t&&("object"===pt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,yt()?Reflect.construct(t,n||[],ht(e).constructor):t.apply(e,n))}function yt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(yt=function(){return!!e})()}function ht(e){return ht=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ht(e)}function At(e,t){return At=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},At(e,t)}var bt=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),vt(this,t,arguments)}var n,r;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&At(e,t)}(t,e),n=t,r=[{key:"render",value:function(){var e,t=this.props,n=t.checked,r=t.onlyRequiredEnabled,o=t.onToggle,i=t.name,a=t.lang,c=t.config,s=t.translations,l=t.title,u=t.description,p=t.visible,d=t.t,f=this.props.required||!1,m=this.props.optOut||!1,v=this.props.purposes||[],y="service-item-".concat(i),h="".concat(y,"-title"),A=v.map((function(e){return d(["!","purposes",e,"title?"])||nt(e)})).join(", "),b=m?Ze.createElement("span",{className:"cm-opt-out",title:d(["service","optOut","description"])},d(["service","optOut","title"])):"",g=f?Ze.createElement("span",{className:"cm-required",title:d(["service","required","description"])},d(["service","required","title"])):"";v.length>0&&(e=Ze.createElement("p",{className:"purposes"},d(["service",v.length>1?"purposes":"purpose"]),": ",A));var k=u||lt(s,a,"zz",["!","description"])||d(["!",i,"description?"]);return Ze.createElement("div",null,Ze.createElement("input",{id:y,className:"cm-list-input"+(f?" required":"")+(r?" half-checked only-required":""),"aria-labelledby":"".concat(h),"aria-describedby":"".concat(y,"-description"),disabled:f,checked:n||f,tabIndex:p?"0":"-1",type:"checkbox",onChange:function(e){o(e.target.checked)}}),Ze.createElement("label",dt({htmlFor:y,className:"cm-list-label"},f?{tabIndex:"0"}:{}),Ze.createElement("span",{className:"cm-list-title",id:"".concat(h)},l||lt(s,a,"zz",["!","title"])||d(["!",i,"title?"])||nt(i)),g,b,Ze.createElement("span",{className:"cm-switch"},Ze.createElement("div",{className:"slider round active"}))),Ze.createElement("div",{id:"".concat(y,"-description")},k&&Ze.createElement("p",{className:"cm-list-description"},Ze.createElement(ut,{config:c,text:k})),e))}}],r&&ft(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}(Ze.Component);function gt(e){return gt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},gt(e)}function kt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,_t(r.key),r)}}function _t(e){var t=function(e,t){if("object"!=gt(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=gt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==gt(t)?t:String(t)}function Ct(e,t,n){return t=xt(t),function(e,t){if(t&&("object"===gt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return St(e)}(e,wt()?Reflect.construct(t,n||[],xt(e).constructor):t.apply(e,n))}function wt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(wt=function(){return!!e})()}function xt(e){return xt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},xt(e)}function St(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function jt(e,t){return jt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},jt(e,t)}function Ot(){return Ot=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Ot.apply(this,arguments)}var Et=function(e){var t=e.services,n=e.config,r=e.consents,o=e.lang,i=e.toggle,a=e.visible,c=e.t;return t.map((function(e){var t=r[e.name];return Ze.createElement("li",{key:e.name,className:"cm-service"},Ze.createElement(bt,Ot({checked:t||e.required,onToggle:function(t){i([e],t)},config:n,lang:o,visible:a,t:c},e)))}))},Pt=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=Ct(this,t,[e]),e.manager.watch(St(n)),n.state={consents:e.manager.consents},n}var n,r;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&jt(e,t)}(t,e),n=t,(r=[{key:"componentWillUnmount",value:function(){this.props.manager.unwatch(this)}},{key:"update",value:function(e,t,n){e===this.props.manager&&"consents"===t&&this.setState({consents:n})}},{key:"render",value:function(){var e=this.props,t=e.config,n=e.t,r=e.manager,o=e.lang,i=this.state.consents,a=t.services,c=function(e,t){e.map((function(e){e.required||r.updateConsent(e.name,t)}))},s=Ze.createElement(Et,{config:t,lang:o,services:a,t:n,consents:i,toggle:c}),l=a.filter((function(e){return!e.required})),u=l.filter((function(e){return i[e.name]})).length,p=a.filter((function(e){return e.required})).length,d=u===l.length;return a.filter((function(e){return e.required})).length,Ze.createElement("ul",{className:"cm-services"},s,!t.hideToggleAll&&l.length>1&&Ze.createElement("li",{className:"cm-service cm-toggle-all"},Ze.createElement(bt,{name:"disableAll",title:n(["service","disableAll","title"]),description:n(["service","disableAll","description"]),checked:d,config:t,onlyRequiredEnabled:!d&&p>0,onToggle:function(e){c(a,e)},lang:o,t:n})))}}])&&kt(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}(Ze.Component);function zt(e){return zt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},zt(e)}function It(){return It=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},It.apply(this,arguments)}function Dt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Bt(r.key),r)}}function Bt(e){var t=function(e,t){if("object"!=zt(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=zt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==zt(t)?t:String(t)}function Tt(e,t,n){return t=Rt(t),function(e,t){if(t&&("object"===zt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,Nt()?Reflect.construct(t,n||[],Rt(e).constructor):t.apply(e,n))}function Nt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Nt=function(){return!!e})()}function Rt(e){return Rt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Rt(e)}function Mt(e,t){return Mt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Mt(e,t)}var qt=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=Tt(this,t,[e])).state={servicesVisible:!1},n}var n,r;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Mt(e,t)}(t,e),n=t,r=[{key:"render",value:function(){var e,t=this,n=this.props,r=n.allEnabled,o=n.onlyRequiredEnabled,i=n.allDisabled,a=n.services,c=n.config,s=n.onToggle,l=n.name,u=n.lang,p=n.manager,d=n.consents,f=n.title,m=n.description,v=n.t,y=this.state.servicesVisible,h=this.props.required||!1,A=this.props.purposes||[],b="purpose-item-".concat(l),g="".concat(b,"-title"),k=A.map((function(e){return v(["!","purposes",e,"title?"])||nt(e)})).join(", "),_=h?Ze.createElement("span",{className:"cm-required",title:v(["!","service","required","description"])||""},v(["service","required","title"])):"";A.length>0&&(e=Ze.createElement("p",{className:"purposes"},v(["purpose",A.length>1?"purposes":"purpose"]),": ",k));var C=function(e){e.preventDefault();var n="false"!==e.currentTarget.getAttribute("aria-expanded");e.currentTarget.setAttribute("aria-expanded",!n),t.setState({servicesVisible:!y})},w=Ze.createElement(Et,{config:c,lang:u,services:a,toggle:function(e,t){e.map((function(e){e.required||p.updateConsent(e.name,t)}))},consents:d,visible:y,t:v}),x=m||v(["!","purposes",l,"description"]);return Ze.createElement(Ze.Fragment,null,Ze.createElement("input",{id:b,className:"cm-list-input"+(h?" required":"")+(r?"":o?" only-required":" half-checked"),"aria-labelledby":"".concat(g),"aria-describedby":"".concat(b,"-description"),disabled:h,checked:r||!i&&!o,type:"checkbox",onChange:function(e){s(e.target.checked)}}),Ze.createElement("label",It({htmlFor:b,className:"cm-list-label"},h?{tabIndex:"0"}:{}),Ze.createElement("span",{className:"cm-list-title",id:"".concat(g)},f||v(["!","purposes",l,"title?"])||nt(l)),_,Ze.createElement("span",{className:"cm-switch"},Ze.createElement("div",{className:"slider round active"}))),Ze.createElement("div",{id:"".concat(b,"-description")},x&&Ze.createElement("p",{className:"cm-list-description"},Ze.createElement(ut,{config:c,text:x})),e),a.length>0&&Ze.createElement("div",{className:"cm-services"},Ze.createElement("div",{className:"cm-caret"},Ze.createElement("a",{href:"#","aria-haspopup":"true","aria-expanded":"false",tabIndex:"0",onClick:C,onKeyDown:function(e){32===e.keyCode&&C(e)}},y&&Ze.createElement("span",null,"↑")||Ze.createElement("span",null,"↓")," ",a.length," ",v(["purposeItem",a.length>1?"services":"service"]))),Ze.createElement("ul",{className:"cm-content"+(y?" expanded":"")},w)))}}],r&&Dt(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}(Ze.Component);function $t(e){return $t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},$t(e)}function Ut(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return Ft(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Ft(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,c=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){c=!0,i=e},f:function(){try{a||null==n.return||n.return()}finally{if(c)throw i}}}}function Ft(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function Lt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Ht(r.key),r)}}function Ht(e){var t=function(e,t){if("object"!=$t(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=$t(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==$t(t)?t:String(t)}function Wt(e,t,n){return t=Vt(t),function(e,t){if(t&&("object"===$t(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Kt(e)}(e,Gt()?Reflect.construct(t,n||[],Vt(e).constructor):t.apply(e,n))}function Gt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Gt=function(){return!!e})()}function Vt(e){return Vt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Vt(e)}function Kt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Jt(e,t){return Jt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Jt(e,t)}var Yt=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=Wt(this,t,[e]),e.manager.watch(Kt(n)),n.state={consents:e.manager.consents},n}var n,r;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Jt(e,t)}(t,e),n=t,r=[{key:"componentWillUnmount",value:function(){this.props.manager.unwatch(this)}},{key:"update",value:function(e,t,n){e===this.props.manager&&"consents"===t&&this.setState({consents:n})}},{key:"render",value:function(){var e,t=this.props,n=t.config,r=t.t,o=t.manager,i=t.lang,a=this.state.consents,c=n.services,s={},l=Ut(c);try{for(l.s();!(e=l.n()).done;){var u,p=e.value,d=Ut(p.purposes);try{for(d.s();!(u=d.n()).done;){var f=u.value;void 0===s[f]&&(s[f]=[]),s[f].push(p)}}catch(e){d.e(e)}finally{d.f()}}}catch(e){l.e(e)}finally{l.f()}var m=function(e,t){e.map((function(e){var n,r=Ut(s[e]);try{for(r.s();!(n=r.n()).done;){var i=n.value;i.required||o.updateConsent(i.name,t)}}catch(e){r.e(e)}finally{r.f()}}))},v=function(e){var t,n={allEnabled:!0,onlyRequiredEnabled:!0,allDisabled:!0,allRequired:!0},r=Ut(e);try{for(r.s();!(t=r.n()).done;){var o=t.value;o.required||(n.allRequired=!1),a[o.name]?(o.required||(n.onlyRequiredEnabled=!1),n.allDisabled=!1):o.required||(n.allEnabled=!1)}}catch(e){r.e(e)}finally{r.f()}return n.allDisabled&&(n.onlyRequiredEnabled=!1),n},y=n.purposeOrder||[],h=Object.keys(s).sort((function(e,t){return y.indexOf(e)-y.indexOf(t)})).map((function(e){var t=v(s[e]);return Ze.createElement("li",{key:e,className:"cm-purpose"},Ze.createElement(qt,{allEnabled:t.allEnabled,allDisabled:t.allDisabled,onlyRequiredEnabled:t.onlyRequiredEnabled,required:t.allRequired,consents:a,name:e,config:n,lang:i,manager:o,onToggle:function(t){m([e],t)},services:s[e],t:r}))})),A=Object.keys(s).filter((function(e){var t,n=Ut(s[e]);try{for(n.s();!(t=n.n()).done;)if(!t.value.required)return!0}catch(e){n.e(e)}finally{n.f()}return!1})),b=v(c);return Ze.createElement("ul",{className:"cm-purposes"},h,A.length>1&&Ze.createElement("li",{className:"cm-purpose cm-toggle-all"},Ze.createElement(qt,{name:"disableAll",title:r(["service","disableAll","title"]),description:r(["service","disableAll","description"]),allDisabled:b.allDisabled,allEnabled:b.allEnabled,onlyRequiredEnabled:b.onlyRequiredEnabled,onToggle:function(e){m(Object.keys(s),e)},manager:o,consents:a,config:n,lang:i,services:[],t:r})))}}],r&&Lt(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}(Ze.Component);function Qt(e){return Qt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Qt(e)}function Xt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Zt(r.key),r)}}function Zt(e){var t=function(e,t){if("object"!=Qt(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=Qt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Qt(t)?t:String(t)}function en(e,t,n){return t=nn(t),function(e,t){if(t&&("object"===Qt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,tn()?Reflect.construct(t,n||[],nn(e).constructor):t.apply(e,n))}function tn(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(tn=function(){return!!e})()}function nn(e){return nn=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},nn(e)}function rn(e,t){return rn=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},rn(e,t)}var on=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),en(this,t,arguments)}var n,r;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&rn(e,t)}(t,e),n=t,(r=[{key:"componentDidMount",value:function(){this.consentModalRef&&this.consentModalRef.focus()}},{key:"render",value:function(){var e,t,n,r=this,o=this.props,i=o.hide,a=o.confirming,c=o.saveAndHide,s=o.acceptAndHide,l=o.declineAndHide,u=o.config,p=o.manager,d=o.lang,f=o.t,m=u.embedded,v=void 0===u.groupByPurpose||u.groupByPurpose;u.mustConsent||(e=Ze.createElement("button",{title:f(["close"]),"aria-label":f(["close"]),className:"hide",type:"button",onClick:i,tabIndex:"0",ref:function(e){r.consentModalRef=e}},Ze.createElement(tt,{t:f}))),u.hideDeclineAll||p.confirmed||(t=Ze.createElement("button",{disabled:a,className:"cm-btn cm-btn-decline cm-btn-danger cn-decline",type:"button",onClick:l},f(["decline"])));var y,h,A,b=Ze.createElement("button",{disabled:a,className:"cm-btn cm-btn-success cm-btn-info cm-btn-accept",type:"button",onClick:c},f([p.confirmed?"save":"acceptSelected"]));u.acceptAll&&!p.confirmed&&(n=Ze.createElement("button",{disabled:a,className:"cm-btn cm-btn-success cm-btn-accept-all",type:"button",onClick:s},f(["acceptAll"]))),void 0!==u.privacyPolicy?"string"==typeof u.privacyPolicy?y=u.privacyPolicy:"object"===Qt(u.privacyPolicy)&&(y=u.privacyPolicy[d]||u.privacyPolicy.default):void 0!==(y=f(["!","privacyPolicyUrl"],{lang:d}))&&(y=y.join("")),void 0!==y&&(h=Ze.createElement("a",{key:"ppLink",href:y,target:"_blank",rel:"noopener"},f(["privacyPolicy","name"]))),A=v?Ze.createElement(Yt,{t:f,config:u,manager:p,lang:d}):Ze.createElement(Pt,{t:f,config:u,manager:p,lang:d});var g=Ze.createElement("div",{className:"cm-modal cm-klaro"},Ze.createElement("div",{className:"cm-header"},e,Ze.createElement("h1",{className:"title"},Ze.createElement(ut,{config:u,text:f(["consentModal","title"])})),Ze.createElement("p",null,Ze.createElement(ut,{config:u,text:[f(["consentModal","description"])].concat(h&&[" "].concat(f(["privacyPolicy","text"],{privacyPolicy:h}))||[])}))),Ze.createElement("div",{className:"cm-body"},A),Ze.createElement("div",{className:"cm-footer"},Ze.createElement("div",{className:"cm-footer-buttons"},t,b,n),!u.disablePoweredBy&&Ze.createElement("p",{className:"cm-powered-by"},Ze.createElement("a",{target:"_blank",href:u.poweredBy||"https://kiprotect.com/klaro",rel:"noopener"},f(["poweredBy"])))));return m?Ze.createElement("div",{id:"cookieScreen",className:"cookie-modal cm-embedded"},g):Ze.createElement("div",{id:"cookieScreen",className:"cookie-modal"},Ze.createElement("div",{className:"cm-bg",onClick:i}),g)}}])&&Xt(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}(Ze.Component);function an(e){return an="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},an(e)}function cn(e,t,n){void 0===n&&(n=!0);for(var r=Object.keys(t),o=0;o<r.length;o++){var i=r[o],a=t[i],c=e[i];"string"==typeof a?(n||void 0===c)&&(e[i]=a):"object"===an(a)&&("object"===an(c)?cn(c,a,n):(n||void 0===c)&&(e[i]=a))}return e}function sn(e){return sn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},sn(e)}function ln(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function un(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,hn(r.key),r)}}function pn(e,t,n){return t=fn(t),function(e,t){if(t&&("object"===sn(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return mn(e)}(e,dn()?Reflect.construct(t,n||[],fn(e).constructor):t.apply(e,n))}function dn(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(dn=function(){return!!e})()}function fn(e){return fn=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},fn(e)}function mn(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function vn(e,t){return vn=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},vn(e,t)}function yn(e,t,n){return(t=hn(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function hn(e){var t=function(e,t){if("object"!=sn(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=sn(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==sn(t)?t:String(t)}n(2745);var An=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),yn(mn(n=pn(this,t,[e])),"executeButtonClicked",(function(e,t,r){var o=n.state.modal,i=0;e&&(i=n.props.manager.changeAll(t));var a=n.props.manager.confirmed;if(n.props.manager.saveAndApplyConsents(r),e&&!a&&(o||n.props.config.mustConsent)){var c=function(){n.setState({confirming:!1}),n.props.hide()};n.setState({confirming:!0}),0===i?c():setTimeout(c,800)}else n.props.hide()})),yn(mn(n),"saveAndHide",(function(){n.executeButtonClicked(!1,!1,"save")})),yn(mn(n),"acceptAndHide",(function(){n.executeButtonClicked(!0,!0,"accept")})),yn(mn(n),"declineAndHide",(function(){n.executeButtonClicked(!0,!1,"decline")})),n.state={modal:e.modal,confirming:!1},n}var n,r;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&vn(e,t)}(t,e),n=t,r=[{key:"componentDidUpdate",value:function(e){e.modal!==this.props.modal&&this.setState({modal:this.props.modal}),this.noticeRef&&this.noticeRef.focus()}},{key:"render",value:function(){var e,t,n,r=this,o=this.props,i=o.lang,a=o.config,c=o.show,s=o.manager,l=o.testing,u=o.t,p=this.state,d=p.confirming,f=p.modal,m=a.embedded,v=a.noticeAsModal,y=a.hideLearnMore,h=a.purposeOrder||[],A=function(e){for(var t=new Set([]),n=0;n<e.services.length;n++)for(var r=e.services[n].purposes||[],o=0;o<r.length;o++)t.add(r[o]);return Array.from(t)}(a).filter((function(e){return"functional"!==e})).sort((function(e,t){return h.indexOf(e)-h.indexOf(t)})),b=A.map((function(e){return u(["!","purposes",e,"title?"])||nt(e)}));t=1===b.length?b[0]:[].concat((n=b.slice(0,-2),function(e){if(Array.isArray(e))return ln(e)}(n)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(n)||function(e,t){if(e){if("string"==typeof e)return ln(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ln(e,t):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),[b.slice(-2).join(" & ")]).join(", "),void 0!==a.privacyPolicy?"string"==typeof a.privacyPolicy?e=a.privacyPolicy:"object"===sn(a.privacyPolicy)&&(e=a.privacyPolicy[i]||a.privacyPolicy.default):void 0!==(e=u(["!","privacyPolicyUrl"],{lang:i}))&&(e=e.join(""));var g,k=function(e){e.preventDefault(),r.setState({modal:!0})};if(s.changed&&(g=Ze.createElement("p",{className:"cn-changes"},u(["consentNotice","changeDescription"]))),!c&&!l&&!d)return Ze.createElement("div",null);var _,C=(!a.mustConsent||v)&&!s.confirmed&&!a.noNotice,w=a.hideDeclineAll?"":Ze.createElement("button",{className:"cm-btn cm-btn-danger cn-decline",type:"button",onClick:this.declineAndHide},u(["decline"])),x=a.acceptAll?Ze.createElement("button",{className:"cm-btn cm-btn-success",type:"button",onClick:this.acceptAndHide},u(["ok"])):Ze.createElement("button",{className:"cm-btn cm-btn-success",type:"button",onClick:this.saveAndHide},u(["ok"])),S=function(){return v?Ze.createElement("button",{key:"learnMoreLink",className:"cm-btn cm-btn-lern-more cm-btn-info",type:"button",onClick:k},u(["consentNotice","learnMore"])):Ze.createElement("a",{key:"learnMoreLink",className:"cm-link cn-learn-more",href:"#",onClick:k},u(["consentNotice","learnMore"]))};if(void 0!==e&&(_=Ze.createElement("a",{key:"ppLink",href:e},u(["privacyPolicy","name"]))),f||s.confirmed&&!l||!s.confirmed&&a.mustConsent)return Ze.createElement(on,{t:u,lang:i,config:a,hide:function(){a.mustConsent&&!a.acceptAll||(s.confirmed&&!l?r.props.hide():r.setState({modal:!1}),setTimeout((function(){r.noticeRef&&r.noticeRef.focus()}),1))},confirming:d,declineAndHide:this.declineAndHide,saveAndHide:this.saveAndHide,acceptAndHide:this.acceptAndHide,manager:s});var j=Ze.createElement("div",{role:"dialog","aria-describedby":"id-cookie-notice","aria-labelledby":"id-cookie-title",id:"klaro-cookie-notice",tabIndex:"0",autoFocus:!0,ref:function(e){r.noticeRef=e},className:"cookie-notice ".concat(C||l?"":"cookie-notice-hidden"," ").concat(v?"cookie-modal-notice":""," ").concat(m?"cn-embedded":"")},Ze.createElement("div",{className:"cn-body"},u(["!","consentNotice","title"])&&Ze.createElement("h2",{id:"id-cookie-title"},u(["consentNotice","title"])),Ze.createElement("p",{id:"id-cookie-notice"},Ze.createElement(ut,{config:a,text:u(["consentNotice","description"],{purposes:Ze.createElement("strong",{key:"strong"},t),privacyPolicy:_,learnMoreLink:S()})})),l&&Ze.createElement("p",null,u(["consentNotice","testing"])),g,Ze.createElement("div",{className:"cn-ok"},!y&&S(),Ze.createElement("div",{className:"cn-buttons"},w,x))));return v?Ze.createElement("div",{id:"cookieScreen",className:"cookie-modal"},Ze.createElement("div",{className:"cm-bg"}),j):j}}],r&&un(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}(Ze.Component);function bn(e){return bn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},bn(e)}function gn(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,kn(r.key),r)}}function kn(e){var t=function(e,t){if("object"!=bn(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=bn(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==bn(t)?t:String(t)}function _n(e,t,n){return t=wn(t),function(e,t){if(t&&("object"===bn(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return xn(e)}(e,Cn()?Reflect.construct(t,n||[],wn(e).constructor):t.apply(e,n))}function Cn(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Cn=function(){return!!e})()}function wn(e){return wn=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},wn(e)}function xn(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Sn(e,t){return Sn=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Sn(e,t)}var jn=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=_n(this,t,[e]),e.manager.watch(xn(n)),n.state={show:e.show>0||!e.manager.confirmed},n}var n,r;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Sn(e,t)}(t,e),n=t,r=[{key:"componentWillUnmount",value:function(){this.props.manager.unwatch(this)}},{key:"update",value:function(e,t){e===this.props.manager&&"applyConsents"===t&&(!this.props.config.embedded&&this.props.manager.confirmed?this.setState({show:!1}):this.forceUpdate())}},{key:"notifyApi",value:function(){var e=this.props,t=e.api,n=e.modal,r=e.show,o=e.config;if(void 0!==t){if(n||r>0)return;this.props.manager.confirmed||this.props.manager.auxiliaryStore.getWithKey("shown-before")||(t.update(this,"showNotice",{config:o}),this.props.manager.auxiliaryStore.setWithKey("shown-before",!0))}}},{key:"componentDidMount",value:function(){this.notifyApi()}},{key:"componentDidUpdate",value:function(e){if(e.show!==this.props.show){this.notifyApi();var t=this.props.show>0||!this.props.manager.confirmed;t!==this.state.show&&this.setState({show:t})}}},{key:"render",value:function(){var e=this,t=this.props,n=t.config,r=t.t,o=t.lang,i=t.testing,a=t.manager,c=t.modal,s=this.state.show,l=n.additionalClass,u=n.embedded,p=n.stylePrefix;return Ze.createElement("div",{lang:o,className:(p||"klaro")+(void 0!==l?" "+l:"")},Ze.createElement(An,{key:"app-"+this.props.show,t:r,testing:i,show:s,lang:o,modal:c,hide:function(){u||e.setState({show:!1})},config:n,manager:a}))}}],r&&gn(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}(Ze.Component);function On(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const En=function(e){var t=e.manager,n=e.style,r=e.config,o=e.t,i=e.lang,a=e.service,c=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i,a,c=[],s=!0,l=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=i.call(n)).done)&&(c.push(r.value),c.length!==t);s=!0);}catch(e){l=!0,o=e}finally{try{if(!s&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return c}}(e,t)||function(e,t){if(e){if("string"==typeof e)return On(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?On(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(oe(0),2),s=c[0],l=c[1],u=r.additionalClass,p=(r.embedded,r.stylePrefix);ae((function(){var e={update:function(){return l(s+1)}};return t.watch(e),function(){t.unwatch(e)}}));var d=lt(a.translations||{},i,"zz",["!","title"])||o(["!",a.name,"title?"])||nt(a.name);return Ze.createElement("div",{lang:i,className:(p||"klaro")+(void 0!==u?" "+u:"")+" cm-as-context-notice"},Ze.createElement("div",{className:"context-notice"+(void 0!==n?" cm-".concat(n):"")},Ze.createElement("p",null,o(["contextualConsent","description"],{title:d})),Ze.createElement("p",{className:"cm-buttons"},Ze.createElement("button",{className:"cm-btn cm-btn-success",type:"button",onClick:function(){t.updateConsent(a.name,!0),t.applyConsents(!1,!0,a.name),t.updateConsent(a.name,!1)}},o(["contextualConsent","acceptOnce"])),null!==t.store.get()?Ze.createElement("button",{className:"cm-btn cm-btn-success-var",type:"button",onClick:function(){t.updateConsent(a.name,!0),t.confirmed?(t.saveConsents("contextual-accept"),t.applyConsents(!1,!0,a.name)):t.applyConsents(!1,!0,a.name)}},o(["contextualConsent","acceptAlways"])):""),null===t.store.get()&&r.showDescriptionEmptyStore?Ze.createElement(Ze.Fragment,null,Ze.createElement("p",{className:"ccn-description-empty-store"},o(["contextualConsent","descriptionEmptyStore"],{title:d,link:Ze.createElement("a",{key:"modalLink",className:"ccn-modal-link",href:"#",onClick:function(e){e.preventDefault(),Sr(r,!0)}},o(["contextualConsent","modalLinkText"]))}))):""))};var Pn=n(2690);function zn(e){return zn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},zn(e)}function In(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Dn(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?In(Object(n),!0).forEach((function(t){var r,o,i;r=e,o=t,i=n[t],(o=Tn(o))in r?Object.defineProperty(r,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):r[o]=i})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):In(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Bn(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Tn(r.key),r)}}function Tn(e){var t=function(e,t){if("object"!=zn(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=zn(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==zn(t)?t:String(t)}n(76);var Nn=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.url=t,this.id=n,this.opts=Object.assign({},r)}var t,n;return t=e,(n=[{key:"getLocationData",value:function(e){var t=e.records||{};return{pathname:void 0===t.savePathname||t.savePathname?location.pathname:void 0,port:""!==location.port?parseInt(location.port):0,hostname:location.hostname,protocol:location.protocol.slice(0,location.protocol.length-1)}}},{key:"getUserData",value:function(){return{client_version:Pr(),client_name:"klaro:web"}}},{key:"getBaseConsentData",value:function(e){return{location_data:this.getLocationData(e),user_data:this.getUserData(e)}}},{key:"update",value:function(e,t,n){if("saveConsents"===t){if("save"===n.type&&0===Object.keys(n.changes).length)return;var r=Dn(Dn({},this.getBaseConsentData(e.config)),{},{consent_data:{consents:n.consents,changes:"save"===n.type?n.changes:void 0,type:n.type,config:e.config.id}});this.submitConsentData(r)}else if("showNotice"===t){var o=Dn(Dn({},this.getBaseConsentData(n.config)),{},{consent_data:{consents:{},changes:{},type:"show",config:n.config.id}});this.submitConsentData(o)}}},{key:"apiRequest",value:function(e,t,n,r){var o=this;return new Promise((function(i,a){var c,s,l=new XMLHttpRequest;l.addEventListener("load",(function(){var e=JSON.parse(l.response);l.status<200||l.status>=300?(e.status=l.status,a(e)):i(e,l.status)})),l.addEventListener("error",(function(){a({status:0,xhr:l})})),void 0!==n&&("GET"===e?t+="?"+(s=n,"?"+Object.keys(s).map((function(e){return e+"="+encodeURIComponent(s[e])})).join("&")):c=JSON.stringify(n)),l.open(e,o.url+t),void 0!==c&&l.setRequestHeader("Content-Type",r||"application/json;charset=UTF-8"),l.send(c)}))}},{key:"submitConsentData",value:function(e){return this.apiRequest("POST","/v1/privacy-managers/"+this.id+"/submit",e,"text/plain;charset=UTF-8")}},{key:"loadConfig",value:function(e){return this.apiRequest("GET","/v1/privacy-managers/"+this.id+"/config.json?name="+e+(this.opts.testing?"&testing=true":""))}},{key:"loadConfigs",value:function(){return this.apiRequest("GET","/v1/privacy-managers/"+this.id+"/configs.json"+(this.opts.testing?"&testing=true":""))}}])&&Bn(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),Rn=(n(7132),n(4062),n(5482));function Mn(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i,a,c=[],s=!0,l=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=i.call(n)).done)&&(c.push(r.value),c.length!==t);s=!0);}catch(e){l=!0,o=e}finally{try{if(!s&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return c}}(e,t)||qn(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function qn(e,t){if(e){if("string"==typeof e)return $n(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?$n(e,t):void 0}}function $n(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function Un(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function Fn(e){for(var t=new Map([]),n=0,r=Object.keys(e);n<r.length;n++){var o=r[n],i=e[o];"string"==typeof o&&("string"==typeof i||null===i?t.set(o,i):t.set(o,Fn(i)))}return t}function Ln(e,t,n,r){var o=function(e,t,n){if(n instanceof Map){var r=new Map([]);Ln(r,n,!0,!1),e.set(t,r)}else e.set(t,n)};if(!(t instanceof Map&&e instanceof Map))throw new Error("Parameters are not maps!");void 0===n&&(n=!0),void 0===r&&(r=!1),r&&(e=new e.constructor(e));var i,a=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return Un(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Un(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,c=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){c=!0,i=e},f:function(){try{a||null==n.return||n.return()}finally{if(c)throw i}}}}(t.keys());try{for(a.s();!(i=a.n()).done;){var c=i.value,s=t.get(c),l=e.get(c);if(e.has(c))if(s instanceof Map&&l instanceof Map)e.set(c,Ln(l,s,n,r));else{if(!n)continue;o(e,c,s)}else o(e,c,s)}}catch(e){a.e(e)}finally{a.f()}return e}var Hn={top:{_meta:{incompatibleWith:["bottom"]},"notice-top":"20px","notice-bottom":"auto"},bottom:{_meta:{incompatibleWith:["top"]},"notice-bottom":"20px","notice-top":"auto"},left:{_meta:{incompatibleWith:["wide"]},"notice-left":"20px","notice-right":"auto"},right:{_meta:{incompatibleWith:["wide"]},"notice-right":"20px","notice-left":"auto"},wide:{"notice-left":"20px","notice-right":"auto","notice-max-width":"calc(100vw - 60px)","notice-position":"fixed"},light:{"button-text-color":"#fff",dark1:"#fafafa",dark2:"#777",dark3:"#555",light1:"#444",light2:"#666",light3:"#111",green3:"#f00"}},Wn=n(5292),Gn=n.n(Wn),Vn=n(9893),Kn=n.n(Vn),Jn=n(9383),Yn=n.n(Jn),Qn=n(6884),Xn=n.n(Qn),Zn=n(9088),er=n.n(Zn),tr=n(7997),nr=n.n(tr),rr=n(679),or={};function ir(e){return ir="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ir(e)}function ar(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function cr(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?ar(Object(n),!0).forEach((function(t){var r,o,i;r=e,o=t,i=n[t],o=function(e){var t=function(e,t){if("object"!=ir(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=ir(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==ir(t)?t:String(t)}(o),o in r?Object.defineProperty(r,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):r[o]=i})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ar(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function sr(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=lr(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,c=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){c=!0,i=e},f:function(){try{a||null==n.return||n.return()}finally{if(c)throw i}}}}function lr(e,t){if(e){if("string"==typeof e)return ur(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ur(e,t):void 0}}function ur(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}or.styleTagTransform=nr(),or.setAttributes=Xn(),or.insert=Yn().bind(null,"head"),or.domAPI=Kn(),or.insertStyleElement=er(),Gn()(rr.A,or),rr.A&&rr.A.locals&&rr.A.locals;var pr,dr=new Map([]),fr={},mr={};function vr(e,t){return(e.elementID||"klaro")+(t?"-ide":"")}function yr(e,t){var n=vr(e,t),r=document.getElementById(n);return null===r&&((r=document.createElement("div")).id=n,document.body.appendChild(r)),r}function hr(e,t){if(void 0===fr[e]?fr[e]=[t]:fr[e].push(t),void 0!==mr[e]){var n,r=sr(mr[e]);try{for(r.s();!(n=r.n()).done;){var o=n.value;if(!1===t.apply(void 0,function(e){if(Array.isArray(e))return ur(e)}(i=o)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(i)||lr(i)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()))break}}catch(e){r.e(e)}finally{r.f()}}var i}function Ar(e){for(var t=fr[e],n=arguments.length,r=new Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];if(void 0===mr[e]?mr[e]=[r]:mr[e].push(r),void 0!==t){var i,a=sr(t);try{for(a.s();!(i=a.n()).done;)if(!0===i.value.apply(void 0,r))return!0}catch(e){a.e(e)}finally{a.f()}}}function br(e){var t=new Map([]);return Ln(t,dr),Ln(t,Fn(e.translations||{})),t}var gr=1;function kr(e,t){if(void 0!==e){t=t||{},Ar("render",e=wr(e),t);var n=0;t.show&&(n=gr++);var r=yr(e),o=Er(e);void 0!==t.api&&o.watch(t.api),function(e,t,n){if(void 0!==e.styling){var r=Object.assign({},e.styling);if(void 0!==r.theme){var o=r.theme;o instanceof Array||(o=[o]),r={};var i,a=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=qn(e))){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,c=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){c=!0,i=e},f:function(){try{a||null==n.return||n.return()}finally{if(c)throw i}}}}(o);try{for(a.s();!(i=a.n()).done;){var c=t[i.value];if(void 0!==c)for(var s=0,l=Object.entries(c);s<l.length;s++){var u=Mn(l[s],2),p=u[0],d=u[1];p.startsWith("_")||(r[p]=d)}}}catch(e){a.e(e)}finally{a.f()}for(var f=0,m=Object.entries(e.styling);f<m.length;f++){var v=Mn(m[f],2),y=v[0],h=v[1];"theme"!==y&&(r[y]=h)}}void 0===n&&(n=document.documentElement);for(var A=0,b=Object.entries(r);A<b.length;A++){var g=Mn(b[A],2),k=g[0],_=g[1];n.style.setProperty("--"+k,_)}window.document.documentMode&&n===document.documentElement&&(0,Rn.N3)(r)}}(e,Hn,r);var i=ct(e),a=br(e),c=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return lt.apply(void 0,[a,i,e.fallbackLang||"zz"].concat(n))},s=qe(Ze.createElement(jn,{t:c,lang:i,manager:o,config:e,testing:t.testing,modal:t.modal,api:t.api,show:n}),r);return _r(o,c,i,e,t),s}}function _r(e,t,n,r,o){var i,a=[],c=sr(r.services);try{for(c.s();!(i=c.n()).done;){var s,l=i.value,u=e.getConsent(l.name)&&e.confirmed,p=sr(document.querySelectorAll("[data-name='"+l.name+"']"));try{for(p.s();!(s=p.n()).done;){var d=s.value,f=(0,Rn.RT)(d);if("placeholder"!==f.type&&("IFRAME"===d.tagName||"DIV"===d.tagName)){var m=d.previousElementSibling;if(null!==m){var v=(0,Rn.RT)(m);"placeholder"===v.type&&v.name===l.name||(m=null)}if(null===m){(m=document.createElement("DIV")).style.maxWidth=d.width+"px",m.style.height=d.height+"px",(0,Rn.X7)({type:"placeholder",name:l.name},m),u&&(m.style.display="none"),d.parentElement.insertBefore(m,d);var y=qe(Ze.createElement(En,{t,lang:n,manager:e,config:r,service:l,style:f.style,testing:o.testing,api:o.api}),m);a.push(y)}"IFRAME"===d.tagName&&(f.src=d.src),void 0===f["modified-by-klaro"]&&void 0===d.style.display&&(f["original-display"]=d.style.display),f["modified-by-klaro"]="yes",(0,Rn.X7)(f,d),u||(d.src="",d.style.display="none")}}}catch(e){p.e(e)}finally{p.f()}}}catch(e){c.e(e)}finally{c.f()}return a}function Cr(e){/complete|interactive|loaded/.test(document.readyState)?e():window.addEventListener("DOMContentLoaded",e)}function wr(e){var t=cr({},e);return 2===t.version||(void 0!==t.apps&&void 0===t.services&&(t.services=t.apps,console.warn("Warning, your configuration file is outdated. Please change `apps` to `services`"),delete t.apps),void 0!==t.translations&&void 0!==t.translations.apps&&void 0===t.services&&(t.translations.services=t.translations.apps,console.warn("Warning, your configuration file is outdated. Please change `apps` to `services` in the `translations` key"),delete t.translations.apps)),t}function xr(e){if(void 0!==window){var t=(0,Rn.XZ)("klaro"),n=new Map(decodeURI(location.hash.slice(1)).split("&").map((function(e){return e.split("=")})).map((function(e){return 1===e.length?[e[0],!0]:e}))),r=n.get("klaro-testing"),o=function(e){var t=cr(cr({},e),{},{testing:r});pr.noAutoLoad||pr.testing&&!t.testing||kr(pr,t)};if(void 0!==e)pr=e,Cr((function(){return o({})}));else if(null!==t){var i=function(e){var t=e.getAttribute("data-klaro-id");if(null!==t)return t;var n=/.*\/privacy-managers\/([a-f0-9]+)\/klaro.*\.js/.exec(e.src);return null!==n?n[1]:null}(t),a=function(e){var t=e.getAttribute("data-klaro-api-url");if(null!==t)return t;var n=/(http(?:s)?:\/\/[^/]+)\/v1\/privacy-managers\/([a-f0-9]+)\/klaro.*\.js/.exec(e.src);return null!==n?n[1]:null}(t),c=function(e,t){if(e.has("klaro-config"))return e.get("klaro-config");var n=t.getAttribute("data-klaro-config");return null!==n?n:"default"}(n,t);if(null!==i){var s=new Nn(a,i,{testing:r});if(void 0!==window.klaroApiConfigs){if(!0===Ar("apiConfigsLoaded",window.klaroApiConfigs,s))return;var l=window.klaroApiConfigs.find((function(e){return e.name===c&&("active"===e.status||r)}));void 0!==l?(pr=l,Cr((function(){return o({api:s})}))):Ar("apiConfigsFailed",{})}else s.loadConfig(c).then((function(e){!0!==Ar("apiConfigsLoaded",[e],s)&&(pr=e,Cr((function(){return o({api:s})})))})).catch((function(e){console.error(e,"cannot load Klaro configs"),Ar("apiConfigsFailed",e)}))}else{var u=t.getAttribute("data-klaro-config")||"klaroConfig";void 0!==(pr=window[u])&&Cr((function(){return o({})}))}}n.has("klaro-ide")&&function(e){var t=/^(.*)(\/[^/]+)$/.exec(e.src)[1]||"",n=document.createElement("script");n.src=""!==t?t+"/ide.js":"ide.js",n.type="application/javascript";var r,o=sr(n.attributes);try{for(o.s();!(r=o.n()).done;){var i=r.value;n.setAttribute(i.name,i.value)}}catch(e){o.e(e)}finally{o.f()}document.head.appendChild(n)}(t)}}function Sr(e,t,n){return kr(e=e||pr,{show:!0,modal:t,api:n}),!1}var jr={};function Or(){for(var e in Object.keys(jr))delete jr[e]}function Er(e){var t=(e=e||pr).storageName||e.cookieName||"default";return void 0===jr[t]&&(jr[t]=new Pn.default(wr(e))),jr[t]}function Pr(){return"v"==="v0.7.19"[0]?"v0.7.19".slice(1):"v0.7.19"}var zr=Fn({ca:{acceptAll:"Accepta-les totes",acceptSelected:"Accepta les escollides",service:{disableAll:{description:"Useu aquest botó per a habilitar o deshabilitar totes les aplicacions.",title:"Habilita/deshabilita totes les aplicacions"},optOut:{description:"Aquesta aplicació es carrega per defecte, però podeu desactivar-la",title:"(opt-out)"},purpose:"Finalitat",purposes:"Finalitats",required:{description:"Aquesta aplicació es necessita sempre",title:"(necessària)"}},close:"Tanca",consentModal:{description:"Aquí podeu veure i personalitzar la informació que recopilem sobre vós.",privacyPolicy:{name:"política de privadesa",text:"Per a més informació, consulteu la nostra {privacyPolicy}."},title:"Informació que recopilem"},consentNotice:{changeDescription:"Hi ha hagut canvis des de la vostra darrera visita. Actualitzeu el vostre consentiment.",description:"Recopilem i processem la vostra informació personal amb les següents finalitats: {purposes}.",imprint:{name:"Empremta"},learnMore:"Saber-ne més",privacyPolicy:{name:"política de privadesa"}},decline:"Rebutja",ok:"Accepta",poweredBy:"Funciona amb Klaro!",purposeItem:{service:"aplicació",services:"aplicacions"},save:"Desa"},cs:{privacyPolicy:{name:"zásady ochrany soukromí",text:'Pro další informace si přečtete naše <tr-hint v="privacy policy">{privacyPolicy}</tr-hint>.'},consentModal:{title:"Služby, které bychom rádi využili",description:"Zde můžete posoudit a přizpůsobit služby, které bychom rádi na tomto webu používali. Máte to pod kontrolou! Povolte nebo zakažte služby, jak uznáte za vhodné."},consentNotice:{testing:"Testing mode!",changeDescription:"Od vaší poslední návštěvy došlo ke změnám, obnovte prosím svůj souhlas.",description:"„Dobrý den! Můžeme povolit některé další služby pro {purposes}? Svůj souhlas můžete kdykoliv změnit nebo odvolat.“","learnMore|capitalize":"Vyberu si"},účely:{functional:{"title|capitalize":"Poskytování služeb",description:"Tyto služby jsou nezbytné pro správné fungování tohoto webu. Nelze je zde deaktivovat, protože služba by jinak nefungovala správně.\n"},performance:{"title|capitalize":"Optimalizace výkonu",description:"V rámci těchto služeb jsou zpracovávány osobní údaje za účelem optimalizace služeb, které jsou na tomto webu poskytovány.\n"},marketing:{"title|capitalize":"Marketing",description:"V rámci těchto služeb jsou zpracovávány osobní údaje, aby se vám zobrazoval relevantní obsah o produktech, službách nebo tématech, které by vás mohly zajímat."},advertising:{"title|capitalize":"Reklama",description:"V rámci těchto služeb jsou zpracovávány osobní údaje, aby vám zobrazovaly personalizované nebo zájmově orientované reklamy."}},purposeItem:{service:"Jednoduchá služba <tr-snip></tr-snip> , kterou nainstaluji do svého počítače.",services:"Několik jednoduchých služeb <tr-snip></tr-snip> , které nainstaluji do svého počítače."},"ok|capitalize":"To je v pořádku",save:"uložit","decline|capitalize":"Nepřijímám",close:"zavřít",acceptAll:"přijmout vše",acceptSelected:"přijmout vybrané",service:{disableAll:{title:"povolit nebo zakázat všechny služby",description:"Pomocí tohoto přepínače můžete povolit nebo zakázat všechny služby."},optOut:{title:"(opt-out)",description:"Tato služba se načítá ve výchozím nastavení (ale můžete ji zrušit)"},required:{title:"(vždy vyžadováno)",description:"Tato služba je vždy vyžadována"},purposes:"Zpracování  pro účely <tr-snip></tr-snip>",purpose:"Zpracování pro účely <tr-snip></tr-snip>"},poweredBy:"Realizováno pomocí Klaro!",contextualConsent:{description:"Chcete načíst externí obsah dodávaný prostřednictvím {title}?",acceptOnce:"Ano",acceptAlways:"Vždy"}},da:{acceptAll:"Tillad alle",acceptSelected:"Tillad udvalgte",service:{disableAll:{description:"Brug denne kontakt til at aktivere/deaktivere alle apps.",title:"Aktiver/deaktiver alle applikatione"},optOut:{description:"Denne applikation indlæses som standard (men du kan deaktivere den)",title:"Opt-Out"},purpose:"Formål",purposes:"Formål",required:{description:"Denne applikation er altid nødvendig",title:"(Altid nødvendig)"}},close:"Luk",consentModal:{description:"Her kan du se og ændre, hvilke informationer vi gemmer om dig.",privacyPolicy:{name:"Flere informationer finde du under {privacyPolicy}",text:"databeskyttelseserklæring."},title:"Informationer, som vi gemmer"},consentNotice:{changeDescription:"Der har været ændringer siden dit sidste besøg. Opdater dit valg.",description:"Vi gemmer og behandler dine personlige oplysninger til følgende formål: {purposes}.",imprint:{name:""},learnMore:"Læs mere",privacyPolicy:{name:"Datenschutzerklärung"}},decline:"Afvis",ok:"Ok",poweredBy:"Realiseret med Klaro!",purposeItem:{service:"",services:""},save:"Gem"},de:{acceptAll:"Alle akzeptieren",acceptSelected:"Ausgewählte akzeptieren",close:"Schließen",consentModal:{description:"Hier können Sie die Dienste, die wir auf dieser Website nutzen möchten, bewerten und anpassen. Sie haben das Sagen! Aktivieren oder deaktivieren Sie die Dienste, wie Sie es für richtig halten.",privacyPolicy:{name:"Datenschutzerklärung",text:"Um mehr zu erfahren, lesen Sie bitte unsere {privacyPolicy}."},title:"Dienste, die wir nutzen möchten"},consentNotice:{changeDescription:"Seit Ihrem letzten Besuch gab es Änderungen, bitte erneuern Sie Ihre Zustimmung.",title:"Cookie-Einstellungen",description:"Hallo! Könnten wir bitte einige zusätzliche Dienste für {purposes} aktivieren? Sie können Ihre Zustimmung später jederzeit ändern oder zurückziehen.",imprint:{name:"Impressum"},learnMore:"Lassen Sie mich wählen",privacyPolicy:{name:"Datenschutzerklärung"},testing:"Testmodus!"},contextualConsent:{acceptAlways:"Immer",acceptOnce:"Ja",description:"Möchten Sie von {title} bereitgestellte externe Inhalte laden?",descriptionEmptyStore:"Um diesem Dienst dauerhaft zustimmen zu können, müssen Sie {title} in den {link} zustimmen.",modalLinkText:"Cookie-Einstellungen"},decline:"Ich lehne ab",ok:"Das ist ok",poweredBy:"Realisiert mit Klaro!",privacyPolicy:{name:"Datenschutzerklärung",text:"Um mehr zu erfahren, lesen Sie bitte unsere {privacyPolicy}."},purposeItem:{service:"Dienst",services:"Dienste"},purposes:{advertising:{description:"Diese Dienste verarbeiten persönliche Informationen, um Ihnen personalisierte oder interessenbezogene Werbung zu zeigen.",title:"Werbung"},functional:{description:"Diese Dienste sind für die korrekte Funktion dieser Website unerlässlich. Sie können sie hier nicht deaktivieren, da der Dienst sonst nicht richtig funktionieren würde.\n",title:"Dienstbereitstellung"},marketing:{description:"Diese Dienste verarbeiten persönliche Daten, um Ihnen relevante Inhalte über Produkte, Dienstleistungen oder Themen zu zeigen, die Sie interessieren könnten.",title:"Marketing"},performance:{description:"Diese Dienste verarbeiten personenbezogene Daten, um den von dieser Website angebotenen Service zu optimieren.\n",title:"Optimierung der Leistung"}},save:"Speichern",service:{disableAll:{description:"Mit diesem Schalter können Sie alle Dienste aktivieren oder deaktivieren.",title:"Alle Dienste aktivieren oder deaktivieren"},optOut:{description:"Diese Dienste werden standardmäßig geladen (Sie können sich jedoch abmelden)",title:"(Opt-out)"},purpose:"Zweck",purposes:"Zwecke",required:{description:"Dieser Service ist immer erforderlich",title:"(immer erforderlich)"}}},el:{acceptAll:"",acceptAll_en:"Accept all",acceptSelected:"",acceptSelected_en:"Accept selected",service:{disableAll:{description:"Χρησιμοποίησε αυτό τον διακόπτη για να ενεργοποιήσεις/απενεργοποιήσεις όλες τις εφαρμογές.",title:"Για όλες τις εφαρμογές"},optOut:{description:"Είναι προκαθορισμένο να φορτώνεται, άλλα μπορεί να παραληφθεί",title:"(μη απαιτούμενο)"},purpose:"Σκοπός",purposes:"Σκοποί",required:{description:"Δεν γίνεται να λειτουργήσει σωστά η εφαρμογή χωρίς αυτό",title:"(απαιτούμενο)"}},close:"Κλείσιμο",consentModal:{description:"Εδώ μπορείς να δεις και να ρυθμίσεις τις πληροφορίες που συλλέγουμε σχετικά με εσένα.",privacyPolicy:{name:"Πολιτική Απορρήτου",text:"Για περισσότερες πληροφορίες, παρακαλώ διαβάστε την {privacyPolicy}."},title:"Πληροφορίες που συλλέγουμε"},consentNotice:{changeDescription:"Πραγματοποιήθηκαν αλλαγές μετά την τελευταία σας επίσκεψη παρακαλούμε ανανεώστε την συγκατάθεση σας.",description:"Συγκεντρώνουμε και επεξεργαζόμαστε τα προσωπικά δεδομένα σας για τους παρακάτω λόγους: {purposes}.",imprint:{name:"",name_en:"imprint"},learnMore:"Περισσότερα",privacyPolicy:{name:"Πολιτική Απορρήτου"}},decline:"Απόρριπτω",ok:"OK",poweredBy:"Υποστηρίζεται από το Klaro!",purposeItem:{service:"",services:""},save:"Αποθήκευση"},en:{acceptAll:"Accept all",acceptSelected:"Accept selected",close:"Close",consentModal:{description:"Here you can assess and customize the services that we'd like to use on this website. You're in charge! Enable or disable services as you see fit.",title:"Services we would like to use"},consentNotice:{changeDescription:"There were changes since your last visit, please renew your consent.",title:"Cookie Consent",description:"Hi! Could we please enable some additional services for {purposes}? You can always change or withdraw your consent later.",learnMore:"Let me choose",testing:"Testing mode!"},contextualConsent:{acceptAlways:"Always",acceptOnce:"Yes",description:"Do you want to load external content supplied by {title}?",descriptionEmptyStore:"To agree to this service permanently, you must accept {title} in the {link}.",modalLinkText:"Consent Manager"},decline:"I decline",ok:"That's ok",poweredBy:"Realized with Klaro!",privacyPolicy:{name:"privacy policy",text:"To learn more, please read our {privacyPolicy}."},purposeItem:{service:"service",services:"services"},purposes:{advertising:{description:"These services process personal information to show you personalized or interest-based advertisements.",title:"Advertising"},functional:{description:"These services are essential for the correct functioning of this website. You cannot disable them here as the service would not work correctly otherwise.\n",title:"Service Provision"},marketing:{description:"These services process personal information to show you relevant content about products, services or topics that you might be interested in.",title:"Marketing"},performance:{description:"These services process personal information to optimize the service that this website offers.\n",title:"Performance Optimization"}},save:"Save",service:{disableAll:{description:"Use this switch to enable or disable all services.",title:"Enable or disable all services"},optOut:{description:"This services is loaded by default (but you can opt out)",title:"(opt-out)"},purpose:"purpose",purposes:"purposes",required:{description:"This services is always required",title:"(always required)"}}},zh:{acceptAll:"照单全收",acceptSelected:"接受选择",close:"密切",consentModal:{description:"在这里，您可以评估和定制我们希望在本网站上使用的服务。您是负责人！您可以根据自己的需要启用或禁用服务。启用或禁用您认为合适的服务。",privacyPolicy:{name:"隐私政策",text:"要了解更多，请阅读我们的{privacyPolicy} 。"},title:"我们想使用的服务"},consentNotice:{changeDescription:"自上次访问后有变化，请更新您的同意。",description:"你好！我们可以为{purposes} 启用一些额外的服务吗？您可以随时更改或撤回您的同意。",imprint:{name:"印记"},learnMore:"让我来选",privacyPolicy:{name:"隐私政策"},testing:"测试模式！"},contextualConsent:{acceptAlways:"总是",acceptOnce:"是的，是的",description:"你想加载由{title} 提供的外部内容吗？"},decline:"我拒绝",ok:"没事的",poweredBy:"与Klaro一起实现!",privacyPolicy:{name:"隐私政策",text:"要了解更多，请阅读我们的{privacyPolicy} 。"},purposeItem:{service:"服务",services:"服务"},purposes:{advertising:{description:"这些服务处理个人信息，向您展示个性化或基于兴趣的广告。",title:"广告宣传"},functional:{description:"这些服务对于本网站的正常运行是必不可少的。您不能在这里禁用它们，否则服务将无法正常运行。\n",title:"服务提供"},marketing:{description:"这些服务会处理个人信息，向您展示您可能感兴趣的产品、服务或主题的相关内容。",title:"市场营销"},performance:{description:"这些服务处理个人信息是为了优化本网站提供的服务。\n",title:"性能优化"}},save:"挽救",service:{disableAll:{description:"使用此开关可启用或禁用所有服务。",title:"启用或停用所有服务"},optOut:{description:"这个服务是默认加载的(但你可以选择退出)",title:"(选择退出)"},purpose:"目的",purposes:"目的",required:{description:"这种服务是必须的",title:"(总是需要)"}}},pt:{acceptAll:"Aceitar todos",acceptSelected:"Aceitar selecionados",close:"Fechar",consentModal:{description:"Aqui você pode avaliar e personalizar os serviços que gostaríamos de usar neste website. Você está no comando! Habilite ou desabilite os serviços como julgar conveniente.",privacyPolicy:{name:"política de privacidade",text:"Para saber mais, por favor, leia nossa {privacyPolicy}."},title:"Serviços que gostaríamos de utilizar"},consentNotice:{changeDescription:"Houve mudanças desde sua última visita, queira renovar seu consentimento.",description:"Olá! Poderíamos, por favor, habilitar alguns serviços adicionais para {purposes}? Você pode sempre mudar ou retirar seu consentimento mais tarde.",imprint:{name:"imprimir"},learnMore:"Deixe-me escolher",privacyPolicy:{name:"política de privacidade"},testing:"Modo de teste!"},contextualConsent:{acceptAlways:"Sempre",acceptOnce:"Sim",description:"Você deseja carregar conteúdo externo fornecido por {title}?"},decline:"Recusar",ok:"Aceito.",poweredBy:"Realizado com Klaro!",privacyPolicy:{name:"política de privacidade",text:"Para saber mais, por favor, leia nossa {privacyPolicy}."},purposeItem:{service:"serviço",services:"serviços"},purposes:{advertising:{description:"Esses serviços processam informações pessoais para mostrar a você anúncios personalizados ou baseados em interesses.",title:"Publicidade"},functional:{description:"Esses serviços são essenciais para o correto funcionamento deste website. Você não pode desativá-los aqui, pois de outra forma o serviço não funcionaria corretamente.\n",title:"Prestação de serviços"},marketing:{description:"Esses serviços processam informações pessoais para mostrar a você conteúdo relevante sobre produtos, serviços ou tópicos que possam ser do seu interesse.",title:"Marketing"},performance:{description:"Esses serviços processam informações pessoais para otimizar o serviço que este website oferece.\n",title:"Otimização do desempenho"}},save:"Salvar",service:{disableAll:{description:"Use essa chave para habilitar ou desabilitar todos os serviços.",title:"Habilitar ou desabilitar todos os serviços"},optOut:{description:"Estes serviços são carregados por padrão (mas o você pode optar por não participar).",title:"(opt-out)"},purpose:"Objetivo",purposes:"Objetivos",required:{description:"Esses serviços são sempre necessários",title:"(sempre necessário)"}}},es:{acceptAll:"Aceptar todas",acceptSelected:"Aceptar seleccionadas",close:"Cerrar",consentModal:{description:"Aquí puede evaluar y personalizar los servicios que nos gustaría utilizar en este sitio web. ¡Usted decide! Habilite o deshabilite los servicios como considere oportuno.",privacyPolicy:{name:"política de privacidad",text:"Para saber más, por favor lea nuestra {privacyPolicy}."},title:"Servicios que nos gustaría utilizar"},consentNotice:{changeDescription:"Ha habido cambios en las cookies desde su última visita. Debe renovar su consentimiento.",description:"¡Hola! ¿Podríamos habilitar algunos servicios adicionales para {purposes}? Siempre podrá cambiar o retirar su consentimiento más tarde.",imprint:{name:"Imprimir"},learnMore:"Quiero elegir",privacyPolicy:{name:"política de privacidad"},testing:"¡Modo de prueba!"},contextualConsent:{acceptAlways:"Siempre",acceptOnce:"Sí",description:"¿Quieres cargar el contenido externo suministrado por {title}?"},decline:"Descartar todas",ok:"De acuerdo",poweredBy:"¡Realizado con Klaro!",privacyPolicy:{name:"política de privacidad",text:"Para saber más, por favor lea nuestra {privacyPolicy}."},purposeItem:{service:"servicio",services:"servicios"},purposes:{advertising:{description:"Estos servicios procesan información personal para mostrarle anuncios personalizados o basados en intereses.",title:"Publicidad"},functional:{description:"Estos servicios son esenciales para el correcto funcionamiento de este sitio web. No puede desactivarlos ya que la página no funcionaría correctamente.",title:"Prestación de servicios"},marketing:{description:"Estos servicios procesan información personal para mostrarle contenido relevante sobre productos, servicios o temas que puedan interesarle.",title:"Marketing"},performance:{description:"Estos servicios procesan información personal para optimizar el servicio que ofrece este sitio.",title:"Optimización del rendimiento"}},save:"Guardar",service:{disableAll:{description:"Utilice este interruptor para activar o desactivar todos los servicios.",title:"Activar o desactivar todos los servicios"},optOut:{description:"Este servicio está habilitado por defecto (pero puede optar por lo contrario)",title:"(desactivar)"},purpose:"Finalidad",purposes:"Finalidades",required:{description:"Este servicio es necesario siempre",title:"(siempre requerido)"}}},fi:{acceptAll:"",acceptAll_en:"Accept all",acceptSelected:"",acceptSelected_en:"Accept selected",service:{disableAll:{description:"Aktivoi kaikki päälle/pois.",title:"Valitse kaikki"},optOut:{description:"Ladataan oletuksena (mutta voit ottaa sen pois päältä)",title:"(ladataan oletuksena)"},purpose:"Käyttötarkoitus",purposes:"Käyttötarkoitukset",required:{description:"Sivusto vaatii tämän aina",title:"(vaaditaan)"}},close:"Sulje",consentModal:{description:"Voit tarkastella ja muokata sinusta keräämiämme tietoja.",privacyPolicy:{name:"tietosuojasivultamme",text:"Voit lukea lisätietoja {privacyPolicy}."},title:"Keräämämme tiedot"},consentNotice:{changeDescription:"Olemme tehneet muutoksia ehtoihin viime vierailusi jälkeen, tarkista ehdot.",description:"Keräämme ja käsittelemme henkilötietoja seuraaviin tarkoituksiin: {purposes}.",imprint:{name:"",name_en:"imprint"},learnMore:"Lue lisää",privacyPolicy:{name:"tietosuojasivultamme"}},decline:"Hylkää",ok:"Hyväksy",poweredBy:"Palvelun tarjoaa Klaro!",purposeItem:{service:"",services:""},save:"Tallenna"},fr:{acceptAll:"Accepter tout",acceptSelected:"Accepter sélectionné",close:"Fermer",consentModal:{description:"Vous pouvez ici évaluer et personnaliser les services que nous aimerions utiliser sur ce site. C'est vous qui décidez ! Activez ou désactivez les services comme bon vous semble.",privacyPolicy:{name:"politique de confidentialité",text:"Pour en savoir plus, veuillez lire notre {privacyPolicy}."},title:"Services que nous souhaitons utiliser"},consentNotice:{changeDescription:"Il y a eu des changements depuis votre dernière visite, veuillez renouveler votre consentement.",description:"Bonjour ! Pourrions-nous activer des services supplémentaires pour {purposes}? Vous pouvez toujours modifier ou retirer votre consentement plus tard.",imprint:{name:"mentions légales"},learnMore:"Laissez-moi choisir",privacyPolicy:{name:"politique de confidentialité"},testing:"Mode test !"},contextualConsent:{acceptAlways:"Toujours",acceptOnce:"Oui",description:"Vous souhaitez charger un contenu externe fourni par {title}?"},decline:"Je refuse",ok:"C'est bon.",poweredBy:"Réalisé avec Klaro !",privacyPolicy:{name:"politique de confidentialité",text:"Pour en savoir plus, veuillez lire notre {privacyPolicy}."},purposeItem:{service:"service",services:"services"},purposes:{advertising:{description:"Ces services traitent les informations personnelles pour vous présenter des publicités personnalisées ou basées sur des intérêts.",title:"Publicité"},functional:{description:"Ces services sont essentiels au bon fonctionnement de ce site. Vous ne pouvez pas les désactiver ici car le service ne fonctionnerait pas correctement autrement.\n",title:"Prestation de services"},marketing:{description:"Ces services traitent les informations personnelles afin de vous présenter un contenu pertinent sur les produits, les services ou les sujets qui pourraient vous intéresser.",title:"Marketing"},performance:{description:"Ces services traitent les informations personnelles afin d'optimiser le service que ce site Web offre.\n",title:"Optimisation de la performance"}},save:"Enregistrer",service:{disableAll:{description:"Utilisez ce commutateur pour activer ou désactiver tous les services.",title:"Activer ou désactiver tous les services"},optOut:{description:"Ce service est chargé par défaut (mais vous pouvez le désactiver)",title:"(opt-out)"},purpose:"Objet",purposes:"Fins",required:{description:"Ce service est toujours nécessaire",title:"(toujours requis)"}}},gl:{acceptAll:"Aceptar todas",acceptSelected:"Aceptar seleccionadas",close:"Pechar",consentModal:{description:"Aquí pode avaliar e personalizar os servizos que nos gustaría utilizar neste sitio web. ¡Vostede decide! Habilite ou deshabilite os servicios como lle conveña.",privacyPolicy:{name:"política de privacidade",text:"Para saber máis, por favor lea a nosa {privacyPolicy}."},title:"Servizos que nos gustaría utilizar"},consentNotice:{changeDescription:"Houbo cambios nas cookies dende a súa última visita. Debe renovar o seu consentimento.",description:"¡Ola! ¿Poderíamos habilitar algúns servizos adicionais para {purposes}? Sempre poderá cambiar ou retirar o séu consentimento máis tarde.",imprint:{name:"Imprimir"},learnMore:"Quero elixir",privacyPolicy:{name:"política de privacidade"},testing:"¡Modo de proba!"},decline:"Descartar todas",ok:"De acordo",poweredBy:"¡Realizado con Klaro!",privacyPolicy:{name:"política de privacidade",text:"Para saber máis, por favor lea a nosa {privacyPolicy}."},purposeItem:{service:"servizo",services:"servizos"},purposes:{advertising:{description:"Estes servizos procesan información persoal para mostrarlle anuncios personalizados ou basados en intereses.",title:"Publicidade"},functional:{description:"Estes servizos son esenciais para o correcto funcionamiento deste sitio web. Non pode desactivalos xa que a páxina non funcionaría correctamente.",title:"Prestación de servizos"},marketing:{description:"Estes servizos procesan información persoal para mostrarlle contido relevante sobre produtos, servizos ou temas que poidan interesarlle.",title:"Marketing"},performance:{description:"Estes servizos procesan información persoal para optimizar o servizo que ofrece este sitio.",title:"Optimización do rendimento"}},save:"Gardar",service:{disableAll:{description:"Utilice este interruptor para activar ou desactivar todos os servizos.",title:"Activar ou desactivar todos os servizos"},optOut:{description:"Este servizo está habilitado por defecto (pero pode optar polo contrario)",title:"(desactivar)"},purpose:"Finalidade",purposes:"Finalidades",required:{description:"Este servizo é necesario sempre",title:"(sempre requirido)"}}},hu:{acceptAll:"Mind elfogad",acceptAll_en:"Accept all",acceptSelected:"Kiválasztottat elfogad",acceptSelected_en:"Accept selected",service:{disableAll:{description:"Használja ezt a kapcsolót az összes alkalmazás engedélyezéséhez/letiltásához.",title:"Összes app átkapcsolása"},optOut:{description:"Ez az alkalmazás alapértelmezés szerint betöltött (de ki lehet kapcsolni)",title:"(leiratkozás)"},purpose:"Cél",purposes:"Célok",required:{description:"Ez az alkalmazás mindig szükséges",title:"(mindig szükséges)"}},close:"Elvet",consentModal:{description:"Itt láthatja és testreszabhatja az önről gyűjtött információkat.",privacyPolicy:{name:"adatvédelmi irányelveinket",text:"További információért kérjük, olvassa el az {privacyPolicy}."},title:"Információk, amiket gyűjtünk"},consentNotice:{changeDescription:"Az utolsó látogatás óta változások történtek, kérjük, frissítse a hozzájárulását.",description:"Személyes adatait összegyűjtjük és feldolgozzuk az alábbi célokra: {purposes}.",imprint:{name:"impresszum",name_en:"imprint"},learnMore:"Tudjon meg többet",privacyPolicy:{name:"adatvédelmi irányelveinket"}},contextualConsent:{acceptAlways:"Mindig",acceptOnce:"Igen",description:"Be akarod tölteni a {title} által szolgáltatott külső tartalmakat?"},decline:"Elutasít",ok:"Elfogad",poweredBy:"Powered by Klaro!",purposeItem:{service:"",services:""},save:"Mentés"},hr:{acceptAll:"",acceptAll_en:"Prihvati sve",acceptSelected:"",acceptSelected_en:"Prihvati odabrane",service:{disableAll:{description:"Koristite ovaj prekidač da omogućite/onemogućite sve aplikacije odjednom.",title:"Izmeijeni sve"},optOut:{description:"Ova aplikacija je učitana automatski (ali je možete onemogućiti)",title:"(onemogućite)"},purpose:"Svrha",purposes:"Svrhe",required:{description:"Ova aplikacija je uvijek obavezna",title:"(obavezna)"}},close:"Zatvori",consentModal:{description:"Ovdje možete vidjeti i podesiti informacije koje prikupljamo o Vama.",privacyPolicy:{name:"pravila privatnosti",text:"Za više informacije pročitajte naša {privacyPolicy}."},title:"Informacije koje prikupljamo"},consentNotice:{changeDescription:"Došlo je do promjena od Vaše posljednjeg posjećivanja web stranice, molimo Vas da ažurirate svoja odobrenja.",description:"Mi prikupljamo i procesiramo Vaše osobne podatke radi slijedećeg: {purposes}.",imprint:{name:"",name_en:"imprint"},learnMore:"Saznajte više",privacyPolicy:{name:"pravila privatnosti"}},decline:"Odbij",ok:"U redu",poweredBy:"Pokreće Klaro!",purposeItem:{service:"",services:""},save:"Spremi"},it:{acceptAll:"Accettare tutti",acceptSelected:"Accettare selezionato",close:"Chiudi",consentModal:{description:"Qui può valutare e personalizzare i servizi che vorremmo utilizzare su questo sito web. È lei il responsabile! Abilitare o disabilitare i servizi come meglio crede.",privacyPolicy:{name:"informativa sulla privacy",text:"Per saperne di più, legga la nostra {privacyPolicy}."},title:"Servizi che desideriamo utilizzare"},consentNotice:{changeDescription:"Ci sono stati dei cambiamenti rispetto alla sua ultima visita, la preghiamo di rinnovare il suo consenso.",description:"Salve, possiamo attivare alcuni servizi aggiuntivi per {purposes}? Può sempre modificare o ritirare il suo consenso in un secondo momento.",imprint:{name:"impronta"},learnMore:"Lasciatemi scegliere",privacyPolicy:{name:"informativa sulla privacy"},testing:"Modalità di test!"},contextualConsent:{acceptAlways:"Sempre",acceptOnce:"Sì",description:"Vuole caricare contenuti esterni forniti da {title}?"},decline:"Rifiuto",ok:"Va bene così",poweredBy:"Realizzato con Klaro!",privacyPolicy:{name:"informativa sulla privacy",text:"Per saperne di più, legga la nostra {privacyPolicy}."},purposeItem:{service:"servizio",services:"servizi"},purposes:{advertising:{description:"Questi servizi elaborano le informazioni personali per mostrarle annunci pubblicitari personalizzati o basati su interessi.",title:"Pubblicità"},functional:{description:"Questi servizi sono essenziali per il corretto funzionamento di questo sito web. Non può disattivarli qui perché altrimenti il servizio non funzionerebbe correttamente.\n",title:"Fornitura di servizi"},marketing:{description:"Questi servizi elaborano le informazioni personali per mostrarle contenuti rilevanti su prodotti, servizi o argomenti che potrebbero interessarla.",title:"Marketing"},performance:{description:"Questi servizi elaborano le informazioni personali per ottimizzare il servizio offerto da questo sito web.\n",title:"Ottimizzazione delle prestazioni"}},save:"Salva",service:{disableAll:{description:"Utilizzi questo interruttore per attivare o disattivare tutti i servizi.",title:"Attivare o disattivare tutti i servizi"},optOut:{description:"Questo servizio è caricato di default (ma è possibile scegliere di non usufruirne)",title:"(opt-out)"},purpose:"Scopo dell",purposes:"Finalità",required:{description:"Questo servizio è sempre richiesto",title:"(sempre richiesto)"}}},nl:{acceptAll:"Accepteer alle",acceptSelected:"Geselecteerde",close:"Sluit",consentModal:{description:"Hier kunt u de diensten die wij op deze website willen gebruiken beoordelen en aanpassen. U heeft de leiding! Schakel de diensten naar eigen inzicht in of uit.",privacyPolicy:{name:"privacybeleid",text:"Voor meer informatie kunt u ons {privacyPolicy} lezen."},title:"Diensten die we graag willen gebruiken"},consentNotice:{changeDescription:"Er waren veranderingen sinds uw laatste bezoek, gelieve uw toestemming te hernieuwen.",description:"Hallo, kunnen wij u een aantal extra diensten aanbieden voor {purposes}? U kunt uw toestemming later altijd nog wijzigen of intrekken.",imprint:{name:"impressum"},learnMore:"Laat me kiezen",privacyPolicy:{name:"privacybeleid"},testing:"Testmodus!"},contextualConsent:{acceptAlways:"Altijd",acceptOnce:"Ja",description:"Wilt u externe content laden die door {title} wordt aangeleverd ?"},decline:"Ik weiger",ok:"Dat is oké",poweredBy:"Gerealiseerd met Klaro!",privacyPolicy:{name:"privacybeleid",text:"Voor meer informatie kunt u ons {privacyPolicy} lezen."},purposeItem:{service:"service",services:"diensten"},purposes:{advertising:{description:"Deze diensten verwerken persoonlijke informatie om u gepersonaliseerde of op interesse gebaseerde advertenties te tonen.",title:"Reclame"},functional:{description:"Deze diensten zijn essentieel voor het correct functioneren van deze website. U kunt ze hier niet uitschakelen omdat de dienst anders niet correct zou werken.\n",title:"Dienstverlening"},marketing:{description:"Deze diensten verwerken persoonlijke informatie om u relevante inhoud te tonen over producten, diensten of onderwerpen waarin u geïnteresseerd zou kunnen zijn.",title:"Marketing"},performance:{description:"Deze diensten verwerken persoonlijke informatie om de service die deze website biedt te optimaliseren.\n",title:"Optimalisatie van de prestaties"}},save:"Opslaan",service:{disableAll:{description:"Gebruik deze schakelaar om alle diensten in of uit te schakelen.",title:"Alle diensten in- of uitschakelen"},optOut:{description:"Deze diensten worden standaard geladen (maar u kunt zich afmelden)",title:"(opt-out)"},purpose:"Verwerkingsdoel",purposes:"Verwerkingsdoeleinden",required:{description:"Deze diensten zijn altijd nodig",title:"(altijd nodig)"}}},no:{acceptAll:"Godtar alle",acceptSelected:"Godtar valgt",service:{disableAll:{description:"Bruk denne for å skru av/på alle apper.",title:"Bytt alle apper"},optOut:{description:"Denne appen er lastet som standard (men du kan skru det av)",title:"(opt-out)"},purpose:"Årsak",purposes:"Årsaker",required:{description:"Denne applikasjonen er alltid påkrevd",title:"(alltid påkrevd)"}},close:"",close_en:"Close",consentModal:{description:"Her kan du se og velge hvilken informasjon vi samler inn om deg.",privacyPolicy:{name:"personvernerklæring",text:"For å lære mer, vennligst les vår {privacyPolicy}."},title:"Informasjon vi samler inn"},consentNotice:{changeDescription:"Det har skjedd endringer siden ditt siste besøk, vennligst oppdater ditt samtykke.",description:"Vi samler inn og prosesserer din personlige informasjon av følgende årsaker: {purposes}.",imprint:{name:"",name_en:"imprint"},learnMore:"Lær mer",privacyPolicy:{name:"personvernerklæring"}},decline:"Avslå",ok:"OK",poweredBy:"Laget med Klaro!",purposeItem:{service:"",services:""},save:"Opslaan"},oc:{acceptAll:"Tot acceptar",acceptSelected:"Acceptar çò seleccionat",close:"Tampar",consentModal:{description:"Aquí podètz mesurar e personalizar los servicis que volriam utilizar sus aqueste site web. Avètz lo darrièr mot ! Activatz o desactivatz segon vòstra causida.",title:"Servicis que volriam utilizar"},consentNotice:{changeDescription:"I aguèt de modificacions dempuèi vòstra darrièra visita, mercés de repassar vòstre consentiment.",description:"Adieu ! Poiriam activar mai de servici per {purposes} ? Podètz totjorn modificar o tirar vòstre consentiment mai tard.",learnMore:"Me daissar causir",testing:"Mòde tèst !"},contextualConsent:{acceptAlways:"Totjorn",acceptOnce:"Òc",description:"Volètz cargar de contenguts extèrn provesits per {title} ?"},decline:"Refusi",ok:"Es bon",poweredBy:"Realizat amb Klaro !",privacyPolicy:{name:"politica de confidencialitat",text:"Per ne saber mai, vejatz nòstra {privacyPolicy}."},purposeItem:{service:"servici",services:"servicis"},purposes:{advertising:{description:"Aquestes servicis tractan d’informacions personalas per vos mostrar de reclamas personalizadas o basadas suls interèsses.",title:"Reclama"},functional:{description:"Aquestes servicis son essencials pel foncionament corrèct d’aqueste site web. Los podètz pas desactivar aquí pr’amor que lo servici foncionariá pas coma cal autrament.\n",title:"Servici de provision"},marketing:{description:"Aquestes servicis tractan d’informacions personalas per vos mostrar de contenguts a prepaus de produits, de servicis o tèmas que poirián vos interessar.",title:"Marketing"},performance:{description:"Aquestes servicis tractan d’informacions per optimizar lo servici qu’aqueste site web prepausa.\n",title:"Optimizacion de las performanças"}},save:"Salvar",service:{disableAll:{description:"Utilizatz aqueste alternator per activar o desactivar totes los servicis.",title:"Activar o desactivar totes los servicis"},optOut:{description:"Aqueste servici es cargar per defaut (mas lo podètz desactivar)",title:"(opt-out)"},purpose:"finalitat",purposes:"finalitat",required:{description:"Aqueste servici es totjorn requesit",title:"(totjorn requesit)"}}},ro:{acceptAll:"",acceptAll_en:"Accept all",acceptSelected:"",acceptSelected_en:"Accept selected",service:{disableAll:{description:"Utilizați acest switch pentru a activa/dezactiva toate aplicațiile.",title:"Comutați între toate aplicațiile"},optOut:{description:"Această aplicație este încărcată în mod implicit (dar puteți renunța)",title:"(opt-out)"},purpose:"Scop",purposes:"Scopuri",required:{description:"Această aplicație este întotdeauna necesară",title:"(întotdeauna necesar)"}},close:"",close_en:"Close",consentModal:{description:"Aici puteți vedea și personaliza informațiile pe care le colectăm despre dvs.",privacyPolicy:{name:"politica privacy",text:"Pentru a afla mai multe, vă rugăm să citiți {privacyPolicy}."},title:"Informațiile pe care le colectăm"},consentNotice:{changeDescription:"Au existat modificări de la ultima vizită, vă rugăm să actualizați consimțământul.",description:"Colectăm și procesăm informațiile dvs. personale în următoarele scopuri: {purposes}.",imprint:{name:"",name_en:"imprint"},learnMore:"Află mai multe",privacyPolicy:{name:"politica privacy"}},decline:"Renunță",ok:"OK",poweredBy:"Realizat de Klaro!",purposeItem:{service:"",services:""},save:"Salvează"},sr:{acceptAll:"",acceptAll_en:"Accept all",acceptSelected:"",acceptSelected_en:"Accept selected",service:{disableAll:{description:"Koristite ovaj prekidač da omogućite/onesposobite sve aplikacije odjednom.",title:"Izmeni sve"},optOut:{description:"Ova aplikacija je učitana automatski (ali je možete onesposobiti)",title:"(onesposobite)"},purpose:"Svrha",purposes:"Svrhe",required:{description:"Ova aplikacija je uvek neophodna",title:"(neophodna)"}},close:"Zatvori",consentModal:{description:"Ovde možete videti i podesiti informacije koje prikupljamo o Vama.",privacyPolicy:{name:"politiku privatnosti",text:"Za više informacije pročitajte našu {privacyPolicy}."},title:"Informacije koje prikupljamo"},consentNotice:{changeDescription:"Došlo je do promena od Vaše poslednje posete, molimo Vas da ažurirate svoja odobrenja.",description:"Mi prikupljamo i procesiramo Vaše lične podatke radi sledećeg: {purposes}.",imprint:{name:"",name_en:"imprint"},learnMore:"Saznajte više",privacyPolicy:{name:"politiku privatnosti"}},decline:"Odbij",ok:"U redu",poweredBy:"Pokreće Klaro!",purposeItem:{service:"",services:""},save:"Sačuvaj"},sr_cyrl:{consentModal:{title:"Информације које прикупљамо",description:"Овде можете видет и подесити информације које прикупљамо о Вама.\n",privacyPolicy:{name:"политику приватности",text:"За више информација прочитајте нашу {privacyPolicy}.\n"}},consentNotice:{changeDescription:"Дошло је до промена од Ваше последнје посете, молимо Вас да ажурирате своја одобрења.",description:"Ми прикупљамо и процесирамо Ваше личне податке ради следећег: {purposes}.\n",learnMore:"Сазнајте више",privacyPolicy:{name:"политику приватности"}},ok:"У реду",save:"Сачувај",decline:"Одбиј",close:"Затвори",service:{disableAll:{title:"Измени све",description:"Користите овај прекидач да омогућите/онеспособите све апликације одједном."},optOut:{title:"(онеспособите)",description:"Ова апликација је учитана аутоматски (али је можете онеспособити)"},required:{title:"(неопходна)",description:"Ова апликација је увек неопходна."},purposes:"Сврхе",purpose:"Сврха"},poweredBy:"Покреће Кларо!"},sv:{acceptAll:"Acceptera alla",acceptSelected:"Acceptera markerat",service:{disableAll:{description:"Använd detta reglage för att aktivera/avaktivera samtliga appar.",title:"Ändra för alla appar"},optOut:{description:"Den här appen laddas som standardinställning (men du kan avaktivera den)",title:"(Avaktivera)"},purpose:"Syfte",purposes:"Syften",required:{description:"Den här applikationen krävs alltid",title:"(Krävs alltid)"}},close:"Stäng",consentModal:{description:"Här kan du se och anpassa vilken information vi samlar om dig.",privacyPolicy:{name:"Integritetspolicy",text:"För att veta mer, läs vår {privacyPolicy}."},title:"Information som vi samlar"},consentNotice:{changeDescription:"Det har skett förändringar sedan ditt senaste besök, var god uppdatera ditt medgivande.",description:"Vi samlar och bearbetar din personliga data i följande syften: {purposes}.",imprint:{name:"",name_en:"imprint"},learnMore:"Läs mer",privacyPolicy:{name:"Integritetspolicy"}},decline:"Avböj",ok:"OK",poweredBy:"Körs på Klaro!",purposeItem:{service:"",services:""},save:"Spara"},tr:{acceptAll:"",acceptAll_en:"Accept all",acceptSelected:"",acceptSelected_en:"Accept selected",service:{disableAll:{description:"Toplu açma/kapama için bu düğmeyi kullanabilirsin.",title:"Tüm uygulamaları aç/kapat"},optOut:{description:"Bu uygulama varsayılanda yüklendi (ancak iptal edebilirsin)",title:"(isteğe bağlı)"},purpose:"Amaç",purposes:"Amaçlar",required:{description:"Bu uygulama her zaman gerekli",title:"(her zaman gerekli)"}},close:"Kapat",consentModal:{description:"Hakkınızda topladığımız bilgileri burada görebilir ve özelleştirebilirsiniz.",privacyPolicy:{name:"Gizlilik Politikası",text:"Daha fazlası için lütfen {privacyPolicy} sayfamızı okuyun."},title:"Sakladığımız bilgiler"},consentNotice:{changeDescription:"Son ziyaretinizden bu yana değişiklikler oldu, lütfen seçiminizi güncelleyin.",description:"Kişisel bilgilerinizi aşağıdaki amaçlarla saklıyor ve işliyoruz: {purposes}.",imprint:{name:"",name_en:"imprint"},learnMore:"Daha fazla bilgi",privacyPolicy:{name:"Gizlilik Politikası"}},decline:"Reddet",ok:"Tamam",poweredBy:"Klaro tarafından geliştirildi!",purposeItem:{service:"",services:""},save:"Kaydet"},pl:{acceptAll:"Zaakceptuj wszystkie",acceptSelected:"Zaakceptuj wybrane",close:"Zamknij",consentModal:{description:"Tutaj mogą Państwo ocenić i dostosować usługi, które chcielibyśmy wykorzystać na tej stronie. Włączaj lub wyłączaj usługi według własnego uznania.",privacyPolicy:{name:"polityką prywatności",text:"Aby dowiedzieć się więcej, prosimy o zapoznanie się z naszą {privacyPolicy}."},title:"Usługi, z których chcielibyśmy skorzystać"},consentNotice:{changeDescription:"Od Twojej ostatniej wizyty nastąpiły zmiany, prosimy o odnowienie zgody.",description:"Czy możemy włączyć dodatkowe usługi dla {purposes}? W każdej chwili mogą Państwo później zmienić lub wycofać swoją zgodę.",imprint:{name:"Imprint"},learnMore:"Pozwól mi wybrać",privacyPolicy:{name:"polityka prywatności"},testing:"Tryb testowy!"},contextualConsent:{acceptAlways:"Zawsze",acceptOnce:"Tak",description:"Czy chcą Państwo załadować treści zewnętrzne dostarczane przez {title}?"},decline:"Odmawiam",ok:"Ok",poweredBy:"Technologia dostarczona przez Klaro",privacyPolicy:{name:"polityka prywatności",text:"Aby dowiedzieć się więcej, prosimy o zapoznanie się z naszą {privacyPolicy}."},purposeItem:{service:"usługa",services:"usługi"},purposes:{advertising:{description:"Usługi te przetwarzają dane osobowe w celu pokazania Państwu spersonalizowanych lub opartych na zainteresowaniach reklam.",title:"Reklama"},functional:{description:"Usługi te są niezbędne do prawidłowego funkcjonowania niniejszej strony internetowej. Nie mogą Państwo ich tutaj wyłączyć, ponieważ w przeciwnym razie strona nie działałaby prawidłowo.\n",title:"Świadczenie usług"},marketing:{description:"Usługi te przetwarzają dane osobowe w celu pokazania Państwu istotnych treści dotyczących produktów, usług lub tematów, którymi mogą być Państwo zainteresowani.",title:"Marketing"},performance:{description:"Usługi te przetwarzają dane osobowe w celu optymalizacji usług oferowanych przez tę stronę.\n",title:"Optymalizacja wydajności"}},save:"Zapisz",service:{disableAll:{description:"Za pomocą tego przełącznika można włączać lub wyłączać wszystkie usługi.",title:"Włącz lub wyłącz wszystkie usługi"},optOut:{description:"Ta usługa jest domyślnie załadowana (ale mogą Państwo z niej zrezygnować)",title:"(opt-out)"},purpose:"Cel",purposes:"Cele",required:{description:"Usługi te są zawsze wymagane",title:"(zawsze wymagane)"}}},ru:{acceptAll:"Принять всё",acceptSelected:"Принять выбранные",service:{disableAll:{description:"Используйте этот переключатель, чтобы включить/отключить все приложения.",title:"Переключить все приложения"},optOut:{description:"Это приложение включено по умолчанию (но вы можете отказаться)",title:"(отказаться)"},purpose:"Намерение",purposes:"Намерения",required:{description:"Это обязательное приложение",title:"(всегда обязательный)"}},close:"Закрыть",consentModal:{description:"Здесь вы можете просмотреть и настроить, какую информацию о вас мы храним.",privacyPolicy:{name:"Соглашение",text:"Чтобы узнать больше, пожалуйста, прочитайте наше {privacyPolicy}."},title:"Информация, которую мы сохраняем"},consentNotice:{changeDescription:"Со времени вашего последнего визита произошли изменения, обновите своё согласие.",description:"Мы собираем и обрабатываем вашу личную информацию для следующих целей: {purposes}.",imprint:{name:"",name_en:"imprint"},learnMore:"Настроить",privacyPolicy:{name:"политика конфиденциальности"}},decline:"Отклонить",ok:"Принять",poweredBy:"Работает на Кларо!",purposeItem:{service:"",services:""},save:"Сохранить"}});Ln(dr,zr),xr()})(),r})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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WUFBWTdqQixHQUFHLFVBQVVxYSxVQUFVLHFCQUFxQnlKLFlBQVksQ0FBQ2hpRCxRQUFRLEdBQUdELFNBQVMsSUFBSWtpRCxLQUFLLGUxQlM1bkN4aEQsR0FBTzg4QyxHQUFxQitELElBRzVCeEIsSSIsInNvdXJjZXMiOlsid2VicGFjazovLy93ZWJwYWNrL3VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24iLCJ3ZWJwYWNrOi8vLy4vdXRpbHMvY29va2llcy5qcyIsIndlYnBhY2s6Ly8vLi9zdG9yZXMuanMiLCJ3ZWJwYWNrOi8vLy4vY29uc2VudC1tYW5hZ2VyLmpzIiwid2VicGFjazovLy8uL3V0aWxzL2NvbXBhdC5qcyIsIndlYnBhY2s6Ly8vLi9zY3NzL2tsYXJvLnNjc3MiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2EtY2FsbGFibGUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9hLWNvbnN0cnVjdG9yLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvYS1wb3NzaWJsZS1wcm90b3R5cGUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9hZGQtdG8tdW5zY29wYWJsZXMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9hZHZhbmNlLXN0cmluZy1pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2FuLWluc3RhbmNlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvYW4tb2JqZWN0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLW5vbi1leHRlbnNpYmxlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvYXJyYXktZm9yLWVhY2guanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9hcnJheS1mcm9tLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvYXJyYXktaW5jbHVkZXMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9hcnJheS1pdGVyYXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9hcnJheS1tZXRob2QtaGFzLXNwZWNpZXMtc3VwcG9ydC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2FycmF5LW1ldGhvZC1pcy1zdHJpY3QuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9hcnJheS1zbGljZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2FycmF5LXNvcnQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9hcnJheS1zcGVjaWVzLWNvbnN0cnVjdG9yLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvYXJyYXktc3BlY2llcy1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9jYWxsLXdpdGgtc2FmZS1pdGVyYXRpb24tY2xvc2luZy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2NoZWNrLWNvcnJlY3RuZXNzLW9mLWl0ZXJhdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2NsYXNzb2YtcmF3LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvY2xhc3NvZi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2NvbGxlY3Rpb24tc3Ryb25nLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvY29sbGVjdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2NvcHktY29uc3RydWN0b3ItcHJvcGVydGllcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2NvcnJlY3QtaXMtcmVnZXhwLWxvZ2ljLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvY29ycmVjdC1wcm90b3R5cGUtZ2V0dGVyLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvY3JlYXRlLWl0ZXItcmVzdWx0LW9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2NyZWF0ZS1wcm9wZXJ0eS1kZXNjcmlwdG9yLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZGF0ZS10by1wcmltaXRpdmUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9kZWZpbmUtYnVpbHQtaW4tYWNjZXNzb3IuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9kZWZpbmUtYnVpbHQtaW4uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9kZWZpbmUtYnVpbHQtaW5zLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZGVmaW5lLWdsb2JhbC1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2RlbGV0ZS1wcm9wZXJ0eS1vci10aHJvdy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2Rlc2NyaXB0b3JzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZG9jdW1lbnQtY3JlYXRlLWVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9kb2VzLW5vdC1leGNlZWQtc2FmZS1pbnRlZ2VyLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZG9tLWl0ZXJhYmxlcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2RvbS10b2tlbi1saXN0LXByb3RvdHlwZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2VuZ2luZS1mZi12ZXJzaW9uLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZW5naW5lLWlzLWJyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9lbmdpbmUtaXMtYnVuLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZW5naW5lLWlzLWRlbm8uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9lbmdpbmUtaXMtaWUtb3ItZWRnZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2VuZ2luZS1pcy1pb3MtcGViYmxlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZW5naW5lLWlzLWlvcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2VuZ2luZS1pcy1ub2RlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZW5naW5lLWlzLXdlYm9zLXdlYmtpdC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2VuZ2luZS11c2VyLWFnZW50LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZW5naW5lLXY4LXZlcnNpb24uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9lbmdpbmUtd2Via2l0LXZlcnNpb24uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9lbnVtLWJ1Zy1rZXlzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZXhwb3J0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZmFpbHMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9maXgtcmVnZXhwLXdlbGwta25vd24tc3ltYm9sLWxvZ2ljLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZnJlZXppbmcuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9mdW5jdGlvbi1hcHBseS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmQtY29udGV4dC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmQtbmF0aXZlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZnVuY3Rpb24tYmluZC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2Z1bmN0aW9uLWNhbGwuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9mdW5jdGlvbi1uYW1lLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzLWFjY2Vzc29yLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzLWNsYXVzZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2dldC1idWlsdC1pbi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2dldC1pdGVyYXRvci1tZXRob2QuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9nZXQtaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9nZXQtanNvbi1yZXBsYWNlci1mdW5jdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2dldC1tZXRob2QuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9nZXQtc3Vic3RpdHV0aW9uLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZ2xvYmFsLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2hpZGRlbi1rZXlzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaG9zdC1yZXBvcnQtZXJyb3JzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaHRtbC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2llOC1kb20tZGVmaW5lLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaW5kZXhlZC1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pbmhlcml0LWlmLXJlcXVpcmVkLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaW5zcGVjdC1zb3VyY2UuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pbnRlcm5hbC1tZXRhZGF0YS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2ludGVybmFsLXN0YXRlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaXMtYXJyYXktaXRlcmF0b3ItbWV0aG9kLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaXMtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pcy1jYWxsYWJsZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2lzLWNvbnN0cnVjdG9yLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaXMtZm9yY2VkLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaXMtbnVsbC1vci11bmRlZmluZWQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pcy1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pcy1wb3NzaWJsZS1wcm90b3R5cGUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pcy1wdXJlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaXMtcmVnZXhwLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaXMtc3ltYm9sLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaXRlcmF0ZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2l0ZXJhdG9yLWNsb3NlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaXRlcmF0b3ItY3JlYXRlLWNvbnN0cnVjdG9yLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaXRlcmF0b3ItZGVmaW5lLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaXRlcmF0b3JzLWNvcmUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pdGVyYXRvcnMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9sZW5ndGgtb2YtYXJyYXktbGlrZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL21ha2UtYnVpbHQtaW4uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9tYXRoLXRydW5jLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvbWljcm90YXNrLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvbmV3LXByb21pc2UtY2FwYWJpbGl0eS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL25vdC1hLXJlZ2V4cC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL29iamVjdC1hc3NpZ24uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vYmplY3QtY3JlYXRlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0aWVzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1uYW1lcy1leHRlcm5hbC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LW5hbWVzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktc3ltYm9scy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL29iamVjdC1nZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LWlzLWV4dGVuc2libGUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vYmplY3QtaXMtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LWtleXMtaW50ZXJuYWwuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vYmplY3Qta2V5cy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL29iamVjdC1wcm9wZXJ0eS1pcy1lbnVtZXJhYmxlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LXNldC1wcm90b3R5cGUtb2YuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vYmplY3QtdG8tYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vYmplY3QtdG8tc3RyaW5nLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb3JkaW5hcnktdG8tcHJpbWl0aXZlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb3duLWtleXMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9wYXRoLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvcGVyZm9ybS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3Byb21pc2UtY29uc3RydWN0b3ItZGV0ZWN0aW9uLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvcHJvbWlzZS1uYXRpdmUtY29uc3RydWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9wcm9taXNlLXJlc29sdmUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9wcm9taXNlLXN0YXRpY3MtaW5jb3JyZWN0LWl0ZXJhdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3Byb3h5LWFjY2Vzc29yLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvcXVldWUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9yZWdleHAtZXhlYy1hYnN0cmFjdC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3JlZ2V4cC1leGVjLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvcmVnZXhwLWZsYWdzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvcmVnZXhwLWdldC1mbGFncy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3JlZ2V4cC1zdGlja3ktaGVscGVycy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3JlZ2V4cC11bnN1cHBvcnRlZC1kb3QtYWxsLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvcmVnZXhwLXVuc3VwcG9ydGVkLW5jZy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3JlcXVpcmUtb2JqZWN0LWNvZXJjaWJsZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3NhZmUtZ2V0LWJ1aWx0LWluLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvc2NoZWR1bGVycy1maXguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9zZXQtc3BlY2llcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3NldC10by1zdHJpbmctdGFnLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvc2hhcmVkLWtleS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3NoYXJlZC1zdG9yZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3NoYXJlZC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3NwZWNpZXMtY29uc3RydWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9zdHJpbmctbXVsdGlieXRlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvc3RyaW5nLXRyaW0uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9zeW1ib2wtY29uc3RydWN0b3ItZGV0ZWN0aW9uLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvc3ltYm9sLWRlZmluZS10by1wcmltaXRpdmUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9zeW1ib2wtcmVnaXN0cnktZGV0ZWN0aW9uLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdGFzay5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3RoaXMtbnVtYmVyLXZhbHVlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdG8tYWJzb2x1dGUtaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3RvLWludGVnZXItb3ItaW5maW5pdHkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1sZW5ndGguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1wcmltaXRpdmUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1wcm9wZXJ0eS1rZXkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1zdHJpbmctdGFnLXN1cHBvcnQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1zdHJpbmcuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90cnktdG8tc3RyaW5nLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdWlkLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdXNlLXN5bWJvbC1hcy11aWQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy92OC1wcm90b3R5cGUtZGVmaW5lLWJ1Zy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3ZhbGlkYXRlLWFyZ3VtZW50cy1sZW5ndGguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy93ZWFrLW1hcC1iYXNpYy1kZXRlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbC1kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbC13cmFwcGVkLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy93aGl0ZXNwYWNlcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvci5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zb3J0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLmRhdGUudG8tcHJpbWl0aXZlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMubWFwLmNvbnN0cnVjdG9yLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLm1hcC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmFzc2lnbi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZW50cmllcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LXN5bWJvbHMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1wcm90b3R5cGUtb2YuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnNldC1wcm90b3R5cGUtb2YuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5wcm9taXNlLmFsbC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5wcm9taXNlLmNhdGNoLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLnByb21pc2UuY29uc3RydWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMucHJvbWlzZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5wcm9taXNlLnJhY2UuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMucHJvbWlzZS5yZWplY3QuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMucHJvbWlzZS5yZXNvbHZlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLnJlZmxlY3QuY29uc3RydWN0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5jb25zdHJ1Y3Rvci5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLnNldC5jb25zdHJ1Y3Rvci5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5zZXQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmVuZHMtd2l0aC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3RhcnRzLXdpdGguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmNvbnN0cnVjdG9yLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZm9yLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5pdGVyYXRvci5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmtleS1mb3IuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLnRvLXByaW1pdGl2ZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvd2ViLnNldC1pbnRlcnZhbC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy93ZWIuc2V0LXRpbWVvdXQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvd2ViLnRpbWVycy5qcyIsIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3ByZWFjdC9kaXN0L3ByZWFjdC5tb2R1bGUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9wcmVhY3QvaG9va3MvZGlzdC9ob29rcy5tb2R1bGUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9wcmVhY3QvY29tcGF0L2Rpc3QvY29tcGF0Lm1vZHVsZS5qcyIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2ljb25zLmpzeCIsIndlYnBhY2s6Ly8vLi91dGlscy9zdHJpbmdzLmpzIiwid2VicGFjazovLy8uL3V0aWxzL2kxOG4uanMiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy90ZXh0LmpzeCIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3NlcnZpY2UtaXRlbS5qc3giLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9zZXJ2aWNlcy5qc3giLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9wdXJwb3NlLWl0ZW0uanN4Iiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvcHVycG9zZXMuanN4Iiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvY29uc2VudC1tb2RhbC5qc3giLCJ3ZWJwYWNrOi8vLy4vdXRpbHMvY29uZmlnLmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvY29uc2VudC1ub3RpY2UuanN4Iiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvYXBwLmpzeCIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2NvbnRleHR1YWwtY29uc2VudC1ub3RpY2UuanN4Iiwid2VicGFjazovLy8uL3V0aWxzL2FwaS5qcyIsIndlYnBhY2s6Ly8vLi91dGlscy9tYXBzLmpzIiwid2VicGFjazovLy8uL3RoZW1lcy5qcyIsIndlYnBhY2s6Ly8vLi9zY3NzL2tsYXJvLnNjc3M/ZjZjZSIsIndlYnBhY2s6Ly8vLi9saWIuanMiLCJ3ZWJwYWNrOi8vLy4vdXRpbHMvc3R5bGluZy5qcyIsIndlYnBhY2s6Ly8vLi9rbGFyby5qcyIsIndlYnBhY2s6Ly8vLi90cmFuc2xhdGlvbnMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vdHJhbnNsYXRpb25zL2NhLnltbCIsIndlYnBhY2s6Ly8vLi90cmFuc2xhdGlvbnMvY3MueW1sIiwid2VicGFjazovLy8uL3RyYW5zbGF0aW9ucy9kYS55bWwiLCJ3ZWJwYWNrOi8vLy4vdHJhbnNsYXRpb25zL2RlLnltbCIsIndlYnBhY2s6Ly8vLi90cmFuc2xhdGlvbnMvZWwueW1sIiwid2VicGFjazovLy8uL3RyYW5zbGF0aW9ucy9lbi55bWwiLCJ3ZWJwYWNrOi8vLy4vdHJhbnNsYXRpb25zL3poLnltbCIsIndlYnBhY2s6Ly8vLi90cmFuc2xhdGlvbnMvcHQueW1sIiwid2VicGFjazovLy8uL3RyYW5zbGF0aW9ucy9lcy55bWwiLCJ3ZWJwYWNrOi8vLy4vdHJhbnNsYXRpb25zL2ZpLnltbCIsIndlYnBhY2s6Ly8vLi90cmFuc2xhdGlvbnMvZnIueW1sIiwid2VicGFjazovLy8uL3RyYW5zbGF0aW9ucy9nbC55bWwiLCJ3ZWJwYWNrOi8vLy4vdHJhbnNsYXRpb25zL2h1LnltbCIsIndlYnBhY2s6Ly8vLi90cmFuc2xhdGlvbnMvaHIueW1sIiwid2VicGFjazovLy8uL3RyYW5zbGF0aW9ucy9pdC55bWwiLCJ3ZWJwYWNrOi8vLy4vdHJhbnNsYXRpb25zL25sLnltbCIsIndlYnBhY2s6Ly8vLi90cmFuc2xhdGlvbnMvbm8ueW1sIiwid2VicGFjazovLy8uL3RyYW5zbGF0aW9ucy9vYy55bWwiLCJ3ZWJwYWNrOi8vLy4vdHJhbnNsYXRpb25zL3JvLnltbCIsIndlYnBhY2s6Ly8vLi90cmFuc2xhdGlvbnMvc3IueW1sIiwid2VicGFjazovLy8uL3RyYW5zbGF0aW9ucy9zcl9jeXJsLnltbCIsIndlYnBhY2s6Ly8vLi90cmFuc2xhdGlvbnMvc3YueW1sIiwid2VicGFjazovLy8uL3RyYW5zbGF0aW9ucy90ci55bWwiLCJ3ZWJwYWNrOi8vLy4vdHJhbnNsYXRpb25zL3BsLnltbCIsIndlYnBhY2s6Ly8vLi90cmFuc2xhdGlvbnMvcnUueW1sIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiB3ZWJwYWNrVW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbihyb290LCBmYWN0b3J5KSB7XG5cdGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0Jylcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcblx0ZWxzZSBpZih0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpXG5cdFx0ZGVmaW5lKFtdLCBmYWN0b3J5KTtcblx0ZWxzZSBpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpXG5cdFx0ZXhwb3J0c1tcImtsYXJvXCJdID0gZmFjdG9yeSgpO1xuXHRlbHNlXG5cdFx0cm9vdFtcImtsYXJvXCJdID0gZmFjdG9yeSgpO1xufSkoc2VsZiwgKCkgPT4ge1xucmV0dXJuICIsImV4cG9ydCBmdW5jdGlvbiBnZXRDb29raWVzKCkge1xuICAgIGNvbnN0IGNvb2tpZVN0cmluZ3MgPSBkb2N1bWVudC5jb29raWUuc3BsaXQoJzsnKTtcbiAgICBjb25zdCBjb29raWVzID0gW107XG4gICAgY29uc3QgcmVnZXggPSBuZXcgUmVnRXhwKCdeXFxcXHMqKFtePV0rKVxcXFxzKj1cXFxccyooLio/KSQnKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvb2tpZVN0cmluZ3MubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgY29va2llU3RyID0gY29va2llU3RyaW5nc1tpXTtcbiAgICAgICAgY29uc3QgbWF0Y2ggPSByZWdleC5leGVjKGNvb2tpZVN0cik7XG4gICAgICAgIGlmIChtYXRjaCA9PT0gbnVsbCkgY29udGludWU7XG4gICAgICAgIGNvb2tpZXMucHVzaCh7XG4gICAgICAgICAgICBuYW1lOiBtYXRjaFsxXSxcbiAgICAgICAgICAgIHZhbHVlOiBtYXRjaFsyXSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBjb29raWVzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q29va2llKG5hbWUpIHtcbiAgICBjb25zdCBjb29raWVzID0gZ2V0Q29va2llcygpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY29va2llcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoY29va2llc1tpXS5uYW1lID09PSBuYW1lKSByZXR1cm4gY29va2llc1tpXTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59XG5cbi8vaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMTQ1NzMyMjMvc2V0LWNvb2tpZS1hbmQtZ2V0LWNvb2tpZS13aXRoLWphdmFzY3JpcHRcbmV4cG9ydCBmdW5jdGlvbiBzZXRDb29raWUobmFtZSwgdmFsdWUsIGRheXMsIGRvbWFpbiwgcGF0aCkge1xuICAgIGxldCBleHBpcmVzID0gJyc7XG4gICAgaWYgKGRheXMpIHtcbiAgICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgICAgIGRhdGUuc2V0VGltZShkYXRlLmdldFRpbWUoKSArIGRheXMgKiAyNCAqIDYwICogNjAgKiAxMDAwKTtcbiAgICAgICAgZXhwaXJlcyA9ICc7IGV4cGlyZXM9JyArIGRhdGUudG9VVENTdHJpbmcoKTtcbiAgICB9XG4gICAgaWYgKGRvbWFpbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGV4cGlyZXMgKz0gJzsgZG9tYWluPScgKyBkb21haW47XG4gICAgfVxuICAgIGlmIChwYXRoICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgZXhwaXJlcyArPSAnOyBwYXRoPScgKyBwYXRoO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGV4cGlyZXMgKz0gJzsgcGF0aD0vJztcbiAgICB9XG4gICAgZG9jdW1lbnQuY29va2llID1cbiAgICAgICAgbmFtZSArICc9JyArICh2YWx1ZSB8fCAnJykgKyBleHBpcmVzICsgJzsgU2FtZVNpdGU9TGF4Jztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRlbGV0ZUNvb2tpZShuYW1lLCBwYXRoLCBkb21haW4pIHtcbiAgICBsZXQgc3RyID0gbmFtZSArICc9OyBNYXgtQWdlPS05OTk5OTk5OTsnO1xuICAgIC8vIHRyeSB0byBkZWxldGUgdGhlIGNvb2tpZSB3aXRob3V0IGFueSBwYXRoIGFuZCBkb21haW5cbiAgICBkb2N1bWVudC5jb29raWUgPSBzdHI7XG4gICAgc3RyICs9ICcgcGF0aD0nICsgKHBhdGggfHwgJy8nKSArICc7JztcbiAgICAvLyB0cnkgdG8gZGVsZXRlIHRoZSBjb29raWUgd2l0aCBwYXRoXG4gICAgZG9jdW1lbnQuY29va2llID0gc3RyO1xuICAgIGlmIChkb21haW4gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBzdHIgKz0gJyBkb21haW49JyArIGRvbWFpbiArICc7JztcbiAgICAgICAgLy8gdHJ5IHRvIGRlbGV0ZSB0aGUgY29va2llIHdpdGggZG9tYWluIGFuZCBwYXRoXG4gICAgICAgIGRvY3VtZW50LmNvb2tpZSA9IHN0cjtcbiAgICB9XG59XG4iLCJpbXBvcnQge2dldENvb2tpZSwgc2V0Q29va2llLCBkZWxldGVDb29raWV9IGZyb20gJy4vdXRpbHMvY29va2llcydcblxuXG5leHBvcnQgY2xhc3MgVGVzdFN0b3JlIHtcbiAgICBjb25zdHJ1Y3Rvcigpe1xuICAgICAgICB0aGlzLnZhbHVlID0gbnVsbFxuICAgIH1cblxuICAgIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWVcbiAgICB9XG5cbiAgICBzZXQodmFsdWUpIHtcbiAgICAgICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICAgIH1cblxuICAgIGRlbGV0ZSgpIHtcbiAgICAgICAgdGhpcy52YWx1ZSA9IG51bGxcbiAgICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDb29raWVTdG9yZSB7XG4gICAgY29uc3RydWN0b3IobWFuYWdlcikge1xuICAgICAgICB0aGlzLmNvb2tpZU5hbWUgPSBtYW5hZ2VyLnN0b3JhZ2VOYW1lXG4gICAgICAgIHRoaXMuY29va2llRG9tYWluID0gbWFuYWdlci5jb29raWVEb21haW5cbiAgICAgICAgdGhpcy5jb29raWVQYXRoID0gbWFuYWdlci5jb29raWVQYXRoXG4gICAgICAgIHRoaXMuY29va2llRXhwaXJlc0FmdGVyRGF5cyA9IG1hbmFnZXIuY29va2llRXhwaXJlc0FmdGVyRGF5c1xuICAgIH1cblxuICAgIGdldCgpIHtcbiAgICAgICAgY29uc3QgY29va2llID0gZ2V0Q29va2llKHRoaXMuY29va2llTmFtZSk7XG4gICAgICAgIHJldHVybiBjb29raWVcbiAgICAgICAgICAgID8gY29va2llLnZhbHVlXG4gICAgICAgICAgICA6IG51bGw7XG4gICAgfVxuXG4gICAgc2V0KHZhbHVlKSB7XG4gICAgICAgIHJldHVybiBzZXRDb29raWUodGhpcy5jb29raWVOYW1lLCB2YWx1ZSwgdGhpcy5jb29raWVFeHBpcmVzQWZ0ZXJEYXlzLCB0aGlzLmNvb2tpZURvbWFpbiwgdGhpcy5jb29raWVQYXRoKVxuICAgIH1cblxuICAgIGRlbGV0ZSgpIHtcbiAgICAgICAgcmV0dXJuIGRlbGV0ZUNvb2tpZSh0aGlzLmNvb2tpZU5hbWUpO1xuICAgIH1cbn1cblxuY2xhc3MgU3RvcmFnZVN0b3JlIHtcbiAgICBjb25zdHJ1Y3RvcihtYW5hZ2VyLCBoYW5kbGUpIHtcbiAgICAgICAgdGhpcy5rZXkgPSBtYW5hZ2VyLnN0b3JhZ2VOYW1lO1xuICAgICAgICB0aGlzLmhhbmRsZSA9IGhhbmRsZVxuICAgIH1cblxuICAgIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaGFuZGxlLmdldEl0ZW0odGhpcy5rZXkpO1xuICAgIH1cblxuICAgIGdldFdpdGhLZXkoa2V5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmhhbmRsZS5nZXRJdGVtKGtleSk7XG4gICAgfVxuXG4gICAgc2V0KHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmhhbmRsZS5zZXRJdGVtKHRoaXMua2V5LCB2YWx1ZSlcbiAgICB9XG5cbiAgICBzZXRXaXRoS2V5KGtleSwgdmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaGFuZGxlLnNldEl0ZW0oa2V5LCB2YWx1ZSlcbiAgICB9XG5cbiAgICBkZWxldGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmhhbmRsZS5yZW1vdmVJdGVtKHRoaXMua2V5KTtcbiAgICB9XG5cbiAgICBkZWxldGVXaXRoS2V5KGtleSkge1xuICAgICAgICByZXR1cm4gdGhpcy5oYW5kbGUucmVtb3ZlSXRlbShrZXkpO1xuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIExvY2FsU3RvcmFnZVN0b3JlIGV4dGVuZHMgU3RvcmFnZVN0b3JlIHtcbiAgICBjb25zdHJ1Y3RvcihtYW5hZ2VyKXtcbiAgICAgICAgc3VwZXIobWFuYWdlciwgbG9jYWxTdG9yYWdlKVxuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIFNlc3Npb25TdG9yYWdlU3RvcmUgZXh0ZW5kcyBTdG9yYWdlU3RvcmUge1xuICAgIGNvbnN0cnVjdG9yKG1hbmFnZXIpe1xuICAgICAgICBzdXBlcihtYW5hZ2VyLCBzZXNzaW9uU3RvcmFnZSlcbiAgICB9XG59XG5cbmNvbnN0IHN0b3JlcyA9IHtcbiAgICAnY29va2llJzogQ29va2llU3RvcmUsXG4gICAgJ3Rlc3QnOiBUZXN0U3RvcmUsXG4gICAgJ2xvY2FsU3RvcmFnZSc6IExvY2FsU3RvcmFnZVN0b3JlLFxuICAgICdzZXNzaW9uU3RvcmFnZSc6IFNlc3Npb25TdG9yYWdlU3RvcmUsXG59XG5cbmV4cG9ydCBkZWZhdWx0IHN0b3Jlc1xuIiwiaW1wb3J0IHtnZXRDb29raWVzLCBkZWxldGVDb29raWV9IGZyb20gJy4vdXRpbHMvY29va2llcydcbmltcG9ydCB7ZGF0YXNldCwgYXBwbHlEYXRhc2V0fSBmcm9tICcuL3V0aWxzL2NvbXBhdCdcbmltcG9ydCBzdG9yZXMsIHsgU2Vzc2lvblN0b3JhZ2VTdG9yZSB9IGZyb20gJy4vc3RvcmVzJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb25zZW50TWFuYWdlciB7XG5cbiAgICBjb25zdHJ1Y3Rvcihjb25maWcsIHN0b3JlLCBhdXhpbGlhcnlTdG9yZSl7XG4gICAgICAgIHRoaXMuY29uZmlnID0gY29uZmlnIC8vIHRoZSBjb25maWd1cmF0aW9uXG5cbiAgICAgICAgaWYgKHN0b3JlICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICB0aGlzLnN0b3JlID0gc3RvcmVcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgdGhpcy5zdG9yZSA9IG5ldyBzdG9yZXNbdGhpcy5zdG9yYWdlTWV0aG9kXSh0aGlzKVxuXG4gICAgICAgIC8vIHdlIGZhbGwgYmFjayB0byB0aGUgY29va2llLWJhc2VkIHN0b3JlIGlmIHRoZSBzdG9yZSBpcyB1bmRlZmluZWRcbiAgICAgICAgaWYgKHRoaXMuc3RvcmUgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHRoaXMuc3RvcmUgPSBzdG9yZXNbJ2Nvb2tpZSddXG5cbiAgICAgICAgaWYgKGF1eGlsaWFyeVN0b3JlICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICB0aGlzLmF1eGlsaWFyeVN0b3JlID0gYXV4aWxpYXJ5U3RvcmVcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgdGhpcy5hdXhpbGlhcnlTdG9yZSA9IG5ldyBTZXNzaW9uU3RvcmFnZVN0b3JlKHRoaXMpXG5cbiAgICAgICAgdGhpcy5jb25zZW50cyA9IHRoaXMuZGVmYXVsdENvbnNlbnRzIC8vIHRoZSBjb25zZW50IHN0YXRlcyBvZiB0aGUgY29uZmlndXJlZCBzZXJ2aWNlc1xuICAgICAgICB0aGlzLmNvbmZpcm1lZCA9IGZhbHNlIC8vIHRydWUgaWYgdGhlIHVzZXIgYWN0aXZlbHkgY29uZmlybWVkIGhpcy9oZXIgY29uc2VudFxuICAgICAgICB0aGlzLmNoYW5nZWQgPSBmYWxzZSAvLyB0cnVlIGlmIHRoZSBzZXJ2aWNlIGNvbmZpZyBjaGFuZ2VkIGNvbXBhcmVkIHRvIHRoZSBjb29raWVcbiAgICAgICAgdGhpcy5zdGF0ZXMgPSB7fSAvLyBrZWVwIHRyYWNrIG9mIHRoZSBjaGFuZ2UgKGVuYWJsZWQsIGRpc2FibGVkKSBvZiBpbmRpdmlkdWFsIHNlcnZpY2VzXG4gICAgICAgIHRoaXMuaW5pdGlhbGl6ZWQgPSB7fSAvLyBrZWVwIHRyYWNrIG9mIHdoaWNoIHNlcnZpY2VzIGhhdmUgYmVlbiBpbml0aWFsaXplZCBhbHJlYWR5XG4gICAgICAgIHRoaXMuZXhlY3V0ZWRPbmNlID0ge30gLy9rZWVwIHRyYWNrIG9mIHdoaWNoIHNlcnZpY2VzIGhhdmUgYmVlbiBleGVjdXRlZCBhdCBsZWFzdCBvbmNlXG4gICAgICAgIHRoaXMud2F0Y2hlcnMgPSBuZXcgU2V0KFtdKVxuICAgICAgICB0aGlzLmxvYWRDb25zZW50cygpXG4gICAgICAgIHRoaXMuYXBwbHlDb25zZW50cygpXG4gICAgICAgIHRoaXMuc2F2ZWRDb25zZW50cyA9IHsuLi50aGlzLmNvbnNlbnRzfVxuICAgIH1cblxuICAgIGdldCBzdG9yYWdlTWV0aG9kKCl7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbmZpZy5zdG9yYWdlTWV0aG9kIHx8ICdjb29raWUnXG4gICAgfVxuXG4gICAgZ2V0IHN0b3JhZ2VOYW1lKCl7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbmZpZy5zdG9yYWdlTmFtZSB8fCB0aGlzLmNvbmZpZy5jb29raWVOYW1lIHx8ICdrbGFybycgLy8gZGVwcmVjYXRlZDogY29va2llTmFtZVxuICAgIH1cblxuICAgIGdldCBjb29raWVEb21haW4oKXtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29uZmlnLmNvb2tpZURvbWFpbiB8fCB1bmRlZmluZWRcbiAgICB9XG5cbiAgICBnZXQgY29va2llUGF0aCgpe1xuICAgICAgICByZXR1cm4gdGhpcy5jb25maWcuY29va2llUGF0aCB8fCB1bmRlZmluZWRcbiAgICB9XG5cbiAgICBnZXQgY29va2llRXhwaXJlc0FmdGVyRGF5cygpe1xuICAgICAgICByZXR1cm4gdGhpcy5jb25maWcuY29va2llRXhwaXJlc0FmdGVyRGF5cyB8fCAxMjBcbiAgICB9XG5cbiAgICBnZXQgZGVmYXVsdENvbnNlbnRzKCl7XG4gICAgICAgIGNvbnN0IGNvbnNlbnRzID0ge31cbiAgICAgICAgZm9yKGxldCBpPTA7aTx0aGlzLmNvbmZpZy5zZXJ2aWNlcy5sZW5ndGg7aSsrKXtcbiAgICAgICAgICAgIGNvbnN0IHNlcnZpY2UgPSB0aGlzLmNvbmZpZy5zZXJ2aWNlc1tpXVxuICAgICAgICAgICAgY29uc2VudHNbc2VydmljZS5uYW1lXSA9IHRoaXMuZ2V0RGVmYXVsdENvbnNlbnQoc2VydmljZSlcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY29uc2VudHNcbiAgICB9XG5cbiAgICB3YXRjaCh3YXRjaGVyKXtcbiAgICAgICAgaWYgKCF0aGlzLndhdGNoZXJzLmhhcyh3YXRjaGVyKSlcbiAgICAgICAgICAgIHRoaXMud2F0Y2hlcnMuYWRkKHdhdGNoZXIpXG4gICAgfVxuXG4gICAgdW53YXRjaCh3YXRjaGVyKXtcbiAgICAgICAgaWYgKHRoaXMud2F0Y2hlcnMuaGFzKHdhdGNoZXIpKVxuICAgICAgICAgICAgdGhpcy53YXRjaGVycy5kZWxldGUod2F0Y2hlcilcbiAgICB9XG5cbiAgICBub3RpZnkobmFtZSwgZGF0YSl7XG4gICAgICAgIHRoaXMud2F0Y2hlcnMuZm9yRWFjaCgod2F0Y2hlcikgPT4ge1xuICAgICAgICAgICAgd2F0Y2hlci51cGRhdGUodGhpcywgbmFtZSwgZGF0YSlcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBnZXRTZXJ2aWNlKG5hbWUpe1xuICAgICAgICBjb25zdCBtYXRjaGluZ1NlcnZpY2VzID0gdGhpcy5jb25maWcuc2VydmljZXMuZmlsdGVyKHNlcnZpY2U9PnNlcnZpY2UubmFtZSA9PT0gbmFtZSlcbiAgICAgICAgaWYgKG1hdGNoaW5nU2VydmljZXMubGVuZ3RoID4gMClcbiAgICAgICAgICAgIHJldHVybiBtYXRjaGluZ1NlcnZpY2VzWzBdXG4gICAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICB9XG5cbiAgICBnZXREZWZhdWx0Q29uc2VudChzZXJ2aWNlKXtcbiAgICAgICAgbGV0IGNvbnNlbnQgPSBzZXJ2aWNlLmRlZmF1bHQgfHwgc2VydmljZS5yZXF1aXJlZFxuICAgICAgICBpZiAoY29uc2VudCA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgY29uc2VudCA9IHRoaXMuY29uZmlnLmRlZmF1bHRcbiAgICAgICAgaWYgKGNvbnNlbnQgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIGNvbnNlbnQgPSBmYWxzZVxuICAgICAgICByZXR1cm4gY29uc2VudFxuICAgIH1cblxuICAgIGNoYW5nZUFsbCh2YWx1ZSl7XG4gICAgICAgIGxldCBjaGFuZ2VkU2VydmljZXMgPSAwXG4gICAgICAgIHRoaXMuY29uZmlnLnNlcnZpY2VzLmZpbHRlcihzZXJ2aWNlID0+ICFzZXJ2aWNlLmNvbnRleHR1YWxDb25zZW50T25seSkubWFwKHNlcnZpY2UgPT4ge1xuICAgICAgICAgICAgaWYoc2VydmljZS5yZXF1aXJlZCB8fCB0aGlzLmNvbmZpZy5yZXF1aXJlZCB8fCB2YWx1ZSkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnVwZGF0ZUNvbnNlbnQoc2VydmljZS5uYW1lLCB0cnVlKSlcbiAgICAgICAgICAgICAgICAgICAgY2hhbmdlZFNlcnZpY2VzKytcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMudXBkYXRlQ29uc2VudChzZXJ2aWNlLm5hbWUsIGZhbHNlKSlcbiAgICAgICAgICAgICAgICAgICAgY2hhbmdlZFNlcnZpY2VzKytcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgcmV0dXJuIGNoYW5nZWRTZXJ2aWNlc1xuICAgIH1cblxuICAgIHVwZGF0ZUNvbnNlbnQobmFtZSwgdmFsdWUpe1xuICAgICAgICBjb25zdCBjaGFuZ2VkID0gKHRoaXMuY29uc2VudHNbbmFtZV0gfHwgZmFsc2UpICE9PSB2YWx1ZVxuICAgICAgICB0aGlzLmNvbnNlbnRzW25hbWVdID0gdmFsdWVcbiAgICAgICAgdGhpcy5ub3RpZnkoJ2NvbnNlbnRzJywgdGhpcy5jb25zZW50cylcbiAgICAgICAgcmV0dXJuIGNoYW5nZWRcbiAgICB9XG5cbiAgICByZXNldENvbnNlbnRzKCl7XG4gICAgICAgIHRoaXMuY29uc2VudHMgPSB0aGlzLmRlZmF1bHRDb25zZW50c1xuICAgICAgICB0aGlzLnN0YXRlcyA9IHt9XG4gICAgICAgIHRoaXMuY29uZmlybWVkID0gZmFsc2VcbiAgICAgICAgdGhpcy5hcHBseUNvbnNlbnRzKClcbiAgICAgICAgdGhpcy5zYXZlZENvbnNlbnRzID0gey4uLnRoaXMuY29uc2VudHN9XG4gICAgICAgIHRoaXMuc3RvcmUuZGVsZXRlKClcbiAgICAgICAgdGhpcy5ub3RpZnkoJ2NvbnNlbnRzJywgdGhpcy5jb25zZW50cylcbiAgICB9XG5cbiAgICBnZXRDb25zZW50KG5hbWUpe1xuICAgICAgICByZXR1cm4gdGhpcy5jb25zZW50c1tuYW1lXSB8fCBmYWxzZVxuICAgIH1cblxuICAgIGxvYWRDb25zZW50cygpe1xuICAgICAgICBjb25zdCBjb25zZW50RGF0YSA9IHRoaXMuc3RvcmUuZ2V0KCk7XG4gICAgICAgIGlmIChjb25zZW50RGF0YSAhPT0gbnVsbCl7XG4gICAgICAgICAgICB0aGlzLmNvbnNlbnRzID0gSlNPTi5wYXJzZShkZWNvZGVVUklDb21wb25lbnQoY29uc2VudERhdGEpKVxuICAgICAgICAgICAgdGhpcy5fY2hlY2tDb25zZW50cygpXG4gICAgICAgICAgICB0aGlzLm5vdGlmeSgnY29uc2VudHMnLCB0aGlzLmNvbnNlbnRzKVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnNlbnRzXG4gICAgfVxuXG4gICAgc2F2ZUFuZEFwcGx5Q29uc2VudHMoZXZlbnRUeXBlKXtcbiAgICAgICAgdGhpcy5zYXZlQ29uc2VudHMoZXZlbnRUeXBlKVxuICAgICAgICB0aGlzLmFwcGx5Q29uc2VudHMoKVxuICAgIH1cblxuICAgIGNoYW5nZWRDb25zZW50cygpe1xuICAgICAgICBjb25zdCBjYyA9IHt9XG4gICAgICAgIGZvcihjb25zdCBbaywgdl0gb2YgT2JqZWN0LmVudHJpZXModGhpcy5jb25zZW50cykpe1xuICAgICAgICAgICAgaWYgKHRoaXMuc2F2ZWRDb25zZW50c1trXSAhPT0gdilcbiAgICAgICAgICAgICAgICBjY1trXSA9IHZcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY2NcbiAgICB9XG5cbiAgICBzYXZlQ29uc2VudHMoZXZlbnRUeXBlKXtcbiAgICAgICAgY29uc3QgdiA9IGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeSh0aGlzLmNvbnNlbnRzKSlcbiAgICAgICAgdGhpcy5zdG9yZS5zZXQodik7XG4gICAgICAgIHRoaXMuY29uZmlybWVkID0gdHJ1ZVxuICAgICAgICB0aGlzLmNoYW5nZWQgPSBmYWxzZVxuICAgICAgICBjb25zdCBjaGFuZ2VzID0gdGhpcy5jaGFuZ2VkQ29uc2VudHMoKVxuICAgICAgICB0aGlzLnNhdmVkQ29uc2VudHMgPSB7Li4udGhpcy5jb25zZW50c31cbiAgICAgICAgdGhpcy5ub3RpZnkoJ3NhdmVDb25zZW50cycsIHtjaGFuZ2VzOiBjaGFuZ2VzLCBjb25zZW50czogdGhpcy5jb25zZW50cywgdHlwZTogZXZlbnRUeXBlIHx8ICdzY3JpcHQnfSlcbiAgICB9XG5cbiAgICBhcHBseUNvbnNlbnRzKGRyeVJ1biwgaW50ZXJhY3RpdmUsIHNlcnZpY2VOYW1lKXtcblxuICAgICAgICBmdW5jdGlvbiBleGVjdXRlSGFuZGxlcihoYW5kbGVyLCBvcHRzKXtcbiAgICAgICAgICAgIGlmIChoYW5kbGVyID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICBsZXQgaGFuZGxlckZ1bmN0aW9uXG4gICAgICAgICAgICBpZiAodHlwZW9mIGhhbmRsZXIgPT09ICdmdW5jdGlvbicpe1xuICAgICAgICAgICAgICAgIGhhbmRsZXJGdW5jdGlvbiA9IGhhbmRsZXJcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5ldy1mdW5jXG4gICAgICAgICAgICAgICAgaGFuZGxlckZ1bmN0aW9uID0gbmV3IEZ1bmN0aW9uKCdvcHRzJywgaGFuZGxlcilcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBoYW5kbGVyRnVuY3Rpb24ob3B0cylcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBjaGFuZ2VkU2VydmljZXMgPSAwXG5cbiAgICAgICAgLy8gd2UgbWFrZSBzdXJlIGFsbCBzZXJ2aWNlcyBhcmUgcHJvcGVybHkgaW5pdGlhbGl6ZWRcbiAgICAgICAgZm9yKGxldCBpPTA7aTx0aGlzLmNvbmZpZy5zZXJ2aWNlcy5sZW5ndGg7aSsrKXtcbiAgICAgICAgICAgIGNvbnN0IHNlcnZpY2UgPSB0aGlzLmNvbmZpZy5zZXJ2aWNlc1tpXVxuICAgICAgICAgICAgaWYgKHNlcnZpY2VOYW1lICE9PSB1bmRlZmluZWQgJiYgc2VydmljZU5hbWUgIT09IHNlcnZpY2UubmFtZSlcbiAgICAgICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgICAgY29uc3QgdmFycyA9IHNlcnZpY2UudmFycyB8fCB7fVxuICAgICAgICAgICAgY29uc3QgaGFuZGxlck9wdHMgPSB7c2VydmljZTogc2VydmljZSwgY29uZmlnOiB0aGlzLmNvbmZpZywgdmFyczogdmFyc31cbiAgICAgICAgICAgIC8vIHdlIGV4ZWN1dGUgdGhlIGluaXQgZnVuY3Rpb24gb2YgdGhlIHNlcnZpY2UgKGlmIGl0IGlzIGRlZmluZWQpXG4gICAgICAgICAgICBpZiAoIXRoaXMuaW5pdGlhbGl6ZWRbc2VydmljZS5uYW1lXSl7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0aWFsaXplZFtzZXJ2aWNlLm5hbWVdID0gdHJ1ZVxuICAgICAgICAgICAgICAgIGV4ZWN1dGVIYW5kbGVyKHNlcnZpY2Uub25Jbml0LCBoYW5kbGVyT3B0cylcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZvcihsZXQgaT0wO2k8dGhpcy5jb25maWcuc2VydmljZXMubGVuZ3RoO2krKyl7XG4gICAgICAgICAgICBjb25zdCBzZXJ2aWNlID0gdGhpcy5jb25maWcuc2VydmljZXNbaV1cbiAgICAgICAgICAgIGlmIChzZXJ2aWNlTmFtZSAhPT0gdW5kZWZpbmVkICYmIHNlcnZpY2VOYW1lICE9PSBzZXJ2aWNlLm5hbWUpXG4gICAgICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICAgIGNvbnN0IHN0YXRlID0gdGhpcy5zdGF0ZXNbc2VydmljZS5uYW1lXVxuICAgICAgICAgICAgY29uc3QgdmFycyA9IHNlcnZpY2UudmFycyB8fCB7fVxuICAgICAgICAgICAgY29uc3Qgb3B0T3V0ID0gKHNlcnZpY2Uub3B0T3V0ICE9PSB1bmRlZmluZWQgPyBzZXJ2aWNlLm9wdE91dCA6ICh0aGlzLmNvbmZpZy5vcHRPdXQgfHwgZmFsc2UpKVxuICAgICAgICAgICAgY29uc3QgcmVxdWlyZWQgPSAoc2VydmljZS5yZXF1aXJlZCAhPT0gdW5kZWZpbmVkID8gc2VydmljZS5yZXF1aXJlZCA6ICh0aGlzLmNvbmZpZy5yZXF1aXJlZCB8fCBmYWxzZSkpXG4gICAgICAgICAgICAvL29wdCBvdXQgYW5kIHJlcXVpcmVkIHNlcnZpY2VzIGFyZSBhbHdheXMgdHJlYXRlZCBhcyBjb25maXJtZWRcbiAgICAgICAgICAgIGNvbnN0IGNvbmZpcm1lZCA9IHRoaXMuY29uZmlybWVkIHx8IG9wdE91dCB8fCBkcnlSdW4gfHwgaW50ZXJhY3RpdmVcbiAgICAgICAgICAgIGNvbnN0IGNvbnNlbnQgPSAodGhpcy5nZXRDb25zZW50KHNlcnZpY2UubmFtZSkgJiYgY29uZmlybWVkKSB8fCByZXF1aXJlZFxuICAgICAgICAgICAgY29uc3QgaGFuZGxlck9wdHMgPSB7c2VydmljZTogc2VydmljZSwgY29uZmlnOiB0aGlzLmNvbmZpZywgdmFyczogdmFycywgY29uc2VudHM6IHRoaXMuY29uc2VudHMsIGNvbmZpcm1lZDogdGhpcy5jb25maXJtZWR9XG5cbiAgICAgICAgICAgIGlmIChzdGF0ZSAhPT0gY29uc2VudClcbiAgICAgICAgICAgICAgICBjaGFuZ2VkU2VydmljZXMrK1xuXG4gICAgICAgICAgICBpZiAoZHJ5UnVuKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlXG5cbiAgICAgICAgICAgIC8vIHdlIGV4ZWN1dGUgY3VzdG9tIHNlcnZpY2UgaGFuZGxlcnMgKGlmIHRoZXkgYXJlIGRlZmluZWQpXG4gICAgICAgICAgICBleGVjdXRlSGFuZGxlcihjb25zZW50ID8gc2VydmljZS5vbkFjY2VwdCA6IHNlcnZpY2Uub25EZWNsaW5lLCBoYW5kbGVyT3B0cylcbiAgICAgICAgICAgIHRoaXMudXBkYXRlU2VydmljZUVsZW1lbnRzKHNlcnZpY2UsIGNvbnNlbnQpXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVNlcnZpY2VTdG9yYWdlKHNlcnZpY2UsIGNvbnNlbnQpXG5cbiAgICAgICAgICAgIC8vIHdlIGV4ZWN1dGUgdGhlIHNlcnZpY2UgY2FsbGJhY2sgKGlmIG9uZSBpcyBkZWZpbmVkKVxuICAgICAgICAgICAgaWYgKHNlcnZpY2UuY2FsbGJhY2sgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICBzZXJ2aWNlLmNhbGxiYWNrKGNvbnNlbnQsIHNlcnZpY2UpXG5cbiAgICAgICAgICAgIC8vIHdlIGV4ZWN1dGUgdGhlIGdsb2JhbCBjYWxsYmFjayAoaWYgb25lIGlzIGRlZmluZWQpXG4gICAgICAgICAgICBpZiAodGhpcy5jb25maWcuY2FsbGJhY2sgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICB0aGlzLmNvbmZpZy5jYWxsYmFjayhjb25zZW50LCBzZXJ2aWNlKVxuXG4gICAgICAgICAgICB0aGlzLnN0YXRlc1tzZXJ2aWNlLm5hbWVdID0gY29uc2VudFxuICAgICAgICB9XG4gICAgICAgIHRoaXMubm90aWZ5KCdhcHBseUNvbnNlbnRzJywgY2hhbmdlZFNlcnZpY2VzLCBzZXJ2aWNlTmFtZSlcbiAgICAgICAgcmV0dXJuIGNoYW5nZWRTZXJ2aWNlc1xuICAgIH1cblxuICAgIHVwZGF0ZVNlcnZpY2VFbGVtZW50cyhzZXJ2aWNlLCBjb25zZW50KXtcblxuICAgICAgICAvLyB3ZSBtYWtlIHN1cmUgd2UgZXhlY3V0ZSB0aGlzIHNlcnZpY2Ugb25seSBvbmNlIGlmIHRoZSBvcHRpb24gaXMgc2V0XG4gICAgICAgIGlmIChjb25zZW50KXtcbiAgICAgICAgICAgIGlmIChzZXJ2aWNlLm9ubHlPbmNlICYmIHRoaXMuZXhlY3V0ZWRPbmNlW3NlcnZpY2UubmFtZV0pXG4gICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICB0aGlzLmV4ZWN1dGVkT25jZVtzZXJ2aWNlLm5hbWVdID0gdHJ1ZVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgZWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtbmFtZT0nXCIrc2VydmljZS5uYW1lK1wiJ11cIilcbiAgICAgICAgZm9yKGxldCBpPTA7aTxlbGVtZW50cy5sZW5ndGg7aSsrKXtcblxuICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IGVsZW1lbnRzW2ldXG5cbiAgICAgICAgICAgIGNvbnN0IHBhcmVudCA9IGVsZW1lbnQucGFyZW50RWxlbWVudFxuICAgICAgICAgICAgY29uc3QgZHMgPSBkYXRhc2V0KGVsZW1lbnQpXG4gICAgICAgICAgICBjb25zdCB7dHlwZSwgc3JjLCBocmVmfSA9IGRzXG4gICAgICAgICAgICBjb25zdCBhdHRycyA9IFsnaHJlZicsICdzcmMnLCAndHlwZSddXG5cbiAgICAgICAgICAgIC8vIHdlIGhhbmRsZSBwbGFjZWhvbGRlciBlbGVtZW50cyBoZXJlLi4uXG4gICAgICAgICAgICBpZiAodHlwZSA9PT0gJ3BsYWNlaG9sZGVyJyl7XG4gICAgICAgICAgICAgICAgaWYgKGNvbnNlbnQpe1xuICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgICAgICAgICAgICAgIGRzWydvcmlnaW5hbC1kaXNwbGF5J10gPSBlbGVtZW50LnN0eWxlLmRpc3BsYXk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IGRzWydvcmlnaW5hbC1kaXNwbGF5J10gfHwgJ2Jsb2NrJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGVsZW1lbnQudGFnTmFtZSA9PT0gJ0lGUkFNRScpe1xuICAgICAgICAgICAgICAgIC8vIHRoaXMgZWxlbWVudCBpcyBhbHJlYWR5IGFjdGl2ZSwgd2UgZG8gbm90IHRvdWNoIGl0Li4uXG4gICAgICAgICAgICAgICAgaWYgKGNvbnNlbnQgJiYgZWxlbWVudC5zcmMgPT09IHNyYyl7XG4gICAgICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZGVidWcoYFNraXBwaW5nICR7ZWxlbWVudC50YWdOYW1lfSBmb3Igc2VydmljZSAke3NlcnZpY2UubmFtZX0sIGFzIGl0IGFscmVhZHkgaGFzIHRoZSBjb3JyZWN0IHR5cGUuLi5gKVxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyB3ZSBjcmVhdGUgYSBuZXcgc2NyaXB0IGluc3RlYWQgb2YgdXBkYXRpbmcgdGhlIG5vZGUgaW5cbiAgICAgICAgICAgICAgICAvLyBwbGFjZSwgYXMgdGhlIHNjcmlwdCB3b24ndCBzdGFydCBjb3JyZWN0bHkgb3RoZXJ3aXNlXG4gICAgICAgICAgICAgICAgY29uc3QgbmV3RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoZWxlbWVudC50YWdOYW1lKVxuICAgICAgICAgICAgICAgIGZvcihjb25zdCBhdHRyaWJ1dGUgb2YgZWxlbWVudC5hdHRyaWJ1dGVzKXtcbiAgICAgICAgICAgICAgICAgICAgbmV3RWxlbWVudC5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlLm5hbWUsIGF0dHJpYnV0ZS52YWx1ZSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbmV3RWxlbWVudC5pbm5lclRleHQgPSBlbGVtZW50LmlubmVyVGV4dFxuICAgICAgICAgICAgICAgIG5ld0VsZW1lbnQudGV4dCA9IGVsZW1lbnQudGV4dFxuXG4gICAgICAgICAgICAgICAgaWYgKGNvbnNlbnQpe1xuICAgICAgICAgICAgICAgICAgICBpZiAoZHNbJ29yaWdpbmFsLWRpc3BsYXknXSAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3RWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gZHNbJ29yaWdpbmFsLWRpc3BsYXknXVxuICAgICAgICAgICAgICAgICAgICBpZiAoZHMuc3JjICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdFbGVtZW50LnNyYyA9IGRzLnNyY1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIG5ld0VsZW1lbnQuc3JjID0gJydcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRzWydtb2RpZmllZC1ieS1rbGFybyddICE9PSB1bmRlZmluZWQgJiYgZHNbJ29yaWdpbmFsLWRpc3BsYXknXSAhPT0gdW5kZWZpbmVkKSAvLyB0aGlzIGlzIGFscmVhZHkgYSBwbGFjZWhvbGRlclxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtb3JpZ2luYWwtZGlzcGxheScsIGRzWydvcmlnaW5hbC1kaXNwbGF5J10pXG4gICAgICAgICAgICAgICAgICAgIGVsc2Ugey8vIHRoaXMgaXMgYSBuZXcgZWxlbWVudCB3ZSBoYXZlbid0IHRvdWNoZWQgYmVmb3JlXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbWVudC5zdHlsZS5kaXNwbGF5ICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtb3JpZ2luYWwtZGlzcGxheScsIGVsZW1lbnQuc3R5bGUuZGlzcGxheSlcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0VsZW1lbnQuc2V0QXR0cmlidXRlKCdkYXRhLW1vZGlmaWVkLWJ5LWtsYXJvJywgJ3llcycpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbmV3RWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vd2UgcmVtb3ZlIHRoZSBvcmlnaW5hbCBlbGVtZW50IGFuZCBpbnNlcnQgYSBuZXcgb25lXG4gICAgICAgICAgICAgICAgcGFyZW50Lmluc2VydEJlZm9yZShuZXdFbGVtZW50LCBlbGVtZW50KVxuICAgICAgICAgICAgICAgIHBhcmVudC5yZW1vdmVDaGlsZChlbGVtZW50KVxuICAgICAgICAgICAgfSBlbHNlIGlmIChlbGVtZW50LnRhZ05hbWUgPT09ICdTQ1JJUFQnIHx8IGVsZW1lbnQudGFnTmFtZSA9PT0gJ0xJTksnKXtcbiAgICAgICAgICAgICAgICAvLyB0aGlzIGVsZW1lbnQgaXMgYWxyZWFkeSBhY3RpdmUsIHdlIGRvIG5vdCB0b3VjaCBpdC4uLlxuICAgICAgICAgICAgICAgIGlmIChjb25zZW50ICYmIGVsZW1lbnQudHlwZSA9PT0gKHR5cGUgfHwgXCJcIikgJiYgZWxlbWVudC5zcmMgPT09IHNyYyl7XG4gICAgICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZGVidWcoYFNraXBwaW5nICR7ZWxlbWVudC50YWdOYW1lfSBmb3Igc2VydmljZSAke3NlcnZpY2UubmFtZX0sIGFzIGl0IGFscmVhZHkgaGFzIHRoZSBjb3JyZWN0IHR5cGUgb3Igc3JjLi4uYClcbiAgICAgICAgICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gd2UgY3JlYXRlIGEgbmV3IHNjcmlwdCBpbnN0ZWFkIG9mIHVwZGF0aW5nIHRoZSBub2RlIGluXG4gICAgICAgICAgICAgICAgLy8gcGxhY2UsIGFzIHRoZSBzY3JpcHQgd29uJ3Qgc3RhcnQgY29ycmVjdGx5IG90aGVyd2lzZVxuICAgICAgICAgICAgICAgIGNvbnN0IG5ld0VsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGVsZW1lbnQudGFnTmFtZSlcbiAgICAgICAgICAgICAgICBmb3IoY29uc3QgYXR0cmlidXRlIG9mIGVsZW1lbnQuYXR0cmlidXRlcyl7XG4gICAgICAgICAgICAgICAgICAgIG5ld0VsZW1lbnQuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZS5uYW1lLCBhdHRyaWJ1dGUudmFsdWUpXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgbmV3RWxlbWVudC5pbm5lclRleHQgPSBlbGVtZW50LmlubmVyVGV4dFxuICAgICAgICAgICAgICAgIG5ld0VsZW1lbnQudGV4dCA9IGVsZW1lbnQudGV4dFxuXG4gICAgICAgICAgICAgICAgaWYgKGNvbnNlbnQpe1xuICAgICAgICAgICAgICAgICAgICBuZXdFbGVtZW50LnR5cGUgPSB0eXBlIHx8IFwiXCJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNyYyAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3RWxlbWVudC5zcmMgPSBzcmNcbiAgICAgICAgICAgICAgICAgICAgaWYgKGhyZWYgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0VsZW1lbnQuaHJlZiA9IGhyZWZcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBuZXdFbGVtZW50LnR5cGUgPSAndGV4dC9wbGFpbidcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy93ZSByZW1vdmUgdGhlIG9yaWdpbmFsIGVsZW1lbnQgYW5kIGluc2VydCBhIG5ldyBvbmVcbiAgICAgICAgICAgICAgICBwYXJlbnQuaW5zZXJ0QmVmb3JlKG5ld0VsZW1lbnQsIGVsZW1lbnQpXG4gICAgICAgICAgICAgICAgcGFyZW50LnJlbW92ZUNoaWxkKGVsZW1lbnQpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIGFsbCBvdGhlciBlbGVtZW50cyAoaW1hZ2VzIGV0Yy4pIGFyZSBtb2RpZmllZCBpbiBwbGFjZS4uLlxuICAgICAgICAgICAgICAgIGlmIChjb25zZW50KXtcbiAgICAgICAgICAgICAgICAgICAgZm9yKGNvbnN0IGF0dHIgb2YgYXR0cnMpe1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYXR0clZhbHVlID0gZHNbYXR0cl1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhdHRyVmFsdWUgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRzWydvcmlnaW5hbC0nK2F0dHJdID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZHNbJ29yaWdpbmFsLScrYXR0cl0gPSBlbGVtZW50W2F0dHJdXG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50W2F0dHJdID0gYXR0clZhbHVlXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGRzLnRpdGxlICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnRpdGxlID0gZHMudGl0bGVcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRzWydvcmlnaW5hbC1kaXNwbGF5J10gIT09IHVuZGVmaW5lZCl7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnN0eWxlLmRpc3BsYXkgPSBkc1snb3JpZ2luYWwtZGlzcGxheSddXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnN0eWxlLnJlbW92ZVByb3BlcnR5KCdkaXNwbGF5JylcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgICAgICAgICBpZiAoZHMudGl0bGUgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCd0aXRsZScpXG4gICAgICAgICAgICAgICAgICAgIGlmIChkc1snb3JpZ2luYWwtZGlzcGxheSddID09PSB1bmRlZmluZWQgJiYgZWxlbWVudC5zdHlsZS5kaXNwbGF5ICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgICAgICAgICBkc1snb3JpZ2luYWwtZGlzcGxheSddID0gZWxlbWVudC5zdHlsZS5kaXNwbGF5XG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJ1xuICAgICAgICAgICAgICAgICAgICBmb3IoY29uc3QgYXR0ciBvZiBhdHRycyl7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBhdHRyVmFsdWUgPSBkc1thdHRyXVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGF0dHJWYWx1ZSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZHNbJ29yaWdpbmFsLScrYXR0cl0gIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50W2F0dHJdID0gZHNbJ29yaWdpbmFsLScrYXR0cl1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnJlbW92ZUF0dHJpYnV0ZShhdHRyKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGFwcGx5RGF0YXNldChkcywgZWxlbWVudClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgdXBkYXRlU2VydmljZVN0b3JhZ2Uoc2VydmljZSwgY29uc2VudCl7XG5cbiAgICAgICAgaWYgKGNvbnNlbnQpXG4gICAgICAgICAgICByZXR1cm5cblxuICAgICAgICBmdW5jdGlvbiBlc2NhcGVSZWdleFN0cihzdHIpIHtcbiAgICAgICAgICAgIHJldHVybiBzdHIucmVwbGFjZSgvWy1bXFxdL3t9KCkqKz8uXFxcXF4kfF0vZywgXCJcXFxcJCZcIik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc2VydmljZS5jb29raWVzICE9PSB1bmRlZmluZWQgJiYgc2VydmljZS5jb29raWVzLmxlbmd0aCA+IDApe1xuICAgICAgICAgICAgY29uc3QgY29va2llcyA9IGdldENvb2tpZXMoKVxuICAgICAgICAgICAgZm9yKGxldCBpPTA7aTxzZXJ2aWNlLmNvb2tpZXMubGVuZ3RoO2krKyl7XG4gICAgICAgICAgICAgICAgbGV0IGNvb2tpZVBhdHRlcm4gPSBzZXJ2aWNlLmNvb2tpZXNbaV1cbiAgICAgICAgICAgICAgICBsZXQgY29va2llUGF0aCwgY29va2llRG9tYWluXG4gICAgICAgICAgICAgICAgaWYgKGNvb2tpZVBhdHRlcm4gaW5zdGFuY2VvZiBBcnJheSl7XG4gICAgICAgICAgICAgICAgICAgIFtjb29raWVQYXR0ZXJuLCBjb29raWVQYXRoLCBjb29raWVEb21haW5dID0gY29va2llUGF0dGVyblxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoY29va2llUGF0dGVybiBpbnN0YW5jZW9mIE9iamVjdCAmJiAhKGNvb2tpZVBhdHRlcm4gaW5zdGFuY2VvZiBSZWdFeHApKXtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY3AgPSBjb29raWVQYXR0ZXJuXG4gICAgICAgICAgICAgICAgICAgIGNvb2tpZVBhdHRlcm4gPSBjcC5wYXR0ZXJuXG4gICAgICAgICAgICAgICAgICAgIGNvb2tpZVBhdGggPSBjcC5wYXRoXG4gICAgICAgICAgICAgICAgICAgIGNvb2tpZURvbWFpbiA9IGNwLmRvbWFpblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoY29va2llUGF0dGVybiA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgICAgICAgIGlmICghKGNvb2tpZVBhdHRlcm4gaW5zdGFuY2VvZiBSZWdFeHApKXtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvb2tpZVBhdHRlcm4uc3RhcnRzV2l0aCgnXicpKSAvLyB3ZSBhc3N1bWUgdGhpcyBpcyBhbHJlYWR5IGEgcmVnZXhcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvb2tpZVBhdHRlcm4gPSBuZXcgUmVnRXhwKGNvb2tpZVBhdHRlcm4pXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgLy8gd2UgYXNzdW1lIHRoaXMgaXMgYSBub3JtYWwgc3RyaW5nXG4gICAgICAgICAgICAgICAgICAgICAgICBjb29raWVQYXR0ZXJuID0gbmV3IFJlZ0V4cCgnXicrZXNjYXBlUmVnZXhTdHIoY29va2llUGF0dGVybikrJyQnKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBmb3IobGV0IGo9MDtqPGNvb2tpZXMubGVuZ3RoO2orKyl7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvb2tpZSA9IGNvb2tpZXNbal1cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbWF0Y2ggPSBjb29raWVQYXR0ZXJuLmV4ZWMoY29va2llLm5hbWUpXG4gICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaCAhPT0gbnVsbCl7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5kZWJ1ZyhcIkRlbGV0aW5nIGNvb2tpZTpcIiwgY29va2llLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJNYXRjaGVkIHBhdHRlcm46XCIsIGNvb2tpZVBhdHRlcm4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJQYXRoOlwiLCBjb29raWVQYXRoLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiRG9tYWluOlwiLCBjb29raWVEb21haW4pXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxldGVDb29raWUoY29va2llLm5hbWUsIGNvb2tpZVBhdGgsIGNvb2tpZURvbWFpbilcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGlmIG5vIGNvb2tpZSBkb21haW4gaXMgZ2l2ZW4sIHdlIGFsc28gdHJ5IHRvIGRlbGV0ZSB0aGUgY29va2llIHdpdGhcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGRvbWFpbiAnLltjdXJyZW50IGRvbWFpbl0nIGFzIHNvbWUgc2VydmljZXMgc2V0IGNvb2tpZXMgZm9yIHRoaXNcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGRvdHRlZCBkb21haW4gZXhwbGljaXRseSAoZS5nLiB0aGUgRmFjZWJvb2sgcGl4ZWwpLlxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvb2tpZURvbWFpbiA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZUNvb2tpZShjb29raWUubmFtZSwgY29va2llUGF0aCwgJy4nK3dpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIF9jaGVja0NvbnNlbnRzKCl7XG4gICAgICAgIGxldCBjb21wbGV0ZSA9IHRydWVcbiAgICAgICAgY29uc3Qgc2VydmljZXMgPSBuZXcgU2V0KHRoaXMuY29uZmlnLnNlcnZpY2VzLm1hcCgoc2VydmljZSk9PntyZXR1cm4gc2VydmljZS5uYW1lfSkpXG4gICAgICAgIGNvbnN0IGNvbnNlbnRzID0gbmV3IFNldChPYmplY3Qua2V5cyh0aGlzLmNvbnNlbnRzKSlcbiAgICAgICAgZm9yKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyh0aGlzLmNvbnNlbnRzKSl7XG4gICAgICAgICAgICBpZiAoIXNlcnZpY2VzLmhhcyhrZXkpKXtcbiAgICAgICAgICAgICAgICBkZWxldGUgdGhpcy5jb25zZW50c1trZXldXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yKGNvbnN0IHNlcnZpY2Ugb2YgdGhpcy5jb25maWcuc2VydmljZXMpe1xuICAgICAgICAgICAgaWYgKCFjb25zZW50cy5oYXMoc2VydmljZS5uYW1lKSl7XG4gICAgICAgICAgICAgICAgdGhpcy5jb25zZW50c1tzZXJ2aWNlLm5hbWVdID0gdGhpcy5nZXREZWZhdWx0Q29uc2VudChzZXJ2aWNlKVxuICAgICAgICAgICAgICAgIGNvbXBsZXRlID0gZmFsc2VcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvbmZpcm1lZCA9IGNvbXBsZXRlXG4gICAgICAgIGlmICghY29tcGxldGUpXG4gICAgICAgICAgICB0aGlzLmNoYW5nZWQgPSB0cnVlXG4gICAgfVxuXG59XG4iLCJleHBvcnQgZnVuY3Rpb24gY3VycmVudFNjcmlwdChuYW1lKSB7XG4gICAgLy8gbW9zdCBicm93c2VyIHN1cHBvcnQgdGhpcyAoYnV0IGFsYXMsIG5vdCBJRTExKVxuICAgIGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0ICE9PSBudWxsICYmIGRvY3VtZW50LmN1cnJlbnRTY3JpcHQgIT09IHVuZGVmaW5lZCkgcmV0dXJuIGRvY3VtZW50LmN1cnJlbnRTY3JpcHQ7XG4gICAgY29uc3Qgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdzY3JpcHQnKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNjcmlwdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3Qgc2NyaXB0ID0gc2NyaXB0c1tpXTtcbiAgICAgICAgLy8gaWYgdGhlIHNjcmlwdCBzcmMgaW5jbHVkZXMgdGhlIGdpdmVuIG5hbWUgKGtsYXJvKSB3ZSByZXR1cm5cbiAgICAgICAgLy8gdGhlIHNjcmlwdCBhbmQgaG9wZSBmb3IgdGhlIGJlc3RcbiAgICAgICAgaWYgKHNjcmlwdC5zcmMuaW5jbHVkZXMobmFtZSkpIHJldHVybiBzY3JpcHQ7XG4gICAgfVxuICAgIHJldHVybiBudWxsXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkYXRhc2V0KGVsZW1lbnQpIHtcbiAgICBjb25zdCBkYXRhc2V0ID0ge307XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbGVtZW50LmF0dHJpYnV0ZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgYXR0cmlidXRlID0gZWxlbWVudC5hdHRyaWJ1dGVzW2ldO1xuICAgICAgICBpZiAoYXR0cmlidXRlLm5hbWUuc3RhcnRzV2l0aCgnZGF0YS0nKSkge1xuICAgICAgICAgICAgZGF0YXNldFthdHRyaWJ1dGUubmFtZS5zbGljZSg1KV0gPSBhdHRyaWJ1dGUudmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGRhdGFzZXQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhcHBseURhdGFzZXQoZHMsIGVsZW1lbnQpIHtcbiAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMoZHMpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBrZXkgPSBrZXlzW2ldO1xuICAgICAgICBjb25zdCB2YWx1ZSA9IGRzW2tleV07XG4gICAgICAgIGlmIChlbGVtZW50W2tleV0gPT09IHZhbHVlKSBjb250aW51ZTtcbiAgICAgICAgZWxzZSBlbGVtZW50LnNldEF0dHJpYnV0ZSgnZGF0YS0nICsga2V5LCB2YWx1ZSk7XG4gICAgfVxufVxuXG4vKlxuVGhpcyByZXBsYWNlcyBDU1MgdmFyaWFibGVzLlxuKi9cbmV4cG9ydCBmdW5jdGlvbiByZXBsYWNlQ1NTVmFyaWFibGVzKHZhcmlhYmxlcyl7XG4gICAgY29uc3Qga2xhcm9TdHlsZUVsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnc3R5bGVbZGF0YS1jb250ZXh0PWtsYXJvLXN0eWxlc10nKVxuICAgIGZvcihjb25zdCBlbGVtZW50IG9mIGtsYXJvU3R5bGVFbGVtZW50cyl7XG4gICAgICAgIGxldCBjc3MgPSBlbGVtZW50LmlubmVyVGV4dFxuICAgICAgICBpZiAoZWxlbWVudC5zdHlsZVNoZWV0ICE9PSB1bmRlZmluZWQpIC8vIElFXG4gICAgICAgICAgICBjc3MgPSBlbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dFxuICAgICAgICBmb3IoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHZhcmlhYmxlcykpe1xuICAgICAgICAgICAgY29uc3QgcmVnZXggPSBuZXcgUmVnRXhwKFwiKFthLXowLTktXSspOlteO10rO1tcXFxcc1xcXFxuXSpcXFxcMTpcXFxccyp2YXJcXFxcKC0tXCIra2V5K1wiLFxcXFxzKlteXFxcXCldK1xcXFwpXCIsICdnJylcbiAgICAgICAgICAgIGNzcyA9IGNzcy5yZXBsYWNlKHJlZ2V4LCAoXywgbmFtZSkgPT4gYCR7bmFtZX06ICR7dmFsdWV9OyAke25hbWV9OiB2YXIoLS0ke2tleX0sICR7dmFsdWV9KWApXG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbmV3RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKVxuICAgICAgICBuZXdFbGVtZW50LnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJ0ZXh0L2Nzc1wiKVxuICAgICAgICBuZXdFbGVtZW50LnNldEF0dHJpYnV0ZShcImRhdGEtY29udGV4dFwiLCBcImtsYXJvLXN0eWxlc1wiKVxuICAgICAgICBpZiAobmV3RWxlbWVudC5zdHlsZVNoZWV0ICE9PSB1bmRlZmluZWQpe1xuICAgICAgICAgICAgbmV3RWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3NcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG5ld0VsZW1lbnQuaW5uZXJUZXh0ID0gY3NzXG4gICAgICAgIH1cbiAgICAgICAgLy8gd2UgcmVtb3ZlIHRoZSBvbGQgZWxlbWVudCBhbmQgaW5zZXJ0IHRoZSBuZXcgb25lXG4gICAgICAgIGVsZW1lbnQucGFyZW50RWxlbWVudC5hcHBlbmRDaGlsZChuZXdFbGVtZW50KVxuICAgICAgICBlbGVtZW50LnBhcmVudEVsZW1lbnQucmVtb3ZlQ2hpbGQoZWxlbWVudClcbiAgICB9XG59XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLmtsYXJve2ZvbnQtZmFtaWx5OmluaGVyaXQ7Zm9udC1mYW1pbHk6dmFyKC0tZm9udC1mYW1pbHksIGluaGVyaXQpO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtc2l6ZTp2YXIoLS1mb250LXNpemUsIDE0cHgpfS5rbGFybyBidXR0b257Zm9udC1mYW1pbHk6aW5oZXJpdDtmb250LWZhbWlseTp2YXIoLS1mb250LWZhbWlseSwgaW5oZXJpdCk7Zm9udC1zaXplOjE0cHg7Zm9udC1zaXplOnZhcigtLWZvbnQtc2l6ZSwgMTRweCl9LmtsYXJvLmNtLWFzLWNvbnRleHQtbm90aWNle2hlaWdodDoxMDAlO3BhZGRpbmctYm90dG9tOjEycHg7cGFkZGluZy10b3A6MTJweH0ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tc3dpdGNoLWNvbnRhaW5lciwua2xhcm8gLmNvbnRleHQtbm90aWNlIC5jbS1zd2l0Y2gtY29udGFpbmVyLC5rbGFybyAuY29va2llLW5vdGljZSAuY20tc3dpdGNoLWNvbnRhaW5lcntib3JkZXItYm90dG9tLXN0eWxlOnNvbGlkO2JvcmRlci1ib3R0b20tc3R5bGU6dmFyKC0tYm9yZGVyLXN0eWxlLCBzb2xpZCk7Ym9yZGVyLWJvdHRvbS13aWR0aDoxcHg7Ym9yZGVyLWJvdHRvbS13aWR0aDp2YXIoLS1ib3JkZXItd2lkdGgsIDFweCk7Ym9yZGVyLWJvdHRvbS1jb2xvcjojYzhjOGM4O2JvcmRlci1ib3R0b20tY29sb3I6dmFyKC0tbGlnaHQyLCAjYzhjOGM4KTtkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOnJlbGF0aXZlO3BhZGRpbmc6MTBweDtwYWRkaW5nLWxlZnQ6NjZweDtsaW5lLWhlaWdodDoyMHB4O3ZlcnRpY2FsLWFsaWduOm1pZGRsZTttaW4taGVpZ2h0OjQwcHh9LmtsYXJvIC5jb29raWUtbW9kYWwgLmNtLXN3aXRjaC1jb250YWluZXI6bGFzdC1jaGlsZCwua2xhcm8gLmNvbnRleHQtbm90aWNlIC5jbS1zd2l0Y2gtY29udGFpbmVyOmxhc3QtY2hpbGQsLmtsYXJvIC5jb29raWUtbm90aWNlIC5jbS1zd2l0Y2gtY29udGFpbmVyOmxhc3QtY2hpbGR7Ym9yZGVyLWJvdHRvbTowfS5rbGFybyAuY29va2llLW1vZGFsIC5jbS1zd2l0Y2gtY29udGFpbmVyOmZpcnN0LWNoaWxkLC5rbGFybyAuY29udGV4dC1ub3RpY2UgLmNtLXN3aXRjaC1jb250YWluZXI6Zmlyc3QtY2hpbGQsLmtsYXJvIC5jb29raWUtbm90aWNlIC5jbS1zd2l0Y2gtY29udGFpbmVyOmZpcnN0LWNoaWxke21hcmdpbi10b3A6MH0ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tc3dpdGNoLWNvbnRhaW5lciBwLC5rbGFybyAuY29udGV4dC1ub3RpY2UgLmNtLXN3aXRjaC1jb250YWluZXIgcCwua2xhcm8gLmNvb2tpZS1ub3RpY2UgLmNtLXN3aXRjaC1jb250YWluZXIgcHttYXJnaW4tdG9wOjB9LmtsYXJvIC5jb29raWUtbW9kYWwgLmNtLXN3aXRjaCwua2xhcm8gLmNvbnRleHQtbm90aWNlIC5jbS1zd2l0Y2gsLmtsYXJvIC5jb29raWUtbm90aWNlIC5jbS1zd2l0Y2h7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6NTBweDtoZWlnaHQ6MzBweH0ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbGlzdC1pbnB1dDpjaGVja2VkKy5jbS1saXN0LWxhYmVsIC5zbGlkZXIsLmtsYXJvIC5jb250ZXh0LW5vdGljZSAuY20tbGlzdC1pbnB1dDpjaGVja2VkKy5jbS1saXN0LWxhYmVsIC5zbGlkZXIsLmtsYXJvIC5jb29raWUtbm90aWNlIC5jbS1saXN0LWlucHV0OmNoZWNrZWQrLmNtLWxpc3QtbGFiZWwgLnNsaWRlcntiYWNrZ3JvdW5kLWNvbG9yOiMxYTkzNmY7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1ncmVlbjEsICMxYTkzNmYpfS5rbGFybyAuY29va2llLW1vZGFsIC5jbS1saXN0LWlucHV0LmhhbGYtY2hlY2tlZDpjaGVja2VkKy5jbS1saXN0LWxhYmVsIC5zbGlkZXIsLmtsYXJvIC5jb250ZXh0LW5vdGljZSAuY20tbGlzdC1pbnB1dC5oYWxmLWNoZWNrZWQ6Y2hlY2tlZCsuY20tbGlzdC1sYWJlbCAuc2xpZGVyLC5rbGFybyAuY29va2llLW5vdGljZSAuY20tbGlzdC1pbnB1dC5oYWxmLWNoZWNrZWQ6Y2hlY2tlZCsuY20tbGlzdC1sYWJlbCAuc2xpZGVye2JhY2tncm91bmQtY29sb3I6IzFhOTM2ZjtiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWdyZWVuMSwgIzFhOTM2Zik7b3BhY2l0eTouNn0ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbGlzdC1pbnB1dC5oYWxmLWNoZWNrZWQ6Y2hlY2tlZCsuY20tbGlzdC1sYWJlbCAuc2xpZGVyOjpiZWZvcmUsLmtsYXJvIC5jb250ZXh0LW5vdGljZSAuY20tbGlzdC1pbnB1dC5oYWxmLWNoZWNrZWQ6Y2hlY2tlZCsuY20tbGlzdC1sYWJlbCAuc2xpZGVyOjpiZWZvcmUsLmtsYXJvIC5jb29raWUtbm90aWNlIC5jbS1saXN0LWlucHV0LmhhbGYtY2hlY2tlZDpjaGVja2VkKy5jbS1saXN0LWxhYmVsIC5zbGlkZXI6OmJlZm9yZXstbXMtdHJhbnNmb3JtOnRyYW5zbGF0ZVgoMTBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoMTBweCl9LmtsYXJvIC5jb29raWUtbW9kYWwgLmNtLWxpc3QtaW5wdXQub25seS1yZXF1aXJlZCsuY20tbGlzdC1sYWJlbCAuc2xpZGVyLC5rbGFybyAuY29udGV4dC1ub3RpY2UgLmNtLWxpc3QtaW5wdXQub25seS1yZXF1aXJlZCsuY20tbGlzdC1sYWJlbCAuc2xpZGVyLC5rbGFybyAuY29va2llLW5vdGljZSAuY20tbGlzdC1pbnB1dC5vbmx5LXJlcXVpcmVkKy5jbS1saXN0LWxhYmVsIC5zbGlkZXJ7YmFja2dyb3VuZC1jb2xvcjojMjRjYzlhO2JhY2tncm91bmQtY29sb3I6dmFyKC0tZ3JlZW4yLCAjMjRjYzlhKTtvcGFjaXR5Oi44fS5rbGFybyAuY29va2llLW1vZGFsIC5jbS1saXN0LWlucHV0Lm9ubHktcmVxdWlyZWQrLmNtLWxpc3QtbGFiZWwgLnNsaWRlcjo6YmVmb3JlLC5rbGFybyAuY29udGV4dC1ub3RpY2UgLmNtLWxpc3QtaW5wdXQub25seS1yZXF1aXJlZCsuY20tbGlzdC1sYWJlbCAuc2xpZGVyOjpiZWZvcmUsLmtsYXJvIC5jb29raWUtbm90aWNlIC5jbS1saXN0LWlucHV0Lm9ubHktcmVxdWlyZWQrLmNtLWxpc3QtbGFiZWwgLnNsaWRlcjo6YmVmb3Jley1tcy10cmFuc2Zvcm06dHJhbnNsYXRlWCgxMHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlWCgxMHB4KX0ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbGlzdC1pbnB1dC5yZXF1aXJlZDpjaGVja2VkKy5jbS1saXN0LWxhYmVsIC5zbGlkZXIsLmtsYXJvIC5jb250ZXh0LW5vdGljZSAuY20tbGlzdC1pbnB1dC5yZXF1aXJlZDpjaGVja2VkKy5jbS1saXN0LWxhYmVsIC5zbGlkZXIsLmtsYXJvIC5jb29raWUtbm90aWNlIC5jbS1saXN0LWlucHV0LnJlcXVpcmVkOmNoZWNrZWQrLmNtLWxpc3QtbGFiZWwgLnNsaWRlcntiYWNrZ3JvdW5kLWNvbG9yOiMyNGNjOWE7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1ncmVlbjIsICMyNGNjOWEpO29wYWNpdHk6Ljg7Y3Vyc29yOm5vdC1hbGxvd2VkfS5rbGFybyAuY29va2llLW1vZGFsIC5zbGlkZXIsLmtsYXJvIC5jb250ZXh0LW5vdGljZSAuc2xpZGVyLC5rbGFybyAuY29va2llLW5vdGljZSAuc2xpZGVye2JveC1zaGFkb3c6MCA0cHggNnB4IDAgcmdiYSgwLDAsMCwuMiksNXB4IDVweCAxMHB4IDAgcmdiYSgwLDAsMCwuMTkpfS5rbGFybyAuY29va2llLW1vZGFsIC5jbS1saXN0LWlucHV0LC5rbGFybyAuY29udGV4dC1ub3RpY2UgLmNtLWxpc3QtaW5wdXQsLmtsYXJvIC5jb29raWUtbm90aWNlIC5jbS1saXN0LWlucHV0e3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDtvcGFjaXR5OjA7d2lkdGg6NTBweDtoZWlnaHQ6MzBweH0ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbGlzdC10aXRsZSwua2xhcm8gLmNvbnRleHQtbm90aWNlIC5jbS1saXN0LXRpdGxlLC5rbGFybyAuY29va2llLW5vdGljZSAuY20tbGlzdC10aXRsZXtmb250LXNpemU6LjllbTtmb250LXdlaWdodDo2MDB9LmtsYXJvIC5jb29raWUtbW9kYWwgLmNtLWxpc3QtZGVzY3JpcHRpb24sLmtsYXJvIC5jb250ZXh0LW5vdGljZSAuY20tbGlzdC1kZXNjcmlwdGlvbiwua2xhcm8gLmNvb2tpZS1ub3RpY2UgLmNtLWxpc3QtZGVzY3JpcHRpb257Y29sb3I6IzdjN2M3Yztjb2xvcjp2YXIoLS1kYXJrMywgIzdjN2M3Yyk7Zm9udC1zaXplOi45ZW07cGFkZGluZy10b3A6NHB4fS5rbGFybyAuY29va2llLW1vZGFsIC5jbS1saXN0LWxhYmVsIC5jbS1zd2l0Y2gsLmtsYXJvIC5jb250ZXh0LW5vdGljZSAuY20tbGlzdC1sYWJlbCAuY20tc3dpdGNoLC5rbGFybyAuY29va2llLW5vdGljZSAuY20tbGlzdC1sYWJlbCAuY20tc3dpdGNoe3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MH0ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbGlzdC1sYWJlbCAuc2xpZGVyLC5rbGFybyAuY29udGV4dC1ub3RpY2UgLmNtLWxpc3QtbGFiZWwgLnNsaWRlciwua2xhcm8gLmNvb2tpZS1ub3RpY2UgLmNtLWxpc3QtbGFiZWwgLnNsaWRlcntiYWNrZ3JvdW5kLWNvbG9yOiNmMmYyZjI7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS13aGl0ZTIsICNmMmYyZjIpO3Bvc2l0aW9uOmFic29sdXRlO2N1cnNvcjpwb2ludGVyO3RvcDowO2xlZnQ6MDtyaWdodDowO2JvdHRvbTowO3RyYW5zaXRpb246LjRzO3dpZHRoOjUwcHg7ZGlzcGxheTppbmxpbmUtYmxvY2t9LmtsYXJvIC5jb29raWUtbW9kYWwgLmNtLWxpc3QtbGFiZWwgLnNsaWRlcjo6YmVmb3JlLC5rbGFybyAuY29udGV4dC1ub3RpY2UgLmNtLWxpc3QtbGFiZWwgLnNsaWRlcjo6YmVmb3JlLC5rbGFybyAuY29va2llLW5vdGljZSAuY20tbGlzdC1sYWJlbCAuc2xpZGVyOjpiZWZvcmV7YmFja2dyb3VuZC1jb2xvcjojZTZlNmU2O2JhY2tncm91bmQtY29sb3I6dmFyKC0td2hpdGUzLCAjZTZlNmU2KTtwb3NpdGlvbjphYnNvbHV0ZTtjb250ZW50OlwiXCI7aGVpZ2h0OjIwcHg7d2lkdGg6MjBweDtsZWZ0OjVweDtib3R0b206NXB4O3RyYW5zaXRpb246LjRzfS5rbGFybyAuY29va2llLW1vZGFsIC5jbS1saXN0LWxhYmVsIC5zbGlkZXIucm91bmQsLmtsYXJvIC5jb250ZXh0LW5vdGljZSAuY20tbGlzdC1sYWJlbCAuc2xpZGVyLnJvdW5kLC5rbGFybyAuY29va2llLW5vdGljZSAuY20tbGlzdC1sYWJlbCAuc2xpZGVyLnJvdW5ke2JvcmRlci1yYWRpdXM6MzBweH0ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbGlzdC1sYWJlbCAuc2xpZGVyLnJvdW5kOjpiZWZvcmUsLmtsYXJvIC5jb250ZXh0LW5vdGljZSAuY20tbGlzdC1sYWJlbCAuc2xpZGVyLnJvdW5kOjpiZWZvcmUsLmtsYXJvIC5jb29raWUtbm90aWNlIC5jbS1saXN0LWxhYmVsIC5zbGlkZXIucm91bmQ6OmJlZm9yZXtib3JkZXItcmFkaXVzOjUwJX0ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbGlzdC1sYWJlbCBpbnB1dDpmb2N1cysuc2xpZGVyLC5rbGFybyAuY29udGV4dC1ub3RpY2UgLmNtLWxpc3QtbGFiZWwgaW5wdXQ6Zm9jdXMrLnNsaWRlciwua2xhcm8gLmNvb2tpZS1ub3RpY2UgLmNtLWxpc3QtbGFiZWwgaW5wdXQ6Zm9jdXMrLnNsaWRlcntib3gtc2hhZG93LWNvbG9yOiM0OGRmYjI7Ym94LXNoYWRvdy1jb2xvcjp2YXIoLS1ncmVlbjMsICM0OGRmYjIpO2JveC1zaGFkb3c6MCAwIDFweCB2YXIoLS1ib3gtc2hhZG93LWNvbG9yLCBncmVlbjMpfS5rbGFybyAuY29va2llLW1vZGFsIC5jbS1saXN0LWxhYmVsIGlucHV0OmNoZWNrZWQrLnNsaWRlcjo6YmVmb3JlLC5rbGFybyAuY29udGV4dC1ub3RpY2UgLmNtLWxpc3QtbGFiZWwgaW5wdXQ6Y2hlY2tlZCsuc2xpZGVyOjpiZWZvcmUsLmtsYXJvIC5jb29raWUtbm90aWNlIC5jbS1saXN0LWxhYmVsIGlucHV0OmNoZWNrZWQrLnNsaWRlcjo6YmVmb3Jley1tcy10cmFuc2Zvcm06dHJhbnNsYXRlWCgyMHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlWCgyMHB4KX0ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbGlzdC1pbnB1dDpmb2N1cysuY20tbGlzdC1sYWJlbCAuc2xpZGVyLC5rbGFybyAuY29udGV4dC1ub3RpY2UgLmNtLWxpc3QtaW5wdXQ6Zm9jdXMrLmNtLWxpc3QtbGFiZWwgLnNsaWRlciwua2xhcm8gLmNvb2tpZS1ub3RpY2UgLmNtLWxpc3QtaW5wdXQ6Zm9jdXMrLmNtLWxpc3QtbGFiZWwgLnNsaWRlcntib3gtc2hhZG93OjAgNHB4IDZweCAwIHJnYmEoMTI1LDEyNSwxMjUsLjIpLDVweCA1cHggMTBweCAwIHJnYmEoMTI1LDEyNSwxMjUsLjE5KX0ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbGlzdC1pbnB1dDpjaGVja2VkKy5jbS1saXN0LWxhYmVsIC5zbGlkZXI6OmJlZm9yZSwua2xhcm8gLmNvbnRleHQtbm90aWNlIC5jbS1saXN0LWlucHV0OmNoZWNrZWQrLmNtLWxpc3QtbGFiZWwgLnNsaWRlcjo6YmVmb3JlLC5rbGFybyAuY29va2llLW5vdGljZSAuY20tbGlzdC1pbnB1dDpjaGVja2VkKy5jbS1saXN0LWxhYmVsIC5zbGlkZXI6OmJlZm9yZXstbXMtdHJhbnNmb3JtOnRyYW5zbGF0ZVgoMjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoMjBweCl9LmtsYXJvIC5jb29raWUtbW9kYWwgLnNsaWRlciwua2xhcm8gLmNvbnRleHQtbm90aWNlIC5zbGlkZXIsLmtsYXJvIC5jb29raWUtbm90aWNlIC5zbGlkZXJ7Ym94LXNoYWRvdzowIDRweCA2cHggMCByZ2JhKDAsMCwwLC4yKSw1cHggNXB4IDEwcHggMCByZ2JhKDAsMCwwLC4xOSl9LmtsYXJvIC5jb29raWUtbW9kYWwgYSwua2xhcm8gLmNvbnRleHQtbm90aWNlIGEsLmtsYXJvIC5jb29raWUtbm90aWNlIGF7Y29sb3I6IzFhOTM2Zjtjb2xvcjp2YXIoLS1ncmVlbjEsICMxYTkzNmYpO3RleHQtZGVjb3JhdGlvbjpub25lfS5rbGFybyAuY29va2llLW1vZGFsIHAsLmtsYXJvIC5jb29raWUtbW9kYWwgc3Ryb25nLC5rbGFybyAuY29va2llLW1vZGFsIGgxLC5rbGFybyAuY29va2llLW1vZGFsIGgyLC5rbGFybyAuY29va2llLW1vZGFsIHVsLC5rbGFybyAuY29va2llLW1vZGFsIGxpLC5rbGFybyAuY29udGV4dC1ub3RpY2UgcCwua2xhcm8gLmNvbnRleHQtbm90aWNlIHN0cm9uZywua2xhcm8gLmNvbnRleHQtbm90aWNlIGgxLC5rbGFybyAuY29udGV4dC1ub3RpY2UgaDIsLmtsYXJvIC5jb250ZXh0LW5vdGljZSB1bCwua2xhcm8gLmNvbnRleHQtbm90aWNlIGxpLC5rbGFybyAuY29va2llLW5vdGljZSBwLC5rbGFybyAuY29va2llLW5vdGljZSBzdHJvbmcsLmtsYXJvIC5jb29raWUtbm90aWNlIGgxLC5rbGFybyAuY29va2llLW5vdGljZSBoMiwua2xhcm8gLmNvb2tpZS1ub3RpY2UgdWwsLmtsYXJvIC5jb29raWUtbm90aWNlIGxpe2NvbG9yOiNmYWZhZmE7Y29sb3I6dmFyKC0tbGlnaHQxLCAjZmFmYWZhKX0ua2xhcm8gLmNvb2tpZS1tb2RhbCBwLC5rbGFybyAuY29va2llLW1vZGFsIGgxLC5rbGFybyAuY29va2llLW1vZGFsIGgyLC5rbGFybyAuY29va2llLW1vZGFsIHVsLC5rbGFybyAuY29va2llLW1vZGFsIGxpLC5rbGFybyAuY29udGV4dC1ub3RpY2UgcCwua2xhcm8gLmNvbnRleHQtbm90aWNlIGgxLC5rbGFybyAuY29udGV4dC1ub3RpY2UgaDIsLmtsYXJvIC5jb250ZXh0LW5vdGljZSB1bCwua2xhcm8gLmNvbnRleHQtbm90aWNlIGxpLC5rbGFybyAuY29va2llLW5vdGljZSBwLC5rbGFybyAuY29va2llLW5vdGljZSBoMSwua2xhcm8gLmNvb2tpZS1ub3RpY2UgaDIsLmtsYXJvIC5jb29raWUtbm90aWNlIHVsLC5rbGFybyAuY29va2llLW5vdGljZSBsaXtkaXNwbGF5OmJsb2NrO3RleHQtYWxpZ246bGVmdDttYXJnaW46MDtwYWRkaW5nOjA7bWFyZ2luLXRvcDouN2VtfS5rbGFybyAuY29va2llLW1vZGFsIGgxLC5rbGFybyAuY29va2llLW1vZGFsIGgyLC5rbGFybyAuY29va2llLW1vZGFsIGgzLC5rbGFybyAuY29va2llLW1vZGFsIGg0LC5rbGFybyAuY29va2llLW1vZGFsIGg1LC5rbGFybyAuY29va2llLW1vZGFsIGg2LC5rbGFybyAuY29udGV4dC1ub3RpY2UgaDEsLmtsYXJvIC5jb250ZXh0LW5vdGljZSBoMiwua2xhcm8gLmNvbnRleHQtbm90aWNlIGgzLC5rbGFybyAuY29udGV4dC1ub3RpY2UgaDQsLmtsYXJvIC5jb250ZXh0LW5vdGljZSBoNSwua2xhcm8gLmNvbnRleHQtbm90aWNlIGg2LC5rbGFybyAuY29va2llLW5vdGljZSBoMSwua2xhcm8gLmNvb2tpZS1ub3RpY2UgaDIsLmtsYXJvIC5jb29raWUtbm90aWNlIGgzLC5rbGFybyAuY29va2llLW5vdGljZSBoNCwua2xhcm8gLmNvb2tpZS1ub3RpY2UgaDUsLmtsYXJvIC5jb29raWUtbm90aWNlIGg2e2ZvbnQtZmFtaWx5OmluaGVyaXQ7Zm9udC1mYW1pbHk6dmFyKC0tdGl0bGUtZm9udC1mYW1pbHksIGluaGVyaXQpfS5rbGFybyAuY29va2llLW1vZGFsIC5jbS1saW5rLC5rbGFybyAuY29udGV4dC1ub3RpY2UgLmNtLWxpbmssLmtsYXJvIC5jb29raWUtbm90aWNlIC5jbS1saW5re21hcmdpbi1yaWdodDouNWVtO3ZlcnRpY2FsLWFsaWduOm1pZGRsZX0ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tYnRuLC5rbGFybyAuY29udGV4dC1ub3RpY2UgLmNtLWJ0biwua2xhcm8gLmNvb2tpZS1ub3RpY2UgLmNtLWJ0bntjb2xvcjojZmZmO2NvbG9yOnZhcigtLWJ1dHRvbi10ZXh0LWNvbG9yLCAjZmZmKTtiYWNrZ3JvdW5kLWNvbG9yOiM1YzVjNWM7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1kYXJrMiwgIzVjNWM1Yyk7Ym9yZGVyLXJhZGl1czo0cHg7Ym9yZGVyLXJhZGl1czp2YXIoLS1ib3JkZXItcmFkaXVzLCA0cHgpO3BhZGRpbmc6NnB4IDEwcHg7bWFyZ2luLXJpZ2h0Oi41ZW07Ym9yZGVyLXN0eWxlOm5vbmU7cGFkZGluZzouNGVtO2ZvbnQtc2l6ZToxZW07Y3Vyc29yOnBvaW50ZXJ9LmtsYXJvIC5jb29raWUtbW9kYWwgLmNtLWJ0bjpkaXNhYmxlZCwua2xhcm8gLmNvbnRleHQtbm90aWNlIC5jbS1idG46ZGlzYWJsZWQsLmtsYXJvIC5jb29raWUtbm90aWNlIC5jbS1idG46ZGlzYWJsZWR7b3BhY2l0eTouNX0ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tYnRuLmNtLWJ0bi1jbG9zZSwua2xhcm8gLmNvbnRleHQtbm90aWNlIC5jbS1idG4uY20tYnRuLWNsb3NlLC5rbGFybyAuY29va2llLW5vdGljZSAuY20tYnRuLmNtLWJ0bi1jbG9zZXtiYWNrZ3JvdW5kLWNvbG9yOiNjOGM4Yzg7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1saWdodDIsICNjOGM4YzgpfS5rbGFybyAuY29va2llLW1vZGFsIC5jbS1idG4uY20tYnRuLXN1Y2Nlc3MsLmtsYXJvIC5jb250ZXh0LW5vdGljZSAuY20tYnRuLmNtLWJ0bi1zdWNjZXNzLC5rbGFybyAuY29va2llLW5vdGljZSAuY20tYnRuLmNtLWJ0bi1zdWNjZXNze2JhY2tncm91bmQtY29sb3I6IzFhOTM2ZjtiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWdyZWVuMSwgIzFhOTM2Zil9LmtsYXJvIC5jb29raWUtbW9kYWwgLmNtLWJ0bi5jbS1idG4tc3VjY2Vzcy12YXIsLmtsYXJvIC5jb250ZXh0LW5vdGljZSAuY20tYnRuLmNtLWJ0bi1zdWNjZXNzLXZhciwua2xhcm8gLmNvb2tpZS1ub3RpY2UgLmNtLWJ0bi5jbS1idG4tc3VjY2Vzcy12YXJ7YmFja2dyb3VuZC1jb2xvcjojMjRjYzlhO2JhY2tncm91bmQtY29sb3I6dmFyKC0tZ3JlZW4yLCAjMjRjYzlhKX0ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tYnRuLmNtLWJ0bi1pbmZvLC5rbGFybyAuY29udGV4dC1ub3RpY2UgLmNtLWJ0bi5jbS1idG4taW5mbywua2xhcm8gLmNvb2tpZS1ub3RpY2UgLmNtLWJ0bi5jbS1idG4taW5mb3tiYWNrZ3JvdW5kLWNvbG9yOiMyNTgxYzQ7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1ibHVlMSwgIzI1ODFjNCl9LmtsYXJvIC5jb250ZXh0LW5vdGljZXtib3JkZXItcmFkaXVzOjRweDtib3JkZXItcmFkaXVzOnZhcigtLWJvcmRlci1yYWRpdXMsIDRweCk7Ym9yZGVyLXN0eWxlOnNvbGlkO2JvcmRlci1zdHlsZTp2YXIoLS1ib3JkZXItc3R5bGUsIHNvbGlkKTtib3JkZXItd2lkdGg6MXB4O2JvcmRlci13aWR0aDp2YXIoLS1ib3JkZXItd2lkdGgsIDFweCk7Ym9yZGVyLWNvbG9yOiNjOGM4Yzg7Ym9yZGVyLWNvbG9yOnZhcigtLWxpZ2h0MiwgI2M4YzhjOCk7YmFja2dyb3VuZC1jb2xvcjojZmFmYWZhO2JhY2tncm91bmQtY29sb3I6dmFyKC0tbGlnaHQxLCAjZmFmYWZhKTtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtd3JhcDp3cmFwO2FsaWduLWl0ZW1zOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO3BhZGRpbmc6MTJweDtoZWlnaHQ6MTAwJX0ua2xhcm8gLmNvbnRleHQtbm90aWNlLmNtLWRhcmt7YmFja2dyb3VuZC1jb2xvcjojMzMzO2JhY2tncm91bmQtY29sb3I6dmFyKC0tZGFyazEsICMzMzMpO2JvcmRlci1jb2xvcjojNWM1YzVjO2JvcmRlci1jb2xvcjp2YXIoLS1kYXJrMiwgIzVjNWM1Yyl9LmtsYXJvIC5jb250ZXh0LW5vdGljZS5jbS1kYXJrIHB7Y29sb3I6I2ZhZmFmYTtjb2xvcjp2YXIoLS1saWdodDEsICNmYWZhZmEpfS5rbGFybyAuY29udGV4dC1ub3RpY2UuY20tZGFyayBwIGF7Y29sb3I6IzQ1OWNkYztjb2xvcjp2YXIoLS1ibHVlMiwgIzQ1OWNkYyl9LmtsYXJvIC5jb250ZXh0LW5vdGljZSBwe2NvbG9yOiMzMzM7Y29sb3I6dmFyKC0tZGFyazEsICMzMzMpO2ZsZXgtZ3JvdzowO3RleHQtYWxpZ246Y2VudGVyO3BhZGRpbmctdG9wOjA7bWFyZ2luLXRvcDowfS5rbGFybyAuY29udGV4dC1ub3RpY2UgcCBhe2NvbG9yOiMyNGNjOWE7Y29sb3I6dmFyKC0tZ3JlZW4yLCAjMjRjYzlhKX0ua2xhcm8gLmNvbnRleHQtbm90aWNlIHAuY20tYnV0dG9uc3ttYXJnaW4tdG9wOjEycHh9LmtsYXJvIC5jb250ZXh0LW5vdGljZSBwLmNjbi1kZXNjcmlwdGlvbi1lbXB0eS1zdG9yZXttYXJnaW4tdG9wOjI0cHg7Zm9udC1zaXplOjE0cHg7Zm9udC1zaXplOnZhcigtLWZvbnQtc2l6ZSwgMTRweCl9LmtsYXJvIC5jb29raWUtbW9kYWx7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtwb3NpdGlvbjpmaXhlZDtvdmVyZmxvdzpoaWRkZW47bGVmdDowO3RvcDowO3otaW5kZXg6MTAwMH0ua2xhcm8gLmNvb2tpZS1tb2RhbC5jbS1lbWJlZGRlZHtwb3NpdGlvbjpyZWxhdGl2ZTtoZWlnaHQ6aW5oZXJpdDt3aWR0aDppbmhlcml0O2xlZnQ6aW5oZXJpdDtyaWdodDppbmhlcml0O3otaW5kZXg6MH0ua2xhcm8gLmNvb2tpZS1tb2RhbC5jbS1lbWJlZGRlZCAuY20tbW9kYWwuY20ta2xhcm97cG9zaXRpb246cmVsYXRpdmU7LW1zLXRyYW5zZm9ybTpub25lO3RyYW5zZm9ybTpub25lfS5rbGFybyAuY29va2llLW1vZGFsIC5jbS1iZ3tiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsLjUpO2hlaWdodDoxMDAlO3dpZHRoOjEwMCU7cG9zaXRpb246Zml4ZWQ7dG9wOjA7bGVmdDowfS5rbGFybyAuY29va2llLW1vZGFsIC5jbS1tb2RhbC5jbS1rbGFyb3tiYWNrZ3JvdW5kLWNvbG9yOiMzMzM7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1kYXJrMSwgIzMzMyk7Y29sb3I6I2ZhZmFmYTtjb2xvcjp2YXIoLS1saWdodDEsICNmYWZhZmEpO3otaW5kZXg6MTAwMTtib3gtc2hhZG93OjAgNHB4IDZweCAwIHJnYmEoMCwwLDAsLjIpLDVweCA1cHggMTBweCAwIHJnYmEoMCwwLDAsLjE5KTt3aWR0aDoxMDAlO21heC1oZWlnaHQ6OTglO3RvcDo1MCU7LW1zLXRyYW5zZm9ybTp0cmFuc2xhdGVZKC01MCUpO3RyYW5zZm9ybTp0cmFuc2xhdGVZKC01MCUpO3Bvc2l0aW9uOmZpeGVkO292ZXJmbG93OmF1dG99QG1lZGlhKG1pbi13aWR0aDogNjYwcHgpey5rbGFybyAuY29va2llLW1vZGFsIC5jbS1tb2RhbC5jbS1rbGFyb3tib3JkZXItcmFkaXVzOjRweDtib3JkZXItcmFkaXVzOnZhcigtLWJvcmRlci1yYWRpdXMsIDRweCk7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luOjAgYXV0bzttYXgtd2lkdGg6NjQwcHg7aGVpZ2h0OmF1dG87d2lkdGg6YXV0b319LmtsYXJvIC5jb29raWUtbW9kYWwgLmNtLW1vZGFsIC5oaWRle2JvcmRlci1zdHlsZTpub25lO2JhY2tncm91bmQ6bm9uZTtjdXJzb3I6cG9pbnRlcjtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MjBweDtyaWdodDoyMHB4O3otaW5kZXg6MX0ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbW9kYWwgLmhpZGUgc3Zne3N0cm9rZTojZmFmYWZhO3N0cm9rZTp2YXIoLS1saWdodDEsICNmYWZhZmEpfS5rbGFybyAuY29va2llLW1vZGFsIC5jbS1tb2RhbCAuY20tZm9vdGVye2JvcmRlci10b3AtY29sb3I6IzVjNWM1Yztib3JkZXItdG9wLWNvbG9yOnZhcigtLWRhcmsyLCAjNWM1YzVjKTtib3JkZXItdG9wLXdpZHRoOjFweDtib3JkZXItdG9wLXdpZHRoOnZhcigtLWJvcmRlci13aWR0aCwgMXB4KTtib3JkZXItdG9wLXN0eWxlOnNvbGlkO2JvcmRlci10b3Atc3R5bGU6dmFyKC0tYm9yZGVyLXN0eWxlLCBzb2xpZCk7cGFkZGluZzoxZW19LmtsYXJvIC5jb29raWUtbW9kYWwgLmNtLW1vZGFsIC5jbS1mb290ZXItYnV0dG9uc3tkaXNwbGF5OmZsZXg7ZmxleC1mbG93OnJvdztqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbn0ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbW9kYWwgLmNtLWZvb3RlciAuY20tcG93ZXJlZC1ieXtmb250LXNpemU6LjhlbTtwYWRkaW5nLXRvcDo0cHg7dGV4dC1hbGlnbjpyaWdodDtwYWRkaW5nLXJpZ2h0OjhweH0ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbW9kYWwgLmNtLWZvb3RlciAuY20tcG93ZXJlZC1ieSBhe2NvbG9yOiM1YzVjNWM7Y29sb3I6dmFyKC0tZGFyazIsICM1YzVjNWMpfS5rbGFybyAuY29va2llLW1vZGFsIC5jbS1tb2RhbCAuY20taGVhZGVye2JvcmRlci1ib3R0b20td2lkdGg6MXB4O2JvcmRlci1ib3R0b20td2lkdGg6dmFyKC0tYm9yZGVyLXdpZHRoLCAxcHgpO2JvcmRlci1ib3R0b20tc3R5bGU6c29saWQ7Ym9yZGVyLWJvdHRvbS1zdHlsZTp2YXIoLS1ib3JkZXItc3R5bGUsIHNvbGlkKTtib3JkZXItYm90dG9tLWNvbG9yOiM1YzVjNWM7Ym9yZGVyLWJvdHRvbS1jb2xvcjp2YXIoLS1kYXJrMiwgIzVjNWM1Yyk7cGFkZGluZzoxZW07cGFkZGluZy1yaWdodDoyNHB4fS5rbGFybyAuY29va2llLW1vZGFsIC5jbS1tb2RhbCAuY20taGVhZGVyIGgxe21hcmdpbjowO2ZvbnQtc2l6ZToyZW07ZGlzcGxheTpibG9ja30ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbW9kYWwgLmNtLWhlYWRlciBoMS50aXRsZXtwYWRkaW5nLXJpZ2h0OjIwcHh9LmtsYXJvIC5jb29raWUtbW9kYWwgLmNtLW1vZGFsIC5jbS1ib2R5e3BhZGRpbmc6MWVtfS5rbGFybyAuY29va2llLW1vZGFsIC5jbS1tb2RhbCAuY20tYm9keSB1bHtkaXNwbGF5OmJsb2NrfS5rbGFybyAuY29va2llLW1vZGFsIC5jbS1tb2RhbCAuY20tYm9keSBzcGFue2Rpc3BsYXk6aW5saW5lLWJsb2NrO3dpZHRoOmF1dG99LmtsYXJvIC5jb29raWUtbW9kYWwgLmNtLW1vZGFsIC5jbS1ib2R5IHVsLmNtLXNlcnZpY2VzLC5rbGFybyAuY29va2llLW1vZGFsIC5jbS1tb2RhbCAuY20tYm9keSB1bC5jbS1wdXJwb3Nlc3twYWRkaW5nOjA7bWFyZ2luOjB9LmtsYXJvIC5jb29raWUtbW9kYWwgLmNtLW1vZGFsIC5jbS1ib2R5IHVsLmNtLXNlcnZpY2VzIGxpLmNtLXB1cnBvc2UgLmNtLXNlcnZpY2VzIC5jbS1jYXJldCwua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbW9kYWwgLmNtLWJvZHkgdWwuY20tcHVycG9zZXMgbGkuY20tcHVycG9zZSAuY20tc2VydmljZXMgLmNtLWNhcmV0e2NvbG9yOiNhMGEwYTA7Y29sb3I6dmFyKC0tbGlnaHQzLCAjYTBhMGEwKX0ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbW9kYWwgLmNtLWJvZHkgdWwuY20tc2VydmljZXMgbGkuY20tcHVycG9zZSAuY20tc2VydmljZXMgLmNtLWNvbnRlbnQsLmtsYXJvIC5jb29raWUtbW9kYWwgLmNtLW1vZGFsIC5jbS1ib2R5IHVsLmNtLXB1cnBvc2VzIGxpLmNtLXB1cnBvc2UgLmNtLXNlcnZpY2VzIC5jbS1jb250ZW50e21hcmdpbi1sZWZ0Oi00MHB4O2Rpc3BsYXk6bm9uZX0ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbW9kYWwgLmNtLWJvZHkgdWwuY20tc2VydmljZXMgbGkuY20tcHVycG9zZSAuY20tc2VydmljZXMgLmNtLWNvbnRlbnQuZXhwYW5kZWQsLmtsYXJvIC5jb29raWUtbW9kYWwgLmNtLW1vZGFsIC5jbS1ib2R5IHVsLmNtLXB1cnBvc2VzIGxpLmNtLXB1cnBvc2UgLmNtLXNlcnZpY2VzIC5jbS1jb250ZW50LmV4cGFuZGVke21hcmdpbi10b3A6MTBweDtkaXNwbGF5OmJsb2NrfS5rbGFybyAuY29va2llLW1vZGFsIC5jbS1tb2RhbCAuY20tYm9keSB1bC5jbS1zZXJ2aWNlcyBsaS5jbS1zZXJ2aWNlLC5rbGFybyAuY29va2llLW1vZGFsIC5jbS1tb2RhbCAuY20tYm9keSB1bC5jbS1zZXJ2aWNlcyBsaS5jbS1wdXJwb3NlLC5rbGFybyAuY29va2llLW1vZGFsIC5jbS1tb2RhbCAuY20tYm9keSB1bC5jbS1wdXJwb3NlcyBsaS5jbS1zZXJ2aWNlLC5rbGFybyAuY29va2llLW1vZGFsIC5jbS1tb2RhbCAuY20tYm9keSB1bC5jbS1wdXJwb3NlcyBsaS5jbS1wdXJwb3Nle3Bvc2l0aW9uOnJlbGF0aXZlO2xpbmUtaGVpZ2h0OjIwcHg7dmVydGljYWwtYWxpZ246bWlkZGxlO3BhZGRpbmctbGVmdDo2MHB4O21pbi1oZWlnaHQ6NDBweH0ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbW9kYWwgLmNtLWJvZHkgdWwuY20tc2VydmljZXMgbGkuY20tc2VydmljZTpmaXJzdC1jaGlsZCwua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbW9kYWwgLmNtLWJvZHkgdWwuY20tc2VydmljZXMgbGkuY20tcHVycG9zZTpmaXJzdC1jaGlsZCwua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbW9kYWwgLmNtLWJvZHkgdWwuY20tcHVycG9zZXMgbGkuY20tc2VydmljZTpmaXJzdC1jaGlsZCwua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbW9kYWwgLmNtLWJvZHkgdWwuY20tcHVycG9zZXMgbGkuY20tcHVycG9zZTpmaXJzdC1jaGlsZHttYXJnaW4tdG9wOjB9LmtsYXJvIC5jb29raWUtbW9kYWwgLmNtLW1vZGFsIC5jbS1ib2R5IHVsLmNtLXNlcnZpY2VzIGxpLmNtLXNlcnZpY2UgcCwua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbW9kYWwgLmNtLWJvZHkgdWwuY20tc2VydmljZXMgbGkuY20tcHVycG9zZSBwLC5rbGFybyAuY29va2llLW1vZGFsIC5jbS1tb2RhbCAuY20tYm9keSB1bC5jbS1wdXJwb3NlcyBsaS5jbS1zZXJ2aWNlIHAsLmtsYXJvIC5jb29raWUtbW9kYWwgLmNtLW1vZGFsIC5jbS1ib2R5IHVsLmNtLXB1cnBvc2VzIGxpLmNtLXB1cnBvc2UgcHttYXJnaW4tdG9wOjB9LmtsYXJvIC5jb29raWUtbW9kYWwgLmNtLW1vZGFsIC5jbS1ib2R5IHVsLmNtLXNlcnZpY2VzIGxpLmNtLXNlcnZpY2UgcC5wdXJwb3Nlcywua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbW9kYWwgLmNtLWJvZHkgdWwuY20tc2VydmljZXMgbGkuY20tcHVycG9zZSBwLnB1cnBvc2VzLC5rbGFybyAuY29va2llLW1vZGFsIC5jbS1tb2RhbCAuY20tYm9keSB1bC5jbS1wdXJwb3NlcyBsaS5jbS1zZXJ2aWNlIHAucHVycG9zZXMsLmtsYXJvIC5jb29raWUtbW9kYWwgLmNtLW1vZGFsIC5jbS1ib2R5IHVsLmNtLXB1cnBvc2VzIGxpLmNtLXB1cnBvc2UgcC5wdXJwb3Nlc3tjb2xvcjojYTBhMGEwO2NvbG9yOnZhcigtLWxpZ2h0MywgI2EwYTBhMCk7Zm9udC1zaXplOi44ZW19LmtsYXJvIC5jb29raWUtbW9kYWwgLmNtLW1vZGFsIC5jbS1ib2R5IHVsLmNtLXNlcnZpY2VzIGxpLmNtLXNlcnZpY2UuY20tdG9nZ2xlLWFsbCwua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbW9kYWwgLmNtLWJvZHkgdWwuY20tc2VydmljZXMgbGkuY20tcHVycG9zZS5jbS10b2dnbGUtYWxsLC5rbGFybyAuY29va2llLW1vZGFsIC5jbS1tb2RhbCAuY20tYm9keSB1bC5jbS1wdXJwb3NlcyBsaS5jbS1zZXJ2aWNlLmNtLXRvZ2dsZS1hbGwsLmtsYXJvIC5jb29raWUtbW9kYWwgLmNtLW1vZGFsIC5jbS1ib2R5IHVsLmNtLXB1cnBvc2VzIGxpLmNtLXB1cnBvc2UuY20tdG9nZ2xlLWFsbHtib3JkZXItdG9wLXdpZHRoOjFweDtib3JkZXItdG9wLXdpZHRoOnZhcigtLWJvcmRlci13aWR0aCwgMXB4KTtib3JkZXItdG9wLXN0eWxlOnNvbGlkO2JvcmRlci10b3Atc3R5bGU6dmFyKC0tYm9yZGVyLXN0eWxlLCBzb2xpZCk7Ym9yZGVyLXRvcC1jb2xvcjojNWM1YzVjO2JvcmRlci10b3AtY29sb3I6dmFyKC0tZGFyazIsICM1YzVjNWMpO3BhZGRpbmctdG9wOjFlbX0ua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbW9kYWwgLmNtLWJvZHkgdWwuY20tc2VydmljZXMgbGkuY20tc2VydmljZSBzcGFuLmNtLWxpc3QtdGl0bGUsLmtsYXJvIC5jb29raWUtbW9kYWwgLmNtLW1vZGFsIC5jbS1ib2R5IHVsLmNtLXNlcnZpY2VzIGxpLmNtLXB1cnBvc2Ugc3Bhbi5jbS1saXN0LXRpdGxlLC5rbGFybyAuY29va2llLW1vZGFsIC5jbS1tb2RhbCAuY20tYm9keSB1bC5jbS1wdXJwb3NlcyBsaS5jbS1zZXJ2aWNlIHNwYW4uY20tbGlzdC10aXRsZSwua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbW9kYWwgLmNtLWJvZHkgdWwuY20tcHVycG9zZXMgbGkuY20tcHVycG9zZSBzcGFuLmNtLWxpc3QtdGl0bGV7Zm9udC13ZWlnaHQ6NjAwfS5rbGFybyAuY29va2llLW1vZGFsIC5jbS1tb2RhbCAuY20tYm9keSB1bC5jbS1zZXJ2aWNlcyBsaS5jbS1zZXJ2aWNlIHNwYW4uY20tb3B0LW91dCwua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbW9kYWwgLmNtLWJvZHkgdWwuY20tc2VydmljZXMgbGkuY20tc2VydmljZSBzcGFuLmNtLXJlcXVpcmVkLC5rbGFybyAuY29va2llLW1vZGFsIC5jbS1tb2RhbCAuY20tYm9keSB1bC5jbS1zZXJ2aWNlcyBsaS5jbS1wdXJwb3NlIHNwYW4uY20tb3B0LW91dCwua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbW9kYWwgLmNtLWJvZHkgdWwuY20tc2VydmljZXMgbGkuY20tcHVycG9zZSBzcGFuLmNtLXJlcXVpcmVkLC5rbGFybyAuY29va2llLW1vZGFsIC5jbS1tb2RhbCAuY20tYm9keSB1bC5jbS1wdXJwb3NlcyBsaS5jbS1zZXJ2aWNlIHNwYW4uY20tb3B0LW91dCwua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbW9kYWwgLmNtLWJvZHkgdWwuY20tcHVycG9zZXMgbGkuY20tc2VydmljZSBzcGFuLmNtLXJlcXVpcmVkLC5rbGFybyAuY29va2llLW1vZGFsIC5jbS1tb2RhbCAuY20tYm9keSB1bC5jbS1wdXJwb3NlcyBsaS5jbS1wdXJwb3NlIHNwYW4uY20tb3B0LW91dCwua2xhcm8gLmNvb2tpZS1tb2RhbCAuY20tbW9kYWwgLmNtLWJvZHkgdWwuY20tcHVycG9zZXMgbGkuY20tcHVycG9zZSBzcGFuLmNtLXJlcXVpcmVke2NvbG9yOiM1YzVjNWM7Y29sb3I6dmFyKC0tZGFyazIsICM1YzVjNWMpO3BhZGRpbmctbGVmdDouMmVtO2ZvbnQtc2l6ZTouOGVtfS5rbGFybyAuY29va2llLW5vdGljZTpub3QoLmNvb2tpZS1tb2RhbC1ub3RpY2Upe2JhY2tncm91bmQtY29sb3I6IzMzMztiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWRhcmsxLCAjMzMzKTt6LWluZGV4Ojk5OTtwb3NpdGlvbjpmaXhlZDt3aWR0aDoxMDAlO2JvdHRvbTowO3JpZ2h0OjB9QG1lZGlhKG1pbi13aWR0aDogMTAyNHB4KXsua2xhcm8gLmNvb2tpZS1ub3RpY2U6bm90KC5jb29raWUtbW9kYWwtbm90aWNlKXtib3JkZXItcmFkaXVzOjRweDtib3JkZXItcmFkaXVzOnZhcigtLWJvcmRlci1yYWRpdXMsIDRweCk7cG9zaXRpb246Zml4ZWQ7cG9zaXRpb246dmFyKC0tbm90aWNlLXBvc2l0aW9uLCBmaXhlZCk7cmlnaHQ6MjBweDtyaWdodDp2YXIoLS1ub3RpY2UtcmlnaHQsIDIwcHgpO2xlZnQ6YXV0bztsZWZ0OnZhcigtLW5vdGljZS1sZWZ0LCBhdXRvKTtib3R0b206MjBweDtib3R0b206dmFyKC0tbm90aWNlLWJvdHRvbSwgMjBweCk7dG9wOmF1dG87dG9wOnZhcigtLW5vdGljZS10b3AsIGF1dG8pO21heC13aWR0aDo0MDBweDttYXgtd2lkdGg6dmFyKC0tbm90aWNlLW1heC13aWR0aCwgNDAwcHgpO2JveC1zaGFkb3c6MCA0cHggNnB4IDAgcmdiYSgwLDAsMCwuMiksNXB4IDVweCAxMHB4IDAgcmdiYSgwLDAsMCwuMTkpfX1AbWVkaWEobWF4LXdpZHRoOiAxMDIzcHgpey5rbGFybyAuY29va2llLW5vdGljZTpub3QoLmNvb2tpZS1tb2RhbC1ub3RpY2Upe2JvcmRlci1zdHlsZTpub25lO2JvcmRlci1yYWRpdXM6MH19LmtsYXJvIC5jb29raWUtbm90aWNlOm5vdCguY29va2llLW1vZGFsLW5vdGljZSkuY24tZW1iZWRkZWR7cG9zaXRpb246cmVsYXRpdmU7aGVpZ2h0OmluaGVyaXQ7d2lkdGg6aW5oZXJpdDtsZWZ0OmluaGVyaXQ7cmlnaHQ6aW5oZXJpdDtib3R0b206aW5oZXJpdDt6LWluZGV4OjB9LmtsYXJvIC5jb29raWUtbm90aWNlOm5vdCguY29va2llLW1vZGFsLW5vdGljZSkuY24tZW1iZWRkZWQgLmNuLWJvZHl7cGFkZGluZy10b3A6LjVlbX0ua2xhcm8gLmNvb2tpZS1ub3RpY2U6bm90KC5jb29raWUtbW9kYWwtbm90aWNlKSAuY24tYm9keXttYXJnaW4tYm90dG9tOjA7bWFyZ2luLXJpZ2h0OjA7Ym90dG9tOjA7cGFkZGluZzoxZW07cGFkZGluZy10b3A6MH0ua2xhcm8gLmNvb2tpZS1ub3RpY2U6bm90KC5jb29raWUtbW9kYWwtbm90aWNlKSAuY24tYm9keSBwe21hcmdpbi1ib3R0b206LjVlbX0ua2xhcm8gLmNvb2tpZS1ub3RpY2U6bm90KC5jb29raWUtbW9kYWwtbm90aWNlKSAuY24tYm9keSBwLmNuLWNoYW5nZXN7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZX0ua2xhcm8gLmNvb2tpZS1ub3RpY2U6bm90KC5jb29raWUtbW9kYWwtbm90aWNlKSAuY24tYm9keSAuY24tbGVhcm4tbW9yZXtkaXNwbGF5OmlubGluZS1ibG9jaztmbGV4LWdyb3c6MX0ua2xhcm8gLmNvb2tpZS1ub3RpY2U6bm90KC5jb29raWUtbW9kYWwtbm90aWNlKSAuY24tYm9keSAuY24tYnV0dG9uc3tkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tdG9wOi0wLjVlbX1AbWVkaWEobWF4LXdpZHRoOiAzODRweCl7LmtsYXJvIC5jb29raWUtbm90aWNlOm5vdCguY29va2llLW1vZGFsLW5vdGljZSkgLmNuLWJvZHkgLmNuLWJ1dHRvbnN7d2lkdGg6MTAwJX19LmtsYXJvIC5jb29raWUtbm90aWNlOm5vdCguY29va2llLW1vZGFsLW5vdGljZSkgLmNuLWJvZHkgLmNuLWJ1dHRvbnMgYnV0dG9uLmNtLWJ0bnttYXJnaW4tdG9wOi41ZW19QG1lZGlhKG1heC13aWR0aDogMzg0cHgpey5rbGFybyAuY29va2llLW5vdGljZTpub3QoLmNvb2tpZS1tb2RhbC1ub3RpY2UpIC5jbi1ib2R5IC5jbi1idXR0b25zIGJ1dHRvbi5jbS1idG57d2lkdGg6Y2FsYyg1MCUgLSAwLjVlbSl9fS5rbGFybyAuY29va2llLW5vdGljZTpub3QoLmNvb2tpZS1tb2RhbC1ub3RpY2UpIC5jbi1ib2R5IC5jbi1va3ttYXJnaW4tdG9wOi0wLjVlbTtkaXNwbGF5OmZsZXg7ZmxleC1mbG93OnJvdztmbGV4LXdyYXA6d3JhcDtqdXN0aWZ5LWNvbnRlbnQ6cmlnaHQ7YWxpZ24taXRlbXM6YmFzZWxpbmV9LmtsYXJvIC5jb29raWUtbm90aWNlOm5vdCguY29va2llLW1vZGFsLW5vdGljZSkgLmNuLWJvZHkgLmNuLW9rIGEsLmtsYXJvIC5jb29raWUtbm90aWNlOm5vdCguY29va2llLW1vZGFsLW5vdGljZSkgLmNuLWJvZHkgLmNuLW9rIGRpdnttYXJnaW4tdG9wOi41ZW19LmtsYXJvIC5jb29raWUtbW9kYWwtbm90aWNle2JhY2tncm91bmQtY29sb3I6IzMzMztiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWRhcmsxLCAjMzMzKTtjb2xvcjojZmFmYWZhO2NvbG9yOnZhcigtLWxpZ2h0MSwgI2ZhZmFmYSk7ei1pbmRleDoxMDAxO2JveC1zaGFkb3c6MCA0cHggNnB4IDAgcmdiYSgwLDAsMCwuMiksNXB4IDVweCAxMHB4IDAgcmdiYSgwLDAsMCwuMTkpO3dpZHRoOjEwMCU7bWF4LWhlaWdodDo5OCU7dG9wOjUwJTstbXMtdHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTUwJSk7dHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTUwJSk7cG9zaXRpb246Zml4ZWQ7b3ZlcmZsb3c6YXV0bztwYWRkaW5nOjFlbTtwYWRkaW5nLXRvcDouMmVtfUBtZWRpYShtaW4td2lkdGg6IDQwMHB4KXsua2xhcm8gLmNvb2tpZS1tb2RhbC1ub3RpY2V7Ym9yZGVyLXJhZGl1czo0cHg7Ym9yZGVyLXJhZGl1czp2YXIoLS1ib3JkZXItcmFkaXVzLCA0cHgpO3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbjowIGF1dG87bWF4LXdpZHRoOjQwMHB4O2hlaWdodDphdXRvO3dpZHRoOmF1dG99fS5rbGFybyAuY29va2llLW1vZGFsLW5vdGljZSAuY24tb2t7ZGlzcGxheTpmbGV4O2ZsZXgtZmxvdzpyb3c7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47YWxpZ24taXRlbXM6Y2VudGVyO21hcmdpbi10b3A6MWVtfS5rbGFybyAuY29va2llLW5vdGljZS1oaWRkZW57ZGlzcGxheTpub25lICFpbXBvcnRhbnR9YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zY3NzL2tsYXJvLnNjc3NcIixcIndlYnBhY2s6Ly8uL3Njc3MvdmFycy5zY3NzXCIsXCJ3ZWJwYWNrOi8vLi9zY3NzL3N3aXRjaC5zY3NzXCIsXCJ3ZWJwYWNrOi8v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NFpBLG1DQUNJLFlBQUEsQ0FDQSxhQUFBLENBQ0EsNkJBQUEsQ0FDQSxrQkFBQSxDQUVBLGNBQUEsQ0FJUiw2QkFDSSx1QkFBQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAdXNlIFxcXCJzYXNzOm1hcFxcXCI7XFxuQGltcG9ydCAnLi9tb2RhbCc7XFxuQGltcG9ydCAnLi92YXJzJztcXG5cXG4ua2xhcm8ge1xcblxcbiAgICAkYnRuLW1hcmdpbi1yaWdodDogMC41ZW07XFxuXFxuICAgIEBpbmNsdWRlIHZhcihmb250LWZhbWlseSwgZm9udC1mYW1pbHkpO1xcbiAgICBAaW5jbHVkZSB2YXIoZm9udC1zaXplLCBmb250LXNpemUpO1xcblxcbiAgICAvLyBidXR0b25zIHVzZSB0aGVpciBvd24gZm9udC1mYW1pbHkgc2V0dGluZyBzbyB3ZSBuZWVkIHRvIG92ZXJyaWRlIGl0IGV4cGxpY2l0bHkuLi5cXG4gICAgYnV0dG9uIHtcXG4gICAgICAgIEBpbmNsdWRlIHZhcihmb250LWZhbWlseSwgZm9udC1mYW1pbHkpO1xcbiAgICAgICAgQGluY2x1ZGUgdmFyKGZvbnQtc2l6ZSwgZm9udC1zaXplKTtcXG4gICAgfVxcblxcbiAgICAmLmNtLWFzLWNvbnRleHQtbm90aWNlIHtcXG4gICAgICAgIGhlaWdodDogMTAwJTtcXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiBtYXAuZ2V0KCRjbS1zcGFjZSwgbWQpO1xcbiAgICAgICAgcGFkZGluZy10b3A6IG1hcC5nZXQoJGNtLXNwYWNlLCBtZCk7XFxuICAgIH1cXG5cXG4gICAgLmNvb2tpZS1tb2RhbCxcXG4gICAgLmNvbnRleHQtbm90aWNlLFxcbiAgICAuY29va2llLW5vdGljZSB7XFxuICAgICAgICBAaW1wb3J0ICdzd2l0Y2gnO1xcblxcbiAgICAgICAgLnNsaWRlciB7XFxuICAgICAgICAgICAgYm94LXNoYWRvdzogJGNtLWJveC1zaGFkb3ctZGFyay1tZDtcXG4gICAgICAgIH1cXG5cXG4gICAgICAgIGEge1xcbiAgICAgICAgICAgIEBpbmNsdWRlIHZhcihjb2xvciwgZ3JlZW4xKTtcXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICAgICAgICB9XFxuXFxuICAgICAgICBwLFxcbiAgICAgICAgc3Ryb25nLFxcbiAgICAgICAgaDEsXFxuICAgICAgICBoMixcXG4gICAgICAgIHVsLFxcbiAgICAgICAgbGkge1xcbiAgICAgICAgICAgIEBpbmNsdWRlIHZhcihjb2xvciwgbGlnaHQxKTtcXG4gICAgICAgIH1cXG5cXG4gICAgICAgIHAsXFxuICAgICAgICBoMSxcXG4gICAgICAgIGgyLFxcbiAgICAgICAgdWwsXFxuICAgICAgICBsaSB7XFxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XFxuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcXG4gICAgICAgICAgICBtYXJnaW46IDA7XFxuICAgICAgICAgICAgcGFkZGluZzogMDtcXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAwLjdlbTtcXG4gICAgICAgIH1cXG5cXG4gICAgICAgIGgxLFxcbiAgICAgICAgaDIsXFxuICAgICAgICBoMyxcXG4gICAgICAgIGg0LFxcbiAgICAgICAgaDUsXFxuICAgICAgICBoNiB7XFxuICAgICAgICAgICAgQGluY2x1ZGUgdmFyKGZvbnQtZmFtaWx5LCB0aXRsZS1mb250LWZhbWlseSk7XFxuICAgICAgICB9XFxuXFxuICAgICAgICAuY20tbGluayB7XFxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwLjVlbTtcXG4gICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbiAgICAgICAgfVxcblxcbiAgICAgICAgLmNtLWJ0biB7XFxuXFxuICAgICAgICAgICAgQGluY2x1ZGUgdmFyKGNvbG9yLCBidXR0b24tdGV4dC1jb2xvcik7XFxuICAgICAgICAgICAgQGluY2x1ZGUgdmFyKGJhY2tncm91bmQtY29sb3IsIGRhcmsyKTtcXG4gICAgICAgICAgICBAaW5jbHVkZSB2YXIoYm9yZGVyLXJhZGl1cywgYm9yZGVyLXJhZGl1cyk7XFxuICAgICAgICAgICAgcGFkZGluZzogNnB4IDEwcHg7XFxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAkYnRuLW1hcmdpbi1yaWdodDtcXG4gICAgICAgICAgICBib3JkZXItc3R5bGU6IG5vbmU7XFxuICAgICAgICAgICAgcGFkZGluZzogMC40ZW07XFxuICAgICAgICAgICAgZm9udC1zaXplOiAxZW07XFxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xcblxcbiAgICAgICAgICAgICY6ZGlzYWJsZWQge1xcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjU7XFxuICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgICYuY20tYnRuLWNsb3NlIHtcXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgdmFyKGJhY2tncm91bmQtY29sb3IsIGxpZ2h0Mik7XFxuICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgICYuY20tYnRuLXN1Y2Nlc3Mge1xcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB2YXIoYmFja2dyb3VuZC1jb2xvciwgZ3JlZW4xKTtcXG4gICAgICAgICAgICB9XFxuXFxuICAgICAgICAgICAgJi5jbS1idG4tc3VjY2Vzcy12YXIge1xcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB2YXIoYmFja2dyb3VuZC1jb2xvciwgZ3JlZW4yKTtcXG4gICAgICAgICAgICB9XFxuXFxuICAgICAgICAgICAgJi5jbS1idG4taW5mbyB7XFxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIHZhcihiYWNrZ3JvdW5kLWNvbG9yLCBibHVlMSk7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICB9XFxuXFxuICAgIC5jb250ZXh0LW5vdGljZSB7XFxuICAgICAgICBAaW5jbHVkZSB2YXIoYm9yZGVyLXJhZGl1cywgYm9yZGVyLXJhZGl1cyk7XFxuICAgICAgICBAaW5jbHVkZSB2YXIoYm9yZGVyLXN0eWxlLCBib3JkZXItc3R5bGUpO1xcbiAgICAgICAgQGluY2x1ZGUgdmFyKGJvcmRlci13aWR0aCwgYm9yZGVyLXdpZHRoKTtcXG4gICAgICAgIEBpbmNsdWRlIHZhcihib3JkZXItY29sb3IsIGxpZ2h0Mik7XFxuICAgICAgICBAaW5jbHVkZSB2YXIoYmFja2dyb3VuZC1jb2xvciwgbGlnaHQxKTtcXG5cXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICAgICAgcGFkZGluZzogbWFwLmdldCgkY20tc3BhY2UsIG1kKTtcXG4gICAgICAgIGhlaWdodDogMTAwJTtcXG5cXG4gICAgICAgICYuY20tZGFyayB7XFxuICAgICAgICAgICAgQGluY2x1ZGUgdmFyKGJhY2tncm91bmQtY29sb3IsIGRhcmsxKTtcXG4gICAgICAgICAgICBAaW5jbHVkZSB2YXIoYm9yZGVyLWNvbG9yLCBkYXJrMik7XFxuXFxuICAgICAgICAgICAgcCB7XFxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIHZhcihjb2xvciwgbGlnaHQxKTtcXG5cXG4gICAgICAgICAgICAgICAgYSB7XFxuICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSB2YXIoY29sb3IsIGJsdWUyKTtcXG4gICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgIH1cXG4gICAgICAgIH1cXG5cXG4gICAgICAgIHAge1xcbiAgICAgICAgICAgIEBpbmNsdWRlIHZhcihjb2xvciwgZGFyazEpO1xcblxcbiAgICAgICAgICAgIGZsZXgtZ3JvdzogMDtcXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgICAgICAgICAgcGFkZGluZy10b3A6IDA7XFxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMDtcXG5cXG4gICAgICAgICAgICBhIHtcXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgdmFyKGNvbG9yLCBncmVlbjIpO1xcbiAgICAgICAgICAgIH1cXG4gICAgICAgIH1cXG5cXG4gICAgICAgIHAuY20tYnV0dG9ucyB7XFxuICAgICAgICAgICAgbWFyZ2luLXRvcDogbWFwLmdldCgkY20tc3BhY2UsIG1kKTtcXG4gICAgICAgIH1cXG5cXG4gICAgICAgIC8vIGNvbnRleHR1YWwgY29uc2VudCBub3RpY2VcXG4gICAgICAgIHAuY2NuLWRlc2NyaXB0aW9uLWVtcHR5LXN0b3JlIHtcXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiBtYXAuZ2V0KCRjbS1zcGFjZSwgbGcpOyAgICAgICAgICAgIFxcbiAgICAgICAgICAgIEBpbmNsdWRlIHZhcihmb250LXNpemUsIGZvbnQtc2l6ZSk7XFxuICAgICAgICB9XFxuICAgIH1cXG5cXG4gICAgLmNvb2tpZS1tb2RhbCB7XFxuICAgICAgICB3aWR0aDogMTAwJTtcXG4gICAgICAgIGhlaWdodDogMTAwJTtcXG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XFxuICAgICAgICBsZWZ0OiAwO1xcbiAgICAgICAgdG9wOiAwO1xcbiAgICAgICAgei1pbmRleDogMTAwMDtcXG5cXG4gICAgICAgICYuY20tZW1iZWRkZWQge1xcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgICAgICAgICBoZWlnaHQ6IGluaGVyaXQ7XFxuICAgICAgICAgICAgd2lkdGg6IGluaGVyaXQ7XFxuICAgICAgICAgICAgbGVmdDogaW5oZXJpdDtcXG4gICAgICAgICAgICByaWdodDogaW5oZXJpdDtcXG4gICAgICAgICAgICB6LWluZGV4OiAwO1xcblxcbiAgICAgICAgICAgIC5jbS1tb2RhbC5jbS1rbGFybyB7XFxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBub25lO1xcbiAgICAgICAgICAgIH1cXG4gICAgICAgIH1cXG5cXG4gICAgICAgIC5jbS1iZyB7XFxuICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjUpO1xcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcXG4gICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgICAgICAgICAgdG9wOiAwO1xcbiAgICAgICAgICAgIGxlZnQ6IDA7XFxuICAgICAgICB9XFxuXFxuICAgICAgICAuY20tbW9kYWwge1xcbiAgICAgICAgICAgICYuY20ta2xhcm8ge1xcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBtb2RhbCg2NjBweCwgNjQwcHgpO1xcbiAgICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgICAuaGlkZSB7XFxuICAgICAgICAgICAgICAgIGJvcmRlci1zdHlsZTogbm9uZTtcXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcXG4gICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgICAgICAgICAgICAgIHRvcDogMjBweDtcXG4gICAgICAgICAgICAgICAgcmlnaHQ6IDIwcHg7XFxuICAgICAgICAgICAgICAgIHotaW5kZXg6IDE7XFxuXFxuICAgICAgICAgICAgICAgIHN2ZyB7XFxuICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSB2YXIoc3Ryb2tlLCBsaWdodDEpO1xcbiAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgIC5jbS1mb290ZXIge1xcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB2YXIoYm9yZGVyLXRvcC1jb2xvciwgZGFyazIpO1xcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB2YXIoYm9yZGVyLXRvcC13aWR0aCwgYm9yZGVyLXdpZHRoKTtcXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgdmFyKGJvcmRlci10b3Atc3R5bGUsIGJvcmRlci1zdHlsZSk7XFxuXFxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDFlbTtcXG5cXG4gICAgICAgICAgICAgICAgJi1idXR0b25zIHtcXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgICAgICAgICAgICAgICAgICBmbGV4LWZsb3c6IHJvdztcXG4gICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gICAgICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgICAgICAuY20tcG93ZXJlZC1ieSB7XFxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDAuOGVtO1xcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDRweDtcXG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogOHB4O1xcblxcbiAgICAgICAgICAgICAgICAgICAgYSB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgdmFyKGNvbG9yLCBkYXJrMik7XFxuICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICB9XFxuXFxuICAgICAgICAgICAgLmNtLWhlYWRlciB7XFxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIHZhcihib3JkZXItYm90dG9tLXdpZHRoLCBib3JkZXItd2lkdGgpO1xcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB2YXIoYm9yZGVyLWJvdHRvbS1zdHlsZSwgYm9yZGVyLXN0eWxlKTtcXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgdmFyKGJvcmRlci1ib3R0b20tY29sb3IsIGRhcmsyKTtcXG5cXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMWVtO1xcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAyNHB4O1xcblxcbiAgICAgICAgICAgICAgICBoMSB7XFxuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDA7XFxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDJlbTtcXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xcblxcbiAgICAgICAgICAgICAgICAgICAgJi50aXRsZSB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMjBweDtcXG4gICAgICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgICAuY20tYm9keSB7XFxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDFlbTtcXG5cXG4gICAgICAgICAgICAgICAgdWwge1xcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XFxuICAgICAgICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgICAgICAgc3BhbiB7XFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogYXV0bztcXG4gICAgICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgICAgICB1bC5jbS1zZXJ2aWNlcyxcXG4gICAgICAgICAgICAgICAgdWwuY20tcHVycG9zZXMge1xcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMDtcXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcXG5cXG4gICAgICAgICAgICAgICAgICAgIGxpLmNtLXB1cnBvc2Uge1xcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jbS1zZXJ2aWNlcyB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5jbS1jYXJldCB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSB2YXIoY29sb3IsIGxpZ2h0Myk7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmNtLWNvbnRlbnQge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC00MHB4O1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcXG5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICYuZXhwYW5kZWQge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgICAgICB9XFxuXFxuICAgICAgICAgICAgICAgICAgICBsaS5jbS1zZXJ2aWNlLFxcbiAgICAgICAgICAgICAgICAgICAgbGkuY20tcHVycG9zZSB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xcbiAgICAgICAgICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA2MHB4O1xcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDQwcHg7XFxuXFxuICAgICAgICAgICAgICAgICAgICAgICAgJjpmaXJzdC1jaGlsZCB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgICAgICAgICAgICAgIHAge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgICAgICAgICAgICAgICBwLnB1cnBvc2VzIHtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgdmFyKGNvbG9yLCBsaWdodDMpO1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDAuOGVtO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgICAgICAgICAgICAgICAmLmNtLXRvZ2dsZS1hbGwge1xcblxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSB2YXIoYm9yZGVyLXRvcC13aWR0aCwgYm9yZGVyLXdpZHRoKTtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgdmFyKGJvcmRlci10b3Atc3R5bGUsIGJvcmRlci1zdHlsZSk7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIHZhcihib3JkZXItdG9wLWNvbG9yLCBkYXJrMik7XFxuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctdG9wOiAxZW07XFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNwYW4uY20tbGlzdC10aXRsZSB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNwYW4uY20tb3B0LW91dCxcXG4gICAgICAgICAgICAgICAgICAgICAgICBzcGFuLmNtLXJlcXVpcmVkIHtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgdmFyKGNvbG9yLCBkYXJrMik7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMC4yZW07XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMC44ZW07XFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICB9XFxuXFxuICAgIC5jb29raWUtbm90aWNlOm5vdCguY29va2llLW1vZGFsLW5vdGljZSkge1xcbiAgICAgICAgQGluY2x1ZGUgdmFyKGJhY2tncm91bmQtY29sb3IsIGRhcmsxKTtcXG4gICAgICAgIHotaW5kZXg6IDk5OTtcXG5cXG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgICAgIHdpZHRoOiAxMDAlO1xcbiAgICAgICAgYm90dG9tOiAwO1xcbiAgICAgICAgcmlnaHQ6IDA7XFxuXFxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogJGNtLWRlc2t0b3ApIHtcXG4gICAgICAgICAgICBAaW5jbHVkZSB2YXIoYm9yZGVyLXJhZGl1cywgYm9yZGVyLXJhZGl1cyk7XFxuICAgICAgICAgICAgQGluY2x1ZGUgdmFyKHBvc2l0aW9uLCBub3RpY2UtcG9zaXRpb24pO1xcbiAgICAgICAgICAgIEBpbmNsdWRlIHZhcihyaWdodCwgbm90aWNlLXJpZ2h0KTtcXG4gICAgICAgICAgICBAaW5jbHVkZSB2YXIobGVmdCwgbm90aWNlLWxlZnQpO1xcbiAgICAgICAgICAgIEBpbmNsdWRlIHZhcihib3R0b20sIG5vdGljZS1ib3R0b20pO1xcbiAgICAgICAgICAgIEBpbmNsdWRlIHZhcih0b3AsIG5vdGljZS10b3ApO1xcbiAgICAgICAgICAgIEBpbmNsdWRlIHZhcihtYXgtd2lkdGgsIG5vdGljZS1tYXgtd2lkdGgpO1xcbiAgICAgICAgICAgIGJveC1zaGFkb3c6ICRjbS1ib3gtc2hhZG93LWRhcmstbWQ7XFxuICAgICAgICB9XFxuXFxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogKCRjbS1kZXNrdG9wIC0gMSkpIHtcXG4gICAgICAgICAgICBib3JkZXItc3R5bGU6IG5vbmU7XFxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMDtcXG4gICAgICAgIH1cXG5cXG4gICAgICAgICYuY24tZW1iZWRkZWQge1xcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgICAgICAgICBoZWlnaHQ6IGluaGVyaXQ7XFxuICAgICAgICAgICAgd2lkdGg6IGluaGVyaXQ7XFxuICAgICAgICAgICAgbGVmdDogaW5oZXJpdDtcXG4gICAgICAgICAgICByaWdodDogaW5oZXJpdDtcXG4gICAgICAgICAgICBib3R0b206IGluaGVyaXQ7XFxuICAgICAgICAgICAgei1pbmRleDogMDtcXG5cXG4gICAgICAgICAgICAuY24tYm9keSB7XFxuICAgICAgICAgICAgICAgIHBhZGRpbmctdG9wOiAwLjVlbTtcXG4gICAgICAgICAgICB9XFxuICAgICAgICB9XFxuXFxuICAgICAgICAuY24tYm9keSB7XFxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XFxuICAgICAgICAgICAgYm90dG9tOiAwO1xcblxcbiAgICAgICAgICAgIHBhZGRpbmc6IDFlbTtcXG4gICAgICAgICAgICBwYWRkaW5nLXRvcDogMDtcXG5cXG4gICAgICAgICAgICBwIHtcXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XFxuICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgIHAuY24tY2hhbmdlcyB7XFxuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xcbiAgICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgICAuY24tbGVhcm4tbW9yZSB7XFxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gICAgICAgICAgICAgICAgZmxleC1ncm93OiAxO1xcbiAgICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgICAuY24tYnV0dG9ucyB7XFxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogLTAuNWVtO1xcblxcbiAgICAgICAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogJGNtLW1vYmlsZSkge1xcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XFxuICAgICAgICAgICAgICAgIH1cXG5cXG4gICAgICAgICAgICAgICAgYnV0dG9uLmNtLWJ0biB7XFxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwLjVlbTtcXG5cXG4gICAgICAgICAgICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkY20tbW9iaWxlKSB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IGNhbGMoNTAlIC0gI3skYnRuLW1hcmdpbi1yaWdodH0pO1xcbiAgICAgICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgIC5jbi1vayB7XFxuICAgICAgICAgICAgICAgIC8vIHdlIGFkZCBhIG1hcmdpbiB0aGF0IGNhbmNlbHMgb3V0IHVubGVzcyB0aGUgaXRlbXMgYXJlIHdyYXBwZWRcXG4gICAgICAgICAgICAgICAgLy8gaW4gd2hpY2ggY2FzZSBpdCB3aWxsIGFkZCBzb21lIHNwYWNpbmcgYmV0d2VlbiB0aGVtXFxuICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IC0wLjVlbTtcXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcXG4gICAgICAgICAgICAgICAgZmxleC1mbG93OiByb3c7XFxuICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcXG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiByaWdodDtcXG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGJhc2VsaW5lO1xcblxcbiAgICAgICAgICAgICAgICBhLFxcbiAgICAgICAgICAgICAgICBkaXYge1xcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMC41ZW07XFxuICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgIH1cXG5cXG4gICAgLmNvb2tpZS1tb2RhbC1ub3RpY2Uge1xcbiAgICAgICAgQGluY2x1ZGUgbW9kYWwoNDAwcHgsIDQwMHB4KTtcXG5cXG4gICAgICAgIHBhZGRpbmc6IDFlbTtcXG4gICAgICAgIHBhZGRpbmctdG9wOiAwLjJlbTtcXG5cXG4gICAgICAgIC5jbi1vayB7XFxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcXG4gICAgICAgICAgICBmbGV4LWZsb3c6IHJvdztcXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG5cXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxZW07XFxuICAgICAgICB9XFxuICAgIH1cXG5cXG4gICAgLmNvb2tpZS1ub3RpY2UtaGlkZGVuIHtcXG4gICAgICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcXG4gICAgfVxcbn1cXG5cIixcIkB1c2UgXFxcInNhc3M6bWFwXFxcIjtcXG5AdXNlICdzYXNzOmNvbG9yJztcXG5cXG4vKlxcbldlIGRlY2xhcmUgYWxsIHZhcmlhYmxlcyBoZXJlIGFzIGRlZmF1bHQgc28gdGhhdCB0aGV5IGFyZSBlYXN5IHRvIG92ZXJyaWRlLi4uXFxuKi9cXG5cXG4vKiBCb3JkZXIsIHNoYWRvd3MsIC4uLiAqL1xcbiRjbS1ib3gtc2hhZG93LWRhcmstbWQ6IDAgNHB4IDZweCAwIHJnYmEoMCwgMCwgMCwgMC4yKSwgNXB4IDVweCAxMHB4IDAgcmdiYSgwLCAwLCAwLCAwLjE5KSAhZGVmYXVsdDtcXG4kY20tYm94LXNoYWRvdy1saWdodC1zbTogMCAycHggNXB4IDAgcmdiYSgwLCAwLCAwLCAwLjExKSAhZGVmYXVsdDtcXG4kY20tYm94LXNoYWRvdy1kYXJrLXNtOiAwIDJweCA1cHggMCByZ2JhKDAsIDAsIDAsIDAuMzMpICFkZWZhdWx0O1xcblxcbi8qXFxuVmFyaWFibGVzIHRoYXQgYmVnaW4gd2l0aCAkdmFyLSBzaG91bGQgTkVWRVIgYmUgdXNlZCBkaXJlY3RseSBpbiBDU1MgcnVsZXMuXFxudGhleSBzaG91bGQgb25seSBiZSBpbmNsdWRlZCB2aWEgdGhlIFxcXCJAaW5jbHVkZSB2YXIocHJvcGVydHksIHZhci1uYW1lKVxcXCJcXG5tZWNoYW5pc20uXFxuKi9cXG5cXG4vKiBCb3JkZXIgc3R5bGVzICovXFxuJHZhci1ib3JkZXItcmFkaXVzOiA0cHggIWRlZmF1bHQ7XFxuJHZhci1ib3JkZXItc3R5bGU6IHNvbGlkICFkZWZhdWx0O1xcbiR2YXItYm9yZGVyLXdpZHRoOiAxcHggIWRlZmF1bHQ7XFxuXFxuLyogQ29va2llIG5vdGljZSBwb3NpdGlvbmluZyAqL1xcbiR2YXItbm90aWNlLXJpZ2h0OiAyMHB4ICFkZWZhdWx0O1xcbiR2YXItbm90aWNlLWxlZnQ6IGF1dG8gIWRlZmF1bHQ7XFxuJHZhci1ub3RpY2UtdG9wOiBhdXRvICFkZWZhdWx0O1xcbiR2YXItbm90aWNlLWJvdHRvbTogMjBweCAhZGVmYXVsdDtcXG4kdmFyLW5vdGljZS1tYXgtd2lkdGg6IDQwMHB4ICFkZWZhdWx0O1xcbiR2YXItbm90aWNlLXBvc2l0aW9uOiBmaXhlZCAhZGVmYXVsdDtcXG5cXG4vKiBUZXh0IGNvbG9ycyAqL1xcbiR2YXItYnV0dG9uLXRleHQtY29sb3I6ICNmZmYgIWRlZmF1bHQ7XFxuXFxuLyogRm9udCBGYW1pbGllcyAqL1xcbiR2YXItZm9udC1mYW1pbHk6IGluaGVyaXQgIWRlZmF1bHQ7XFxuJHZhci10aXRsZS1mb250LWZhbWlseTogaW5oZXJpdCAhZGVmYXVsdDtcXG4kdmFyLWZvbnQtc2l6ZTogMTRweCAhZGVmYXVsdDtcXG5cXG4vKiBXaGl0ZSAqL1xcbiR2YXItd2hpdGUxOiAjZmZmICFkZWZhdWx0O1xcbiR2YXItd2hpdGUyOiBjb2xvci5zY2FsZSgkdmFyLXdoaXRlMSwgJGxpZ2h0bmVzczogLTUlKSAhZGVmYXVsdDtcXG4kdmFyLXdoaXRlMzogY29sb3Iuc2NhbGUoJHZhci13aGl0ZTIsICRsaWdodG5lc3M6IC01JSkgIWRlZmF1bHQ7XFxuXFxuLyogRGlmZmVyZW50bHkgc2hhZGVkIGNvbG9ycyAqL1xcblxcbi8vIGxpZ2h0IGdyYXlcXG4kdmFyLWxpZ2h0MTogI2ZhZmFmYSAhZGVmYXVsdDtcXG4kdmFyLWxpZ2h0MjogY29sb3Iuc2NhbGUoJHZhci1saWdodDEsICRsaWdodG5lc3M6IC0yMCUpICFkZWZhdWx0O1xcbiR2YXItbGlnaHQzOiBjb2xvci5zY2FsZSgkdmFyLWxpZ2h0MiwgJGxpZ2h0bmVzczogLTIwJSkgIWRlZmF1bHQ7XFxuXFxuLy8gZGFyayBncmF5XFxuJHZhci1kYXJrMTogIzMzMyAhZGVmYXVsdDtcXG4kdmFyLWRhcmsyOiBjb2xvci5zY2FsZSgkdmFyLWRhcmsxLCAkbGlnaHRuZXNzOiAyMCUpICFkZWZhdWx0O1xcbiR2YXItZGFyazM6IGNvbG9yLnNjYWxlKCR2YXItZGFyazIsICRsaWdodG5lc3M6IDIwJSkgIWRlZmF1bHQ7XFxuXFxuLy8gYmx1ZVxcbiR2YXItYmx1ZTE6ICMyNTgxYzQgIWRlZmF1bHQ7XFxuJHZhci1ibHVlMjogY29sb3Iuc2NhbGUoJHZhci1ibHVlMSwgJGxpZ2h0bmVzczogMjAlKSAhZGVmYXVsdDtcXG4kdmFyLWJsdWUzOiBjb2xvci5zY2FsZSgkdmFyLWJsdWUyLCAkbGlnaHRuZXNzOiAyMCUpICFkZWZhdWx0O1xcblxcbi8vIGdyZWVuXFxuJHZhci1ncmVlbjE6ICMxYTkzNmYgIWRlZmF1bHQ7XFxuJHZhci1ncmVlbjI6IGNvbG9yLnNjYWxlKCR2YXItZ3JlZW4xLCAkbGlnaHRuZXNzOiAyMCUpICFkZWZhdWx0O1xcbiR2YXItZ3JlZW4zOiBjb2xvci5zY2FsZSgkdmFyLWdyZWVuMiwgJGxpZ2h0bmVzczogMjAlKSAhZGVmYXVsdDtcXG5cXG4vLyByZWRcXG4kdmFyLXJlZDE6ICNkYTJjNDMgIWRlZmF1bHQ7XFxuJHZhci1yZWQyOiBjb2xvci5zY2FsZSgkdmFyLXJlZDEsICRsaWdodG5lc3M6IDIwJSkgIWRlZmF1bHQ7XFxuJHZhci1yZWQzOiBjb2xvci5zY2FsZSgkdmFyLXJlZDIsICRsaWdodG5lc3M6IDIwJSkgIWRlZmF1bHQ7XFxuXFxuLy8gYWxsIHRoZXNlIHZhcmlhYmxlcyBjYW4gYmUgdHdlYWtlZCBhdCBydW50aW1lIGJ5IHNwZWNpZnlpbmcgdGhlbSB2aWEgdGhlXFxuLy8gJ3N0eWxpbmcnIGNvbmZpZyBwYXJhbWV0ZXIuXFxuJHZhcnM6IChcXG4gICAgYnV0dG9uLXRleHQtY29sb3I6ICR2YXItYnV0dG9uLXRleHQtY29sb3IsXFxuXFxuICAgIGZvbnQtc2l6ZTogJHZhci1mb250LXNpemUsXFxuICAgIGZvbnQtZmFtaWx5OiAkdmFyLWZvbnQtZmFtaWx5LFxcbiAgICB0aXRsZS1mb250LWZhbWlseTogJHZhci10aXRsZS1mb250LWZhbWlseSxcXG5cXG4gICAgZ3JlZW4xOiAkdmFyLWdyZWVuMSxcXG4gICAgZ3JlZW4yOiAkdmFyLWdyZWVuMixcXG4gICAgZ3JlZW4zOiAkdmFyLWdyZWVuMyxcXG5cXG4gICAgYmx1ZTE6ICR2YXItYmx1ZTEsXFxuICAgIGJsdWUyOiAkdmFyLWJsdWUyLFxcbiAgICBibHVlMzogJHZhci1ibHVlMyxcXG5cXG4gICAgcmVkMTogJHZhci1yZWQxLFxcbiAgICByZWQyOiAkdmFyLXJlZDIsXFxuICAgIHJlZDM6ICR2YXItcmVkMyxcXG5cXG4gICAgbGlnaHQxOiAkdmFyLWxpZ2h0MSxcXG4gICAgbGlnaHQyOiAkdmFyLWxpZ2h0MixcXG4gICAgbGlnaHQzOiAkdmFyLWxpZ2h0MyxcXG5cXG4gICAgZGFyazE6ICR2YXItZGFyazEsXFxuICAgIGRhcmsyOiAkdmFyLWRhcmsyLFxcbiAgICBkYXJrMzogJHZhci1kYXJrMyxcXG5cXG4gICAgd2hpdGUxOiAkdmFyLXdoaXRlMSxcXG4gICAgd2hpdGUyOiAkdmFyLXdoaXRlMixcXG4gICAgd2hpdGUzOiAkdmFyLXdoaXRlMyxcXG5cXG4gICAgLy8gbm9uLWNvbG9yIG9wdGlvbnNcXG5cXG4gICAgYm9yZGVyLXJhZGl1czogJHZhci1ib3JkZXItcmFkaXVzLFxcbiAgICBib3JkZXItc3R5bGU6ICR2YXItYm9yZGVyLXN0eWxlLFxcbiAgICBib3JkZXItd2lkdGg6ICR2YXItYm9yZGVyLXdpZHRoLFxcbiAgICBub3RpY2UtbGVmdDogJHZhci1ub3RpY2UtbGVmdCxcXG4gICAgbm90aWNlLXJpZ2h0OiAkdmFyLW5vdGljZS1yaWdodCxcXG4gICAgbm90aWNlLXRvcDogJHZhci1ub3RpY2UtdG9wLFxcbiAgICBub3RpY2UtYm90dG9tOiAkdmFyLW5vdGljZS1ib3R0b20sXFxuICAgIG5vdGljZS1tYXgtd2lkdGg6ICR2YXItbm90aWNlLW1heC13aWR0aCxcXG4gICAgbm90aWNlLXBvc2l0aW9uOiAkdmFyLW5vdGljZS1wb3NpdGlvbixcXG4pO1xcblxcbi8qXFxuVXNlIEBpbmNsdWRlIHZhcihwcm9wZXJ0eSwgdmFybmFtZSkgdG8gaW5jbHVkZSBhIHZhcmlhYmxlLCBlLmcuXFxuXFxuICAgIEBpbmNsdWRlIHZhcihiYWNrZ3JvdW5kLWNvbG9yLCB3aGl0ZTEpO1xcblxcbnRvIGNyZWF0ZSBhIHdoaXRlIGJhY2tncm91bmQuXFxuKi9cXG5AbWl4aW4gdmFyKCRwcm9wZXJ0eSwgJHZhck5hbWUpIHtcXG4gICAgI3skcHJvcGVydHl9OiBtYXAuZ2V0KCR2YXJzLCAkdmFyTmFtZSk7XFxuICAgICN7JHByb3BlcnR5fTogdmFyKC0tI3skdmFyTmFtZX0sIG1hcC5nZXQoJHZhcnMsICR2YXJOYW1lKSk7XFxufVxcblxcbi8qIFNwYWNpbmcgKi9cXG4kY20tc3BhY2U6IChcXG4gICAgeHM6IDRweCxcXG4gICAgc206IDhweCxcXG4gICAgbWQ6IDEycHgsXFxuICAgIGxnOiAyNHB4LFxcbiAgICB4bDogNDhweCxcXG4gICAgeHhsOiA5NnB4XFxuKSAhZGVmYXVsdDtcXG5cXG4vKiBCcmVha3BvaW50cyAqL1xcbiRjbS1kZXNrdG9wOiAxMDI0cHggIWRlZmF1bHQ7XFxuJGNtLW1vYmlsZTogMzg0cHggIWRlZmF1bHQ7XFxuJGNtLXRhYmxldDogNzY4cHggIWRlZmF1bHQ7XFxuXCIsXCIvKiBUaGUgc3dpdGNoIC0gdGhlIGJveCBhcm91bmQgdGhlIHNsaWRlciAqL1xcblxcbi5jbS1zd2l0Y2gtY29udGFpbmVyIHtcXG4gICAgQGluY2x1ZGUgdmFyKGJvcmRlci1ib3R0b20tc3R5bGUsIGJvcmRlci1zdHlsZSk7XFxuICAgIEBpbmNsdWRlIHZhcihib3JkZXItYm90dG9tLXdpZHRoLCBib3JkZXItd2lkdGgpO1xcbiAgICBAaW5jbHVkZSB2YXIoYm9yZGVyLWJvdHRvbS1jb2xvciwgbGlnaHQyKTtcXG5cXG4gICAgZGlzcGxheTogYmxvY2s7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgcGFkZGluZzogMTBweDtcXG4gICAgcGFkZGluZy1sZWZ0OiA2NnB4O1xcbiAgICBsaW5lLWhlaWdodDogMjBweDtcXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcXG4gICAgbWluLWhlaWdodDogNDBweDtcXG5cXG4gICAgJjpsYXN0LWNoaWxkIHtcXG4gICAgICAgIGJvcmRlci1ib3R0b206IDA7XFxuICAgIH1cXG5cXG4gICAgJjpmaXJzdC1jaGlsZCB7XFxuICAgICAgICBtYXJnaW4tdG9wOiAwO1xcbiAgICB9XFxuXFxuICAgIHAge1xcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcXG4gICAgfVxcbn1cXG5cXG4uY20tc3dpdGNoIHtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICAgIHdpZHRoOiA1MHB4O1xcbiAgICBoZWlnaHQ6IDMwcHg7XFxufVxcblxcbi5jbS1saXN0LWlucHV0OmNoZWNrZWQgKyAuY20tbGlzdC1sYWJlbCAuc2xpZGVyIHtcXG4gICAgQGluY2x1ZGUgdmFyKGJhY2tncm91bmQtY29sb3IsIGdyZWVuMSk7XFxufVxcblxcbi5jbS1saXN0LWlucHV0LmhhbGYtY2hlY2tlZDpjaGVja2VkICsgLmNtLWxpc3QtbGFiZWwgLnNsaWRlciB7XFxuICAgIEBpbmNsdWRlIHZhcihiYWNrZ3JvdW5kLWNvbG9yLCBncmVlbjEpO1xcbiAgICBvcGFjaXR5OiAwLjY7XFxuXFxuICAgICY6OmJlZm9yZSB7XFxuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMHB4KTtcXG4gICAgICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTBweCk7XFxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTBweCk7XFxuICAgIH1cXG59XFxuXFxuLmNtLWxpc3QtaW5wdXQub25seS1yZXF1aXJlZCArIC5jbS1saXN0LWxhYmVsIC5zbGlkZXIge1xcbiAgICBAaW5jbHVkZSB2YXIoYmFja2dyb3VuZC1jb2xvciwgZ3JlZW4yKTtcXG4gICAgb3BhY2l0eTogMC44O1xcblxcbiAgICAmOjpiZWZvcmUge1xcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTBweCk7XFxuICAgICAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwcHgpO1xcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwcHgpO1xcbiAgICB9XFxufVxcblxcbi5jbS1saXN0LWlucHV0LnJlcXVpcmVkOmNoZWNrZWQgKyAuY20tbGlzdC1sYWJlbCAuc2xpZGVyIHtcXG4gICAgQGluY2x1ZGUgdmFyKGJhY2tncm91bmQtY29sb3IsIGdyZWVuMik7XFxuICAgIG9wYWNpdHk6IDAuODtcXG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcXG59XFxuXFxuLnNsaWRlciB7XFxuICAgIGJveC1zaGFkb3c6ICRjbS1ib3gtc2hhZG93LWRhcmstbWQ7XFxufVxcblxcbi5jbS1saXN0LWlucHV0IHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICB0b3A6IDA7XFxuICAgIGxlZnQ6IDA7XFxuICAgIG9wYWNpdHk6IDA7XFxuICAgIHdpZHRoOiA1MHB4O1xcbiAgICBoZWlnaHQ6IDMwcHg7XFxufVxcblxcbi5jbS1saXN0LXRpdGxlIHtcXG4gICAgZm9udC1zaXplOiAwLjllbTtcXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcXG59XFxuXFxuLmNtLWxpc3QtZGVzY3JpcHRpb24ge1xcbiAgICBAaW5jbHVkZSB2YXIoY29sb3IsIGRhcmszKTtcXG4gICAgZm9udC1zaXplOiAwLjllbTtcXG4gICAgcGFkZGluZy10b3A6IDRweDtcXG59XFxuXFxuLmNtLWxpc3QtbGFiZWwge1xcbiAgICAvKiBUaGUgc2xpZGVyICovXFxuXFxuICAgIC5jbS1zd2l0Y2gge1xcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICAgICAgbGVmdDogMDtcXG4gICAgfVxcblxcbiAgICAuc2xpZGVyIHtcXG5cXG4gICAgICAgIEBpbmNsdWRlIHZhcihiYWNrZ3JvdW5kLWNvbG9yLCB3aGl0ZTIpO1xcblxcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICAgICAgdG9wOiAwO1xcbiAgICAgICAgbGVmdDogMDtcXG4gICAgICAgIHJpZ2h0OiAwO1xcbiAgICAgICAgYm90dG9tOiAwO1xcbiAgICAgICAgLXdlYmtpdC10cmFuc2l0aW9uOiAwLjRzO1xcbiAgICAgICAgdHJhbnNpdGlvbjogMC40cztcXG4gICAgICAgIHdpZHRoOiA1MHB4O1xcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgICB9XFxuXFxuICAgIC5zbGlkZXI6OmJlZm9yZSB7XFxuXFxuICAgICAgICBAaW5jbHVkZSB2YXIoYmFja2dyb3VuZC1jb2xvciwgd2hpdGUzKTtcXG5cXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xcbiAgICAgICAgaGVpZ2h0OiAyMHB4O1xcbiAgICAgICAgd2lkdGg6IDIwcHg7XFxuICAgICAgICBsZWZ0OiA1cHg7XFxuICAgICAgICBib3R0b206IDVweDtcXG4gICAgICAgIC13ZWJraXQtdHJhbnNpdGlvbjogMC40cztcXG4gICAgICAgIHRyYW5zaXRpb246IDAuNHM7XFxuICAgIH1cXG5cXG4gICAgLyogUm91bmRlZCBzbGlkZXJzICovXFxuICAgIC5zbGlkZXIucm91bmQge1xcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMzBweDtcXG4gICAgfVxcblxcbiAgICAuc2xpZGVyLnJvdW5kOjpiZWZvcmUge1xcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgICB9XFxuXFxuICAgIGlucHV0OmZvY3VzICsgLnNsaWRlciB7XFxuICAgICAgICBAaW5jbHVkZSB2YXIoYm94LXNoYWRvdy1jb2xvciwgZ3JlZW4zKTtcXG4gICAgICAgIGJveC1zaGFkb3c6IDAgMCAxcHggdmFyKC0tYm94LXNoYWRvdy1jb2xvciwgZ3JlZW4zKTtcXG4gICAgfVxcblxcbiAgICBpbnB1dDpjaGVja2VkICsgLnNsaWRlcjo6YmVmb3JlIHtcXG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpO1xcbiAgICAgICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcXG4gICAgfVxcbn1cXG5cXG4uY20tbGlzdC1pbnB1dDpmb2N1cyArIC5jbS1saXN0LWxhYmVsIC5zbGlkZXIge1xcbiAgICBib3gtc2hhZG93OiAwIDRweCA2cHggMCByZ2JhKDEyNSwgMTI1LCAxMjUsIDAuMiksXFxuICAgICAgICA1cHggNXB4IDEwcHggMCByZ2JhKDEyNSwgMTI1LCAxMjUsIDAuMTkpO1xcbn1cXG5cXG4uY20tbGlzdC1pbnB1dDpjaGVja2VkICsgLmNtLWxpc3QtbGFiZWwgLnNsaWRlcjo6YmVmb3JlIHtcXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XFxuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcXG59XFxuXCIsXCJAbWl4aW4gbW9kYWwoJGNlbnRlcldpZHRoLCAkd2luZG93V2lkdGgpIHtcXG5cXG4gICAgQGluY2x1ZGUgdmFyKGJhY2tncm91bmQtY29sb3IsIGRhcmsxKTtcXG4gICAgQGluY2x1ZGUgdmFyKGNvbG9yLCBsaWdodDEpO1xcblxcbiAgICB6LWluZGV4OiAxMDAxO1xcbiAgICBib3gtc2hhZG93OiAkY20tYm94LXNoYWRvdy1kYXJrLW1kO1xcblxcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgbWF4LWhlaWdodDogOTglO1xcblxcbiAgICB0b3A6IDUwJTtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xcblxcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgIG92ZXJmbG93OiBhdXRvO1xcblxcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJGNlbnRlcldpZHRoKSB7XFxuICAgICAgICBAaW5jbHVkZSB2YXIoYm9yZGVyLXJhZGl1cywgYm9yZGVyLXJhZGl1cyk7XFxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgICAgICBtYXJnaW46IDAgYXV0bztcXG4gICAgICAgIG1heC13aWR0aDogJHdpbmRvd1dpZHRoO1xcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xcbiAgICAgICAgd2lkdGg6IGF1dG87XFxuICAgIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0KCkge31cbmVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGUgPSBlbXB0eUZ1bmN0aW9uO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYmlnaW50OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGVsZW1lbnRUeXBlOiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW0sXG5cbiAgICBjaGVja1Byb3BUeXBlczogZW1wdHlGdW5jdGlvbldpdGhSZXNldCxcbiAgICByZXNldFdhcm5pbmdDYWNoZTogZW1wdHlGdW5jdGlvblxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiJ3VzZSBzdHJpY3QnO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciB0cnlUb1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90cnktdG8tc3RyaW5nJyk7XG5cbnZhciAkVHlwZUVycm9yID0gVHlwZUVycm9yO1xuXG4vLyBgQXNzZXJ0OiBJc0NhbGxhYmxlKGFyZ3VtZW50KSBpcyB0cnVlYFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYXJndW1lbnQpIHtcbiAgaWYgKGlzQ2FsbGFibGUoYXJndW1lbnQpKSByZXR1cm4gYXJndW1lbnQ7XG4gIHRocm93IG5ldyAkVHlwZUVycm9yKHRyeVRvU3RyaW5nKGFyZ3VtZW50KSArICcgaXMgbm90IGEgZnVuY3Rpb24nKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgaXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jb25zdHJ1Y3RvcicpO1xudmFyIHRyeVRvU3RyaW5nID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RyeS10by1zdHJpbmcnKTtcblxudmFyICRUeXBlRXJyb3IgPSBUeXBlRXJyb3I7XG5cbi8vIGBBc3NlcnQ6IElzQ29uc3RydWN0b3IoYXJndW1lbnQpIGlzIHRydWVgXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICBpZiAoaXNDb25zdHJ1Y3Rvcihhcmd1bWVudCkpIHJldHVybiBhcmd1bWVudDtcbiAgdGhyb3cgbmV3ICRUeXBlRXJyb3IodHJ5VG9TdHJpbmcoYXJndW1lbnQpICsgJyBpcyBub3QgYSBjb25zdHJ1Y3RvcicpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBpc1Bvc3NpYmxlUHJvdG90eXBlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLXBvc3NpYmxlLXByb3RvdHlwZScpO1xuXG52YXIgJFN0cmluZyA9IFN0cmluZztcbnZhciAkVHlwZUVycm9yID0gVHlwZUVycm9yO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICBpZiAoaXNQb3NzaWJsZVByb3RvdHlwZShhcmd1bWVudCkpIHJldHVybiBhcmd1bWVudDtcbiAgdGhyb3cgbmV3ICRUeXBlRXJyb3IoXCJDYW4ndCBzZXQgXCIgKyAkU3RyaW5nKGFyZ3VtZW50KSArICcgYXMgYSBwcm90b3R5cGUnKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1jcmVhdGUnKTtcbnZhciBkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5JykuZjtcblxudmFyIFVOU0NPUEFCTEVTID0gd2VsbEtub3duU3ltYm9sKCd1bnNjb3BhYmxlcycpO1xudmFyIEFycmF5UHJvdG90eXBlID0gQXJyYXkucHJvdG90eXBlO1xuXG4vLyBBcnJheS5wcm90b3R5cGVbQEB1bnNjb3BhYmxlc11cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLUBAdW5zY29wYWJsZXNcbmlmIChBcnJheVByb3RvdHlwZVtVTlNDT1BBQkxFU10gPT09IHVuZGVmaW5lZCkge1xuICBkZWZpbmVQcm9wZXJ0eShBcnJheVByb3RvdHlwZSwgVU5TQ09QQUJMRVMsIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgdmFsdWU6IGNyZWF0ZShudWxsKVxuICB9KTtcbn1cblxuLy8gYWRkIGEga2V5IHRvIEFycmF5LnByb3RvdHlwZVtAQHVuc2NvcGFibGVzXVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIEFycmF5UHJvdG90eXBlW1VOU0NPUEFCTEVTXVtrZXldID0gdHJ1ZTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY2hhckF0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3N0cmluZy1tdWx0aWJ5dGUnKS5jaGFyQXQ7XG5cbi8vIGBBZHZhbmNlU3RyaW5nSW5kZXhgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hZHZhbmNlc3RyaW5naW5kZXhcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFMsIGluZGV4LCB1bmljb2RlKSB7XG4gIHJldHVybiBpbmRleCArICh1bmljb2RlID8gY2hhckF0KFMsIGluZGV4KS5sZW5ndGggOiAxKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgaXNQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtaXMtcHJvdG90eXBlLW9mJyk7XG5cbnZhciAkVHlwZUVycm9yID0gVHlwZUVycm9yO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwgUHJvdG90eXBlKSB7XG4gIGlmIChpc1Byb3RvdHlwZU9mKFByb3RvdHlwZSwgaXQpKSByZXR1cm4gaXQ7XG4gIHRocm93IG5ldyAkVHlwZUVycm9yKCdJbmNvcnJlY3QgaW52b2NhdGlvbicpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1vYmplY3QnKTtcblxudmFyICRTdHJpbmcgPSBTdHJpbmc7XG52YXIgJFR5cGVFcnJvciA9IFR5cGVFcnJvcjtcblxuLy8gYEFzc2VydDogVHlwZShhcmd1bWVudCkgaXMgT2JqZWN0YFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYXJndW1lbnQpIHtcbiAgaWYgKGlzT2JqZWN0KGFyZ3VtZW50KSkgcmV0dXJuIGFyZ3VtZW50O1xuICB0aHJvdyBuZXcgJFR5cGVFcnJvcigkU3RyaW5nKGFyZ3VtZW50KSArICcgaXMgbm90IGFuIG9iamVjdCcpO1xufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEZGMjYtIGJ1ZzogQXJyYXlCdWZmZXJzIGFyZSBub24tZXh0ZW5zaWJsZSwgYnV0IE9iamVjdC5pc0V4dGVuc2libGUgZG9lcyBub3QgcmVwb3J0IGl0XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIGlmICh0eXBlb2YgQXJyYXlCdWZmZXIgPT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhciBidWZmZXIgPSBuZXcgQXJyYXlCdWZmZXIoOCk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1pc2V4dGVuc2libGUsIGVzL25vLW9iamVjdC1kZWZpbmVwcm9wZXJ0eSAtLSBzYWZlXG4gICAgaWYgKE9iamVjdC5pc0V4dGVuc2libGUoYnVmZmVyKSkgT2JqZWN0LmRlZmluZVByb3BlcnR5KGJ1ZmZlciwgJ2EnLCB7IHZhbHVlOiA4IH0pO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZm9yRWFjaCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1pdGVyYXRpb24nKS5mb3JFYWNoO1xudmFyIGFycmF5TWV0aG9kSXNTdHJpY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLWlzLXN0cmljdCcpO1xuXG52YXIgU1RSSUNUX01FVEhPRCA9IGFycmF5TWV0aG9kSXNTdHJpY3QoJ2ZvckVhY2gnKTtcblxuLy8gYEFycmF5LnByb3RvdHlwZS5mb3JFYWNoYCBtZXRob2QgaW1wbGVtZW50YXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLmZvcmVhY2hcbm1vZHVsZS5leHBvcnRzID0gIVNUUklDVF9NRVRIT0QgPyBmdW5jdGlvbiBmb3JFYWNoKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gIHJldHVybiAkZm9yRWFjaCh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tYXJyYXktcHJvdG90eXBlLWZvcmVhY2ggLS0gc2FmZVxufSA6IFtdLmZvckVhY2g7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYmluZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1iaW5kLWNvbnRleHQnKTtcbnZhciBjYWxsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWNhbGwnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1vYmplY3QnKTtcbnZhciBjYWxsV2l0aFNhZmVJdGVyYXRpb25DbG9zaW5nID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NhbGwtd2l0aC1zYWZlLWl0ZXJhdGlvbi1jbG9zaW5nJyk7XG52YXIgaXNBcnJheUl0ZXJhdG9yTWV0aG9kID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWFycmF5LWl0ZXJhdG9yLW1ldGhvZCcpO1xudmFyIGlzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY29uc3RydWN0b3InKTtcbnZhciBsZW5ndGhPZkFycmF5TGlrZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9sZW5ndGgtb2YtYXJyYXktbGlrZScpO1xudmFyIGNyZWF0ZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NyZWF0ZS1wcm9wZXJ0eScpO1xudmFyIGdldEl0ZXJhdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dldC1pdGVyYXRvcicpO1xudmFyIGdldEl0ZXJhdG9yTWV0aG9kID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dldC1pdGVyYXRvci1tZXRob2QnKTtcblxudmFyICRBcnJheSA9IEFycmF5O1xuXG4vLyBgQXJyYXkuZnJvbWAgbWV0aG9kIGltcGxlbWVudGF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LmZyb21cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZnJvbShhcnJheUxpa2UgLyogLCBtYXBmbiA9IHVuZGVmaW5lZCwgdGhpc0FyZyA9IHVuZGVmaW5lZCAqLykge1xuICB2YXIgTyA9IHRvT2JqZWN0KGFycmF5TGlrZSk7XG4gIHZhciBJU19DT05TVFJVQ1RPUiA9IGlzQ29uc3RydWN0b3IodGhpcyk7XG4gIHZhciBhcmd1bWVudHNMZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoO1xuICB2YXIgbWFwZm4gPSBhcmd1bWVudHNMZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkO1xuICB2YXIgbWFwcGluZyA9IG1hcGZuICE9PSB1bmRlZmluZWQ7XG4gIGlmIChtYXBwaW5nKSBtYXBmbiA9IGJpbmQobWFwZm4sIGFyZ3VtZW50c0xlbmd0aCA+IDIgPyBhcmd1bWVudHNbMl0gOiB1bmRlZmluZWQpO1xuICB2YXIgaXRlcmF0b3JNZXRob2QgPSBnZXRJdGVyYXRvck1ldGhvZChPKTtcbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIGxlbmd0aCwgcmVzdWx0LCBzdGVwLCBpdGVyYXRvciwgbmV4dCwgdmFsdWU7XG4gIC8vIGlmIHRoZSB0YXJnZXQgaXMgbm90IGl0ZXJhYmxlIG9yIGl0J3MgYW4gYXJyYXkgd2l0aCB0aGUgZGVmYXVsdCBpdGVyYXRvciAtIHVzZSBhIHNpbXBsZSBjYXNlXG4gIGlmIChpdGVyYXRvck1ldGhvZCAmJiAhKHRoaXMgPT09ICRBcnJheSAmJiBpc0FycmF5SXRlcmF0b3JNZXRob2QoaXRlcmF0b3JNZXRob2QpKSkge1xuICAgIGl0ZXJhdG9yID0gZ2V0SXRlcmF0b3IoTywgaXRlcmF0b3JNZXRob2QpO1xuICAgIG5leHQgPSBpdGVyYXRvci5uZXh0O1xuICAgIHJlc3VsdCA9IElTX0NPTlNUUlVDVE9SID8gbmV3IHRoaXMoKSA6IFtdO1xuICAgIGZvciAoOyEoc3RlcCA9IGNhbGwobmV4dCwgaXRlcmF0b3IpKS5kb25lOyBpbmRleCsrKSB7XG4gICAgICB2YWx1ZSA9IG1hcHBpbmcgPyBjYWxsV2l0aFNhZmVJdGVyYXRpb25DbG9zaW5nKGl0ZXJhdG9yLCBtYXBmbiwgW3N0ZXAudmFsdWUsIGluZGV4XSwgdHJ1ZSkgOiBzdGVwLnZhbHVlO1xuICAgICAgY3JlYXRlUHJvcGVydHkocmVzdWx0LCBpbmRleCwgdmFsdWUpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBsZW5ndGggPSBsZW5ndGhPZkFycmF5TGlrZShPKTtcbiAgICByZXN1bHQgPSBJU19DT05TVFJVQ1RPUiA/IG5ldyB0aGlzKGxlbmd0aCkgOiAkQXJyYXkobGVuZ3RoKTtcbiAgICBmb3IgKDtsZW5ndGggPiBpbmRleDsgaW5kZXgrKykge1xuICAgICAgdmFsdWUgPSBtYXBwaW5nID8gbWFwZm4oT1tpbmRleF0sIGluZGV4KSA6IE9baW5kZXhdO1xuICAgICAgY3JlYXRlUHJvcGVydHkocmVzdWx0LCBpbmRleCwgdmFsdWUpO1xuICAgIH1cbiAgfVxuICByZXN1bHQubGVuZ3RoID0gaW5kZXg7XG4gIHJldHVybiByZXN1bHQ7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHRvSW5kZXhlZE9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdCcpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1hYnNvbHV0ZS1pbmRleCcpO1xudmFyIGxlbmd0aE9mQXJyYXlMaWtlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2xlbmd0aC1vZi1hcnJheS1saWtlJyk7XG5cbi8vIGBBcnJheS5wcm90b3R5cGUueyBpbmRleE9mLCBpbmNsdWRlcyB9YCBtZXRob2RzIGltcGxlbWVudGF0aW9uXG52YXIgY3JlYXRlTWV0aG9kID0gZnVuY3Rpb24gKElTX0lOQ0xVREVTKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoJHRoaXMsIGVsLCBmcm9tSW5kZXgpIHtcbiAgICB2YXIgTyA9IHRvSW5kZXhlZE9iamVjdCgkdGhpcyk7XG4gICAgdmFyIGxlbmd0aCA9IGxlbmd0aE9mQXJyYXlMaWtlKE8pO1xuICAgIGlmIChsZW5ndGggPT09IDApIHJldHVybiAhSVNfSU5DTFVERVMgJiYgLTE7XG4gICAgdmFyIGluZGV4ID0gdG9BYnNvbHV0ZUluZGV4KGZyb21JbmRleCwgbGVuZ3RoKTtcbiAgICB2YXIgdmFsdWU7XG4gICAgLy8gQXJyYXkjaW5jbHVkZXMgdXNlcyBTYW1lVmFsdWVaZXJvIGVxdWFsaXR5IGFsZ29yaXRobVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmUgLS0gTmFOIGNoZWNrXG4gICAgaWYgKElTX0lOQ0xVREVTICYmIGVsICE9PSBlbCkgd2hpbGUgKGxlbmd0aCA+IGluZGV4KSB7XG4gICAgICB2YWx1ZSA9IE9baW5kZXgrK107XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlIC0tIE5hTiBjaGVja1xuICAgICAgaWYgKHZhbHVlICE9PSB2YWx1ZSkgcmV0dXJuIHRydWU7XG4gICAgLy8gQXJyYXkjaW5kZXhPZiBpZ25vcmVzIGhvbGVzLCBBcnJheSNpbmNsdWRlcyAtIG5vdFxuICAgIH0gZWxzZSBmb3IgKDtsZW5ndGggPiBpbmRleDsgaW5kZXgrKykge1xuICAgICAgaWYgKChJU19JTkNMVURFUyB8fCBpbmRleCBpbiBPKSAmJiBPW2luZGV4XSA9PT0gZWwpIHJldHVybiBJU19JTkNMVURFUyB8fCBpbmRleCB8fCAwO1xuICAgIH0gcmV0dXJuICFJU19JTkNMVURFUyAmJiAtMTtcbiAgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAvLyBgQXJyYXkucHJvdG90eXBlLmluY2x1ZGVzYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuaW5jbHVkZXNcbiAgaW5jbHVkZXM6IGNyZWF0ZU1ldGhvZCh0cnVlKSxcbiAgLy8gYEFycmF5LnByb3RvdHlwZS5pbmRleE9mYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuaW5kZXhvZlxuICBpbmRleE9mOiBjcmVhdGVNZXRob2QoZmFsc2UpXG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGJpbmQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tYmluZC1jb250ZXh0Jyk7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgSW5kZXhlZE9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbmRleGVkLW9iamVjdCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLW9iamVjdCcpO1xudmFyIGxlbmd0aE9mQXJyYXlMaWtlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2xlbmd0aC1vZi1hcnJheS1saWtlJyk7XG52YXIgYXJyYXlTcGVjaWVzQ3JlYXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LXNwZWNpZXMtY3JlYXRlJyk7XG5cbnZhciBwdXNoID0gdW5jdXJyeVRoaXMoW10ucHVzaCk7XG5cbi8vIGBBcnJheS5wcm90b3R5cGUueyBmb3JFYWNoLCBtYXAsIGZpbHRlciwgc29tZSwgZXZlcnksIGZpbmQsIGZpbmRJbmRleCwgZmlsdGVyUmVqZWN0IH1gIG1ldGhvZHMgaW1wbGVtZW50YXRpb25cbnZhciBjcmVhdGVNZXRob2QgPSBmdW5jdGlvbiAoVFlQRSkge1xuICB2YXIgSVNfTUFQID0gVFlQRSA9PT0gMTtcbiAgdmFyIElTX0ZJTFRFUiA9IFRZUEUgPT09IDI7XG4gIHZhciBJU19TT01FID0gVFlQRSA9PT0gMztcbiAgdmFyIElTX0VWRVJZID0gVFlQRSA9PT0gNDtcbiAgdmFyIElTX0ZJTkRfSU5ERVggPSBUWVBFID09PSA2O1xuICB2YXIgSVNfRklMVEVSX1JFSkVDVCA9IFRZUEUgPT09IDc7XG4gIHZhciBOT19IT0xFUyA9IFRZUEUgPT09IDUgfHwgSVNfRklORF9JTkRFWDtcbiAgcmV0dXJuIGZ1bmN0aW9uICgkdGhpcywgY2FsbGJhY2tmbiwgdGhhdCwgc3BlY2lmaWNDcmVhdGUpIHtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KCR0aGlzKTtcbiAgICB2YXIgc2VsZiA9IEluZGV4ZWRPYmplY3QoTyk7XG4gICAgdmFyIGxlbmd0aCA9IGxlbmd0aE9mQXJyYXlMaWtlKHNlbGYpO1xuICAgIHZhciBib3VuZEZ1bmN0aW9uID0gYmluZChjYWxsYmFja2ZuLCB0aGF0KTtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBjcmVhdGUgPSBzcGVjaWZpY0NyZWF0ZSB8fCBhcnJheVNwZWNpZXNDcmVhdGU7XG4gICAgdmFyIHRhcmdldCA9IElTX01BUCA/IGNyZWF0ZSgkdGhpcywgbGVuZ3RoKSA6IElTX0ZJTFRFUiB8fCBJU19GSUxURVJfUkVKRUNUID8gY3JlYXRlKCR0aGlzLCAwKSA6IHVuZGVmaW5lZDtcbiAgICB2YXIgdmFsdWUsIHJlc3VsdDtcbiAgICBmb3IgKDtsZW5ndGggPiBpbmRleDsgaW5kZXgrKykgaWYgKE5PX0hPTEVTIHx8IGluZGV4IGluIHNlbGYpIHtcbiAgICAgIHZhbHVlID0gc2VsZltpbmRleF07XG4gICAgICByZXN1bHQgPSBib3VuZEZ1bmN0aW9uKHZhbHVlLCBpbmRleCwgTyk7XG4gICAgICBpZiAoVFlQRSkge1xuICAgICAgICBpZiAoSVNfTUFQKSB0YXJnZXRbaW5kZXhdID0gcmVzdWx0OyAvLyBtYXBcbiAgICAgICAgZWxzZSBpZiAocmVzdWx0KSBzd2l0Y2ggKFRZUEUpIHtcbiAgICAgICAgICBjYXNlIDM6IHJldHVybiB0cnVlOyAgICAgICAgICAgICAgLy8gc29tZVxuICAgICAgICAgIGNhc2UgNTogcmV0dXJuIHZhbHVlOyAgICAgICAgICAgICAvLyBmaW5kXG4gICAgICAgICAgY2FzZSA2OiByZXR1cm4gaW5kZXg7ICAgICAgICAgICAgIC8vIGZpbmRJbmRleFxuICAgICAgICAgIGNhc2UgMjogcHVzaCh0YXJnZXQsIHZhbHVlKTsgICAgICAvLyBmaWx0ZXJcbiAgICAgICAgfSBlbHNlIHN3aXRjaCAoVFlQRSkge1xuICAgICAgICAgIGNhc2UgNDogcmV0dXJuIGZhbHNlOyAgICAgICAgICAgICAvLyBldmVyeVxuICAgICAgICAgIGNhc2UgNzogcHVzaCh0YXJnZXQsIHZhbHVlKTsgICAgICAvLyBmaWx0ZXJSZWplY3RcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gSVNfRklORF9JTkRFWCA/IC0xIDogSVNfU09NRSB8fCBJU19FVkVSWSA/IElTX0VWRVJZIDogdGFyZ2V0O1xuICB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIC8vIGBBcnJheS5wcm90b3R5cGUuZm9yRWFjaGAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLmZvcmVhY2hcbiAgZm9yRWFjaDogY3JlYXRlTWV0aG9kKDApLFxuICAvLyBgQXJyYXkucHJvdG90eXBlLm1hcGAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLm1hcFxuICBtYXA6IGNyZWF0ZU1ldGhvZCgxKSxcbiAgLy8gYEFycmF5LnByb3RvdHlwZS5maWx0ZXJgIG1ldGhvZFxuICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS5maWx0ZXJcbiAgZmlsdGVyOiBjcmVhdGVNZXRob2QoMiksXG4gIC8vIGBBcnJheS5wcm90b3R5cGUuc29tZWAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLnNvbWVcbiAgc29tZTogY3JlYXRlTWV0aG9kKDMpLFxuICAvLyBgQXJyYXkucHJvdG90eXBlLmV2ZXJ5YCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuZXZlcnlcbiAgZXZlcnk6IGNyZWF0ZU1ldGhvZCg0KSxcbiAgLy8gYEFycmF5LnByb3RvdHlwZS5maW5kYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuZmluZFxuICBmaW5kOiBjcmVhdGVNZXRob2QoNSksXG4gIC8vIGBBcnJheS5wcm90b3R5cGUuZmluZEluZGV4YCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuZmluZEluZGV4XG4gIGZpbmRJbmRleDogY3JlYXRlTWV0aG9kKDYpLFxuICAvLyBgQXJyYXkucHJvdG90eXBlLmZpbHRlclJlamVjdGAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLWFycmF5LWZpbHRlcmluZ1xuICBmaWx0ZXJSZWplY3Q6IGNyZWF0ZU1ldGhvZCg3KVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xudmFyIFY4X1ZFUlNJT04gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZW5naW5lLXY4LXZlcnNpb24nKTtcblxudmFyIFNQRUNJRVMgPSB3ZWxsS25vd25TeW1ib2woJ3NwZWNpZXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTUVUSE9EX05BTUUpIHtcbiAgLy8gV2UgY2FuJ3QgdXNlIHRoaXMgZmVhdHVyZSBkZXRlY3Rpb24gaW4gVjggc2luY2UgaXQgY2F1c2VzXG4gIC8vIGRlb3B0aW1pemF0aW9uIGFuZCBzZXJpb3VzIHBlcmZvcm1hbmNlIGRlZ3JhZGF0aW9uXG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy82NzdcbiAgcmV0dXJuIFY4X1ZFUlNJT04gPj0gNTEgfHwgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgYXJyYXkgPSBbXTtcbiAgICB2YXIgY29uc3RydWN0b3IgPSBhcnJheS5jb25zdHJ1Y3RvciA9IHt9O1xuICAgIGNvbnN0cnVjdG9yW1NQRUNJRVNdID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHsgZm9vOiAxIH07XG4gICAgfTtcbiAgICByZXR1cm4gYXJyYXlbTUVUSE9EX05BTUVdKEJvb2xlYW4pLmZvbyAhPT0gMTtcbiAgfSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKE1FVEhPRF9OQU1FLCBhcmd1bWVudCkge1xuICB2YXIgbWV0aG9kID0gW11bTUVUSE9EX05BTUVdO1xuICByZXR1cm4gISFtZXRob2QgJiYgZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11c2VsZXNzLWNhbGwgLS0gcmVxdWlyZWQgZm9yIHRlc3RpbmdcbiAgICBtZXRob2QuY2FsbChudWxsLCBhcmd1bWVudCB8fCBmdW5jdGlvbiAoKSB7IHJldHVybiAxOyB9LCAxKTtcbiAgfSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHVuY3VycnlUaGlzKFtdLnNsaWNlKTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBhcnJheVNsaWNlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LXNsaWNlJyk7XG5cbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG5cbnZhciBzb3J0ID0gZnVuY3Rpb24gKGFycmF5LCBjb21wYXJlZm4pIHtcbiAgdmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aDtcblxuICBpZiAobGVuZ3RoIDwgOCkge1xuICAgIC8vIGluc2VydGlvbiBzb3J0XG4gICAgdmFyIGkgPSAxO1xuICAgIHZhciBlbGVtZW50LCBqO1xuXG4gICAgd2hpbGUgKGkgPCBsZW5ndGgpIHtcbiAgICAgIGogPSBpO1xuICAgICAgZWxlbWVudCA9IGFycmF5W2ldO1xuICAgICAgd2hpbGUgKGogJiYgY29tcGFyZWZuKGFycmF5W2ogLSAxXSwgZWxlbWVudCkgPiAwKSB7XG4gICAgICAgIGFycmF5W2pdID0gYXJyYXlbLS1qXTtcbiAgICAgIH1cbiAgICAgIGlmIChqICE9PSBpKyspIGFycmF5W2pdID0gZWxlbWVudDtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gbWVyZ2Ugc29ydFxuICAgIHZhciBtaWRkbGUgPSBmbG9vcihsZW5ndGggLyAyKTtcbiAgICB2YXIgbGVmdCA9IHNvcnQoYXJyYXlTbGljZShhcnJheSwgMCwgbWlkZGxlKSwgY29tcGFyZWZuKTtcbiAgICB2YXIgcmlnaHQgPSBzb3J0KGFycmF5U2xpY2UoYXJyYXksIG1pZGRsZSksIGNvbXBhcmVmbik7XG4gICAgdmFyIGxsZW5ndGggPSBsZWZ0Lmxlbmd0aDtcbiAgICB2YXIgcmxlbmd0aCA9IHJpZ2h0Lmxlbmd0aDtcbiAgICB2YXIgbGluZGV4ID0gMDtcbiAgICB2YXIgcmluZGV4ID0gMDtcblxuICAgIHdoaWxlIChsaW5kZXggPCBsbGVuZ3RoIHx8IHJpbmRleCA8IHJsZW5ndGgpIHtcbiAgICAgIGFycmF5W2xpbmRleCArIHJpbmRleF0gPSAobGluZGV4IDwgbGxlbmd0aCAmJiByaW5kZXggPCBybGVuZ3RoKVxuICAgICAgICA/IGNvbXBhcmVmbihsZWZ0W2xpbmRleF0sIHJpZ2h0W3JpbmRleF0pIDw9IDAgPyBsZWZ0W2xpbmRleCsrXSA6IHJpZ2h0W3JpbmRleCsrXVxuICAgICAgICA6IGxpbmRleCA8IGxsZW5ndGggPyBsZWZ0W2xpbmRleCsrXSA6IHJpZ2h0W3JpbmRleCsrXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYXJyYXk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHNvcnQ7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgaXNBcnJheSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1hcnJheScpO1xudmFyIGlzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY29uc3RydWN0b3InKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1vYmplY3QnKTtcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcblxudmFyIFNQRUNJRVMgPSB3ZWxsS25vd25TeW1ib2woJ3NwZWNpZXMnKTtcbnZhciAkQXJyYXkgPSBBcnJheTtcblxuLy8gYSBwYXJ0IG9mIGBBcnJheVNwZWNpZXNDcmVhdGVgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheXNwZWNpZXNjcmVhdGVcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9yaWdpbmFsQXJyYXkpIHtcbiAgdmFyIEM7XG4gIGlmIChpc0FycmF5KG9yaWdpbmFsQXJyYXkpKSB7XG4gICAgQyA9IG9yaWdpbmFsQXJyYXkuY29uc3RydWN0b3I7XG4gICAgLy8gY3Jvc3MtcmVhbG0gZmFsbGJhY2tcbiAgICBpZiAoaXNDb25zdHJ1Y3RvcihDKSAmJiAoQyA9PT0gJEFycmF5IHx8IGlzQXJyYXkoQy5wcm90b3R5cGUpKSkgQyA9IHVuZGVmaW5lZDtcbiAgICBlbHNlIGlmIChpc09iamVjdChDKSkge1xuICAgICAgQyA9IENbU1BFQ0lFU107XG4gICAgICBpZiAoQyA9PT0gbnVsbCkgQyA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH0gcmV0dXJuIEMgPT09IHVuZGVmaW5lZCA/ICRBcnJheSA6IEM7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGFycmF5U3BlY2llc0NvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LXNwZWNpZXMtY29uc3RydWN0b3InKTtcblxuLy8gYEFycmF5U3BlY2llc0NyZWF0ZWAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5c3BlY2llc2NyZWF0ZVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob3JpZ2luYWxBcnJheSwgbGVuZ3RoKSB7XG4gIHJldHVybiBuZXcgKGFycmF5U3BlY2llc0NvbnN0cnVjdG9yKG9yaWdpbmFsQXJyYXkpKShsZW5ndGggPT09IDAgPyAwIDogbGVuZ3RoKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4tb2JqZWN0Jyk7XG52YXIgaXRlcmF0b3JDbG9zZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pdGVyYXRvci1jbG9zZScpO1xuXG4vLyBjYWxsIHNvbWV0aGluZyBvbiBpdGVyYXRvciBzdGVwIHdpdGggc2FmZSBjbG9zaW5nIG9uIGVycm9yXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVyYXRvciwgZm4sIHZhbHVlLCBFTlRSSUVTKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIEVOVFJJRVMgPyBmbihhbk9iamVjdCh2YWx1ZSlbMF0sIHZhbHVlWzFdKSA6IGZuKHZhbHVlKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBpdGVyYXRvckNsb3NlKGl0ZXJhdG9yLCAndGhyb3cnLCBlcnJvcik7XG4gIH1cbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG5cbnZhciBJVEVSQVRPUiA9IHdlbGxLbm93blN5bWJvbCgnaXRlcmF0b3InKTtcbnZhciBTQUZFX0NMT1NJTkcgPSBmYWxzZTtcblxudHJ5IHtcbiAgdmFyIGNhbGxlZCA9IDA7XG4gIHZhciBpdGVyYXRvcldpdGhSZXR1cm4gPSB7XG4gICAgbmV4dDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHsgZG9uZTogISFjYWxsZWQrKyB9O1xuICAgIH0sXG4gICAgJ3JldHVybic6IGZ1bmN0aW9uICgpIHtcbiAgICAgIFNBRkVfQ0xPU0lORyA9IHRydWU7XG4gICAgfVxuICB9O1xuICBpdGVyYXRvcldpdGhSZXR1cm5bSVRFUkFUT1JdID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tYXJyYXktZnJvbSwgbm8tdGhyb3ctbGl0ZXJhbCAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xuICBBcnJheS5mcm9tKGl0ZXJhdG9yV2l0aFJldHVybiwgZnVuY3Rpb24gKCkgeyB0aHJvdyAyOyB9KTtcbn0gY2F0Y2ggKGVycm9yKSB7IC8qIGVtcHR5ICovIH1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZXhlYywgU0tJUF9DTE9TSU5HKSB7XG4gIHRyeSB7XG4gICAgaWYgKCFTS0lQX0NMT1NJTkcgJiYgIVNBRkVfQ0xPU0lORykgcmV0dXJuIGZhbHNlO1xuICB9IGNhdGNoIChlcnJvcikgeyByZXR1cm4gZmFsc2U7IH0gLy8gd29ya2Fyb3VuZCBvZiBvbGQgV2ViS2l0ICsgYGV2YWxgIGJ1Z1xuICB2YXIgSVRFUkFUSU9OX1NVUFBPUlQgPSBmYWxzZTtcbiAgdHJ5IHtcbiAgICB2YXIgb2JqZWN0ID0ge307XG4gICAgb2JqZWN0W0lURVJBVE9SXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG5leHQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4geyBkb25lOiBJVEVSQVRJT05fU1VQUE9SVCA9IHRydWUgfTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9O1xuICAgIGV4ZWMob2JqZWN0KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHsgLyogZW1wdHkgKi8gfVxuICByZXR1cm4gSVRFUkFUSU9OX1NVUFBPUlQ7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcycpO1xuXG52YXIgdG9TdHJpbmcgPSB1bmN1cnJ5VGhpcyh7fS50b1N0cmluZyk7XG52YXIgc3RyaW5nU2xpY2UgPSB1bmN1cnJ5VGhpcygnJy5zbGljZSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBzdHJpbmdTbGljZSh0b1N0cmluZyhpdCksIDgsIC0xKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgVE9fU1RSSU5HX1RBR19TVVBQT1JUID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXN0cmluZy10YWctc3VwcG9ydCcpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciBjbGFzc29mUmF3ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NsYXNzb2YtcmF3Jyk7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG5cbnZhciBUT19TVFJJTkdfVEFHID0gd2VsbEtub3duU3ltYm9sKCd0b1N0cmluZ1RhZycpO1xudmFyICRPYmplY3QgPSBPYmplY3Q7XG5cbi8vIEVTMyB3cm9uZyBoZXJlXG52YXIgQ09SUkVDVF9BUkdVTUVOVFMgPSBjbGFzc29mUmF3KGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFyZ3VtZW50czsgfSgpKSA9PT0gJ0FyZ3VtZW50cyc7XG5cbi8vIGZhbGxiYWNrIGZvciBJRTExIFNjcmlwdCBBY2Nlc3MgRGVuaWVkIGVycm9yXG52YXIgdHJ5R2V0ID0gZnVuY3Rpb24gKGl0LCBrZXkpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gaXRba2V5XTtcbiAgfSBjYXRjaCAoZXJyb3IpIHsgLyogZW1wdHkgKi8gfVxufTtcblxuLy8gZ2V0dGluZyB0YWcgZnJvbSBFUzYrIGBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nYFxubW9kdWxlLmV4cG9ydHMgPSBUT19TVFJJTkdfVEFHX1NVUFBPUlQgPyBjbGFzc29mUmF3IDogZnVuY3Rpb24gKGl0KSB7XG4gIHZhciBPLCB0YWcsIHJlc3VsdDtcbiAgcmV0dXJuIGl0ID09PSB1bmRlZmluZWQgPyAnVW5kZWZpbmVkJyA6IGl0ID09PSBudWxsID8gJ051bGwnXG4gICAgLy8gQEB0b1N0cmluZ1RhZyBjYXNlXG4gICAgOiB0eXBlb2YgKHRhZyA9IHRyeUdldChPID0gJE9iamVjdChpdCksIFRPX1NUUklOR19UQUcpKSA9PSAnc3RyaW5nJyA/IHRhZ1xuICAgIC8vIGJ1aWx0aW5UYWcgY2FzZVxuICAgIDogQ09SUkVDVF9BUkdVTUVOVFMgPyBjbGFzc29mUmF3KE8pXG4gICAgLy8gRVMzIGFyZ3VtZW50cyBmYWxsYmFja1xuICAgIDogKHJlc3VsdCA9IGNsYXNzb2ZSYXcoTykpID09PSAnT2JqZWN0JyAmJiBpc0NhbGxhYmxlKE8uY2FsbGVlKSA/ICdBcmd1bWVudHMnIDogcmVzdWx0O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBjcmVhdGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWNyZWF0ZScpO1xudmFyIGRlZmluZUJ1aWx0SW5BY2Nlc3NvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZWZpbmUtYnVpbHQtaW4tYWNjZXNzb3InKTtcbnZhciBkZWZpbmVCdWlsdElucyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZWZpbmUtYnVpbHQtaW5zJyk7XG52YXIgYmluZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1iaW5kLWNvbnRleHQnKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FuLWluc3RhbmNlJyk7XG52YXIgaXNOdWxsT3JVbmRlZmluZWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtbnVsbC1vci11bmRlZmluZWQnKTtcbnZhciBpdGVyYXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2l0ZXJhdGUnKTtcbnZhciBkZWZpbmVJdGVyYXRvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pdGVyYXRvci1kZWZpbmUnKTtcbnZhciBjcmVhdGVJdGVyUmVzdWx0T2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NyZWF0ZS1pdGVyLXJlc3VsdC1vYmplY3QnKTtcbnZhciBzZXRTcGVjaWVzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NldC1zcGVjaWVzJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnMnKTtcbnZhciBmYXN0S2V5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ludGVybmFsLW1ldGFkYXRhJykuZmFzdEtleTtcbnZhciBJbnRlcm5hbFN0YXRlTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ludGVybmFsLXN0YXRlJyk7XG5cbnZhciBzZXRJbnRlcm5hbFN0YXRlID0gSW50ZXJuYWxTdGF0ZU1vZHVsZS5zZXQ7XG52YXIgaW50ZXJuYWxTdGF0ZUdldHRlckZvciA9IEludGVybmFsU3RhdGVNb2R1bGUuZ2V0dGVyRm9yO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0Q29uc3RydWN0b3I6IGZ1bmN0aW9uICh3cmFwcGVyLCBDT05TVFJVQ1RPUl9OQU1FLCBJU19NQVAsIEFEREVSKSB7XG4gICAgdmFyIENvbnN0cnVjdG9yID0gd3JhcHBlcihmdW5jdGlvbiAodGhhdCwgaXRlcmFibGUpIHtcbiAgICAgIGFuSW5zdGFuY2UodGhhdCwgUHJvdG90eXBlKTtcbiAgICAgIHNldEludGVybmFsU3RhdGUodGhhdCwge1xuICAgICAgICB0eXBlOiBDT05TVFJVQ1RPUl9OQU1FLFxuICAgICAgICBpbmRleDogY3JlYXRlKG51bGwpLFxuICAgICAgICBmaXJzdDogdW5kZWZpbmVkLFxuICAgICAgICBsYXN0OiB1bmRlZmluZWQsXG4gICAgICAgIHNpemU6IDBcbiAgICAgIH0pO1xuICAgICAgaWYgKCFERVNDUklQVE9SUykgdGhhdC5zaXplID0gMDtcbiAgICAgIGlmICghaXNOdWxsT3JVbmRlZmluZWQoaXRlcmFibGUpKSBpdGVyYXRlKGl0ZXJhYmxlLCB0aGF0W0FEREVSXSwgeyB0aGF0OiB0aGF0LCBBU19FTlRSSUVTOiBJU19NQVAgfSk7XG4gICAgfSk7XG5cbiAgICB2YXIgUHJvdG90eXBlID0gQ29uc3RydWN0b3IucHJvdG90eXBlO1xuXG4gICAgdmFyIGdldEludGVybmFsU3RhdGUgPSBpbnRlcm5hbFN0YXRlR2V0dGVyRm9yKENPTlNUUlVDVE9SX05BTUUpO1xuXG4gICAgdmFyIGRlZmluZSA9IGZ1bmN0aW9uICh0aGF0LCBrZXksIHZhbHVlKSB7XG4gICAgICB2YXIgc3RhdGUgPSBnZXRJbnRlcm5hbFN0YXRlKHRoYXQpO1xuICAgICAgdmFyIGVudHJ5ID0gZ2V0RW50cnkodGhhdCwga2V5KTtcbiAgICAgIHZhciBwcmV2aW91cywgaW5kZXg7XG4gICAgICAvLyBjaGFuZ2UgZXhpc3RpbmcgZW50cnlcbiAgICAgIGlmIChlbnRyeSkge1xuICAgICAgICBlbnRyeS52YWx1ZSA9IHZhbHVlO1xuICAgICAgLy8gY3JlYXRlIG5ldyBlbnRyeVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3RhdGUubGFzdCA9IGVudHJ5ID0ge1xuICAgICAgICAgIGluZGV4OiBpbmRleCA9IGZhc3RLZXkoa2V5LCB0cnVlKSxcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgICAgcHJldmlvdXM6IHByZXZpb3VzID0gc3RhdGUubGFzdCxcbiAgICAgICAgICBuZXh0OiB1bmRlZmluZWQsXG4gICAgICAgICAgcmVtb3ZlZDogZmFsc2VcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKCFzdGF0ZS5maXJzdCkgc3RhdGUuZmlyc3QgPSBlbnRyeTtcbiAgICAgICAgaWYgKHByZXZpb3VzKSBwcmV2aW91cy5uZXh0ID0gZW50cnk7XG4gICAgICAgIGlmIChERVNDUklQVE9SUykgc3RhdGUuc2l6ZSsrO1xuICAgICAgICBlbHNlIHRoYXQuc2l6ZSsrO1xuICAgICAgICAvLyBhZGQgdG8gaW5kZXhcbiAgICAgICAgaWYgKGluZGV4ICE9PSAnRicpIHN0YXRlLmluZGV4W2luZGV4XSA9IGVudHJ5O1xuICAgICAgfSByZXR1cm4gdGhhdDtcbiAgICB9O1xuXG4gICAgdmFyIGdldEVudHJ5ID0gZnVuY3Rpb24gKHRoYXQsIGtleSkge1xuICAgICAgdmFyIHN0YXRlID0gZ2V0SW50ZXJuYWxTdGF0ZSh0aGF0KTtcbiAgICAgIC8vIGZhc3QgY2FzZVxuICAgICAgdmFyIGluZGV4ID0gZmFzdEtleShrZXkpO1xuICAgICAgdmFyIGVudHJ5O1xuICAgICAgaWYgKGluZGV4ICE9PSAnRicpIHJldHVybiBzdGF0ZS5pbmRleFtpbmRleF07XG4gICAgICAvLyBmcm96ZW4gb2JqZWN0IGNhc2VcbiAgICAgIGZvciAoZW50cnkgPSBzdGF0ZS5maXJzdDsgZW50cnk7IGVudHJ5ID0gZW50cnkubmV4dCkge1xuICAgICAgICBpZiAoZW50cnkua2V5ID09PSBrZXkpIHJldHVybiBlbnRyeTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgZGVmaW5lQnVpbHRJbnMoUHJvdG90eXBlLCB7XG4gICAgICAvLyBgeyBNYXAsIFNldCB9LnByb3RvdHlwZS5jbGVhcigpYCBtZXRob2RzXG4gICAgICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW1hcC5wcm90b3R5cGUuY2xlYXJcbiAgICAgIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtc2V0LnByb3RvdHlwZS5jbGVhclxuICAgICAgY2xlYXI6IGZ1bmN0aW9uIGNsZWFyKCkge1xuICAgICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICAgIHZhciBzdGF0ZSA9IGdldEludGVybmFsU3RhdGUodGhhdCk7XG4gICAgICAgIHZhciBlbnRyeSA9IHN0YXRlLmZpcnN0O1xuICAgICAgICB3aGlsZSAoZW50cnkpIHtcbiAgICAgICAgICBlbnRyeS5yZW1vdmVkID0gdHJ1ZTtcbiAgICAgICAgICBpZiAoZW50cnkucHJldmlvdXMpIGVudHJ5LnByZXZpb3VzID0gZW50cnkucHJldmlvdXMubmV4dCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICBlbnRyeSA9IGVudHJ5Lm5leHQ7XG4gICAgICAgIH1cbiAgICAgICAgc3RhdGUuZmlyc3QgPSBzdGF0ZS5sYXN0ID0gdW5kZWZpbmVkO1xuICAgICAgICBzdGF0ZS5pbmRleCA9IGNyZWF0ZShudWxsKTtcbiAgICAgICAgaWYgKERFU0NSSVBUT1JTKSBzdGF0ZS5zaXplID0gMDtcbiAgICAgICAgZWxzZSB0aGF0LnNpemUgPSAwO1xuICAgICAgfSxcbiAgICAgIC8vIGB7IE1hcCwgU2V0IH0ucHJvdG90eXBlLmRlbGV0ZShrZXkpYCBtZXRob2RzXG4gICAgICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW1hcC5wcm90b3R5cGUuZGVsZXRlXG4gICAgICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXNldC5wcm90b3R5cGUuZGVsZXRlXG4gICAgICAnZGVsZXRlJzogZnVuY3Rpb24gKGtleSkge1xuICAgICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICAgIHZhciBzdGF0ZSA9IGdldEludGVybmFsU3RhdGUodGhhdCk7XG4gICAgICAgIHZhciBlbnRyeSA9IGdldEVudHJ5KHRoYXQsIGtleSk7XG4gICAgICAgIGlmIChlbnRyeSkge1xuICAgICAgICAgIHZhciBuZXh0ID0gZW50cnkubmV4dDtcbiAgICAgICAgICB2YXIgcHJldiA9IGVudHJ5LnByZXZpb3VzO1xuICAgICAgICAgIGRlbGV0ZSBzdGF0ZS5pbmRleFtlbnRyeS5pbmRleF07XG4gICAgICAgICAgZW50cnkucmVtb3ZlZCA9IHRydWU7XG4gICAgICAgICAgaWYgKHByZXYpIHByZXYubmV4dCA9IG5leHQ7XG4gICAgICAgICAgaWYgKG5leHQpIG5leHQucHJldmlvdXMgPSBwcmV2O1xuICAgICAgICAgIGlmIChzdGF0ZS5maXJzdCA9PT0gZW50cnkpIHN0YXRlLmZpcnN0ID0gbmV4dDtcbiAgICAgICAgICBpZiAoc3RhdGUubGFzdCA9PT0gZW50cnkpIHN0YXRlLmxhc3QgPSBwcmV2O1xuICAgICAgICAgIGlmIChERVNDUklQVE9SUykgc3RhdGUuc2l6ZS0tO1xuICAgICAgICAgIGVsc2UgdGhhdC5zaXplLS07XG4gICAgICAgIH0gcmV0dXJuICEhZW50cnk7XG4gICAgICB9LFxuICAgICAgLy8gYHsgTWFwLCBTZXQgfS5wcm90b3R5cGUuZm9yRWFjaChjYWxsYmFja2ZuLCB0aGlzQXJnID0gdW5kZWZpbmVkKWAgbWV0aG9kc1xuICAgICAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1tYXAucHJvdG90eXBlLmZvcmVhY2hcbiAgICAgIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtc2V0LnByb3RvdHlwZS5mb3JlYWNoXG4gICAgICBmb3JFYWNoOiBmdW5jdGlvbiBmb3JFYWNoKGNhbGxiYWNrZm4gLyogLCB0aGF0ID0gdW5kZWZpbmVkICovKSB7XG4gICAgICAgIHZhciBzdGF0ZSA9IGdldEludGVybmFsU3RhdGUodGhpcyk7XG4gICAgICAgIHZhciBib3VuZEZ1bmN0aW9uID0gYmluZChjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gICAgICAgIHZhciBlbnRyeTtcbiAgICAgICAgd2hpbGUgKGVudHJ5ID0gZW50cnkgPyBlbnRyeS5uZXh0IDogc3RhdGUuZmlyc3QpIHtcbiAgICAgICAgICBib3VuZEZ1bmN0aW9uKGVudHJ5LnZhbHVlLCBlbnRyeS5rZXksIHRoaXMpO1xuICAgICAgICAgIC8vIHJldmVydCB0byB0aGUgbGFzdCBleGlzdGluZyBlbnRyeVxuICAgICAgICAgIHdoaWxlIChlbnRyeSAmJiBlbnRyeS5yZW1vdmVkKSBlbnRyeSA9IGVudHJ5LnByZXZpb3VzO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgLy8gYHsgTWFwLCBTZXR9LnByb3RvdHlwZS5oYXMoa2V5KWAgbWV0aG9kc1xuICAgICAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1tYXAucHJvdG90eXBlLmhhc1xuICAgICAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1zZXQucHJvdG90eXBlLmhhc1xuICAgICAgaGFzOiBmdW5jdGlvbiBoYXMoa2V5KSB7XG4gICAgICAgIHJldHVybiAhIWdldEVudHJ5KHRoaXMsIGtleSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBkZWZpbmVCdWlsdElucyhQcm90b3R5cGUsIElTX01BUCA/IHtcbiAgICAgIC8vIGBNYXAucHJvdG90eXBlLmdldChrZXkpYCBtZXRob2RcbiAgICAgIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtbWFwLnByb3RvdHlwZS5nZXRcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KGtleSkge1xuICAgICAgICB2YXIgZW50cnkgPSBnZXRFbnRyeSh0aGlzLCBrZXkpO1xuICAgICAgICByZXR1cm4gZW50cnkgJiYgZW50cnkudmFsdWU7XG4gICAgICB9LFxuICAgICAgLy8gYE1hcC5wcm90b3R5cGUuc2V0KGtleSwgdmFsdWUpYCBtZXRob2RcbiAgICAgIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtbWFwLnByb3RvdHlwZS5zZXRcbiAgICAgIHNldDogZnVuY3Rpb24gc2V0KGtleSwgdmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIGRlZmluZSh0aGlzLCBrZXkgPT09IDAgPyAwIDoga2V5LCB2YWx1ZSk7XG4gICAgICB9XG4gICAgfSA6IHtcbiAgICAgIC8vIGBTZXQucHJvdG90eXBlLmFkZCh2YWx1ZSlgIG1ldGhvZFxuICAgICAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1zZXQucHJvdG90eXBlLmFkZFxuICAgICAgYWRkOiBmdW5jdGlvbiBhZGQodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIGRlZmluZSh0aGlzLCB2YWx1ZSA9IHZhbHVlID09PSAwID8gMCA6IHZhbHVlLCB2YWx1ZSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgaWYgKERFU0NSSVBUT1JTKSBkZWZpbmVCdWlsdEluQWNjZXNzb3IoUHJvdG90eXBlLCAnc2l6ZScsIHtcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gZ2V0SW50ZXJuYWxTdGF0ZSh0aGlzKS5zaXplO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBDb25zdHJ1Y3RvcjtcbiAgfSxcbiAgc2V0U3Ryb25nOiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIENPTlNUUlVDVE9SX05BTUUsIElTX01BUCkge1xuICAgIHZhciBJVEVSQVRPUl9OQU1FID0gQ09OU1RSVUNUT1JfTkFNRSArICcgSXRlcmF0b3InO1xuICAgIHZhciBnZXRJbnRlcm5hbENvbGxlY3Rpb25TdGF0ZSA9IGludGVybmFsU3RhdGVHZXR0ZXJGb3IoQ09OU1RSVUNUT1JfTkFNRSk7XG4gICAgdmFyIGdldEludGVybmFsSXRlcmF0b3JTdGF0ZSA9IGludGVybmFsU3RhdGVHZXR0ZXJGb3IoSVRFUkFUT1JfTkFNRSk7XG4gICAgLy8gYHsgTWFwLCBTZXQgfS5wcm90b3R5cGUueyBrZXlzLCB2YWx1ZXMsIGVudHJpZXMsIEBAaXRlcmF0b3IgfSgpYCBtZXRob2RzXG4gICAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1tYXAucHJvdG90eXBlLmVudHJpZXNcbiAgICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW1hcC5wcm90b3R5cGUua2V5c1xuICAgIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtbWFwLnByb3RvdHlwZS52YWx1ZXNcbiAgICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW1hcC5wcm90b3R5cGUtQEBpdGVyYXRvclxuICAgIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtc2V0LnByb3RvdHlwZS5lbnRyaWVzXG4gICAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1zZXQucHJvdG90eXBlLmtleXNcbiAgICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXNldC5wcm90b3R5cGUudmFsdWVzXG4gICAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1zZXQucHJvdG90eXBlLUBAaXRlcmF0b3JcbiAgICBkZWZpbmVJdGVyYXRvcihDb25zdHJ1Y3RvciwgQ09OU1RSVUNUT1JfTkFNRSwgZnVuY3Rpb24gKGl0ZXJhdGVkLCBraW5kKSB7XG4gICAgICBzZXRJbnRlcm5hbFN0YXRlKHRoaXMsIHtcbiAgICAgICAgdHlwZTogSVRFUkFUT1JfTkFNRSxcbiAgICAgICAgdGFyZ2V0OiBpdGVyYXRlZCxcbiAgICAgICAgc3RhdGU6IGdldEludGVybmFsQ29sbGVjdGlvblN0YXRlKGl0ZXJhdGVkKSxcbiAgICAgICAga2luZDoga2luZCxcbiAgICAgICAgbGFzdDogdW5kZWZpbmVkXG4gICAgICB9KTtcbiAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgc3RhdGUgPSBnZXRJbnRlcm5hbEl0ZXJhdG9yU3RhdGUodGhpcyk7XG4gICAgICB2YXIga2luZCA9IHN0YXRlLmtpbmQ7XG4gICAgICB2YXIgZW50cnkgPSBzdGF0ZS5sYXN0O1xuICAgICAgLy8gcmV2ZXJ0IHRvIHRoZSBsYXN0IGV4aXN0aW5nIGVudHJ5XG4gICAgICB3aGlsZSAoZW50cnkgJiYgZW50cnkucmVtb3ZlZCkgZW50cnkgPSBlbnRyeS5wcmV2aW91cztcbiAgICAgIC8vIGdldCBuZXh0IGVudHJ5XG4gICAgICBpZiAoIXN0YXRlLnRhcmdldCB8fCAhKHN0YXRlLmxhc3QgPSBlbnRyeSA9IGVudHJ5ID8gZW50cnkubmV4dCA6IHN0YXRlLnN0YXRlLmZpcnN0KSkge1xuICAgICAgICAvLyBvciBmaW5pc2ggdGhlIGl0ZXJhdGlvblxuICAgICAgICBzdGF0ZS50YXJnZXQgPSB1bmRlZmluZWQ7XG4gICAgICAgIHJldHVybiBjcmVhdGVJdGVyUmVzdWx0T2JqZWN0KHVuZGVmaW5lZCwgdHJ1ZSk7XG4gICAgICB9XG4gICAgICAvLyByZXR1cm4gc3RlcCBieSBraW5kXG4gICAgICBpZiAoa2luZCA9PT0gJ2tleXMnKSByZXR1cm4gY3JlYXRlSXRlclJlc3VsdE9iamVjdChlbnRyeS5rZXksIGZhbHNlKTtcbiAgICAgIGlmIChraW5kID09PSAndmFsdWVzJykgcmV0dXJuIGNyZWF0ZUl0ZXJSZXN1bHRPYmplY3QoZW50cnkudmFsdWUsIGZhbHNlKTtcbiAgICAgIHJldHVybiBjcmVhdGVJdGVyUmVzdWx0T2JqZWN0KFtlbnRyeS5rZXksIGVudHJ5LnZhbHVlXSwgZmFsc2UpO1xuICAgIH0sIElTX01BUCA/ICdlbnRyaWVzJyA6ICd2YWx1ZXMnLCAhSVNfTUFQLCB0cnVlKTtcblxuICAgIC8vIGB7IE1hcCwgU2V0IH0ucHJvdG90eXBlW0BAc3BlY2llc11gIGFjY2Vzc29yc1xuICAgIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtZ2V0LW1hcC1AQHNwZWNpZXNcbiAgICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWdldC1zZXQtQEBzcGVjaWVzXG4gICAgc2V0U3BlY2llcyhDT05TVFJVQ1RPUl9OQU1FKTtcbiAgfVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcbnZhciBpc0ZvcmNlZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1mb3JjZWQnKTtcbnZhciBkZWZpbmVCdWlsdEluID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RlZmluZS1idWlsdC1pbicpO1xudmFyIEludGVybmFsTWV0YWRhdGFNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaW50ZXJuYWwtbWV0YWRhdGEnKTtcbnZhciBpdGVyYXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2l0ZXJhdGUnKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FuLWluc3RhbmNlJyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xudmFyIGlzTnVsbE9yVW5kZWZpbmVkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW51bGwtb3ItdW5kZWZpbmVkJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtb2JqZWN0Jyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcbnZhciBjaGVja0NvcnJlY3RuZXNzT2ZJdGVyYXRpb24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2hlY2stY29ycmVjdG5lc3Mtb2YtaXRlcmF0aW9uJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciBpbmhlcml0SWZSZXF1aXJlZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbmhlcml0LWlmLXJlcXVpcmVkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKENPTlNUUlVDVE9SX05BTUUsIHdyYXBwZXIsIGNvbW1vbikge1xuICB2YXIgSVNfTUFQID0gQ09OU1RSVUNUT1JfTkFNRS5pbmRleE9mKCdNYXAnKSAhPT0gLTE7XG4gIHZhciBJU19XRUFLID0gQ09OU1RSVUNUT1JfTkFNRS5pbmRleE9mKCdXZWFrJykgIT09IC0xO1xuICB2YXIgQURERVIgPSBJU19NQVAgPyAnc2V0JyA6ICdhZGQnO1xuICB2YXIgTmF0aXZlQ29uc3RydWN0b3IgPSBnbG9iYWxbQ09OU1RSVUNUT1JfTkFNRV07XG4gIHZhciBOYXRpdmVQcm90b3R5cGUgPSBOYXRpdmVDb25zdHJ1Y3RvciAmJiBOYXRpdmVDb25zdHJ1Y3Rvci5wcm90b3R5cGU7XG4gIHZhciBDb25zdHJ1Y3RvciA9IE5hdGl2ZUNvbnN0cnVjdG9yO1xuICB2YXIgZXhwb3J0ZWQgPSB7fTtcblxuICB2YXIgZml4TWV0aG9kID0gZnVuY3Rpb24gKEtFWSkge1xuICAgIHZhciB1bmN1cnJpZWROYXRpdmVNZXRob2QgPSB1bmN1cnJ5VGhpcyhOYXRpdmVQcm90b3R5cGVbS0VZXSk7XG4gICAgZGVmaW5lQnVpbHRJbihOYXRpdmVQcm90b3R5cGUsIEtFWSxcbiAgICAgIEtFWSA9PT0gJ2FkZCcgPyBmdW5jdGlvbiBhZGQodmFsdWUpIHtcbiAgICAgICAgdW5jdXJyaWVkTmF0aXZlTWV0aG9kKHRoaXMsIHZhbHVlID09PSAwID8gMCA6IHZhbHVlKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9IDogS0VZID09PSAnZGVsZXRlJyA/IGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgcmV0dXJuIElTX1dFQUsgJiYgIWlzT2JqZWN0KGtleSkgPyBmYWxzZSA6IHVuY3VycmllZE5hdGl2ZU1ldGhvZCh0aGlzLCBrZXkgPT09IDAgPyAwIDoga2V5KTtcbiAgICAgIH0gOiBLRVkgPT09ICdnZXQnID8gZnVuY3Rpb24gZ2V0KGtleSkge1xuICAgICAgICByZXR1cm4gSVNfV0VBSyAmJiAhaXNPYmplY3Qoa2V5KSA/IHVuZGVmaW5lZCA6IHVuY3VycmllZE5hdGl2ZU1ldGhvZCh0aGlzLCBrZXkgPT09IDAgPyAwIDoga2V5KTtcbiAgICAgIH0gOiBLRVkgPT09ICdoYXMnID8gZnVuY3Rpb24gaGFzKGtleSkge1xuICAgICAgICByZXR1cm4gSVNfV0VBSyAmJiAhaXNPYmplY3Qoa2V5KSA/IGZhbHNlIDogdW5jdXJyaWVkTmF0aXZlTWV0aG9kKHRoaXMsIGtleSA9PT0gMCA/IDAgOiBrZXkpO1xuICAgICAgfSA6IGZ1bmN0aW9uIHNldChrZXksIHZhbHVlKSB7XG4gICAgICAgIHVuY3VycmllZE5hdGl2ZU1ldGhvZCh0aGlzLCBrZXkgPT09IDAgPyAwIDoga2V5LCB2YWx1ZSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuICAgICk7XG4gIH07XG5cbiAgdmFyIFJFUExBQ0UgPSBpc0ZvcmNlZChcbiAgICBDT05TVFJVQ1RPUl9OQU1FLFxuICAgICFpc0NhbGxhYmxlKE5hdGl2ZUNvbnN0cnVjdG9yKSB8fCAhKElTX1dFQUsgfHwgTmF0aXZlUHJvdG90eXBlLmZvckVhY2ggJiYgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAgIG5ldyBOYXRpdmVDb25zdHJ1Y3RvcigpLmVudHJpZXMoKS5uZXh0KCk7XG4gICAgfSkpXG4gICk7XG5cbiAgaWYgKFJFUExBQ0UpIHtcbiAgICAvLyBjcmVhdGUgY29sbGVjdGlvbiBjb25zdHJ1Y3RvclxuICAgIENvbnN0cnVjdG9yID0gY29tbW9uLmdldENvbnN0cnVjdG9yKHdyYXBwZXIsIENPTlNUUlVDVE9SX05BTUUsIElTX01BUCwgQURERVIpO1xuICAgIEludGVybmFsTWV0YWRhdGFNb2R1bGUuZW5hYmxlKCk7XG4gIH0gZWxzZSBpZiAoaXNGb3JjZWQoQ09OU1RSVUNUT1JfTkFNRSwgdHJ1ZSkpIHtcbiAgICB2YXIgaW5zdGFuY2UgPSBuZXcgQ29uc3RydWN0b3IoKTtcbiAgICAvLyBlYXJseSBpbXBsZW1lbnRhdGlvbnMgbm90IHN1cHBvcnRzIGNoYWluaW5nXG4gICAgdmFyIEhBU05UX0NIQUlOSU5HID0gaW5zdGFuY2VbQURERVJdKElTX1dFQUsgPyB7fSA6IC0wLCAxKSAhPT0gaW5zdGFuY2U7XG4gICAgLy8gVjggfiBDaHJvbWl1bSA0MC0gd2Vhay1jb2xsZWN0aW9ucyB0aHJvd3Mgb24gcHJpbWl0aXZlcywgYnV0IHNob3VsZCByZXR1cm4gZmFsc2VcbiAgICB2YXIgVEhST1dTX09OX1BSSU1JVElWRVMgPSBmYWlscyhmdW5jdGlvbiAoKSB7IGluc3RhbmNlLmhhcygxKTsgfSk7XG4gICAgLy8gbW9zdCBlYXJseSBpbXBsZW1lbnRhdGlvbnMgZG9lc24ndCBzdXBwb3J0cyBpdGVyYWJsZXMsIG1vc3QgbW9kZXJuIC0gbm90IGNsb3NlIGl0IGNvcnJlY3RseVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXcgLS0gcmVxdWlyZWQgZm9yIHRlc3RpbmdcbiAgICB2YXIgQUNDRVBUX0lURVJBQkxFUyA9IGNoZWNrQ29ycmVjdG5lc3NPZkl0ZXJhdGlvbihmdW5jdGlvbiAoaXRlcmFibGUpIHsgbmV3IE5hdGl2ZUNvbnN0cnVjdG9yKGl0ZXJhYmxlKTsgfSk7XG4gICAgLy8gZm9yIGVhcmx5IGltcGxlbWVudGF0aW9ucyAtMCBhbmQgKzAgbm90IHRoZSBzYW1lXG4gICAgdmFyIEJVR0dZX1pFUk8gPSAhSVNfV0VBSyAmJiBmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBWOCB+IENocm9taXVtIDQyLSBmYWlscyBvbmx5IHdpdGggNSsgZWxlbWVudHNcbiAgICAgIHZhciAkaW5zdGFuY2UgPSBuZXcgTmF0aXZlQ29uc3RydWN0b3IoKTtcbiAgICAgIHZhciBpbmRleCA9IDU7XG4gICAgICB3aGlsZSAoaW5kZXgtLSkgJGluc3RhbmNlW0FEREVSXShpbmRleCwgaW5kZXgpO1xuICAgICAgcmV0dXJuICEkaW5zdGFuY2UuaGFzKC0wKTtcbiAgICB9KTtcblxuICAgIGlmICghQUNDRVBUX0lURVJBQkxFUykge1xuICAgICAgQ29uc3RydWN0b3IgPSB3cmFwcGVyKGZ1bmN0aW9uIChkdW1teSwgaXRlcmFibGUpIHtcbiAgICAgICAgYW5JbnN0YW5jZShkdW1teSwgTmF0aXZlUHJvdG90eXBlKTtcbiAgICAgICAgdmFyIHRoYXQgPSBpbmhlcml0SWZSZXF1aXJlZChuZXcgTmF0aXZlQ29uc3RydWN0b3IoKSwgZHVtbXksIENvbnN0cnVjdG9yKTtcbiAgICAgICAgaWYgKCFpc051bGxPclVuZGVmaW5lZChpdGVyYWJsZSkpIGl0ZXJhdGUoaXRlcmFibGUsIHRoYXRbQURERVJdLCB7IHRoYXQ6IHRoYXQsIEFTX0VOVFJJRVM6IElTX01BUCB9KTtcbiAgICAgICAgcmV0dXJuIHRoYXQ7XG4gICAgICB9KTtcbiAgICAgIENvbnN0cnVjdG9yLnByb3RvdHlwZSA9IE5hdGl2ZVByb3RvdHlwZTtcbiAgICAgIE5hdGl2ZVByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IENvbnN0cnVjdG9yO1xuICAgIH1cblxuICAgIGlmIChUSFJPV1NfT05fUFJJTUlUSVZFUyB8fCBCVUdHWV9aRVJPKSB7XG4gICAgICBmaXhNZXRob2QoJ2RlbGV0ZScpO1xuICAgICAgZml4TWV0aG9kKCdoYXMnKTtcbiAgICAgIElTX01BUCAmJiBmaXhNZXRob2QoJ2dldCcpO1xuICAgIH1cblxuICAgIGlmIChCVUdHWV9aRVJPIHx8IEhBU05UX0NIQUlOSU5HKSBmaXhNZXRob2QoQURERVIpO1xuXG4gICAgLy8gd2VhayBjb2xsZWN0aW9ucyBzaG91bGQgbm90IGNvbnRhaW5zIC5jbGVhciBtZXRob2RcbiAgICBpZiAoSVNfV0VBSyAmJiBOYXRpdmVQcm90b3R5cGUuY2xlYXIpIGRlbGV0ZSBOYXRpdmVQcm90b3R5cGUuY2xlYXI7XG4gIH1cblxuICBleHBvcnRlZFtDT05TVFJVQ1RPUl9OQU1FXSA9IENvbnN0cnVjdG9yO1xuICAkKHsgZ2xvYmFsOiB0cnVlLCBjb25zdHJ1Y3RvcjogdHJ1ZSwgZm9yY2VkOiBDb25zdHJ1Y3RvciAhPT0gTmF0aXZlQ29uc3RydWN0b3IgfSwgZXhwb3J0ZWQpO1xuXG4gIHNldFRvU3RyaW5nVGFnKENvbnN0cnVjdG9yLCBDT05TVFJVQ1RPUl9OQU1FKTtcblxuICBpZiAoIUlTX1dFQUspIGNvbW1vbi5zZXRTdHJvbmcoQ29uc3RydWN0b3IsIENPTlNUUlVDVE9SX05BTUUsIElTX01BUCk7XG5cbiAgcmV0dXJuIENvbnN0cnVjdG9yO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xudmFyIG93bktleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb3duLWtleXMnKTtcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcicpO1xudmFyIGRlZmluZVByb3BlcnR5TW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHknKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UsIGV4Y2VwdGlvbnMpIHtcbiAgdmFyIGtleXMgPSBvd25LZXlzKHNvdXJjZSk7XG4gIHZhciBkZWZpbmVQcm9wZXJ0eSA9IGRlZmluZVByb3BlcnR5TW9kdWxlLmY7XG4gIHZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JNb2R1bGUuZjtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgaWYgKCFoYXNPd24odGFyZ2V0LCBrZXkpICYmICEoZXhjZXB0aW9ucyAmJiBoYXNPd24oZXhjZXB0aW9ucywga2V5KSkpIHtcbiAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTtcbiAgICB9XG4gIH1cbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG5cbnZhciBNQVRDSCA9IHdlbGxLbm93blN5bWJvbCgnbWF0Y2gnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTUVUSE9EX05BTUUpIHtcbiAgdmFyIHJlZ2V4cCA9IC8uLztcbiAgdHJ5IHtcbiAgICAnLy4vJ1tNRVRIT0RfTkFNRV0ocmVnZXhwKTtcbiAgfSBjYXRjaCAoZXJyb3IxKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJlZ2V4cFtNQVRDSF0gPSBmYWxzZTtcbiAgICAgIHJldHVybiAnLy4vJ1tNRVRIT0RfTkFNRV0ocmVnZXhwKTtcbiAgICB9IGNhdGNoIChlcnJvcjIpIHsgLyogZW1wdHkgKi8gfVxuICB9IHJldHVybiBmYWxzZTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBGKCkgeyAvKiBlbXB0eSAqLyB9XG4gIEYucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gbnVsbDtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1nZXRwcm90b3R5cGVvZiAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xuICByZXR1cm4gT2JqZWN0LmdldFByb3RvdHlwZU9mKG5ldyBGKCkpICE9PSBGLnByb3RvdHlwZTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gYENyZWF0ZUl0ZXJSZXN1bHRPYmplY3RgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1jcmVhdGVpdGVycmVzdWx0b2JqZWN0XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh2YWx1ZSwgZG9uZSkge1xuICByZXR1cm4geyB2YWx1ZTogdmFsdWUsIGRvbmU6IGRvbmUgfTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnMnKTtcbnZhciBkZWZpbmVQcm9wZXJ0eU1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5Jyk7XG52YXIgY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NyZWF0ZS1wcm9wZXJ0eS1kZXNjcmlwdG9yJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gREVTQ1JJUFRPUlMgPyBmdW5jdGlvbiAob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIHJldHVybiBkZWZpbmVQcm9wZXJ0eU1vZHVsZS5mKG9iamVjdCwga2V5LCBjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IoMSwgdmFsdWUpKTtcbn0gOiBmdW5jdGlvbiAob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIG9iamVjdFtrZXldID0gdmFsdWU7XG4gIHJldHVybiBvYmplY3Q7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYml0bWFwLCB2YWx1ZSkge1xuICByZXR1cm4ge1xuICAgIGVudW1lcmFibGU6ICEoYml0bWFwICYgMSksXG4gICAgY29uZmlndXJhYmxlOiAhKGJpdG1hcCAmIDIpLFxuICAgIHdyaXRhYmxlOiAhKGJpdG1hcCAmIDQpLFxuICAgIHZhbHVlOiB2YWx1ZVxuICB9O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIGRlZmluZVByb3BlcnR5TW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHknKTtcbnZhciBjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5LWRlc2NyaXB0b3InKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIGlmIChERVNDUklQVE9SUykgZGVmaW5lUHJvcGVydHlNb2R1bGUuZihvYmplY3QsIGtleSwgY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yKDAsIHZhbHVlKSk7XG4gIGVsc2Ugb2JqZWN0W2tleV0gPSB2YWx1ZTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4tb2JqZWN0Jyk7XG52YXIgb3JkaW5hcnlUb1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vcmRpbmFyeS10by1wcmltaXRpdmUnKTtcblxudmFyICRUeXBlRXJyb3IgPSBUeXBlRXJyb3I7XG5cbi8vIGBEYXRlLnByb3RvdHlwZVtAQHRvUHJpbWl0aXZlXShoaW50KWAgbWV0aG9kIGltcGxlbWVudGF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWRhdGUucHJvdG90eXBlLUBAdG9wcmltaXRpdmVcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGhpbnQpIHtcbiAgYW5PYmplY3QodGhpcyk7XG4gIGlmIChoaW50ID09PSAnc3RyaW5nJyB8fCBoaW50ID09PSAnZGVmYXVsdCcpIGhpbnQgPSAnc3RyaW5nJztcbiAgZWxzZSBpZiAoaGludCAhPT0gJ251bWJlcicpIHRocm93IG5ldyAkVHlwZUVycm9yKCdJbmNvcnJlY3QgaGludCcpO1xuICByZXR1cm4gb3JkaW5hcnlUb1ByaW1pdGl2ZSh0aGlzLCBoaW50KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgbWFrZUJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvbWFrZS1idWlsdC1pbicpO1xudmFyIGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHknKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodGFyZ2V0LCBuYW1lLCBkZXNjcmlwdG9yKSB7XG4gIGlmIChkZXNjcmlwdG9yLmdldCkgbWFrZUJ1aWx0SW4oZGVzY3JpcHRvci5nZXQsIG5hbWUsIHsgZ2V0dGVyOiB0cnVlIH0pO1xuICBpZiAoZGVzY3JpcHRvci5zZXQpIG1ha2VCdWlsdEluKGRlc2NyaXB0b3Iuc2V0LCBuYW1lLCB7IHNldHRlcjogdHJ1ZSB9KTtcbiAgcmV0dXJuIGRlZmluZVByb3BlcnR5LmYodGFyZ2V0LCBuYW1lLCBkZXNjcmlwdG9yKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xudmFyIGRlZmluZVByb3BlcnR5TW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHknKTtcbnZhciBtYWtlQnVpbHRJbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9tYWtlLWJ1aWx0LWluJyk7XG52YXIgZGVmaW5lR2xvYmFsUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVmaW5lLWdsb2JhbC1wcm9wZXJ0eScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChPLCBrZXksIHZhbHVlLCBvcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucykgb3B0aW9ucyA9IHt9O1xuICB2YXIgc2ltcGxlID0gb3B0aW9ucy5lbnVtZXJhYmxlO1xuICB2YXIgbmFtZSA9IG9wdGlvbnMubmFtZSAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5uYW1lIDoga2V5O1xuICBpZiAoaXNDYWxsYWJsZSh2YWx1ZSkpIG1ha2VCdWlsdEluKHZhbHVlLCBuYW1lLCBvcHRpb25zKTtcbiAgaWYgKG9wdGlvbnMuZ2xvYmFsKSB7XG4gICAgaWYgKHNpbXBsZSkgT1trZXldID0gdmFsdWU7XG4gICAgZWxzZSBkZWZpbmVHbG9iYWxQcm9wZXJ0eShrZXksIHZhbHVlKTtcbiAgfSBlbHNlIHtcbiAgICB0cnkge1xuICAgICAgaWYgKCFvcHRpb25zLnVuc2FmZSkgZGVsZXRlIE9ba2V5XTtcbiAgICAgIGVsc2UgaWYgKE9ba2V5XSkgc2ltcGxlID0gdHJ1ZTtcbiAgICB9IGNhdGNoIChlcnJvcikgeyAvKiBlbXB0eSAqLyB9XG4gICAgaWYgKHNpbXBsZSkgT1trZXldID0gdmFsdWU7XG4gICAgZWxzZSBkZWZpbmVQcm9wZXJ0eU1vZHVsZS5mKE8sIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICBjb25maWd1cmFibGU6ICFvcHRpb25zLm5vbkNvbmZpZ3VyYWJsZSxcbiAgICAgIHdyaXRhYmxlOiAhb3B0aW9ucy5ub25Xcml0YWJsZVxuICAgIH0pO1xuICB9IHJldHVybiBPO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBkZWZpbmVCdWlsdEluID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RlZmluZS1idWlsdC1pbicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0YXJnZXQsIHNyYywgb3B0aW9ucykge1xuICBmb3IgKHZhciBrZXkgaW4gc3JjKSBkZWZpbmVCdWlsdEluKHRhcmdldCwga2V5LCBzcmNba2V5XSwgb3B0aW9ucyk7XG4gIHJldHVybiB0YXJnZXQ7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1kZWZpbmVwcm9wZXJ0eSAtLSBzYWZlXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgdHJ5IHtcbiAgICBkZWZpbmVQcm9wZXJ0eShnbG9iYWwsIGtleSwgeyB2YWx1ZTogdmFsdWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgZ2xvYmFsW2tleV0gPSB2YWx1ZTtcbiAgfSByZXR1cm4gdmFsdWU7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHRyeVRvU3RyaW5nID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RyeS10by1zdHJpbmcnKTtcblxudmFyICRUeXBlRXJyb3IgPSBUeXBlRXJyb3I7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKE8sIFApIHtcbiAgaWYgKCFkZWxldGUgT1tQXSkgdGhyb3cgbmV3ICRUeXBlRXJyb3IoJ0Nhbm5vdCBkZWxldGUgcHJvcGVydHkgJyArIHRyeVRvU3RyaW5nKFApICsgJyBvZiAnICsgdHJ5VG9TdHJpbmcoTykpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xuXG4vLyBEZXRlY3QgSUU4J3MgaW5jb21wbGV0ZSBkZWZpbmVQcm9wZXJ0eSBpbXBsZW1lbnRhdGlvblxubW9kdWxlLmV4cG9ydHMgPSAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWRlZmluZXByb3BlcnR5IC0tIHJlcXVpcmVkIGZvciB0ZXN0aW5nXG4gIHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoe30sIDEsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9IH0pWzFdICE9PSA3O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW9iamVjdCcpO1xuXG52YXIgZG9jdW1lbnQgPSBnbG9iYWwuZG9jdW1lbnQ7XG4vLyB0eXBlb2YgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCBpcyAnb2JqZWN0JyBpbiBvbGQgSUVcbnZhciBFWElTVFMgPSBpc09iamVjdChkb2N1bWVudCkgJiYgaXNPYmplY3QoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBFWElTVFMgPyBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGl0KSA6IHt9O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkVHlwZUVycm9yID0gVHlwZUVycm9yO1xudmFyIE1BWF9TQUZFX0lOVEVHRVIgPSAweDFGRkZGRkZGRkZGRkZGOyAvLyAyICoqIDUzIC0gMSA9PSA5MDA3MTk5MjU0NzQwOTkxXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChpdCA+IE1BWF9TQUZFX0lOVEVHRVIpIHRocm93ICRUeXBlRXJyb3IoJ01heGltdW0gYWxsb3dlZCBpbmRleCBleGNlZWRlZCcpO1xuICByZXR1cm4gaXQ7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gaXRlcmFibGUgRE9NIGNvbGxlY3Rpb25zXG4vLyBmbGFnIC0gYGl0ZXJhYmxlYCBpbnRlcmZhY2UgLSAnZW50cmllcycsICdrZXlzJywgJ3ZhbHVlcycsICdmb3JFYWNoJyBtZXRob2RzXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgQ1NTUnVsZUxpc3Q6IDAsXG4gIENTU1N0eWxlRGVjbGFyYXRpb246IDAsXG4gIENTU1ZhbHVlTGlzdDogMCxcbiAgQ2xpZW50UmVjdExpc3Q6IDAsXG4gIERPTVJlY3RMaXN0OiAwLFxuICBET01TdHJpbmdMaXN0OiAwLFxuICBET01Ub2tlbkxpc3Q6IDEsXG4gIERhdGFUcmFuc2Zlckl0ZW1MaXN0OiAwLFxuICBGaWxlTGlzdDogMCxcbiAgSFRNTEFsbENvbGxlY3Rpb246IDAsXG4gIEhUTUxDb2xsZWN0aW9uOiAwLFxuICBIVE1MRm9ybUVsZW1lbnQ6IDAsXG4gIEhUTUxTZWxlY3RFbGVtZW50OiAwLFxuICBNZWRpYUxpc3Q6IDAsXG4gIE1pbWVUeXBlQXJyYXk6IDAsXG4gIE5hbWVkTm9kZU1hcDogMCxcbiAgTm9kZUxpc3Q6IDEsXG4gIFBhaW50UmVxdWVzdExpc3Q6IDAsXG4gIFBsdWdpbjogMCxcbiAgUGx1Z2luQXJyYXk6IDAsXG4gIFNWR0xlbmd0aExpc3Q6IDAsXG4gIFNWR051bWJlckxpc3Q6IDAsXG4gIFNWR1BhdGhTZWdMaXN0OiAwLFxuICBTVkdQb2ludExpc3Q6IDAsXG4gIFNWR1N0cmluZ0xpc3Q6IDAsXG4gIFNWR1RyYW5zZm9ybUxpc3Q6IDAsXG4gIFNvdXJjZUJ1ZmZlckxpc3Q6IDAsXG4gIFN0eWxlU2hlZXRMaXN0OiAwLFxuICBUZXh0VHJhY2tDdWVMaXN0OiAwLFxuICBUZXh0VHJhY2tMaXN0OiAwLFxuICBUb3VjaExpc3Q6IDBcbn07XG4iLCIndXNlIHN0cmljdCc7XG4vLyBpbiBvbGQgV2ViS2l0IHZlcnNpb25zLCBgZWxlbWVudC5jbGFzc0xpc3RgIGlzIG5vdCBhbiBpbnN0YW5jZSBvZiBnbG9iYWwgYERPTVRva2VuTGlzdGBcbnZhciBkb2N1bWVudENyZWF0ZUVsZW1lbnQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZG9jdW1lbnQtY3JlYXRlLWVsZW1lbnQnKTtcblxudmFyIGNsYXNzTGlzdCA9IGRvY3VtZW50Q3JlYXRlRWxlbWVudCgnc3BhbicpLmNsYXNzTGlzdDtcbnZhciBET01Ub2tlbkxpc3RQcm90b3R5cGUgPSBjbGFzc0xpc3QgJiYgY2xhc3NMaXN0LmNvbnN0cnVjdG9yICYmIGNsYXNzTGlzdC5jb25zdHJ1Y3Rvci5wcm90b3R5cGU7XG5cbm1vZHVsZS5leHBvcnRzID0gRE9NVG9rZW5MaXN0UHJvdG90eXBlID09PSBPYmplY3QucHJvdG90eXBlID8gdW5kZWZpbmVkIDogRE9NVG9rZW5MaXN0UHJvdG90eXBlO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHVzZXJBZ2VudCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9lbmdpbmUtdXNlci1hZ2VudCcpO1xuXG52YXIgZmlyZWZveCA9IHVzZXJBZ2VudC5tYXRjaCgvZmlyZWZveFxcLyhcXGQrKS9pKTtcblxubW9kdWxlLmV4cG9ydHMgPSAhIWZpcmVmb3ggJiYgK2ZpcmVmb3hbMV07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgSVNfREVOTyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9lbmdpbmUtaXMtZGVubycpO1xudmFyIElTX05PREUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZW5naW5lLWlzLW5vZGUnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAhSVNfREVOTyAmJiAhSVNfTk9ERVxuICAmJiB0eXBlb2Ygd2luZG93ID09ICdvYmplY3QnXG4gICYmIHR5cGVvZiBkb2N1bWVudCA9PSAnb2JqZWN0JztcbiIsIid1c2Ugc3RyaWN0Jztcbi8qIGdsb2JhbCBCdW4gLS0gQnVuIGNhc2UgKi9cbm1vZHVsZS5leHBvcnRzID0gdHlwZW9mIEJ1biA9PSAnZnVuY3Rpb24nICYmIEJ1biAmJiB0eXBlb2YgQnVuLnZlcnNpb24gPT0gJ3N0cmluZyc7XG4iLCIndXNlIHN0cmljdCc7XG4vKiBnbG9iYWwgRGVubyAtLSBEZW5vIGNhc2UgKi9cbm1vZHVsZS5leHBvcnRzID0gdHlwZW9mIERlbm8gPT0gJ29iamVjdCcgJiYgRGVubyAmJiB0eXBlb2YgRGVuby52ZXJzaW9uID09ICdvYmplY3QnO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIFVBID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2VuZ2luZS11c2VyLWFnZW50Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gL01TSUV8VHJpZGVudC8udGVzdChVQSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdXNlckFnZW50ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2VuZ2luZS11c2VyLWFnZW50Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gL2lwYWR8aXBob25lfGlwb2QvaS50ZXN0KHVzZXJBZ2VudCkgJiYgdHlwZW9mIFBlYmJsZSAhPSAndW5kZWZpbmVkJztcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB1c2VyQWdlbnQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZW5naW5lLXVzZXItYWdlbnQnKTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlZG9zL25vLXZ1bG5lcmFibGUgLS0gc2FmZVxubW9kdWxlLmV4cG9ydHMgPSAvKD86aXBhZHxpcGhvbmV8aXBvZCkuKmFwcGxld2Via2l0L2kudGVzdCh1c2VyQWdlbnQpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NsYXNzb2YtcmF3Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gY2xhc3NvZihnbG9iYWwucHJvY2VzcykgPT09ICdwcm9jZXNzJztcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB1c2VyQWdlbnQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZW5naW5lLXVzZXItYWdlbnQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAvd2ViMHMoPyEuKmNocm9tZSkvaS50ZXN0KHVzZXJBZ2VudCk7XG4iLCIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiBuYXZpZ2F0b3IgIT0gJ3VuZGVmaW5lZCcgJiYgU3RyaW5nKG5hdmlnYXRvci51c2VyQWdlbnQpIHx8ICcnO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciB1c2VyQWdlbnQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZW5naW5lLXVzZXItYWdlbnQnKTtcblxudmFyIHByb2Nlc3MgPSBnbG9iYWwucHJvY2VzcztcbnZhciBEZW5vID0gZ2xvYmFsLkRlbm87XG52YXIgdmVyc2lvbnMgPSBwcm9jZXNzICYmIHByb2Nlc3MudmVyc2lvbnMgfHwgRGVubyAmJiBEZW5vLnZlcnNpb247XG52YXIgdjggPSB2ZXJzaW9ucyAmJiB2ZXJzaW9ucy52ODtcbnZhciBtYXRjaCwgdmVyc2lvbjtcblxuaWYgKHY4KSB7XG4gIG1hdGNoID0gdjguc3BsaXQoJy4nKTtcbiAgLy8gaW4gb2xkIENocm9tZSwgdmVyc2lvbnMgb2YgVjggaXNuJ3QgVjggPSBDaHJvbWUgLyAxMFxuICAvLyBidXQgdGhlaXIgY29ycmVjdCB2ZXJzaW9ucyBhcmUgbm90IGludGVyZXN0aW5nIGZvciB1c1xuICB2ZXJzaW9uID0gbWF0Y2hbMF0gPiAwICYmIG1hdGNoWzBdIDwgNCA/IDEgOiArKG1hdGNoWzBdICsgbWF0Y2hbMV0pO1xufVxuXG4vLyBCcm93c2VyRlMgTm9kZUpTIGBwcm9jZXNzYCBwb2x5ZmlsbCBpbmNvcnJlY3RseSBzZXQgYC52OGAgdG8gYDAuMGBcbi8vIHNvIGNoZWNrIGB1c2VyQWdlbnRgIGV2ZW4gaWYgYC52OGAgZXhpc3RzLCBidXQgMFxuaWYgKCF2ZXJzaW9uICYmIHVzZXJBZ2VudCkge1xuICBtYXRjaCA9IHVzZXJBZ2VudC5tYXRjaCgvRWRnZVxcLyhcXGQrKS8pO1xuICBpZiAoIW1hdGNoIHx8IG1hdGNoWzFdID49IDc0KSB7XG4gICAgbWF0Y2ggPSB1c2VyQWdlbnQubWF0Y2goL0Nocm9tZVxcLyhcXGQrKS8pO1xuICAgIGlmIChtYXRjaCkgdmVyc2lvbiA9ICttYXRjaFsxXTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHZlcnNpb247XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdXNlckFnZW50ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2VuZ2luZS11c2VyLWFnZW50Jyk7XG5cbnZhciB3ZWJraXQgPSB1c2VyQWdlbnQubWF0Y2goL0FwcGxlV2ViS2l0XFwvKFxcZCspXFwuLyk7XG5cbm1vZHVsZS5leHBvcnRzID0gISF3ZWJraXQgJiYgK3dlYmtpdFsxXTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIElFOC0gZG9uJ3QgZW51bSBidWcga2V5c1xubW9kdWxlLmV4cG9ydHMgPSBbXG4gICdjb25zdHJ1Y3RvcicsXG4gICdoYXNPd25Qcm9wZXJ0eScsXG4gICdpc1Byb3RvdHlwZU9mJyxcbiAgJ3Byb3BlcnR5SXNFbnVtZXJhYmxlJyxcbiAgJ3RvTG9jYWxlU3RyaW5nJyxcbiAgJ3RvU3RyaW5nJyxcbiAgJ3ZhbHVlT2YnXG5dO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcicpLmY7XG52YXIgY3JlYXRlTm9uRW51bWVyYWJsZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eScpO1xudmFyIGRlZmluZUJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVmaW5lLWJ1aWx0LWluJyk7XG52YXIgZGVmaW5lR2xvYmFsUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVmaW5lLWdsb2JhbC1wcm9wZXJ0eScpO1xudmFyIGNvcHlDb25zdHJ1Y3RvclByb3BlcnRpZXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY29weS1jb25zdHJ1Y3Rvci1wcm9wZXJ0aWVzJyk7XG52YXIgaXNGb3JjZWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtZm9yY2VkJyk7XG5cbi8qXG4gIG9wdGlvbnMudGFyZ2V0ICAgICAgICAgLSBuYW1lIG9mIHRoZSB0YXJnZXQgb2JqZWN0XG4gIG9wdGlvbnMuZ2xvYmFsICAgICAgICAgLSB0YXJnZXQgaXMgdGhlIGdsb2JhbCBvYmplY3RcbiAgb3B0aW9ucy5zdGF0ICAgICAgICAgICAtIGV4cG9ydCBhcyBzdGF0aWMgbWV0aG9kcyBvZiB0YXJnZXRcbiAgb3B0aW9ucy5wcm90byAgICAgICAgICAtIGV4cG9ydCBhcyBwcm90b3R5cGUgbWV0aG9kcyBvZiB0YXJnZXRcbiAgb3B0aW9ucy5yZWFsICAgICAgICAgICAtIHJlYWwgcHJvdG90eXBlIG1ldGhvZCBmb3IgdGhlIGBwdXJlYCB2ZXJzaW9uXG4gIG9wdGlvbnMuZm9yY2VkICAgICAgICAgLSBleHBvcnQgZXZlbiBpZiB0aGUgbmF0aXZlIGZlYXR1cmUgaXMgYXZhaWxhYmxlXG4gIG9wdGlvbnMuYmluZCAgICAgICAgICAgLSBiaW5kIG1ldGhvZHMgdG8gdGhlIHRhcmdldCwgcmVxdWlyZWQgZm9yIHRoZSBgcHVyZWAgdmVyc2lvblxuICBvcHRpb25zLndyYXAgICAgICAgICAgIC0gd3JhcCBjb25zdHJ1Y3RvcnMgdG8gcHJldmVudGluZyBnbG9iYWwgcG9sbHV0aW9uLCByZXF1aXJlZCBmb3IgdGhlIGBwdXJlYCB2ZXJzaW9uXG4gIG9wdGlvbnMudW5zYWZlICAgICAgICAgLSB1c2UgdGhlIHNpbXBsZSBhc3NpZ25tZW50IG9mIHByb3BlcnR5IGluc3RlYWQgb2YgZGVsZXRlICsgZGVmaW5lUHJvcGVydHlcbiAgb3B0aW9ucy5zaGFtICAgICAgICAgICAtIGFkZCBhIGZsYWcgdG8gbm90IGNvbXBsZXRlbHkgZnVsbCBwb2x5ZmlsbHNcbiAgb3B0aW9ucy5lbnVtZXJhYmxlICAgICAtIGV4cG9ydCBhcyBlbnVtZXJhYmxlIHByb3BlcnR5XG4gIG9wdGlvbnMuZG9udENhbGxHZXRTZXQgLSBwcmV2ZW50IGNhbGxpbmcgYSBnZXR0ZXIgb24gdGFyZ2V0XG4gIG9wdGlvbnMubmFtZSAgICAgICAgICAgLSB0aGUgLm5hbWUgb2YgdGhlIGZ1bmN0aW9uIGlmIGl0IGRvZXMgbm90IG1hdGNoIHRoZSBrZXlcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvcHRpb25zLCBzb3VyY2UpIHtcbiAgdmFyIFRBUkdFVCA9IG9wdGlvbnMudGFyZ2V0O1xuICB2YXIgR0xPQkFMID0gb3B0aW9ucy5nbG9iYWw7XG4gIHZhciBTVEFUSUMgPSBvcHRpb25zLnN0YXQ7XG4gIHZhciBGT1JDRUQsIHRhcmdldCwga2V5LCB0YXJnZXRQcm9wZXJ0eSwgc291cmNlUHJvcGVydHksIGRlc2NyaXB0b3I7XG4gIGlmIChHTE9CQUwpIHtcbiAgICB0YXJnZXQgPSBnbG9iYWw7XG4gIH0gZWxzZSBpZiAoU1RBVElDKSB7XG4gICAgdGFyZ2V0ID0gZ2xvYmFsW1RBUkdFVF0gfHwgZGVmaW5lR2xvYmFsUHJvcGVydHkoVEFSR0VULCB7fSk7XG4gIH0gZWxzZSB7XG4gICAgdGFyZ2V0ID0gZ2xvYmFsW1RBUkdFVF0gJiYgZ2xvYmFsW1RBUkdFVF0ucHJvdG90eXBlO1xuICB9XG4gIGlmICh0YXJnZXQpIGZvciAoa2V5IGluIHNvdXJjZSkge1xuICAgIHNvdXJjZVByb3BlcnR5ID0gc291cmNlW2tleV07XG4gICAgaWYgKG9wdGlvbnMuZG9udENhbGxHZXRTZXQpIHtcbiAgICAgIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpO1xuICAgICAgdGFyZ2V0UHJvcGVydHkgPSBkZXNjcmlwdG9yICYmIGRlc2NyaXB0b3IudmFsdWU7XG4gICAgfSBlbHNlIHRhcmdldFByb3BlcnR5ID0gdGFyZ2V0W2tleV07XG4gICAgRk9SQ0VEID0gaXNGb3JjZWQoR0xPQkFMID8ga2V5IDogVEFSR0VUICsgKFNUQVRJQyA/ICcuJyA6ICcjJykgKyBrZXksIG9wdGlvbnMuZm9yY2VkKTtcbiAgICAvLyBjb250YWluZWQgaW4gdGFyZ2V0XG4gICAgaWYgKCFGT1JDRUQgJiYgdGFyZ2V0UHJvcGVydHkgIT09IHVuZGVmaW5lZCkge1xuICAgICAgaWYgKHR5cGVvZiBzb3VyY2VQcm9wZXJ0eSA9PSB0eXBlb2YgdGFyZ2V0UHJvcGVydHkpIGNvbnRpbnVlO1xuICAgICAgY29weUNvbnN0cnVjdG9yUHJvcGVydGllcyhzb3VyY2VQcm9wZXJ0eSwgdGFyZ2V0UHJvcGVydHkpO1xuICAgIH1cbiAgICAvLyBhZGQgYSBmbGFnIHRvIG5vdCBjb21wbGV0ZWx5IGZ1bGwgcG9seWZpbGxzXG4gICAgaWYgKG9wdGlvbnMuc2hhbSB8fCAodGFyZ2V0UHJvcGVydHkgJiYgdGFyZ2V0UHJvcGVydHkuc2hhbSkpIHtcbiAgICAgIGNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eShzb3VyY2VQcm9wZXJ0eSwgJ3NoYW0nLCB0cnVlKTtcbiAgICB9XG4gICAgZGVmaW5lQnVpbHRJbih0YXJnZXQsIGtleSwgc291cmNlUHJvcGVydHksIG9wdGlvbnMpO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZXhlYykge1xuICB0cnkge1xuICAgIHJldHVybiAhIWV4ZWMoKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIFRPRE86IFJlbW92ZSBmcm9tIGBjb3JlLWpzQDRgIHNpbmNlIGl0J3MgbW92ZWQgdG8gZW50cnkgcG9pbnRzXG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjJyk7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1jYWxsJyk7XG52YXIgZGVmaW5lQnVpbHRJbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZWZpbmUtYnVpbHQtaW4nKTtcbnZhciByZWdleHBFeGVjID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZ2V4cC1leGVjJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcbnZhciBjcmVhdGVOb25FbnVtZXJhYmxlUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLW5vbi1lbnVtZXJhYmxlLXByb3BlcnR5Jyk7XG5cbnZhciBTUEVDSUVTID0gd2VsbEtub3duU3ltYm9sKCdzcGVjaWVzJyk7XG52YXIgUmVnRXhwUHJvdG90eXBlID0gUmVnRXhwLnByb3RvdHlwZTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoS0VZLCBleGVjLCBGT1JDRUQsIFNIQU0pIHtcbiAgdmFyIFNZTUJPTCA9IHdlbGxLbm93blN5bWJvbChLRVkpO1xuXG4gIHZhciBERUxFR0FURVNfVE9fU1lNQk9MID0gIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAvLyBTdHJpbmcgbWV0aG9kcyBjYWxsIHN5bWJvbC1uYW1lZCBSZWdFeHAgbWV0aG9kc1xuICAgIHZhciBPID0ge307XG4gICAgT1tTWU1CT0xdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gNzsgfTtcbiAgICByZXR1cm4gJydbS0VZXShPKSAhPT0gNztcbiAgfSk7XG5cbiAgdmFyIERFTEVHQVRFU19UT19FWEVDID0gREVMRUdBVEVTX1RPX1NZTUJPTCAmJiAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIC8vIFN5bWJvbC1uYW1lZCBSZWdFeHAgbWV0aG9kcyBjYWxsIC5leGVjXG4gICAgdmFyIGV4ZWNDYWxsZWQgPSBmYWxzZTtcbiAgICB2YXIgcmUgPSAvYS87XG5cbiAgICBpZiAoS0VZID09PSAnc3BsaXQnKSB7XG4gICAgICAvLyBXZSBjYW4ndCB1c2UgcmVhbCByZWdleCBoZXJlIHNpbmNlIGl0IGNhdXNlcyBkZW9wdGltaXphdGlvblxuICAgICAgLy8gYW5kIHNlcmlvdXMgcGVyZm9ybWFuY2UgZGVncmFkYXRpb24gaW4gVjhcbiAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy8zMDZcbiAgICAgIHJlID0ge307XG4gICAgICAvLyBSZWdFeHBbQEBzcGxpdF0gZG9lc24ndCBjYWxsIHRoZSByZWdleCdzIGV4ZWMgbWV0aG9kLCBidXQgZmlyc3QgY3JlYXRlc1xuICAgICAgLy8gYSBuZXcgb25lLiBXZSBuZWVkIHRvIHJldHVybiB0aGUgcGF0Y2hlZCByZWdleCB3aGVuIGNyZWF0aW5nIHRoZSBuZXcgb25lLlxuICAgICAgcmUuY29uc3RydWN0b3IgPSB7fTtcbiAgICAgIHJlLmNvbnN0cnVjdG9yW1NQRUNJRVNdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gcmU7IH07XG4gICAgICByZS5mbGFncyA9ICcnO1xuICAgICAgcmVbU1lNQk9MXSA9IC8uL1tTWU1CT0xdO1xuICAgIH1cblxuICAgIHJlLmV4ZWMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBleGVjQ2FsbGVkID0gdHJ1ZTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG5cbiAgICByZVtTWU1CT0xdKCcnKTtcbiAgICByZXR1cm4gIWV4ZWNDYWxsZWQ7XG4gIH0pO1xuXG4gIGlmIChcbiAgICAhREVMRUdBVEVTX1RPX1NZTUJPTCB8fFxuICAgICFERUxFR0FURVNfVE9fRVhFQyB8fFxuICAgIEZPUkNFRFxuICApIHtcbiAgICB2YXIgbmF0aXZlUmVnRXhwTWV0aG9kID0gLy4vW1NZTUJPTF07XG4gICAgdmFyIG1ldGhvZHMgPSBleGVjKFNZTUJPTCwgJydbS0VZXSwgZnVuY3Rpb24gKG5hdGl2ZU1ldGhvZCwgcmVnZXhwLCBzdHIsIGFyZzIsIGZvcmNlU3RyaW5nTWV0aG9kKSB7XG4gICAgICB2YXIgJGV4ZWMgPSByZWdleHAuZXhlYztcbiAgICAgIGlmICgkZXhlYyA9PT0gcmVnZXhwRXhlYyB8fCAkZXhlYyA9PT0gUmVnRXhwUHJvdG90eXBlLmV4ZWMpIHtcbiAgICAgICAgaWYgKERFTEVHQVRFU19UT19TWU1CT0wgJiYgIWZvcmNlU3RyaW5nTWV0aG9kKSB7XG4gICAgICAgICAgLy8gVGhlIG5hdGl2ZSBTdHJpbmcgbWV0aG9kIGFscmVhZHkgZGVsZWdhdGVzIHRvIEBAbWV0aG9kICh0aGlzXG4gICAgICAgICAgLy8gcG9seWZpbGxlZCBmdW5jdGlvbiksIGxlYXNpbmcgdG8gaW5maW5pdGUgcmVjdXJzaW9uLlxuICAgICAgICAgIC8vIFdlIGF2b2lkIGl0IGJ5IGRpcmVjdGx5IGNhbGxpbmcgdGhlIG5hdGl2ZSBAQG1ldGhvZCBtZXRob2QuXG4gICAgICAgICAgcmV0dXJuIHsgZG9uZTogdHJ1ZSwgdmFsdWU6IGNhbGwobmF0aXZlUmVnRXhwTWV0aG9kLCByZWdleHAsIHN0ciwgYXJnMikgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBkb25lOiB0cnVlLCB2YWx1ZTogY2FsbChuYXRpdmVNZXRob2QsIHN0ciwgcmVnZXhwLCBhcmcyKSB9O1xuICAgICAgfVxuICAgICAgcmV0dXJuIHsgZG9uZTogZmFsc2UgfTtcbiAgICB9KTtcblxuICAgIGRlZmluZUJ1aWx0SW4oU3RyaW5nLnByb3RvdHlwZSwgS0VZLCBtZXRob2RzWzBdKTtcbiAgICBkZWZpbmVCdWlsdEluKFJlZ0V4cFByb3RvdHlwZSwgU1lNQk9MLCBtZXRob2RzWzFdKTtcbiAgfVxuXG4gIGlmIChTSEFNKSBjcmVhdGVOb25FbnVtZXJhYmxlUHJvcGVydHkoUmVnRXhwUHJvdG90eXBlW1NZTUJPTF0sICdzaGFtJywgdHJ1ZSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1pc2V4dGVuc2libGUsIGVzL25vLW9iamVjdC1wcmV2ZW50ZXh0ZW5zaW9ucyAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xuICByZXR1cm4gT2JqZWN0LmlzRXh0ZW5zaWJsZShPYmplY3QucHJldmVudEV4dGVuc2lvbnMoe30pKTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIE5BVElWRV9CSU5EID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmQtbmF0aXZlJyk7XG5cbnZhciBGdW5jdGlvblByb3RvdHlwZSA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcbnZhciBhcHBseSA9IEZ1bmN0aW9uUHJvdG90eXBlLmFwcGx5O1xudmFyIGNhbGwgPSBGdW5jdGlvblByb3RvdHlwZS5jYWxsO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tcmVmbGVjdCAtLSBzYWZlXG5tb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiBSZWZsZWN0ID09ICdvYmplY3QnICYmIFJlZmxlY3QuYXBwbHkgfHwgKE5BVElWRV9CSU5EID8gY2FsbC5iaW5kKGFwcGx5KSA6IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGNhbGwuYXBwbHkoYXBwbHksIGFyZ3VtZW50cyk7XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMtY2xhdXNlJyk7XG52YXIgYUNhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2EtY2FsbGFibGUnKTtcbnZhciBOQVRJVkVfQklORCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1iaW5kLW5hdGl2ZScpO1xuXG52YXIgYmluZCA9IHVuY3VycnlUaGlzKHVuY3VycnlUaGlzLmJpbmQpO1xuXG4vLyBvcHRpb25hbCAvIHNpbXBsZSBjb250ZXh0IGJpbmRpbmdcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGZuLCB0aGF0KSB7XG4gIGFDYWxsYWJsZShmbik7XG4gIHJldHVybiB0aGF0ID09PSB1bmRlZmluZWQgPyBmbiA6IE5BVElWRV9CSU5EID8gYmluZChmbiwgdGhhdCkgOiBmdW5jdGlvbiAoLyogLi4uYXJncyAqLykge1xuICAgIHJldHVybiBmbi5hcHBseSh0aGF0LCBhcmd1bWVudHMpO1xuICB9O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1mdW5jdGlvbi1wcm90b3R5cGUtYmluZCAtLSBzYWZlXG4gIHZhciB0ZXN0ID0gKGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfSkuYmluZCgpO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zIC0tIHNhZmVcbiAgcmV0dXJuIHR5cGVvZiB0ZXN0ICE9ICdmdW5jdGlvbicgfHwgdGVzdC5oYXNPd25Qcm9wZXJ0eSgncHJvdG90eXBlJyk7XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcbnZhciBhQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYS1jYWxsYWJsZScpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW9iamVjdCcpO1xudmFyIGhhc093biA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oYXMtb3duLXByb3BlcnR5Jyk7XG52YXIgYXJyYXlTbGljZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1zbGljZScpO1xudmFyIE5BVElWRV9CSU5EID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmQtbmF0aXZlJyk7XG5cbnZhciAkRnVuY3Rpb24gPSBGdW5jdGlvbjtcbnZhciBjb25jYXQgPSB1bmN1cnJ5VGhpcyhbXS5jb25jYXQpO1xudmFyIGpvaW4gPSB1bmN1cnJ5VGhpcyhbXS5qb2luKTtcbnZhciBmYWN0b3JpZXMgPSB7fTtcblxudmFyIGNvbnN0cnVjdCA9IGZ1bmN0aW9uIChDLCBhcmdzTGVuZ3RoLCBhcmdzKSB7XG4gIGlmICghaGFzT3duKGZhY3RvcmllcywgYXJnc0xlbmd0aCkpIHtcbiAgICB2YXIgbGlzdCA9IFtdO1xuICAgIHZhciBpID0gMDtcbiAgICBmb3IgKDsgaSA8IGFyZ3NMZW5ndGg7IGkrKykgbGlzdFtpXSA9ICdhWycgKyBpICsgJ10nO1xuICAgIGZhY3Rvcmllc1thcmdzTGVuZ3RoXSA9ICRGdW5jdGlvbignQyxhJywgJ3JldHVybiBuZXcgQygnICsgam9pbihsaXN0LCAnLCcpICsgJyknKTtcbiAgfSByZXR1cm4gZmFjdG9yaWVzW2FyZ3NMZW5ndGhdKEMsIGFyZ3MpO1xufTtcblxuLy8gYEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kYCBtZXRob2QgaW1wbGVtZW50YXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtZnVuY3Rpb24ucHJvdG90eXBlLmJpbmRcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1mdW5jdGlvbi1wcm90b3R5cGUtYmluZCAtLSBkZXRlY3Rpb25cbm1vZHVsZS5leHBvcnRzID0gTkFUSVZFX0JJTkQgPyAkRnVuY3Rpb24uYmluZCA6IGZ1bmN0aW9uIGJpbmQodGhhdCAvKiAsIC4uLmFyZ3MgKi8pIHtcbiAgdmFyIEYgPSBhQ2FsbGFibGUodGhpcyk7XG4gIHZhciBQcm90b3R5cGUgPSBGLnByb3RvdHlwZTtcbiAgdmFyIHBhcnRBcmdzID0gYXJyYXlTbGljZShhcmd1bWVudHMsIDEpO1xuICB2YXIgYm91bmRGdW5jdGlvbiA9IGZ1bmN0aW9uIGJvdW5kKC8qIGFyZ3MuLi4gKi8pIHtcbiAgICB2YXIgYXJncyA9IGNvbmNhdChwYXJ0QXJncywgYXJyYXlTbGljZShhcmd1bWVudHMpKTtcbiAgICByZXR1cm4gdGhpcyBpbnN0YW5jZW9mIGJvdW5kRnVuY3Rpb24gPyBjb25zdHJ1Y3QoRiwgYXJncy5sZW5ndGgsIGFyZ3MpIDogRi5hcHBseSh0aGF0LCBhcmdzKTtcbiAgfTtcbiAgaWYgKGlzT2JqZWN0KFByb3RvdHlwZSkpIGJvdW5kRnVuY3Rpb24ucHJvdG90eXBlID0gUHJvdG90eXBlO1xuICByZXR1cm4gYm91bmRGdW5jdGlvbjtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgTkFUSVZFX0JJTkQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tYmluZC1uYXRpdmUnKTtcblxudmFyIGNhbGwgPSBGdW5jdGlvbi5wcm90b3R5cGUuY2FsbDtcblxubW9kdWxlLmV4cG9ydHMgPSBOQVRJVkVfQklORCA/IGNhbGwuYmluZChjYWxsKSA6IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGNhbGwuYXBwbHkoY2FsbCwgYXJndW1lbnRzKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnMnKTtcbnZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xuXG52YXIgRnVuY3Rpb25Qcm90b3R5cGUgPSBGdW5jdGlvbi5wcm90b3R5cGU7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWdldG93bnByb3BlcnR5ZGVzY3JpcHRvciAtLSBzYWZlXG52YXIgZ2V0RGVzY3JpcHRvciA9IERFU0NSSVBUT1JTICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG5cbnZhciBFWElTVFMgPSBoYXNPd24oRnVuY3Rpb25Qcm90b3R5cGUsICduYW1lJyk7XG4vLyBhZGRpdGlvbmFsIHByb3RlY3Rpb24gZnJvbSBtaW5pZmllZCAvIG1hbmdsZWQgLyBkcm9wcGVkIGZ1bmN0aW9uIG5hbWVzXG52YXIgUFJPUEVSID0gRVhJU1RTICYmIChmdW5jdGlvbiBzb21ldGhpbmcoKSB7IC8qIGVtcHR5ICovIH0pLm5hbWUgPT09ICdzb21ldGhpbmcnO1xudmFyIENPTkZJR1VSQUJMRSA9IEVYSVNUUyAmJiAoIURFU0NSSVBUT1JTIHx8IChERVNDUklQVE9SUyAmJiBnZXREZXNjcmlwdG9yKEZ1bmN0aW9uUHJvdG90eXBlLCAnbmFtZScpLmNvbmZpZ3VyYWJsZSkpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgRVhJU1RTOiBFWElTVFMsXG4gIFBST1BFUjogUFJPUEVSLFxuICBDT05GSUdVUkFCTEU6IENPTkZJR1VSQUJMRVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcbnZhciBhQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYS1jYWxsYWJsZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmplY3QsIGtleSwgbWV0aG9kKSB7XG4gIHRyeSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1nZXRvd25wcm9wZXJ0eWRlc2NyaXB0b3IgLS0gc2FmZVxuICAgIHJldHVybiB1bmN1cnJ5VGhpcyhhQ2FsbGFibGUoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIGtleSlbbWV0aG9kXSkpO1xuICB9IGNhdGNoIChlcnJvcikgeyAvKiBlbXB0eSAqLyB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNsYXNzb2ZSYXcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2xhc3NvZi1yYXcnKTtcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZm4pIHtcbiAgLy8gTmFzaG9ybiBidWc6XG4gIC8vICAgaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzExMjhcbiAgLy8gICBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvMTEzMFxuICBpZiAoY2xhc3NvZlJhdyhmbikgPT09ICdGdW5jdGlvbicpIHJldHVybiB1bmN1cnJ5VGhpcyhmbik7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIE5BVElWRV9CSU5EID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmQtbmF0aXZlJyk7XG5cbnZhciBGdW5jdGlvblByb3RvdHlwZSA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcbnZhciBjYWxsID0gRnVuY3Rpb25Qcm90b3R5cGUuY2FsbDtcbnZhciB1bmN1cnJ5VGhpc1dpdGhCaW5kID0gTkFUSVZFX0JJTkQgJiYgRnVuY3Rpb25Qcm90b3R5cGUuYmluZC5iaW5kKGNhbGwsIGNhbGwpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE5BVElWRV9CSU5EID8gdW5jdXJyeVRoaXNXaXRoQmluZCA6IGZ1bmN0aW9uIChmbikge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBjYWxsLmFwcGx5KGZuLCBhcmd1bWVudHMpO1xuICB9O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xuXG52YXIgYUZ1bmN0aW9uID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIHJldHVybiBpc0NhbGxhYmxlKGFyZ3VtZW50KSA/IGFyZ3VtZW50IDogdW5kZWZpbmVkO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobmFtZXNwYWNlLCBtZXRob2QpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPCAyID8gYUZ1bmN0aW9uKGdsb2JhbFtuYW1lc3BhY2VdKSA6IGdsb2JhbFtuYW1lc3BhY2VdICYmIGdsb2JhbFtuYW1lc3BhY2VdW21ldGhvZF07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2xhc3NvZicpO1xudmFyIGdldE1ldGhvZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nZXQtbWV0aG9kJyk7XG52YXIgaXNOdWxsT3JVbmRlZmluZWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtbnVsbC1vci11bmRlZmluZWQnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXRlcmF0b3JzJyk7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG5cbnZhciBJVEVSQVRPUiA9IHdlbGxLbm93blN5bWJvbCgnaXRlcmF0b3InKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKCFpc051bGxPclVuZGVmaW5lZChpdCkpIHJldHVybiBnZXRNZXRob2QoaXQsIElURVJBVE9SKVxuICAgIHx8IGdldE1ldGhvZChpdCwgJ0BAaXRlcmF0b3InKVxuICAgIHx8IEl0ZXJhdG9yc1tjbGFzc29mKGl0KV07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNhbGwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tY2FsbCcpO1xudmFyIGFDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hLWNhbGxhYmxlJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4tb2JqZWN0Jyk7XG52YXIgdHJ5VG9TdHJpbmcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdHJ5LXRvLXN0cmluZycpO1xudmFyIGdldEl0ZXJhdG9yTWV0aG9kID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dldC1pdGVyYXRvci1tZXRob2QnKTtcblxudmFyICRUeXBlRXJyb3IgPSBUeXBlRXJyb3I7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFyZ3VtZW50LCB1c2luZ0l0ZXJhdG9yKSB7XG4gIHZhciBpdGVyYXRvck1ldGhvZCA9IGFyZ3VtZW50cy5sZW5ndGggPCAyID8gZ2V0SXRlcmF0b3JNZXRob2QoYXJndW1lbnQpIDogdXNpbmdJdGVyYXRvcjtcbiAgaWYgKGFDYWxsYWJsZShpdGVyYXRvck1ldGhvZCkpIHJldHVybiBhbk9iamVjdChjYWxsKGl0ZXJhdG9yTWV0aG9kLCBhcmd1bWVudCkpO1xuICB0aHJvdyBuZXcgJFR5cGVFcnJvcih0cnlUb1N0cmluZyhhcmd1bWVudCkgKyAnIGlzIG5vdCBpdGVyYWJsZScpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcbnZhciBpc0FycmF5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWFycmF5Jyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xudmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2xhc3NvZi1yYXcnKTtcbnZhciB0b1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1zdHJpbmcnKTtcblxudmFyIHB1c2ggPSB1bmN1cnJ5VGhpcyhbXS5wdXNoKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAocmVwbGFjZXIpIHtcbiAgaWYgKGlzQ2FsbGFibGUocmVwbGFjZXIpKSByZXR1cm4gcmVwbGFjZXI7XG4gIGlmICghaXNBcnJheShyZXBsYWNlcikpIHJldHVybjtcbiAgdmFyIHJhd0xlbmd0aCA9IHJlcGxhY2VyLmxlbmd0aDtcbiAgdmFyIGtleXMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCByYXdMZW5ndGg7IGkrKykge1xuICAgIHZhciBlbGVtZW50ID0gcmVwbGFjZXJbaV07XG4gICAgaWYgKHR5cGVvZiBlbGVtZW50ID09ICdzdHJpbmcnKSBwdXNoKGtleXMsIGVsZW1lbnQpO1xuICAgIGVsc2UgaWYgKHR5cGVvZiBlbGVtZW50ID09ICdudW1iZXInIHx8IGNsYXNzb2YoZWxlbWVudCkgPT09ICdOdW1iZXInIHx8IGNsYXNzb2YoZWxlbWVudCkgPT09ICdTdHJpbmcnKSBwdXNoKGtleXMsIHRvU3RyaW5nKGVsZW1lbnQpKTtcbiAgfVxuICB2YXIga2V5c0xlbmd0aCA9IGtleXMubGVuZ3RoO1xuICB2YXIgcm9vdCA9IHRydWU7XG4gIHJldHVybiBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICAgIGlmIChyb290KSB7XG4gICAgICByb290ID0gZmFsc2U7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIGlmIChpc0FycmF5KHRoaXMpKSByZXR1cm4gdmFsdWU7XG4gICAgZm9yICh2YXIgaiA9IDA7IGogPCBrZXlzTGVuZ3RoOyBqKyspIGlmIChrZXlzW2pdID09PSBrZXkpIHJldHVybiB2YWx1ZTtcbiAgfTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYUNhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2EtY2FsbGFibGUnKTtcbnZhciBpc051bGxPclVuZGVmaW5lZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1udWxsLW9yLXVuZGVmaW5lZCcpO1xuXG4vLyBgR2V0TWV0aG9kYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtZ2V0bWV0aG9kXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChWLCBQKSB7XG4gIHZhciBmdW5jID0gVltQXTtcbiAgcmV0dXJuIGlzTnVsbE9yVW5kZWZpbmVkKGZ1bmMpID8gdW5kZWZpbmVkIDogYUNhbGxhYmxlKGZ1bmMpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1vYmplY3QnKTtcblxudmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbnZhciBjaGFyQXQgPSB1bmN1cnJ5VGhpcygnJy5jaGFyQXQpO1xudmFyIHJlcGxhY2UgPSB1bmN1cnJ5VGhpcygnJy5yZXBsYWNlKTtcbnZhciBzdHJpbmdTbGljZSA9IHVuY3VycnlUaGlzKCcnLnNsaWNlKTtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWRvcy9uby12dWxuZXJhYmxlIC0tIHNhZmVcbnZhciBTVUJTVElUVVRJT05fU1lNQk9MUyA9IC9cXCQoWyQmJ2BdfFxcZHsxLDJ9fDxbXj5dKj4pL2c7XG52YXIgU1VCU1RJVFVUSU9OX1NZTUJPTFNfTk9fTkFNRUQgPSAvXFwkKFskJidgXXxcXGR7MSwyfSkvZztcblxuLy8gYEdldFN1YnN0aXR1dGlvbmAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWdldHN1YnN0aXR1dGlvblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobWF0Y2hlZCwgc3RyLCBwb3NpdGlvbiwgY2FwdHVyZXMsIG5hbWVkQ2FwdHVyZXMsIHJlcGxhY2VtZW50KSB7XG4gIHZhciB0YWlsUG9zID0gcG9zaXRpb24gKyBtYXRjaGVkLmxlbmd0aDtcbiAgdmFyIG0gPSBjYXB0dXJlcy5sZW5ndGg7XG4gIHZhciBzeW1ib2xzID0gU1VCU1RJVFVUSU9OX1NZTUJPTFNfTk9fTkFNRUQ7XG4gIGlmIChuYW1lZENhcHR1cmVzICE9PSB1bmRlZmluZWQpIHtcbiAgICBuYW1lZENhcHR1cmVzID0gdG9PYmplY3QobmFtZWRDYXB0dXJlcyk7XG4gICAgc3ltYm9scyA9IFNVQlNUSVRVVElPTl9TWU1CT0xTO1xuICB9XG4gIHJldHVybiByZXBsYWNlKHJlcGxhY2VtZW50LCBzeW1ib2xzLCBmdW5jdGlvbiAobWF0Y2gsIGNoKSB7XG4gICAgdmFyIGNhcHR1cmU7XG4gICAgc3dpdGNoIChjaGFyQXQoY2gsIDApKSB7XG4gICAgICBjYXNlICckJzogcmV0dXJuICckJztcbiAgICAgIGNhc2UgJyYnOiByZXR1cm4gbWF0Y2hlZDtcbiAgICAgIGNhc2UgJ2AnOiByZXR1cm4gc3RyaW5nU2xpY2Uoc3RyLCAwLCBwb3NpdGlvbik7XG4gICAgICBjYXNlIFwiJ1wiOiByZXR1cm4gc3RyaW5nU2xpY2Uoc3RyLCB0YWlsUG9zKTtcbiAgICAgIGNhc2UgJzwnOlxuICAgICAgICBjYXB0dXJlID0gbmFtZWRDYXB0dXJlc1tzdHJpbmdTbGljZShjaCwgMSwgLTEpXTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OiAvLyBcXGRcXGQ/XG4gICAgICAgIHZhciBuID0gK2NoO1xuICAgICAgICBpZiAobiA9PT0gMCkgcmV0dXJuIG1hdGNoO1xuICAgICAgICBpZiAobiA+IG0pIHtcbiAgICAgICAgICB2YXIgZiA9IGZsb29yKG4gLyAxMCk7XG4gICAgICAgICAgaWYgKGYgPT09IDApIHJldHVybiBtYXRjaDtcbiAgICAgICAgICBpZiAoZiA8PSBtKSByZXR1cm4gY2FwdHVyZXNbZiAtIDFdID09PSB1bmRlZmluZWQgPyBjaGFyQXQoY2gsIDEpIDogY2FwdHVyZXNbZiAtIDFdICsgY2hhckF0KGNoLCAxKTtcbiAgICAgICAgICByZXR1cm4gbWF0Y2g7XG4gICAgICAgIH1cbiAgICAgICAgY2FwdHVyZSA9IGNhcHR1cmVzW24gLSAxXTtcbiAgICB9XG4gICAgcmV0dXJuIGNhcHR1cmUgPT09IHVuZGVmaW5lZCA/ICcnIDogY2FwdHVyZTtcbiAgfSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNoZWNrID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpdCAmJiBpdC5NYXRoID09PSBNYXRoICYmIGl0O1xufTtcblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzg2I2lzc3VlY29tbWVudC0xMTU3NTkwMjhcbm1vZHVsZS5leHBvcnRzID1cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLWdsb2JhbC10aGlzIC0tIHNhZmVcbiAgY2hlY2sodHlwZW9mIGdsb2JhbFRoaXMgPT0gJ29iamVjdCcgJiYgZ2xvYmFsVGhpcykgfHxcbiAgY2hlY2sodHlwZW9mIHdpbmRvdyA9PSAnb2JqZWN0JyAmJiB3aW5kb3cpIHx8XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZXN0cmljdGVkLWdsb2JhbHMgLS0gc2FmZVxuICBjaGVjayh0eXBlb2Ygc2VsZiA9PSAnb2JqZWN0JyAmJiBzZWxmKSB8fFxuICBjaGVjayh0eXBlb2YgZ2xvYmFsID09ICdvYmplY3QnICYmIGdsb2JhbCkgfHxcbiAgY2hlY2sodHlwZW9mIHRoaXMgPT0gJ29iamVjdCcgJiYgdGhpcykgfHxcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5ldy1mdW5jIC0tIGZhbGxiYWNrXG4gIChmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9KSgpIHx8IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tb2JqZWN0Jyk7XG5cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IHVuY3VycnlUaGlzKHt9Lmhhc093blByb3BlcnR5KTtcblxuLy8gYEhhc093blByb3BlcnR5YCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtaGFzb3ducHJvcGVydHlcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtaGFzb3duIC0tIHNhZmVcbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0Lmhhc093biB8fCBmdW5jdGlvbiBoYXNPd24oaXQsIGtleSkge1xuICByZXR1cm4gaGFzT3duUHJvcGVydHkodG9PYmplY3QoaXQpLCBrZXkpO1xufTtcbiIsIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0ge307XG4iLCIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhLCBiKSB7XG4gIHRyeSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGUgLS0gc2FmZVxuICAgIGFyZ3VtZW50cy5sZW5ndGggPT09IDEgPyBjb25zb2xlLmVycm9yKGEpIDogY29uc29sZS5lcnJvcihhLCBiKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHsgLyogZW1wdHkgKi8gfVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnZXRCdWlsdEluID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dldC1idWlsdC1pbicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdldEJ1aWx0SW4oJ2RvY3VtZW50JywgJ2RvY3VtZW50RWxlbWVudCcpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcbnZhciBjcmVhdGVFbGVtZW50ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RvY3VtZW50LWNyZWF0ZS1lbGVtZW50Jyk7XG5cbi8vIFRoYW5rcyB0byBJRTggZm9yIGl0cyBmdW5ueSBkZWZpbmVQcm9wZXJ0eVxubW9kdWxlLmV4cG9ydHMgPSAhREVTQ1JJUFRPUlMgJiYgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1kZWZpbmVwcm9wZXJ0eSAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KGNyZWF0ZUVsZW1lbnQoJ2RpdicpLCAnYScsIHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH1cbiAgfSkuYSAhPT0gNztcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcycpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jbGFzc29mLXJhdycpO1xuXG52YXIgJE9iamVjdCA9IE9iamVjdDtcbnZhciBzcGxpdCA9IHVuY3VycnlUaGlzKCcnLnNwbGl0KTtcblxuLy8gZmFsbGJhY2sgZm9yIG5vbi1hcnJheS1saWtlIEVTMyBhbmQgbm9uLWVudW1lcmFibGUgb2xkIFY4IHN0cmluZ3Ncbm1vZHVsZS5leHBvcnRzID0gZmFpbHMoZnVuY3Rpb24gKCkge1xuICAvLyB0aHJvd3MgYW4gZXJyb3IgaW4gcmhpbm8sIHNlZSBodHRwczovL2dpdGh1Yi5jb20vbW96aWxsYS9yaGluby9pc3N1ZXMvMzQ2XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnMgLS0gc2FmZVxuICByZXR1cm4gISRPYmplY3QoJ3onKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKTtcbn0pID8gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBjbGFzc29mKGl0KSA9PT0gJ1N0cmluZycgPyBzcGxpdChpdCwgJycpIDogJE9iamVjdChpdCk7XG59IDogJE9iamVjdDtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtb2JqZWN0Jyk7XG52YXIgc2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LXNldC1wcm90b3R5cGUtb2YnKTtcblxuLy8gbWFrZXMgc3ViY2xhc3Npbmcgd29yayBjb3JyZWN0IGZvciB3cmFwcGVkIGJ1aWx0LWluc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoJHRoaXMsIGR1bW15LCBXcmFwcGVyKSB7XG4gIHZhciBOZXdUYXJnZXQsIE5ld1RhcmdldFByb3RvdHlwZTtcbiAgaWYgKFxuICAgIC8vIGl0IGNhbiB3b3JrIG9ubHkgd2l0aCBuYXRpdmUgYHNldFByb3RvdHlwZU9mYFxuICAgIHNldFByb3RvdHlwZU9mICYmXG4gICAgLy8gd2UgaGF2ZW4ndCBjb21wbGV0ZWx5IGNvcnJlY3QgcHJlLUVTNiB3YXkgZm9yIGdldHRpbmcgYG5ldy50YXJnZXRgLCBzbyB1c2UgdGhpc1xuICAgIGlzQ2FsbGFibGUoTmV3VGFyZ2V0ID0gZHVtbXkuY29uc3RydWN0b3IpICYmXG4gICAgTmV3VGFyZ2V0ICE9PSBXcmFwcGVyICYmXG4gICAgaXNPYmplY3QoTmV3VGFyZ2V0UHJvdG90eXBlID0gTmV3VGFyZ2V0LnByb3RvdHlwZSkgJiZcbiAgICBOZXdUYXJnZXRQcm90b3R5cGUgIT09IFdyYXBwZXIucHJvdG90eXBlXG4gICkgc2V0UHJvdG90eXBlT2YoJHRoaXMsIE5ld1RhcmdldFByb3RvdHlwZSk7XG4gIHJldHVybiAkdGhpcztcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xudmFyIHN0b3JlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NoYXJlZC1zdG9yZScpO1xuXG52YXIgZnVuY3Rpb25Ub1N0cmluZyA9IHVuY3VycnlUaGlzKEZ1bmN0aW9uLnRvU3RyaW5nKTtcblxuLy8gdGhpcyBoZWxwZXIgYnJva2VuIGluIGBjb3JlLWpzQDMuNC4xLTMuNC40YCwgc28gd2UgY2FuJ3QgdXNlIGBzaGFyZWRgIGhlbHBlclxuaWYgKCFpc0NhbGxhYmxlKHN0b3JlLmluc3BlY3RTb3VyY2UpKSB7XG4gIHN0b3JlLmluc3BlY3RTb3VyY2UgPSBmdW5jdGlvbiAoaXQpIHtcbiAgICByZXR1cm4gZnVuY3Rpb25Ub1N0cmluZyhpdCk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3RvcmUuaW5zcGVjdFNvdXJjZTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcycpO1xudmFyIGhpZGRlbktleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGlkZGVuLWtleXMnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1vYmplY3QnKTtcbnZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xudmFyIGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHknKS5mO1xudmFyIGdldE93blByb3BlcnR5TmFtZXNNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktbmFtZXMnKTtcbnZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzRXh0ZXJuYWxNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktbmFtZXMtZXh0ZXJuYWwnKTtcbnZhciBpc0V4dGVuc2libGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWlzLWV4dGVuc2libGUnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdWlkJyk7XG52YXIgRlJFRVpJTkcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnJlZXppbmcnKTtcblxudmFyIFJFUVVJUkVEID0gZmFsc2U7XG52YXIgTUVUQURBVEEgPSB1aWQoJ21ldGEnKTtcbnZhciBpZCA9IDA7XG5cbnZhciBzZXRNZXRhZGF0YSA9IGZ1bmN0aW9uIChpdCkge1xuICBkZWZpbmVQcm9wZXJ0eShpdCwgTUVUQURBVEEsIHsgdmFsdWU6IHtcbiAgICBvYmplY3RJRDogJ08nICsgaWQrKywgLy8gb2JqZWN0IElEXG4gICAgd2Vha0RhdGE6IHt9ICAgICAgICAgIC8vIHdlYWsgY29sbGVjdGlvbnMgSURzXG4gIH0gfSk7XG59O1xuXG52YXIgZmFzdEtleSA9IGZ1bmN0aW9uIChpdCwgY3JlYXRlKSB7XG4gIC8vIHJldHVybiBhIHByaW1pdGl2ZSB3aXRoIHByZWZpeFxuICBpZiAoIWlzT2JqZWN0KGl0KSkgcmV0dXJuIHR5cGVvZiBpdCA9PSAnc3ltYm9sJyA/IGl0IDogKHR5cGVvZiBpdCA9PSAnc3RyaW5nJyA/ICdTJyA6ICdQJykgKyBpdDtcbiAgaWYgKCFoYXNPd24oaXQsIE1FVEFEQVRBKSkge1xuICAgIC8vIGNhbid0IHNldCBtZXRhZGF0YSB0byB1bmNhdWdodCBmcm96ZW4gb2JqZWN0XG4gICAgaWYgKCFpc0V4dGVuc2libGUoaXQpKSByZXR1cm4gJ0YnO1xuICAgIC8vIG5vdCBuZWNlc3NhcnkgdG8gYWRkIG1ldGFkYXRhXG4gICAgaWYgKCFjcmVhdGUpIHJldHVybiAnRSc7XG4gICAgLy8gYWRkIG1pc3NpbmcgbWV0YWRhdGFcbiAgICBzZXRNZXRhZGF0YShpdCk7XG4gIC8vIHJldHVybiBvYmplY3QgSURcbiAgfSByZXR1cm4gaXRbTUVUQURBVEFdLm9iamVjdElEO1xufTtcblxudmFyIGdldFdlYWtEYXRhID0gZnVuY3Rpb24gKGl0LCBjcmVhdGUpIHtcbiAgaWYgKCFoYXNPd24oaXQsIE1FVEFEQVRBKSkge1xuICAgIC8vIGNhbid0IHNldCBtZXRhZGF0YSB0byB1bmNhdWdodCBmcm96ZW4gb2JqZWN0XG4gICAgaWYgKCFpc0V4dGVuc2libGUoaXQpKSByZXR1cm4gdHJ1ZTtcbiAgICAvLyBub3QgbmVjZXNzYXJ5IHRvIGFkZCBtZXRhZGF0YVxuICAgIGlmICghY3JlYXRlKSByZXR1cm4gZmFsc2U7XG4gICAgLy8gYWRkIG1pc3NpbmcgbWV0YWRhdGFcbiAgICBzZXRNZXRhZGF0YShpdCk7XG4gIC8vIHJldHVybiB0aGUgc3RvcmUgb2Ygd2VhayBjb2xsZWN0aW9ucyBJRHNcbiAgfSByZXR1cm4gaXRbTUVUQURBVEFdLndlYWtEYXRhO1xufTtcblxuLy8gYWRkIG1ldGFkYXRhIG9uIGZyZWV6ZS1mYW1pbHkgbWV0aG9kcyBjYWxsaW5nXG52YXIgb25GcmVlemUgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKEZSRUVaSU5HICYmIFJFUVVJUkVEICYmIGlzRXh0ZW5zaWJsZShpdCkgJiYgIWhhc093bihpdCwgTUVUQURBVEEpKSBzZXRNZXRhZGF0YShpdCk7XG4gIHJldHVybiBpdDtcbn07XG5cbnZhciBlbmFibGUgPSBmdW5jdGlvbiAoKSB7XG4gIG1ldGEuZW5hYmxlID0gZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9O1xuICBSRVFVSVJFRCA9IHRydWU7XG4gIHZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzID0gZ2V0T3duUHJvcGVydHlOYW1lc01vZHVsZS5mO1xuICB2YXIgc3BsaWNlID0gdW5jdXJyeVRoaXMoW10uc3BsaWNlKTtcbiAgdmFyIHRlc3QgPSB7fTtcbiAgdGVzdFtNRVRBREFUQV0gPSAxO1xuXG4gIC8vIHByZXZlbnQgZXhwb3Npbmcgb2YgbWV0YWRhdGEga2V5XG4gIGlmIChnZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QpLmxlbmd0aCkge1xuICAgIGdldE93blByb3BlcnR5TmFtZXNNb2R1bGUuZiA9IGZ1bmN0aW9uIChpdCkge1xuICAgICAgdmFyIHJlc3VsdCA9IGdldE93blByb3BlcnR5TmFtZXMoaXQpO1xuICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbmd0aCA9IHJlc3VsdC5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAocmVzdWx0W2ldID09PSBNRVRBREFUQSkge1xuICAgICAgICAgIHNwbGljZShyZXN1bHQsIGksIDEpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9IHJldHVybiByZXN1bHQ7XG4gICAgfTtcblxuICAgICQoeyB0YXJnZXQ6ICdPYmplY3QnLCBzdGF0OiB0cnVlLCBmb3JjZWQ6IHRydWUgfSwge1xuICAgICAgZ2V0T3duUHJvcGVydHlOYW1lczogZ2V0T3duUHJvcGVydHlOYW1lc0V4dGVybmFsTW9kdWxlLmZcbiAgICB9KTtcbiAgfVxufTtcblxudmFyIG1ldGEgPSBtb2R1bGUuZXhwb3J0cyA9IHtcbiAgZW5hYmxlOiBlbmFibGUsXG4gIGZhc3RLZXk6IGZhc3RLZXksXG4gIGdldFdlYWtEYXRhOiBnZXRXZWFrRGF0YSxcbiAgb25GcmVlemU6IG9uRnJlZXplXG59O1xuXG5oaWRkZW5LZXlzW01FVEFEQVRBXSA9IHRydWU7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgTkFUSVZFX1dFQUtfTUFQID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlYWstbWFwLWJhc2ljLWRldGVjdGlvbicpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1vYmplY3QnKTtcbnZhciBjcmVhdGVOb25FbnVtZXJhYmxlUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLW5vbi1lbnVtZXJhYmxlLXByb3BlcnR5Jyk7XG52YXIgaGFzT3duID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hhcy1vd24tcHJvcGVydHknKTtcbnZhciBzaGFyZWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2hhcmVkLXN0b3JlJyk7XG52YXIgc2hhcmVkS2V5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NoYXJlZC1rZXknKTtcbnZhciBoaWRkZW5LZXlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hpZGRlbi1rZXlzJyk7XG5cbnZhciBPQkpFQ1RfQUxSRUFEWV9JTklUSUFMSVpFRCA9ICdPYmplY3QgYWxyZWFkeSBpbml0aWFsaXplZCc7XG52YXIgVHlwZUVycm9yID0gZ2xvYmFsLlR5cGVFcnJvcjtcbnZhciBXZWFrTWFwID0gZ2xvYmFsLldlYWtNYXA7XG52YXIgc2V0LCBnZXQsIGhhcztcblxudmFyIGVuZm9yY2UgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGhhcyhpdCkgPyBnZXQoaXQpIDogc2V0KGl0LCB7fSk7XG59O1xuXG52YXIgZ2V0dGVyRm9yID0gZnVuY3Rpb24gKFRZUEUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChpdCkge1xuICAgIHZhciBzdGF0ZTtcbiAgICBpZiAoIWlzT2JqZWN0KGl0KSB8fCAoc3RhdGUgPSBnZXQoaXQpKS50eXBlICE9PSBUWVBFKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbmNvbXBhdGlibGUgcmVjZWl2ZXIsICcgKyBUWVBFICsgJyByZXF1aXJlZCcpO1xuICAgIH0gcmV0dXJuIHN0YXRlO1xuICB9O1xufTtcblxuaWYgKE5BVElWRV9XRUFLX01BUCB8fCBzaGFyZWQuc3RhdGUpIHtcbiAgdmFyIHN0b3JlID0gc2hhcmVkLnN0YXRlIHx8IChzaGFyZWQuc3RhdGUgPSBuZXcgV2Vha01hcCgpKTtcbiAgLyogZXNsaW50LWRpc2FibGUgbm8tc2VsZi1hc3NpZ24gLS0gcHJvdG90eXBlIG1ldGhvZHMgcHJvdGVjdGlvbiAqL1xuICBzdG9yZS5nZXQgPSBzdG9yZS5nZXQ7XG4gIHN0b3JlLmhhcyA9IHN0b3JlLmhhcztcbiAgc3RvcmUuc2V0ID0gc3RvcmUuc2V0O1xuICAvKiBlc2xpbnQtZW5hYmxlIG5vLXNlbGYtYXNzaWduIC0tIHByb3RvdHlwZSBtZXRob2RzIHByb3RlY3Rpb24gKi9cbiAgc2V0ID0gZnVuY3Rpb24gKGl0LCBtZXRhZGF0YSkge1xuICAgIGlmIChzdG9yZS5oYXMoaXQpKSB0aHJvdyBuZXcgVHlwZUVycm9yKE9CSkVDVF9BTFJFQURZX0lOSVRJQUxJWkVEKTtcbiAgICBtZXRhZGF0YS5mYWNhZGUgPSBpdDtcbiAgICBzdG9yZS5zZXQoaXQsIG1ldGFkYXRhKTtcbiAgICByZXR1cm4gbWV0YWRhdGE7XG4gIH07XG4gIGdldCA9IGZ1bmN0aW9uIChpdCkge1xuICAgIHJldHVybiBzdG9yZS5nZXQoaXQpIHx8IHt9O1xuICB9O1xuICBoYXMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgICByZXR1cm4gc3RvcmUuaGFzKGl0KTtcbiAgfTtcbn0gZWxzZSB7XG4gIHZhciBTVEFURSA9IHNoYXJlZEtleSgnc3RhdGUnKTtcbiAgaGlkZGVuS2V5c1tTVEFURV0gPSB0cnVlO1xuICBzZXQgPSBmdW5jdGlvbiAoaXQsIG1ldGFkYXRhKSB7XG4gICAgaWYgKGhhc093bihpdCwgU1RBVEUpKSB0aHJvdyBuZXcgVHlwZUVycm9yKE9CSkVDVF9BTFJFQURZX0lOSVRJQUxJWkVEKTtcbiAgICBtZXRhZGF0YS5mYWNhZGUgPSBpdDtcbiAgICBjcmVhdGVOb25FbnVtZXJhYmxlUHJvcGVydHkoaXQsIFNUQVRFLCBtZXRhZGF0YSk7XG4gICAgcmV0dXJuIG1ldGFkYXRhO1xuICB9O1xuICBnZXQgPSBmdW5jdGlvbiAoaXQpIHtcbiAgICByZXR1cm4gaGFzT3duKGl0LCBTVEFURSkgPyBpdFtTVEFURV0gOiB7fTtcbiAgfTtcbiAgaGFzID0gZnVuY3Rpb24gKGl0KSB7XG4gICAgcmV0dXJuIGhhc093bihpdCwgU1RBVEUpO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0OiBzZXQsXG4gIGdldDogZ2V0LFxuICBoYXM6IGhhcyxcbiAgZW5mb3JjZTogZW5mb3JjZSxcbiAgZ2V0dGVyRm9yOiBnZXR0ZXJGb3Jcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2l0ZXJhdG9ycycpO1xuXG52YXIgSVRFUkFUT1IgPSB3ZWxsS25vd25TeW1ib2woJ2l0ZXJhdG9yJyk7XG52YXIgQXJyYXlQcm90b3R5cGUgPSBBcnJheS5wcm90b3R5cGU7XG5cbi8vIGNoZWNrIG9uIGRlZmF1bHQgQXJyYXkgaXRlcmF0b3Jcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpdCAhPT0gdW5kZWZpbmVkICYmIChJdGVyYXRvcnMuQXJyYXkgPT09IGl0IHx8IEFycmF5UHJvdG90eXBlW0lURVJBVE9SXSA9PT0gaXQpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NsYXNzb2YtcmF3Jyk7XG5cbi8vIGBJc0FycmF5YCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtaXNhcnJheVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLWFycmF5LWlzYXJyYXkgLS0gc2FmZVxubW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIGlzQXJyYXkoYXJndW1lbnQpIHtcbiAgcmV0dXJuIGNsYXNzb2YoYXJndW1lbnQpID09PSAnQXJyYXknO1xufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtSXNIVE1MRERBLWludGVybmFsLXNsb3RcbnZhciBkb2N1bWVudEFsbCA9IHR5cGVvZiBkb2N1bWVudCA9PSAnb2JqZWN0JyAmJiBkb2N1bWVudC5hbGw7XG5cbi8vIGBJc0NhbGxhYmxlYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtaXNjYWxsYWJsZVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHVuaWNvcm4vbm8tdHlwZW9mLXVuZGVmaW5lZCAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xubW9kdWxlLmV4cG9ydHMgPSB0eXBlb2YgZG9jdW1lbnRBbGwgPT0gJ3VuZGVmaW5lZCcgJiYgZG9jdW1lbnRBbGwgIT09IHVuZGVmaW5lZCA/IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICByZXR1cm4gdHlwZW9mIGFyZ3VtZW50ID09ICdmdW5jdGlvbicgfHwgYXJndW1lbnQgPT09IGRvY3VtZW50QWxsO1xufSA6IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICByZXR1cm4gdHlwZW9mIGFyZ3VtZW50ID09ICdmdW5jdGlvbic7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcycpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xudmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2xhc3NvZicpO1xudmFyIGdldEJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LWJ1aWx0LWluJyk7XG52YXIgaW5zcGVjdFNvdXJjZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbnNwZWN0LXNvdXJjZScpO1xuXG52YXIgbm9vcCA9IGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfTtcbnZhciBjb25zdHJ1Y3QgPSBnZXRCdWlsdEluKCdSZWZsZWN0JywgJ2NvbnN0cnVjdCcpO1xudmFyIGNvbnN0cnVjdG9yUmVnRXhwID0gL15cXHMqKD86Y2xhc3N8ZnVuY3Rpb24pXFxiLztcbnZhciBleGVjID0gdW5jdXJyeVRoaXMoY29uc3RydWN0b3JSZWdFeHAuZXhlYyk7XG52YXIgSU5DT1JSRUNUX1RPX1NUUklORyA9ICFjb25zdHJ1Y3RvclJlZ0V4cC50ZXN0KG5vb3ApO1xuXG52YXIgaXNDb25zdHJ1Y3Rvck1vZGVybiA9IGZ1bmN0aW9uIGlzQ29uc3RydWN0b3IoYXJndW1lbnQpIHtcbiAgaWYgKCFpc0NhbGxhYmxlKGFyZ3VtZW50KSkgcmV0dXJuIGZhbHNlO1xuICB0cnkge1xuICAgIGNvbnN0cnVjdChub29wLCBbXSwgYXJndW1lbnQpO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufTtcblxudmFyIGlzQ29uc3RydWN0b3JMZWdhY3kgPSBmdW5jdGlvbiBpc0NvbnN0cnVjdG9yKGFyZ3VtZW50KSB7XG4gIGlmICghaXNDYWxsYWJsZShhcmd1bWVudCkpIHJldHVybiBmYWxzZTtcbiAgc3dpdGNoIChjbGFzc29mKGFyZ3VtZW50KSkge1xuICAgIGNhc2UgJ0FzeW5jRnVuY3Rpb24nOlxuICAgIGNhc2UgJ0dlbmVyYXRvckZ1bmN0aW9uJzpcbiAgICBjYXNlICdBc3luY0dlbmVyYXRvckZ1bmN0aW9uJzogcmV0dXJuIGZhbHNlO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gd2UgY2FuJ3QgY2hlY2sgLnByb3RvdHlwZSBzaW5jZSBjb25zdHJ1Y3RvcnMgcHJvZHVjZWQgYnkgLmJpbmQgaGF2ZW4ndCBpdFxuICAgIC8vIGBGdW5jdGlvbiN0b1N0cmluZ2AgdGhyb3dzIG9uIHNvbWUgYnVpbHQtaXQgZnVuY3Rpb24gaW4gc29tZSBsZWdhY3kgZW5naW5lc1xuICAgIC8vIChmb3IgZXhhbXBsZSwgYERPTVF1YWRgIGFuZCBzaW1pbGFyIGluIEZGNDEtKVxuICAgIHJldHVybiBJTkNPUlJFQ1RfVE9fU1RSSU5HIHx8ICEhZXhlYyhjb25zdHJ1Y3RvclJlZ0V4cCwgaW5zcGVjdFNvdXJjZShhcmd1bWVudCkpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG59O1xuXG5pc0NvbnN0cnVjdG9yTGVnYWN5LnNoYW0gPSB0cnVlO1xuXG4vLyBgSXNDb25zdHJ1Y3RvcmAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWlzY29uc3RydWN0b3Jcbm1vZHVsZS5leHBvcnRzID0gIWNvbnN0cnVjdCB8fCBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHZhciBjYWxsZWQ7XG4gIHJldHVybiBpc0NvbnN0cnVjdG9yTW9kZXJuKGlzQ29uc3RydWN0b3JNb2Rlcm4uY2FsbClcbiAgICB8fCAhaXNDb25zdHJ1Y3Rvck1vZGVybihPYmplY3QpXG4gICAgfHwgIWlzQ29uc3RydWN0b3JNb2Rlcm4oZnVuY3Rpb24gKCkgeyBjYWxsZWQgPSB0cnVlOyB9KVxuICAgIHx8IGNhbGxlZDtcbn0pID8gaXNDb25zdHJ1Y3RvckxlZ2FjeSA6IGlzQ29uc3RydWN0b3JNb2Rlcm47XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG5cbnZhciByZXBsYWNlbWVudCA9IC8jfFxcLnByb3RvdHlwZVxcLi87XG5cbnZhciBpc0ZvcmNlZCA9IGZ1bmN0aW9uIChmZWF0dXJlLCBkZXRlY3Rpb24pIHtcbiAgdmFyIHZhbHVlID0gZGF0YVtub3JtYWxpemUoZmVhdHVyZSldO1xuICByZXR1cm4gdmFsdWUgPT09IFBPTFlGSUxMID8gdHJ1ZVxuICAgIDogdmFsdWUgPT09IE5BVElWRSA/IGZhbHNlXG4gICAgOiBpc0NhbGxhYmxlKGRldGVjdGlvbikgPyBmYWlscyhkZXRlY3Rpb24pXG4gICAgOiAhIWRldGVjdGlvbjtcbn07XG5cbnZhciBub3JtYWxpemUgPSBpc0ZvcmNlZC5ub3JtYWxpemUgPSBmdW5jdGlvbiAoc3RyaW5nKSB7XG4gIHJldHVybiBTdHJpbmcoc3RyaW5nKS5yZXBsYWNlKHJlcGxhY2VtZW50LCAnLicpLnRvTG93ZXJDYXNlKCk7XG59O1xuXG52YXIgZGF0YSA9IGlzRm9yY2VkLmRhdGEgPSB7fTtcbnZhciBOQVRJVkUgPSBpc0ZvcmNlZC5OQVRJVkUgPSAnTic7XG52YXIgUE9MWUZJTEwgPSBpc0ZvcmNlZC5QT0xZRklMTCA9ICdQJztcblxubW9kdWxlLmV4cG9ydHMgPSBpc0ZvcmNlZDtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIHdlIGNhbid0IHVzZSBqdXN0IGBpdCA9PSBudWxsYCBzaW5jZSBvZiBgZG9jdW1lbnQuYWxsYCBzcGVjaWFsIGNhc2Vcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtSXNIVE1MRERBLWludGVybmFsLXNsb3QtYWVjXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgPT09IG51bGwgfHwgaXQgPT09IHVuZGVmaW5lZDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdHlwZW9mIGl0ID09ICdvYmplY3QnID8gaXQgIT09IG51bGwgOiBpc0NhbGxhYmxlKGl0KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtb2JqZWN0Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIHJldHVybiBpc09iamVjdChhcmd1bWVudCkgfHwgYXJndW1lbnQgPT09IG51bGw7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSBmYWxzZTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1vYmplY3QnKTtcbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NsYXNzb2YtcmF3Jyk7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG5cbnZhciBNQVRDSCA9IHdlbGxLbm93blN5bWJvbCgnbWF0Y2gnKTtcblxuLy8gYElzUmVnRXhwYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtaXNyZWdleHBcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHZhciBpc1JlZ0V4cDtcbiAgcmV0dXJuIGlzT2JqZWN0KGl0KSAmJiAoKGlzUmVnRXhwID0gaXRbTUFUQ0hdKSAhPT0gdW5kZWZpbmVkID8gISFpc1JlZ0V4cCA6IGNsYXNzb2YoaXQpID09PSAnUmVnRXhwJyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdldEJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LWJ1aWx0LWluJyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xudmFyIGlzUHJvdG90eXBlT2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWlzLXByb3RvdHlwZS1vZicpO1xudmFyIFVTRV9TWU1CT0xfQVNfVUlEID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3VzZS1zeW1ib2wtYXMtdWlkJyk7XG5cbnZhciAkT2JqZWN0ID0gT2JqZWN0O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFVTRV9TWU1CT0xfQVNfVUlEID8gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiB0eXBlb2YgaXQgPT0gJ3N5bWJvbCc7XG59IDogZnVuY3Rpb24gKGl0KSB7XG4gIHZhciAkU3ltYm9sID0gZ2V0QnVpbHRJbignU3ltYm9sJyk7XG4gIHJldHVybiBpc0NhbGxhYmxlKCRTeW1ib2wpICYmIGlzUHJvdG90eXBlT2YoJFN5bWJvbC5wcm90b3R5cGUsICRPYmplY3QoaXQpKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYmluZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1iaW5kLWNvbnRleHQnKTtcbnZhciBjYWxsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWNhbGwnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hbi1vYmplY3QnKTtcbnZhciB0cnlUb1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90cnktdG8tc3RyaW5nJyk7XG52YXIgaXNBcnJheUl0ZXJhdG9yTWV0aG9kID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWFycmF5LWl0ZXJhdG9yLW1ldGhvZCcpO1xudmFyIGxlbmd0aE9mQXJyYXlMaWtlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2xlbmd0aC1vZi1hcnJheS1saWtlJyk7XG52YXIgaXNQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtaXMtcHJvdG90eXBlLW9mJyk7XG52YXIgZ2V0SXRlcmF0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LWl0ZXJhdG9yJyk7XG52YXIgZ2V0SXRlcmF0b3JNZXRob2QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpO1xudmFyIGl0ZXJhdG9yQ2xvc2UgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXRlcmF0b3ItY2xvc2UnKTtcblxudmFyICRUeXBlRXJyb3IgPSBUeXBlRXJyb3I7XG5cbnZhciBSZXN1bHQgPSBmdW5jdGlvbiAoc3RvcHBlZCwgcmVzdWx0KSB7XG4gIHRoaXMuc3RvcHBlZCA9IHN0b3BwZWQ7XG4gIHRoaXMucmVzdWx0ID0gcmVzdWx0O1xufTtcblxudmFyIFJlc3VsdFByb3RvdHlwZSA9IFJlc3VsdC5wcm90b3R5cGU7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZXJhYmxlLCB1bmJvdW5kRnVuY3Rpb24sIG9wdGlvbnMpIHtcbiAgdmFyIHRoYXQgPSBvcHRpb25zICYmIG9wdGlvbnMudGhhdDtcbiAgdmFyIEFTX0VOVFJJRVMgPSAhIShvcHRpb25zICYmIG9wdGlvbnMuQVNfRU5UUklFUyk7XG4gIHZhciBJU19SRUNPUkQgPSAhIShvcHRpb25zICYmIG9wdGlvbnMuSVNfUkVDT1JEKTtcbiAgdmFyIElTX0lURVJBVE9SID0gISEob3B0aW9ucyAmJiBvcHRpb25zLklTX0lURVJBVE9SKTtcbiAgdmFyIElOVEVSUlVQVEVEID0gISEob3B0aW9ucyAmJiBvcHRpb25zLklOVEVSUlVQVEVEKTtcbiAgdmFyIGZuID0gYmluZCh1bmJvdW5kRnVuY3Rpb24sIHRoYXQpO1xuICB2YXIgaXRlcmF0b3IsIGl0ZXJGbiwgaW5kZXgsIGxlbmd0aCwgcmVzdWx0LCBuZXh0LCBzdGVwO1xuXG4gIHZhciBzdG9wID0gZnVuY3Rpb24gKGNvbmRpdGlvbikge1xuICAgIGlmIChpdGVyYXRvcikgaXRlcmF0b3JDbG9zZShpdGVyYXRvciwgJ25vcm1hbCcsIGNvbmRpdGlvbik7XG4gICAgcmV0dXJuIG5ldyBSZXN1bHQodHJ1ZSwgY29uZGl0aW9uKTtcbiAgfTtcblxuICB2YXIgY2FsbEZuID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgaWYgKEFTX0VOVFJJRVMpIHtcbiAgICAgIGFuT2JqZWN0KHZhbHVlKTtcbiAgICAgIHJldHVybiBJTlRFUlJVUFRFRCA/IGZuKHZhbHVlWzBdLCB2YWx1ZVsxXSwgc3RvcCkgOiBmbih2YWx1ZVswXSwgdmFsdWVbMV0pO1xuICAgIH0gcmV0dXJuIElOVEVSUlVQVEVEID8gZm4odmFsdWUsIHN0b3ApIDogZm4odmFsdWUpO1xuICB9O1xuXG4gIGlmIChJU19SRUNPUkQpIHtcbiAgICBpdGVyYXRvciA9IGl0ZXJhYmxlLml0ZXJhdG9yO1xuICB9IGVsc2UgaWYgKElTX0lURVJBVE9SKSB7XG4gICAgaXRlcmF0b3IgPSBpdGVyYWJsZTtcbiAgfSBlbHNlIHtcbiAgICBpdGVyRm4gPSBnZXRJdGVyYXRvck1ldGhvZChpdGVyYWJsZSk7XG4gICAgaWYgKCFpdGVyRm4pIHRocm93IG5ldyAkVHlwZUVycm9yKHRyeVRvU3RyaW5nKGl0ZXJhYmxlKSArICcgaXMgbm90IGl0ZXJhYmxlJyk7XG4gICAgLy8gb3B0aW1pc2F0aW9uIGZvciBhcnJheSBpdGVyYXRvcnNcbiAgICBpZiAoaXNBcnJheUl0ZXJhdG9yTWV0aG9kKGl0ZXJGbikpIHtcbiAgICAgIGZvciAoaW5kZXggPSAwLCBsZW5ndGggPSBsZW5ndGhPZkFycmF5TGlrZShpdGVyYWJsZSk7IGxlbmd0aCA+IGluZGV4OyBpbmRleCsrKSB7XG4gICAgICAgIHJlc3VsdCA9IGNhbGxGbihpdGVyYWJsZVtpbmRleF0pO1xuICAgICAgICBpZiAocmVzdWx0ICYmIGlzUHJvdG90eXBlT2YoUmVzdWx0UHJvdG90eXBlLCByZXN1bHQpKSByZXR1cm4gcmVzdWx0O1xuICAgICAgfSByZXR1cm4gbmV3IFJlc3VsdChmYWxzZSk7XG4gICAgfVxuICAgIGl0ZXJhdG9yID0gZ2V0SXRlcmF0b3IoaXRlcmFibGUsIGl0ZXJGbik7XG4gIH1cblxuICBuZXh0ID0gSVNfUkVDT1JEID8gaXRlcmFibGUubmV4dCA6IGl0ZXJhdG9yLm5leHQ7XG4gIHdoaWxlICghKHN0ZXAgPSBjYWxsKG5leHQsIGl0ZXJhdG9yKSkuZG9uZSkge1xuICAgIHRyeSB7XG4gICAgICByZXN1bHQgPSBjYWxsRm4oc3RlcC52YWx1ZSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGl0ZXJhdG9yQ2xvc2UoaXRlcmF0b3IsICd0aHJvdycsIGVycm9yKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiByZXN1bHQgPT0gJ29iamVjdCcgJiYgcmVzdWx0ICYmIGlzUHJvdG90eXBlT2YoUmVzdWx0UHJvdG90eXBlLCByZXN1bHQpKSByZXR1cm4gcmVzdWx0O1xuICB9IHJldHVybiBuZXcgUmVzdWx0KGZhbHNlKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1jYWxsJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4tb2JqZWN0Jyk7XG52YXIgZ2V0TWV0aG9kID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dldC1tZXRob2QnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlcmF0b3IsIGtpbmQsIHZhbHVlKSB7XG4gIHZhciBpbm5lclJlc3VsdCwgaW5uZXJFcnJvcjtcbiAgYW5PYmplY3QoaXRlcmF0b3IpO1xuICB0cnkge1xuICAgIGlubmVyUmVzdWx0ID0gZ2V0TWV0aG9kKGl0ZXJhdG9yLCAncmV0dXJuJyk7XG4gICAgaWYgKCFpbm5lclJlc3VsdCkge1xuICAgICAgaWYgKGtpbmQgPT09ICd0aHJvdycpIHRocm93IHZhbHVlO1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICBpbm5lclJlc3VsdCA9IGNhbGwoaW5uZXJSZXN1bHQsIGl0ZXJhdG9yKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBpbm5lckVycm9yID0gdHJ1ZTtcbiAgICBpbm5lclJlc3VsdCA9IGVycm9yO1xuICB9XG4gIGlmIChraW5kID09PSAndGhyb3cnKSB0aHJvdyB2YWx1ZTtcbiAgaWYgKGlubmVyRXJyb3IpIHRocm93IGlubmVyUmVzdWx0O1xuICBhbk9iamVjdChpbm5lclJlc3VsdCk7XG4gIHJldHVybiB2YWx1ZTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgSXRlcmF0b3JQcm90b3R5cGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXRlcmF0b3JzLWNvcmUnKS5JdGVyYXRvclByb3RvdHlwZTtcbnZhciBjcmVhdGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWNyZWF0ZScpO1xudmFyIGNyZWF0ZVByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jcmVhdGUtcHJvcGVydHktZGVzY3JpcHRvcicpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NldC10by1zdHJpbmctdGFnJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2l0ZXJhdG9ycycpO1xuXG52YXIgcmV0dXJuVGhpcyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEl0ZXJhdG9yQ29uc3RydWN0b3IsIE5BTUUsIG5leHQsIEVOVU1FUkFCTEVfTkVYVCkge1xuICB2YXIgVE9fU1RSSU5HX1RBRyA9IE5BTUUgKyAnIEl0ZXJhdG9yJztcbiAgSXRlcmF0b3JDb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSBjcmVhdGUoSXRlcmF0b3JQcm90b3R5cGUsIHsgbmV4dDogY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yKCshRU5VTUVSQUJMRV9ORVhULCBuZXh0KSB9KTtcbiAgc2V0VG9TdHJpbmdUYWcoSXRlcmF0b3JDb25zdHJ1Y3RvciwgVE9fU1RSSU5HX1RBRywgZmFsc2UsIHRydWUpO1xuICBJdGVyYXRvcnNbVE9fU1RSSU5HX1RBR10gPSByZXR1cm5UaGlzO1xuICByZXR1cm4gSXRlcmF0b3JDb25zdHJ1Y3Rvcjtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciBjYWxsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWNhbGwnKTtcbnZhciBJU19QVVJFID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLXB1cmUnKTtcbnZhciBGdW5jdGlvbk5hbWUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tbmFtZScpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciBjcmVhdGVJdGVyYXRvckNvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2l0ZXJhdG9yLWNyZWF0ZS1jb25zdHJ1Y3RvcicpO1xudmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtcHJvdG90eXBlLW9mJyk7XG52YXIgc2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LXNldC1wcm90b3R5cGUtb2YnKTtcbnZhciBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIGNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jcmVhdGUtbm9uLWVudW1lcmFibGUtcHJvcGVydHknKTtcbnZhciBkZWZpbmVCdWlsdEluID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RlZmluZS1idWlsdC1pbicpO1xudmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pdGVyYXRvcnMnKTtcbnZhciBJdGVyYXRvcnNDb3JlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2l0ZXJhdG9ycy1jb3JlJyk7XG5cbnZhciBQUk9QRVJfRlVOQ1RJT05fTkFNRSA9IEZ1bmN0aW9uTmFtZS5QUk9QRVI7XG52YXIgQ09ORklHVVJBQkxFX0ZVTkNUSU9OX05BTUUgPSBGdW5jdGlvbk5hbWUuQ09ORklHVVJBQkxFO1xudmFyIEl0ZXJhdG9yUHJvdG90eXBlID0gSXRlcmF0b3JzQ29yZS5JdGVyYXRvclByb3RvdHlwZTtcbnZhciBCVUdHWV9TQUZBUklfSVRFUkFUT1JTID0gSXRlcmF0b3JzQ29yZS5CVUdHWV9TQUZBUklfSVRFUkFUT1JTO1xudmFyIElURVJBVE9SID0gd2VsbEtub3duU3ltYm9sKCdpdGVyYXRvcicpO1xudmFyIEtFWVMgPSAna2V5cyc7XG52YXIgVkFMVUVTID0gJ3ZhbHVlcyc7XG52YXIgRU5UUklFUyA9ICdlbnRyaWVzJztcblxudmFyIHJldHVyblRoaXMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChJdGVyYWJsZSwgTkFNRSwgSXRlcmF0b3JDb25zdHJ1Y3RvciwgbmV4dCwgREVGQVVMVCwgSVNfU0VULCBGT1JDRUQpIHtcbiAgY3JlYXRlSXRlcmF0b3JDb25zdHJ1Y3RvcihJdGVyYXRvckNvbnN0cnVjdG9yLCBOQU1FLCBuZXh0KTtcblxuICB2YXIgZ2V0SXRlcmF0aW9uTWV0aG9kID0gZnVuY3Rpb24gKEtJTkQpIHtcbiAgICBpZiAoS0lORCA9PT0gREVGQVVMVCAmJiBkZWZhdWx0SXRlcmF0b3IpIHJldHVybiBkZWZhdWx0SXRlcmF0b3I7XG4gICAgaWYgKCFCVUdHWV9TQUZBUklfSVRFUkFUT1JTICYmIEtJTkQgJiYgS0lORCBpbiBJdGVyYWJsZVByb3RvdHlwZSkgcmV0dXJuIEl0ZXJhYmxlUHJvdG90eXBlW0tJTkRdO1xuXG4gICAgc3dpdGNoIChLSU5EKSB7XG4gICAgICBjYXNlIEtFWVM6IHJldHVybiBmdW5jdGlvbiBrZXlzKCkgeyByZXR1cm4gbmV3IEl0ZXJhdG9yQ29uc3RydWN0b3IodGhpcywgS0lORCk7IH07XG4gICAgICBjYXNlIFZBTFVFUzogcmV0dXJuIGZ1bmN0aW9uIHZhbHVlcygpIHsgcmV0dXJuIG5ldyBJdGVyYXRvckNvbnN0cnVjdG9yKHRoaXMsIEtJTkQpOyB9O1xuICAgICAgY2FzZSBFTlRSSUVTOiByZXR1cm4gZnVuY3Rpb24gZW50cmllcygpIHsgcmV0dXJuIG5ldyBJdGVyYXRvckNvbnN0cnVjdG9yKHRoaXMsIEtJTkQpOyB9O1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiBuZXcgSXRlcmF0b3JDb25zdHJ1Y3Rvcih0aGlzKTsgfTtcbiAgfTtcblxuICB2YXIgVE9fU1RSSU5HX1RBRyA9IE5BTUUgKyAnIEl0ZXJhdG9yJztcbiAgdmFyIElOQ09SUkVDVF9WQUxVRVNfTkFNRSA9IGZhbHNlO1xuICB2YXIgSXRlcmFibGVQcm90b3R5cGUgPSBJdGVyYWJsZS5wcm90b3R5cGU7XG4gIHZhciBuYXRpdmVJdGVyYXRvciA9IEl0ZXJhYmxlUHJvdG90eXBlW0lURVJBVE9SXVxuICAgIHx8IEl0ZXJhYmxlUHJvdG90eXBlWydAQGl0ZXJhdG9yJ11cbiAgICB8fCBERUZBVUxUICYmIEl0ZXJhYmxlUHJvdG90eXBlW0RFRkFVTFRdO1xuICB2YXIgZGVmYXVsdEl0ZXJhdG9yID0gIUJVR0dZX1NBRkFSSV9JVEVSQVRPUlMgJiYgbmF0aXZlSXRlcmF0b3IgfHwgZ2V0SXRlcmF0aW9uTWV0aG9kKERFRkFVTFQpO1xuICB2YXIgYW55TmF0aXZlSXRlcmF0b3IgPSBOQU1FID09PSAnQXJyYXknID8gSXRlcmFibGVQcm90b3R5cGUuZW50cmllcyB8fCBuYXRpdmVJdGVyYXRvciA6IG5hdGl2ZUl0ZXJhdG9yO1xuICB2YXIgQ3VycmVudEl0ZXJhdG9yUHJvdG90eXBlLCBtZXRob2RzLCBLRVk7XG5cbiAgLy8gZml4IG5hdGl2ZVxuICBpZiAoYW55TmF0aXZlSXRlcmF0b3IpIHtcbiAgICBDdXJyZW50SXRlcmF0b3JQcm90b3R5cGUgPSBnZXRQcm90b3R5cGVPZihhbnlOYXRpdmVJdGVyYXRvci5jYWxsKG5ldyBJdGVyYWJsZSgpKSk7XG4gICAgaWYgKEN1cnJlbnRJdGVyYXRvclByb3RvdHlwZSAhPT0gT2JqZWN0LnByb3RvdHlwZSAmJiBDdXJyZW50SXRlcmF0b3JQcm90b3R5cGUubmV4dCkge1xuICAgICAgaWYgKCFJU19QVVJFICYmIGdldFByb3RvdHlwZU9mKEN1cnJlbnRJdGVyYXRvclByb3RvdHlwZSkgIT09IEl0ZXJhdG9yUHJvdG90eXBlKSB7XG4gICAgICAgIGlmIChzZXRQcm90b3R5cGVPZikge1xuICAgICAgICAgIHNldFByb3RvdHlwZU9mKEN1cnJlbnRJdGVyYXRvclByb3RvdHlwZSwgSXRlcmF0b3JQcm90b3R5cGUpO1xuICAgICAgICB9IGVsc2UgaWYgKCFpc0NhbGxhYmxlKEN1cnJlbnRJdGVyYXRvclByb3RvdHlwZVtJVEVSQVRPUl0pKSB7XG4gICAgICAgICAgZGVmaW5lQnVpbHRJbihDdXJyZW50SXRlcmF0b3JQcm90b3R5cGUsIElURVJBVE9SLCByZXR1cm5UaGlzKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLy8gU2V0IEBAdG9TdHJpbmdUYWcgdG8gbmF0aXZlIGl0ZXJhdG9yc1xuICAgICAgc2V0VG9TdHJpbmdUYWcoQ3VycmVudEl0ZXJhdG9yUHJvdG90eXBlLCBUT19TVFJJTkdfVEFHLCB0cnVlLCB0cnVlKTtcbiAgICAgIGlmIChJU19QVVJFKSBJdGVyYXRvcnNbVE9fU1RSSU5HX1RBR10gPSByZXR1cm5UaGlzO1xuICAgIH1cbiAgfVxuXG4gIC8vIGZpeCBBcnJheS5wcm90b3R5cGUueyB2YWx1ZXMsIEBAaXRlcmF0b3IgfS5uYW1lIGluIFY4IC8gRkZcbiAgaWYgKFBST1BFUl9GVU5DVElPTl9OQU1FICYmIERFRkFVTFQgPT09IFZBTFVFUyAmJiBuYXRpdmVJdGVyYXRvciAmJiBuYXRpdmVJdGVyYXRvci5uYW1lICE9PSBWQUxVRVMpIHtcbiAgICBpZiAoIUlTX1BVUkUgJiYgQ09ORklHVVJBQkxFX0ZVTkNUSU9OX05BTUUpIHtcbiAgICAgIGNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eShJdGVyYWJsZVByb3RvdHlwZSwgJ25hbWUnLCBWQUxVRVMpO1xuICAgIH0gZWxzZSB7XG4gICAgICBJTkNPUlJFQ1RfVkFMVUVTX05BTUUgPSB0cnVlO1xuICAgICAgZGVmYXVsdEl0ZXJhdG9yID0gZnVuY3Rpb24gdmFsdWVzKCkgeyByZXR1cm4gY2FsbChuYXRpdmVJdGVyYXRvciwgdGhpcyk7IH07XG4gICAgfVxuICB9XG5cbiAgLy8gZXhwb3J0IGFkZGl0aW9uYWwgbWV0aG9kc1xuICBpZiAoREVGQVVMVCkge1xuICAgIG1ldGhvZHMgPSB7XG4gICAgICB2YWx1ZXM6IGdldEl0ZXJhdGlvbk1ldGhvZChWQUxVRVMpLFxuICAgICAga2V5czogSVNfU0VUID8gZGVmYXVsdEl0ZXJhdG9yIDogZ2V0SXRlcmF0aW9uTWV0aG9kKEtFWVMpLFxuICAgICAgZW50cmllczogZ2V0SXRlcmF0aW9uTWV0aG9kKEVOVFJJRVMpXG4gICAgfTtcbiAgICBpZiAoRk9SQ0VEKSBmb3IgKEtFWSBpbiBtZXRob2RzKSB7XG4gICAgICBpZiAoQlVHR1lfU0FGQVJJX0lURVJBVE9SUyB8fCBJTkNPUlJFQ1RfVkFMVUVTX05BTUUgfHwgIShLRVkgaW4gSXRlcmFibGVQcm90b3R5cGUpKSB7XG4gICAgICAgIGRlZmluZUJ1aWx0SW4oSXRlcmFibGVQcm90b3R5cGUsIEtFWSwgbWV0aG9kc1tLRVldKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgJCh7IHRhcmdldDogTkFNRSwgcHJvdG86IHRydWUsIGZvcmNlZDogQlVHR1lfU0FGQVJJX0lURVJBVE9SUyB8fCBJTkNPUlJFQ1RfVkFMVUVTX05BTUUgfSwgbWV0aG9kcyk7XG4gIH1cblxuICAvLyBkZWZpbmUgaXRlcmF0b3JcbiAgaWYgKCghSVNfUFVSRSB8fCBGT1JDRUQpICYmIEl0ZXJhYmxlUHJvdG90eXBlW0lURVJBVE9SXSAhPT0gZGVmYXVsdEl0ZXJhdG9yKSB7XG4gICAgZGVmaW5lQnVpbHRJbihJdGVyYWJsZVByb3RvdHlwZSwgSVRFUkFUT1IsIGRlZmF1bHRJdGVyYXRvciwgeyBuYW1lOiBERUZBVUxUIH0pO1xuICB9XG4gIEl0ZXJhdG9yc1tOQU1FXSA9IGRlZmF1bHRJdGVyYXRvcjtcblxuICByZXR1cm4gbWV0aG9kcztcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtb2JqZWN0Jyk7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1jcmVhdGUnKTtcbnZhciBnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZ2V0LXByb3RvdHlwZS1vZicpO1xudmFyIGRlZmluZUJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVmaW5lLWJ1aWx0LWluJyk7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG52YXIgSVNfUFVSRSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1wdXJlJyk7XG5cbnZhciBJVEVSQVRPUiA9IHdlbGxLbm93blN5bWJvbCgnaXRlcmF0b3InKTtcbnZhciBCVUdHWV9TQUZBUklfSVRFUkFUT1JTID0gZmFsc2U7XG5cbi8vIGAlSXRlcmF0b3JQcm90b3R5cGUlYCBvYmplY3Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtJWl0ZXJhdG9ycHJvdG90eXBlJS1vYmplY3RcbnZhciBJdGVyYXRvclByb3RvdHlwZSwgUHJvdG90eXBlT2ZBcnJheUl0ZXJhdG9yUHJvdG90eXBlLCBhcnJheUl0ZXJhdG9yO1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBlcy9uby1hcnJheS1wcm90b3R5cGUta2V5cyAtLSBzYWZlICovXG5pZiAoW10ua2V5cykge1xuICBhcnJheUl0ZXJhdG9yID0gW10ua2V5cygpO1xuICAvLyBTYWZhcmkgOCBoYXMgYnVnZ3kgaXRlcmF0b3JzIHcvbyBgbmV4dGBcbiAgaWYgKCEoJ25leHQnIGluIGFycmF5SXRlcmF0b3IpKSBCVUdHWV9TQUZBUklfSVRFUkFUT1JTID0gdHJ1ZTtcbiAgZWxzZSB7XG4gICAgUHJvdG90eXBlT2ZBcnJheUl0ZXJhdG9yUHJvdG90eXBlID0gZ2V0UHJvdG90eXBlT2YoZ2V0UHJvdG90eXBlT2YoYXJyYXlJdGVyYXRvcikpO1xuICAgIGlmIChQcm90b3R5cGVPZkFycmF5SXRlcmF0b3JQcm90b3R5cGUgIT09IE9iamVjdC5wcm90b3R5cGUpIEl0ZXJhdG9yUHJvdG90eXBlID0gUHJvdG90eXBlT2ZBcnJheUl0ZXJhdG9yUHJvdG90eXBlO1xuICB9XG59XG5cbnZhciBORVdfSVRFUkFUT1JfUFJPVE9UWVBFID0gIWlzT2JqZWN0KEl0ZXJhdG9yUHJvdG90eXBlKSB8fCBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHZhciB0ZXN0ID0ge307XG4gIC8vIEZGNDQtIGxlZ2FjeSBpdGVyYXRvcnMgY2FzZVxuICByZXR1cm4gSXRlcmF0b3JQcm90b3R5cGVbSVRFUkFUT1JdLmNhbGwodGVzdCkgIT09IHRlc3Q7XG59KTtcblxuaWYgKE5FV19JVEVSQVRPUl9QUk9UT1RZUEUpIEl0ZXJhdG9yUHJvdG90eXBlID0ge307XG5lbHNlIGlmIChJU19QVVJFKSBJdGVyYXRvclByb3RvdHlwZSA9IGNyZWF0ZShJdGVyYXRvclByb3RvdHlwZSk7XG5cbi8vIGAlSXRlcmF0b3JQcm90b3R5cGUlW0BAaXRlcmF0b3JdKClgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy0laXRlcmF0b3Jwcm90b3R5cGUlLUBAaXRlcmF0b3JcbmlmICghaXNDYWxsYWJsZShJdGVyYXRvclByb3RvdHlwZVtJVEVSQVRPUl0pKSB7XG4gIGRlZmluZUJ1aWx0SW4oSXRlcmF0b3JQcm90b3R5cGUsIElURVJBVE9SLCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgSXRlcmF0b3JQcm90b3R5cGU6IEl0ZXJhdG9yUHJvdG90eXBlLFxuICBCVUdHWV9TQUZBUklfSVRFUkFUT1JTOiBCVUdHWV9TQUZBUklfSVRFUkFUT1JTXG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSB7fTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1sZW5ndGgnKTtcblxuLy8gYExlbmd0aE9mQXJyYXlMaWtlYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtbGVuZ3Rob2ZhcnJheWxpa2Vcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9iaikge1xuICByZXR1cm4gdG9MZW5ndGgob2JqLmxlbmd0aCk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcycpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xudmFyIGhhc093biA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oYXMtb3duLXByb3BlcnR5Jyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnMnKTtcbnZhciBDT05GSUdVUkFCTEVfRlVOQ1RJT05fTkFNRSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1uYW1lJykuQ09ORklHVVJBQkxFO1xudmFyIGluc3BlY3RTb3VyY2UgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaW5zcGVjdC1zb3VyY2UnKTtcbnZhciBJbnRlcm5hbFN0YXRlTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ludGVybmFsLXN0YXRlJyk7XG5cbnZhciBlbmZvcmNlSW50ZXJuYWxTdGF0ZSA9IEludGVybmFsU3RhdGVNb2R1bGUuZW5mb3JjZTtcbnZhciBnZXRJbnRlcm5hbFN0YXRlID0gSW50ZXJuYWxTdGF0ZU1vZHVsZS5nZXQ7XG52YXIgJFN0cmluZyA9IFN0cmluZztcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZGVmaW5lcHJvcGVydHkgLS0gc2FmZVxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIHN0cmluZ1NsaWNlID0gdW5jdXJyeVRoaXMoJycuc2xpY2UpO1xudmFyIHJlcGxhY2UgPSB1bmN1cnJ5VGhpcygnJy5yZXBsYWNlKTtcbnZhciBqb2luID0gdW5jdXJyeVRoaXMoW10uam9pbik7XG5cbnZhciBDT05GSUdVUkFCTEVfTEVOR1RIID0gREVTQ1JJUFRPUlMgJiYgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGRlZmluZVByb3BlcnR5KGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfSwgJ2xlbmd0aCcsIHsgdmFsdWU6IDggfSkubGVuZ3RoICE9PSA4O1xufSk7XG5cbnZhciBURU1QTEFURSA9IFN0cmluZyhTdHJpbmcpLnNwbGl0KCdTdHJpbmcnKTtcblxudmFyIG1ha2VCdWlsdEluID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodmFsdWUsIG5hbWUsIG9wdGlvbnMpIHtcbiAgaWYgKHN0cmluZ1NsaWNlKCRTdHJpbmcobmFtZSksIDAsIDcpID09PSAnU3ltYm9sKCcpIHtcbiAgICBuYW1lID0gJ1snICsgcmVwbGFjZSgkU3RyaW5nKG5hbWUpLCAvXlN5bWJvbFxcKChbXildKilcXCkuKiQvLCAnJDEnKSArICddJztcbiAgfVxuICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLmdldHRlcikgbmFtZSA9ICdnZXQgJyArIG5hbWU7XG4gIGlmIChvcHRpb25zICYmIG9wdGlvbnMuc2V0dGVyKSBuYW1lID0gJ3NldCAnICsgbmFtZTtcbiAgaWYgKCFoYXNPd24odmFsdWUsICduYW1lJykgfHwgKENPTkZJR1VSQUJMRV9GVU5DVElPTl9OQU1FICYmIHZhbHVlLm5hbWUgIT09IG5hbWUpKSB7XG4gICAgaWYgKERFU0NSSVBUT1JTKSBkZWZpbmVQcm9wZXJ0eSh2YWx1ZSwgJ25hbWUnLCB7IHZhbHVlOiBuYW1lLCBjb25maWd1cmFibGU6IHRydWUgfSk7XG4gICAgZWxzZSB2YWx1ZS5uYW1lID0gbmFtZTtcbiAgfVxuICBpZiAoQ09ORklHVVJBQkxFX0xFTkdUSCAmJiBvcHRpb25zICYmIGhhc093bihvcHRpb25zLCAnYXJpdHknKSAmJiB2YWx1ZS5sZW5ndGggIT09IG9wdGlvbnMuYXJpdHkpIHtcbiAgICBkZWZpbmVQcm9wZXJ0eSh2YWx1ZSwgJ2xlbmd0aCcsIHsgdmFsdWU6IG9wdGlvbnMuYXJpdHkgfSk7XG4gIH1cbiAgdHJ5IHtcbiAgICBpZiAob3B0aW9ucyAmJiBoYXNPd24ob3B0aW9ucywgJ2NvbnN0cnVjdG9yJykgJiYgb3B0aW9ucy5jb25zdHJ1Y3Rvcikge1xuICAgICAgaWYgKERFU0NSSVBUT1JTKSBkZWZpbmVQcm9wZXJ0eSh2YWx1ZSwgJ3Byb3RvdHlwZScsIHsgd3JpdGFibGU6IGZhbHNlIH0pO1xuICAgIC8vIGluIFY4IH4gQ2hyb21lIDUzLCBwcm90b3R5cGVzIG9mIHNvbWUgbWV0aG9kcywgbGlrZSBgQXJyYXkucHJvdG90eXBlLnZhbHVlc2AsIGFyZSBub24td3JpdGFibGVcbiAgICB9IGVsc2UgaWYgKHZhbHVlLnByb3RvdHlwZSkgdmFsdWUucHJvdG90eXBlID0gdW5kZWZpbmVkO1xuICB9IGNhdGNoIChlcnJvcikgeyAvKiBlbXB0eSAqLyB9XG4gIHZhciBzdGF0ZSA9IGVuZm9yY2VJbnRlcm5hbFN0YXRlKHZhbHVlKTtcbiAgaWYgKCFoYXNPd24oc3RhdGUsICdzb3VyY2UnKSkge1xuICAgIHN0YXRlLnNvdXJjZSA9IGpvaW4oVEVNUExBVEUsIHR5cGVvZiBuYW1lID09ICdzdHJpbmcnID8gbmFtZSA6ICcnKTtcbiAgfSByZXR1cm4gdmFsdWU7XG59O1xuXG4vLyBhZGQgZmFrZSBGdW5jdGlvbiN0b1N0cmluZyBmb3IgY29ycmVjdCB3b3JrIHdyYXBwZWQgbWV0aG9kcyAvIGNvbnN0cnVjdG9ycyB3aXRoIG1ldGhvZHMgbGlrZSBMb0Rhc2ggaXNOYXRpdmVcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1leHRlbmQtbmF0aXZlIC0tIHJlcXVpcmVkXG5GdW5jdGlvbi5wcm90b3R5cGUudG9TdHJpbmcgPSBtYWtlQnVpbHRJbihmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgcmV0dXJuIGlzQ2FsbGFibGUodGhpcykgJiYgZ2V0SW50ZXJuYWxTdGF0ZSh0aGlzKS5zb3VyY2UgfHwgaW5zcGVjdFNvdXJjZSh0aGlzKTtcbn0sICd0b1N0cmluZycpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNlaWwgPSBNYXRoLmNlaWw7XG52YXIgZmxvb3IgPSBNYXRoLmZsb29yO1xuXG4vLyBgTWF0aC50cnVuY2AgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW1hdGgudHJ1bmNcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1tYXRoLXRydW5jIC0tIHNhZmVcbm1vZHVsZS5leHBvcnRzID0gTWF0aC50cnVuYyB8fCBmdW5jdGlvbiB0cnVuYyh4KSB7XG4gIHZhciBuID0gK3g7XG4gIHJldHVybiAobiA+IDAgPyBmbG9vciA6IGNlaWwpKG4pO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgc2FmZUdldEJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2FmZS1nZXQtYnVpbHQtaW4nKTtcbnZhciBiaW5kID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmQtY29udGV4dCcpO1xudmFyIG1hY3JvdGFzayA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90YXNrJykuc2V0O1xudmFyIFF1ZXVlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3F1ZXVlJyk7XG52YXIgSVNfSU9TID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2VuZ2luZS1pcy1pb3MnKTtcbnZhciBJU19JT1NfUEVCQkxFID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2VuZ2luZS1pcy1pb3MtcGViYmxlJyk7XG52YXIgSVNfV0VCT1NfV0VCS0lUID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2VuZ2luZS1pcy13ZWJvcy13ZWJraXQnKTtcbnZhciBJU19OT0RFID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2VuZ2luZS1pcy1ub2RlJyk7XG5cbnZhciBNdXRhdGlvbk9ic2VydmVyID0gZ2xvYmFsLk11dGF0aW9uT2JzZXJ2ZXIgfHwgZ2xvYmFsLldlYktpdE11dGF0aW9uT2JzZXJ2ZXI7XG52YXIgZG9jdW1lbnQgPSBnbG9iYWwuZG9jdW1lbnQ7XG52YXIgcHJvY2VzcyA9IGdsb2JhbC5wcm9jZXNzO1xudmFyIFByb21pc2UgPSBnbG9iYWwuUHJvbWlzZTtcbnZhciBtaWNyb3Rhc2sgPSBzYWZlR2V0QnVpbHRJbigncXVldWVNaWNyb3Rhc2snKTtcbnZhciBub3RpZnksIHRvZ2dsZSwgbm9kZSwgcHJvbWlzZSwgdGhlbjtcblxuLy8gbW9kZXJuIGVuZ2luZXMgaGF2ZSBxdWV1ZU1pY3JvdGFzayBtZXRob2RcbmlmICghbWljcm90YXNrKSB7XG4gIHZhciBxdWV1ZSA9IG5ldyBRdWV1ZSgpO1xuXG4gIHZhciBmbHVzaCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcGFyZW50LCBmbjtcbiAgICBpZiAoSVNfTk9ERSAmJiAocGFyZW50ID0gcHJvY2Vzcy5kb21haW4pKSBwYXJlbnQuZXhpdCgpO1xuICAgIHdoaWxlIChmbiA9IHF1ZXVlLmdldCgpKSB0cnkge1xuICAgICAgZm4oKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgaWYgKHF1ZXVlLmhlYWQpIG5vdGlmeSgpO1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuICAgIGlmIChwYXJlbnQpIHBhcmVudC5lbnRlcigpO1xuICB9O1xuXG4gIC8vIGJyb3dzZXJzIHdpdGggTXV0YXRpb25PYnNlcnZlciwgZXhjZXB0IGlPUyAtIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy8zMzlcbiAgLy8gYWxzbyBleGNlcHQgV2ViT1MgV2Via2l0IGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy84OThcbiAgaWYgKCFJU19JT1MgJiYgIUlTX05PREUgJiYgIUlTX1dFQk9TX1dFQktJVCAmJiBNdXRhdGlvbk9ic2VydmVyICYmIGRvY3VtZW50KSB7XG4gICAgdG9nZ2xlID0gdHJ1ZTtcbiAgICBub2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJycpO1xuICAgIG5ldyBNdXRhdGlvbk9ic2VydmVyKGZsdXNoKS5vYnNlcnZlKG5vZGUsIHsgY2hhcmFjdGVyRGF0YTogdHJ1ZSB9KTtcbiAgICBub3RpZnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBub2RlLmRhdGEgPSB0b2dnbGUgPSAhdG9nZ2xlO1xuICAgIH07XG4gIC8vIGVudmlyb25tZW50cyB3aXRoIG1heWJlIG5vbi1jb21wbGV0ZWx5IGNvcnJlY3QsIGJ1dCBleGlzdGVudCBQcm9taXNlXG4gIH0gZWxzZSBpZiAoIUlTX0lPU19QRUJCTEUgJiYgUHJvbWlzZSAmJiBQcm9taXNlLnJlc29sdmUpIHtcbiAgICAvLyBQcm9taXNlLnJlc29sdmUgd2l0aG91dCBhbiBhcmd1bWVudCB0aHJvd3MgYW4gZXJyb3IgaW4gTEcgV2ViT1MgMlxuICAgIHByb21pc2UgPSBQcm9taXNlLnJlc29sdmUodW5kZWZpbmVkKTtcbiAgICAvLyB3b3JrYXJvdW5kIG9mIFdlYktpdCB+IGlPUyBTYWZhcmkgMTAuMSBidWdcbiAgICBwcm9taXNlLmNvbnN0cnVjdG9yID0gUHJvbWlzZTtcbiAgICB0aGVuID0gYmluZChwcm9taXNlLnRoZW4sIHByb21pc2UpO1xuICAgIG5vdGlmeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHRoZW4oZmx1c2gpO1xuICAgIH07XG4gIC8vIE5vZGUuanMgd2l0aG91dCBwcm9taXNlc1xuICB9IGVsc2UgaWYgKElTX05PREUpIHtcbiAgICBub3RpZnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBwcm9jZXNzLm5leHRUaWNrKGZsdXNoKTtcbiAgICB9O1xuICAvLyBmb3Igb3RoZXIgZW52aXJvbm1lbnRzIC0gbWFjcm90YXNrIGJhc2VkIG9uOlxuICAvLyAtIHNldEltbWVkaWF0ZVxuICAvLyAtIE1lc3NhZ2VDaGFubmVsXG4gIC8vIC0gd2luZG93LnBvc3RNZXNzYWdlXG4gIC8vIC0gb25yZWFkeXN0YXRlY2hhbmdlXG4gIC8vIC0gc2V0VGltZW91dFxuICB9IGVsc2Uge1xuICAgIC8vIGB3ZWJwYWNrYCBkZXYgc2VydmVyIGJ1ZyBvbiBJRSBnbG9iYWwgbWV0aG9kcyAtIHVzZSBiaW5kKGZuLCBnbG9iYWwpXG4gICAgbWFjcm90YXNrID0gYmluZChtYWNyb3Rhc2ssIGdsb2JhbCk7XG4gICAgbm90aWZ5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgbWFjcm90YXNrKGZsdXNoKTtcbiAgICB9O1xuICB9XG5cbiAgbWljcm90YXNrID0gZnVuY3Rpb24gKGZuKSB7XG4gICAgaWYgKCFxdWV1ZS5oZWFkKSBub3RpZnkoKTtcbiAgICBxdWV1ZS5hZGQoZm4pO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1pY3JvdGFzaztcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBhQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYS1jYWxsYWJsZScpO1xuXG52YXIgJFR5cGVFcnJvciA9IFR5cGVFcnJvcjtcblxudmFyIFByb21pc2VDYXBhYmlsaXR5ID0gZnVuY3Rpb24gKEMpIHtcbiAgdmFyIHJlc29sdmUsIHJlamVjdDtcbiAgdGhpcy5wcm9taXNlID0gbmV3IEMoZnVuY3Rpb24gKCQkcmVzb2x2ZSwgJCRyZWplY3QpIHtcbiAgICBpZiAocmVzb2x2ZSAhPT0gdW5kZWZpbmVkIHx8IHJlamVjdCAhPT0gdW5kZWZpbmVkKSB0aHJvdyBuZXcgJFR5cGVFcnJvcignQmFkIFByb21pc2UgY29uc3RydWN0b3InKTtcbiAgICByZXNvbHZlID0gJCRyZXNvbHZlO1xuICAgIHJlamVjdCA9ICQkcmVqZWN0O1xuICB9KTtcbiAgdGhpcy5yZXNvbHZlID0gYUNhbGxhYmxlKHJlc29sdmUpO1xuICB0aGlzLnJlamVjdCA9IGFDYWxsYWJsZShyZWplY3QpO1xufTtcblxuLy8gYE5ld1Byb21pc2VDYXBhYmlsaXR5YCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtbmV3cHJvbWlzZWNhcGFiaWxpdHlcbm1vZHVsZS5leHBvcnRzLmYgPSBmdW5jdGlvbiAoQykge1xuICByZXR1cm4gbmV3IFByb21pc2VDYXBhYmlsaXR5KEMpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBpc1JlZ0V4cCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1yZWdleHAnKTtcblxudmFyICRUeXBlRXJyb3IgPSBUeXBlRXJyb3I7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChpc1JlZ0V4cChpdCkpIHtcbiAgICB0aHJvdyBuZXcgJFR5cGVFcnJvcihcIlRoZSBtZXRob2QgZG9lc24ndCBhY2NlcHQgcmVndWxhciBleHByZXNzaW9uc1wiKTtcbiAgfSByZXR1cm4gaXQ7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1jYWxsJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcbnZhciBvYmplY3RLZXlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1rZXlzJyk7XG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LXN5bWJvbHMnKTtcbnZhciBwcm9wZXJ0eUlzRW51bWVyYWJsZU1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtcHJvcGVydHktaXMtZW51bWVyYWJsZScpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLW9iamVjdCcpO1xudmFyIEluZGV4ZWRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaW5kZXhlZC1vYmplY3QnKTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1hc3NpZ24gLS0gc2FmZVxudmFyICRhc3NpZ24gPSBPYmplY3QuYXNzaWduO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1kZWZpbmVwcm9wZXJ0eSAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIGNvbmNhdCA9IHVuY3VycnlUaGlzKFtdLmNvbmNhdCk7XG5cbi8vIGBPYmplY3QuYXNzaWduYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LmFzc2lnblxubW9kdWxlLmV4cG9ydHMgPSAhJGFzc2lnbiB8fCBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vIHNob3VsZCBoYXZlIGNvcnJlY3Qgb3JkZXIgb2Ygb3BlcmF0aW9ucyAoRWRnZSBidWcpXG4gIGlmIChERVNDUklQVE9SUyAmJiAkYXNzaWduKHsgYjogMSB9LCAkYXNzaWduKGRlZmluZVByb3BlcnR5KHt9LCAnYScsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgZGVmaW5lUHJvcGVydHkodGhpcywgJ2InLCB7XG4gICAgICAgIHZhbHVlOiAzLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZVxuICAgICAgfSk7XG4gICAgfVxuICB9KSwgeyBiOiAyIH0pKS5iICE9PSAxKSByZXR1cm4gdHJ1ZTtcbiAgLy8gc2hvdWxkIHdvcmsgd2l0aCBzeW1ib2xzIGFuZCBzaG91bGQgaGF2ZSBkZXRlcm1pbmlzdGljIHByb3BlcnR5IG9yZGVyIChWOCBidWcpXG4gIHZhciBBID0ge307XG4gIHZhciBCID0ge307XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1zeW1ib2wgLS0gc2FmZVxuICB2YXIgc3ltYm9sID0gU3ltYm9sKCdhc3NpZ24gZGV0ZWN0aW9uJyk7XG4gIHZhciBhbHBoYWJldCA9ICdhYmNkZWZnaGlqa2xtbm9wcXJzdCc7XG4gIEFbc3ltYm9sXSA9IDc7XG4gIGFscGhhYmV0LnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChjaHIpIHsgQltjaHJdID0gY2hyOyB9KTtcbiAgcmV0dXJuICRhc3NpZ24oe30sIEEpW3N5bWJvbF0gIT09IDcgfHwgb2JqZWN0S2V5cygkYXNzaWduKHt9LCBCKSkuam9pbignJykgIT09IGFscGhhYmV0O1xufSkgPyBmdW5jdGlvbiBhc3NpZ24odGFyZ2V0LCBzb3VyY2UpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFycyAtLSByZXF1aXJlZCBmb3IgYC5sZW5ndGhgXG4gIHZhciBUID0gdG9PYmplY3QodGFyZ2V0KTtcbiAgdmFyIGFyZ3VtZW50c0xlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gIHZhciBpbmRleCA9IDE7XG4gIHZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHNNb2R1bGUuZjtcbiAgdmFyIHByb3BlcnR5SXNFbnVtZXJhYmxlID0gcHJvcGVydHlJc0VudW1lcmFibGVNb2R1bGUuZjtcbiAgd2hpbGUgKGFyZ3VtZW50c0xlbmd0aCA+IGluZGV4KSB7XG4gICAgdmFyIFMgPSBJbmRleGVkT2JqZWN0KGFyZ3VtZW50c1tpbmRleCsrXSk7XG4gICAgdmFyIGtleXMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPyBjb25jYXQob2JqZWN0S2V5cyhTKSwgZ2V0T3duUHJvcGVydHlTeW1ib2xzKFMpKSA6IG9iamVjdEtleXMoUyk7XG4gICAgdmFyIGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuICAgIHZhciBqID0gMDtcbiAgICB2YXIga2V5O1xuICAgIHdoaWxlIChsZW5ndGggPiBqKSB7XG4gICAgICBrZXkgPSBrZXlzW2orK107XG4gICAgICBpZiAoIURFU0NSSVBUT1JTIHx8IGNhbGwocHJvcGVydHlJc0VudW1lcmFibGUsIFMsIGtleSkpIFRba2V5XSA9IFNba2V5XTtcbiAgICB9XG4gIH0gcmV0dXJuIFQ7XG59IDogJGFzc2lnbjtcbiIsIid1c2Ugc3RyaWN0Jztcbi8qIGdsb2JhbCBBY3RpdmVYT2JqZWN0IC0tIG9sZCBJRSwgV1NIICovXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4tb2JqZWN0Jyk7XG52YXIgZGVmaW5lUHJvcGVydGllc01vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnRpZXMnKTtcbnZhciBlbnVtQnVnS2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9lbnVtLWJ1Zy1rZXlzJyk7XG52YXIgaGlkZGVuS2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oaWRkZW4ta2V5cycpO1xudmFyIGh0bWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaHRtbCcpO1xudmFyIGRvY3VtZW50Q3JlYXRlRWxlbWVudCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kb2N1bWVudC1jcmVhdGUtZWxlbWVudCcpO1xudmFyIHNoYXJlZEtleSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zaGFyZWQta2V5Jyk7XG5cbnZhciBHVCA9ICc+JztcbnZhciBMVCA9ICc8JztcbnZhciBQUk9UT1RZUEUgPSAncHJvdG90eXBlJztcbnZhciBTQ1JJUFQgPSAnc2NyaXB0JztcbnZhciBJRV9QUk9UTyA9IHNoYXJlZEtleSgnSUVfUFJPVE8nKTtcblxudmFyIEVtcHR5Q29uc3RydWN0b3IgPSBmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH07XG5cbnZhciBzY3JpcHRUYWcgPSBmdW5jdGlvbiAoY29udGVudCkge1xuICByZXR1cm4gTFQgKyBTQ1JJUFQgKyBHVCArIGNvbnRlbnQgKyBMVCArICcvJyArIFNDUklQVCArIEdUO1xufTtcblxuLy8gQ3JlYXRlIG9iamVjdCB3aXRoIGZha2UgYG51bGxgIHByb3RvdHlwZTogdXNlIEFjdGl2ZVggT2JqZWN0IHdpdGggY2xlYXJlZCBwcm90b3R5cGVcbnZhciBOdWxsUHJvdG9PYmplY3RWaWFBY3RpdmVYID0gZnVuY3Rpb24gKGFjdGl2ZVhEb2N1bWVudCkge1xuICBhY3RpdmVYRG9jdW1lbnQud3JpdGUoc2NyaXB0VGFnKCcnKSk7XG4gIGFjdGl2ZVhEb2N1bWVudC5jbG9zZSgpO1xuICB2YXIgdGVtcCA9IGFjdGl2ZVhEb2N1bWVudC5wYXJlbnRXaW5kb3cuT2JqZWN0O1xuICBhY3RpdmVYRG9jdW1lbnQgPSBudWxsOyAvLyBhdm9pZCBtZW1vcnkgbGVha1xuICByZXR1cm4gdGVtcDtcbn07XG5cbi8vIENyZWF0ZSBvYmplY3Qgd2l0aCBmYWtlIGBudWxsYCBwcm90b3R5cGU6IHVzZSBpZnJhbWUgT2JqZWN0IHdpdGggY2xlYXJlZCBwcm90b3R5cGVcbnZhciBOdWxsUHJvdG9PYmplY3RWaWFJRnJhbWUgPSBmdW5jdGlvbiAoKSB7XG4gIC8vIFRocmFzaCwgd2FzdGUgYW5kIHNvZG9teTogSUUgR0MgYnVnXG4gIHZhciBpZnJhbWUgPSBkb2N1bWVudENyZWF0ZUVsZW1lbnQoJ2lmcmFtZScpO1xuICB2YXIgSlMgPSAnamF2YScgKyBTQ1JJUFQgKyAnOic7XG4gIHZhciBpZnJhbWVEb2N1bWVudDtcbiAgaWZyYW1lLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gIGh0bWwuYXBwZW5kQ2hpbGQoaWZyYW1lKTtcbiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzQ3NVxuICBpZnJhbWUuc3JjID0gU3RyaW5nKEpTKTtcbiAgaWZyYW1lRG9jdW1lbnQgPSBpZnJhbWUuY29udGVudFdpbmRvdy5kb2N1bWVudDtcbiAgaWZyYW1lRG9jdW1lbnQub3BlbigpO1xuICBpZnJhbWVEb2N1bWVudC53cml0ZShzY3JpcHRUYWcoJ2RvY3VtZW50LkY9T2JqZWN0JykpO1xuICBpZnJhbWVEb2N1bWVudC5jbG9zZSgpO1xuICByZXR1cm4gaWZyYW1lRG9jdW1lbnQuRjtcbn07XG5cbi8vIENoZWNrIGZvciBkb2N1bWVudC5kb21haW4gYW5kIGFjdGl2ZSB4IHN1cHBvcnRcbi8vIE5vIG5lZWQgdG8gdXNlIGFjdGl2ZSB4IGFwcHJvYWNoIHdoZW4gZG9jdW1lbnQuZG9tYWluIGlzIG5vdCBzZXRcbi8vIHNlZSBodHRwczovL2dpdGh1Yi5jb20vZXMtc2hpbXMvZXM1LXNoaW0vaXNzdWVzLzE1MFxuLy8gdmFyaWF0aW9uIG9mIGh0dHBzOi8vZ2l0aHViLmNvbS9raXRjYW1icmlkZ2UvZXM1LXNoaW0vY29tbWl0LzRmNzM4YWMwNjYzNDZcbi8vIGF2b2lkIElFIEdDIGJ1Z1xudmFyIGFjdGl2ZVhEb2N1bWVudDtcbnZhciBOdWxsUHJvdG9PYmplY3QgPSBmdW5jdGlvbiAoKSB7XG4gIHRyeSB7XG4gICAgYWN0aXZlWERvY3VtZW50ID0gbmV3IEFjdGl2ZVhPYmplY3QoJ2h0bWxmaWxlJyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7IC8qIGlnbm9yZSAqLyB9XG4gIE51bGxQcm90b09iamVjdCA9IHR5cGVvZiBkb2N1bWVudCAhPSAndW5kZWZpbmVkJ1xuICAgID8gZG9jdW1lbnQuZG9tYWluICYmIGFjdGl2ZVhEb2N1bWVudFxuICAgICAgPyBOdWxsUHJvdG9PYmplY3RWaWFBY3RpdmVYKGFjdGl2ZVhEb2N1bWVudCkgLy8gb2xkIElFXG4gICAgICA6IE51bGxQcm90b09iamVjdFZpYUlGcmFtZSgpXG4gICAgOiBOdWxsUHJvdG9PYmplY3RWaWFBY3RpdmVYKGFjdGl2ZVhEb2N1bWVudCk7IC8vIFdTSFxuICB2YXIgbGVuZ3RoID0gZW51bUJ1Z0tleXMubGVuZ3RoO1xuICB3aGlsZSAobGVuZ3RoLS0pIGRlbGV0ZSBOdWxsUHJvdG9PYmplY3RbUFJPVE9UWVBFXVtlbnVtQnVnS2V5c1tsZW5ndGhdXTtcbiAgcmV0dXJuIE51bGxQcm90b09iamVjdCgpO1xufTtcblxuaGlkZGVuS2V5c1tJRV9QUk9UT10gPSB0cnVlO1xuXG4vLyBgT2JqZWN0LmNyZWF0ZWAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5jcmVhdGVcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtY3JlYXRlIC0tIHNhZmVcbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmNyZWF0ZSB8fCBmdW5jdGlvbiBjcmVhdGUoTywgUHJvcGVydGllcykge1xuICB2YXIgcmVzdWx0O1xuICBpZiAoTyAhPT0gbnVsbCkge1xuICAgIEVtcHR5Q29uc3RydWN0b3JbUFJPVE9UWVBFXSA9IGFuT2JqZWN0KE8pO1xuICAgIHJlc3VsdCA9IG5ldyBFbXB0eUNvbnN0cnVjdG9yKCk7XG4gICAgRW1wdHlDb25zdHJ1Y3RvcltQUk9UT1RZUEVdID0gbnVsbDtcbiAgICAvLyBhZGQgXCJfX3Byb3RvX19cIiBmb3IgT2JqZWN0LmdldFByb3RvdHlwZU9mIHBvbHlmaWxsXG4gICAgcmVzdWx0W0lFX1BST1RPXSA9IE87XG4gIH0gZWxzZSByZXN1bHQgPSBOdWxsUHJvdG9PYmplY3QoKTtcbiAgcmV0dXJuIFByb3BlcnRpZXMgPT09IHVuZGVmaW5lZCA/IHJlc3VsdCA6IGRlZmluZVByb3BlcnRpZXNNb2R1bGUuZihyZXN1bHQsIFByb3BlcnRpZXMpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIFY4X1BST1RPVFlQRV9ERUZJTkVfQlVHID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3Y4LXByb3RvdHlwZS1kZWZpbmUtYnVnJyk7XG52YXIgZGVmaW5lUHJvcGVydHlNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eScpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FuLW9iamVjdCcpO1xudmFyIHRvSW5kZXhlZE9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdCcpO1xudmFyIG9iamVjdEtleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWtleXMnKTtcblxuLy8gYE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LmRlZmluZXByb3BlcnRpZXNcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZGVmaW5lcHJvcGVydGllcyAtLSBzYWZlXG5leHBvcnRzLmYgPSBERVNDUklQVE9SUyAmJiAhVjhfUFJPVE9UWVBFX0RFRklORV9CVUcgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyA6IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXMoTywgUHJvcGVydGllcykge1xuICBhbk9iamVjdChPKTtcbiAgdmFyIHByb3BzID0gdG9JbmRleGVkT2JqZWN0KFByb3BlcnRpZXMpO1xuICB2YXIga2V5cyA9IG9iamVjdEtleXMoUHJvcGVydGllcyk7XG4gIHZhciBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIGtleTtcbiAgd2hpbGUgKGxlbmd0aCA+IGluZGV4KSBkZWZpbmVQcm9wZXJ0eU1vZHVsZS5mKE8sIGtleSA9IGtleXNbaW5kZXgrK10sIHByb3BzW2tleV0pO1xuICByZXR1cm4gTztcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnMnKTtcbnZhciBJRThfRE9NX0RFRklORSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pZTgtZG9tLWRlZmluZScpO1xudmFyIFY4X1BST1RPVFlQRV9ERUZJTkVfQlVHID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3Y4LXByb3RvdHlwZS1kZWZpbmUtYnVnJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4tb2JqZWN0Jyk7XG52YXIgdG9Qcm9wZXJ0eUtleSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1wcm9wZXJ0eS1rZXknKTtcblxudmFyICRUeXBlRXJyb3IgPSBUeXBlRXJyb3I7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWRlZmluZXByb3BlcnR5IC0tIHNhZmVcbnZhciAkZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWdldG93bnByb3BlcnR5ZGVzY3JpcHRvciAtLSBzYWZlXG52YXIgJGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgRU5VTUVSQUJMRSA9ICdlbnVtZXJhYmxlJztcbnZhciBDT05GSUdVUkFCTEUgPSAnY29uZmlndXJhYmxlJztcbnZhciBXUklUQUJMRSA9ICd3cml0YWJsZSc7XG5cbi8vIGBPYmplY3QuZGVmaW5lUHJvcGVydHlgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QuZGVmaW5lcHJvcGVydHlcbmV4cG9ydHMuZiA9IERFU0NSSVBUT1JTID8gVjhfUFJPVE9UWVBFX0RFRklORV9CVUcgPyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKSB7XG4gIGFuT2JqZWN0KE8pO1xuICBQID0gdG9Qcm9wZXJ0eUtleShQKTtcbiAgYW5PYmplY3QoQXR0cmlidXRlcyk7XG4gIGlmICh0eXBlb2YgTyA9PT0gJ2Z1bmN0aW9uJyAmJiBQID09PSAncHJvdG90eXBlJyAmJiAndmFsdWUnIGluIEF0dHJpYnV0ZXMgJiYgV1JJVEFCTEUgaW4gQXR0cmlidXRlcyAmJiAhQXR0cmlidXRlc1tXUklUQUJMRV0pIHtcbiAgICB2YXIgY3VycmVudCA9ICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgUCk7XG4gICAgaWYgKGN1cnJlbnQgJiYgY3VycmVudFtXUklUQUJMRV0pIHtcbiAgICAgIE9bUF0gPSBBdHRyaWJ1dGVzLnZhbHVlO1xuICAgICAgQXR0cmlidXRlcyA9IHtcbiAgICAgICAgY29uZmlndXJhYmxlOiBDT05GSUdVUkFCTEUgaW4gQXR0cmlidXRlcyA/IEF0dHJpYnV0ZXNbQ09ORklHVVJBQkxFXSA6IGN1cnJlbnRbQ09ORklHVVJBQkxFXSxcbiAgICAgICAgZW51bWVyYWJsZTogRU5VTUVSQUJMRSBpbiBBdHRyaWJ1dGVzID8gQXR0cmlidXRlc1tFTlVNRVJBQkxFXSA6IGN1cnJlbnRbRU5VTUVSQUJMRV0sXG4gICAgICAgIHdyaXRhYmxlOiBmYWxzZVxuICAgICAgfTtcbiAgICB9XG4gIH0gcmV0dXJuICRkZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKTtcbn0gOiAkZGVmaW5lUHJvcGVydHkgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKSB7XG4gIGFuT2JqZWN0KE8pO1xuICBQID0gdG9Qcm9wZXJ0eUtleShQKTtcbiAgYW5PYmplY3QoQXR0cmlidXRlcyk7XG4gIGlmIChJRThfRE9NX0RFRklORSkgdHJ5IHtcbiAgICByZXR1cm4gJGRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpO1xuICB9IGNhdGNoIChlcnJvcikgeyAvKiBlbXB0eSAqLyB9XG4gIGlmICgnZ2V0JyBpbiBBdHRyaWJ1dGVzIHx8ICdzZXQnIGluIEF0dHJpYnV0ZXMpIHRocm93IG5ldyAkVHlwZUVycm9yKCdBY2Nlc3NvcnMgbm90IHN1cHBvcnRlZCcpO1xuICBpZiAoJ3ZhbHVlJyBpbiBBdHRyaWJ1dGVzKSBPW1BdID0gQXR0cmlidXRlcy52YWx1ZTtcbiAgcmV0dXJuIE87XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1jYWxsJyk7XG52YXIgcHJvcGVydHlJc0VudW1lcmFibGVNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LXByb3BlcnR5LWlzLWVudW1lcmFibGUnKTtcbnZhciBjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5LWRlc2NyaXB0b3InKTtcbnZhciB0b0luZGV4ZWRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8taW5kZXhlZC1vYmplY3QnKTtcbnZhciB0b1Byb3BlcnR5S2V5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXByb3BlcnR5LWtleScpO1xudmFyIGhhc093biA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oYXMtb3duLXByb3BlcnR5Jyk7XG52YXIgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaWU4LWRvbS1kZWZpbmUnKTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1nZXRvd25wcm9wZXJ0eWRlc2NyaXB0b3IgLS0gc2FmZVxudmFyICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuXG4vLyBgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcmAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5nZXRvd25wcm9wZXJ0eWRlc2NyaXB0b3JcbmV4cG9ydHMuZiA9IERFU0NSSVBUT1JTID8gJGdldE93blByb3BlcnR5RGVzY3JpcHRvciA6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKSB7XG4gIE8gPSB0b0luZGV4ZWRPYmplY3QoTyk7XG4gIFAgPSB0b1Byb3BlcnR5S2V5KFApO1xuICBpZiAoSUU4X0RPTV9ERUZJTkUpIHRyeSB7XG4gICAgcmV0dXJuICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgUCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7IC8qIGVtcHR5ICovIH1cbiAgaWYgKGhhc093bihPLCBQKSkgcmV0dXJuIGNyZWF0ZVByb3BlcnR5RGVzY3JpcHRvcighY2FsbChwcm9wZXJ0eUlzRW51bWVyYWJsZU1vZHVsZS5mLCBPLCBQKSwgT1tQXSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgZXMvbm8tb2JqZWN0LWdldG93bnByb3BlcnR5bmFtZXMgLS0gc2FmZSAqL1xudmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2xhc3NvZi1yYXcnKTtcbnZhciB0b0luZGV4ZWRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8taW5kZXhlZC1vYmplY3QnKTtcbnZhciAkZ2V0T3duUHJvcGVydHlOYW1lcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1uYW1lcycpLmY7XG52YXIgYXJyYXlTbGljZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1zbGljZScpO1xuXG52YXIgd2luZG93TmFtZXMgPSB0eXBlb2Ygd2luZG93ID09ICdvYmplY3QnICYmIHdpbmRvdyAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lc1xuICA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHdpbmRvdykgOiBbXTtcblxudmFyIGdldFdpbmRvd05hbWVzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuICRnZXRPd25Qcm9wZXJ0eU5hbWVzKGl0KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gYXJyYXlTbGljZSh3aW5kb3dOYW1lcyk7XG4gIH1cbn07XG5cbi8vIGZhbGxiYWNrIGZvciBJRTExIGJ1Z2d5IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzIHdpdGggaWZyYW1lIGFuZCB3aW5kb3dcbm1vZHVsZS5leHBvcnRzLmYgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKGl0KSB7XG4gIHJldHVybiB3aW5kb3dOYW1lcyAmJiBjbGFzc29mKGl0KSA9PT0gJ1dpbmRvdydcbiAgICA/IGdldFdpbmRvd05hbWVzKGl0KVxuICAgIDogJGdldE93blByb3BlcnR5TmFtZXModG9JbmRleGVkT2JqZWN0KGl0KSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGludGVybmFsT2JqZWN0S2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3Qta2V5cy1pbnRlcm5hbCcpO1xudmFyIGVudW1CdWdLZXlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2VudW0tYnVnLWtleXMnKTtcblxudmFyIGhpZGRlbktleXMgPSBlbnVtQnVnS2V5cy5jb25jYXQoJ2xlbmd0aCcsICdwcm90b3R5cGUnKTtcblxuLy8gYE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LmdldG93bnByb3BlcnR5bmFtZXNcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZ2V0b3ducHJvcGVydHluYW1lcyAtLSBzYWZlXG5leHBvcnRzLmYgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyB8fCBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKE8pIHtcbiAgcmV0dXJuIGludGVybmFsT2JqZWN0S2V5cyhPLCBoaWRkZW5LZXlzKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWdldG93bnByb3BlcnR5c3ltYm9scyAtLSBzYWZlXG5leHBvcnRzLmYgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGhhc093biA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oYXMtb3duLXByb3BlcnR5Jyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLW9iamVjdCcpO1xudmFyIHNoYXJlZEtleSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zaGFyZWQta2V5Jyk7XG52YXIgQ09SUkVDVF9QUk9UT1RZUEVfR0VUVEVSID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NvcnJlY3QtcHJvdG90eXBlLWdldHRlcicpO1xuXG52YXIgSUVfUFJPVE8gPSBzaGFyZWRLZXkoJ0lFX1BST1RPJyk7XG52YXIgJE9iamVjdCA9IE9iamVjdDtcbnZhciBPYmplY3RQcm90b3R5cGUgPSAkT2JqZWN0LnByb3RvdHlwZTtcblxuLy8gYE9iamVjdC5nZXRQcm90b3R5cGVPZmAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5nZXRwcm90b3R5cGVvZlxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1nZXRwcm90b3R5cGVvZiAtLSBzYWZlXG5tb2R1bGUuZXhwb3J0cyA9IENPUlJFQ1RfUFJPVE9UWVBFX0dFVFRFUiA/ICRPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiAoTykge1xuICB2YXIgb2JqZWN0ID0gdG9PYmplY3QoTyk7XG4gIGlmIChoYXNPd24ob2JqZWN0LCBJRV9QUk9UTykpIHJldHVybiBvYmplY3RbSUVfUFJPVE9dO1xuICB2YXIgY29uc3RydWN0b3IgPSBvYmplY3QuY29uc3RydWN0b3I7XG4gIGlmIChpc0NhbGxhYmxlKGNvbnN0cnVjdG9yKSAmJiBvYmplY3QgaW5zdGFuY2VvZiBjb25zdHJ1Y3Rvcikge1xuICAgIHJldHVybiBjb25zdHJ1Y3Rvci5wcm90b3R5cGU7XG4gIH0gcmV0dXJuIG9iamVjdCBpbnN0YW5jZW9mICRPYmplY3QgPyBPYmplY3RQcm90b3R5cGUgOiBudWxsO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW9iamVjdCcpO1xudmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2xhc3NvZi1yYXcnKTtcbnZhciBBUlJBWV9CVUZGRVJfTk9OX0VYVEVOU0lCTEUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYXJyYXktYnVmZmVyLW5vbi1leHRlbnNpYmxlJyk7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtaXNleHRlbnNpYmxlIC0tIHNhZmVcbnZhciAkaXNFeHRlbnNpYmxlID0gT2JqZWN0LmlzRXh0ZW5zaWJsZTtcbnZhciBGQUlMU19PTl9QUklNSVRJVkVTID0gZmFpbHMoZnVuY3Rpb24gKCkgeyAkaXNFeHRlbnNpYmxlKDEpOyB9KTtcblxuLy8gYE9iamVjdC5pc0V4dGVuc2libGVgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QuaXNleHRlbnNpYmxlXG5tb2R1bGUuZXhwb3J0cyA9IChGQUlMU19PTl9QUklNSVRJVkVTIHx8IEFSUkFZX0JVRkZFUl9OT05fRVhURU5TSUJMRSkgPyBmdW5jdGlvbiBpc0V4dGVuc2libGUoaXQpIHtcbiAgaWYgKCFpc09iamVjdChpdCkpIHJldHVybiBmYWxzZTtcbiAgaWYgKEFSUkFZX0JVRkZFUl9OT05fRVhURU5TSUJMRSAmJiBjbGFzc29mKGl0KSA9PT0gJ0FycmF5QnVmZmVyJykgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gJGlzRXh0ZW5zaWJsZSA/ICRpc0V4dGVuc2libGUoaXQpIDogdHJ1ZTtcbn0gOiAkaXNFeHRlbnNpYmxlO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHVuY3VycnlUaGlzKHt9LmlzUHJvdG90eXBlT2YpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcycpO1xudmFyIGhhc093biA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oYXMtb3duLXByb3BlcnR5Jyk7XG52YXIgdG9JbmRleGVkT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWluZGV4ZWQtb2JqZWN0Jyk7XG52YXIgaW5kZXhPZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1pbmNsdWRlcycpLmluZGV4T2Y7XG52YXIgaGlkZGVuS2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oaWRkZW4ta2V5cycpO1xuXG52YXIgcHVzaCA9IHVuY3VycnlUaGlzKFtdLnB1c2gpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmplY3QsIG5hbWVzKSB7XG4gIHZhciBPID0gdG9JbmRleGVkT2JqZWN0KG9iamVjdCk7XG4gIHZhciBpID0gMDtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICB2YXIga2V5O1xuICBmb3IgKGtleSBpbiBPKSAhaGFzT3duKGhpZGRlbktleXMsIGtleSkgJiYgaGFzT3duKE8sIGtleSkgJiYgcHVzaChyZXN1bHQsIGtleSk7XG4gIC8vIERvbid0IGVudW0gYnVnICYgaGlkZGVuIGtleXNcbiAgd2hpbGUgKG5hbWVzLmxlbmd0aCA+IGkpIGlmIChoYXNPd24oTywga2V5ID0gbmFtZXNbaSsrXSkpIHtcbiAgICB+aW5kZXhPZihyZXN1bHQsIGtleSkgfHwgcHVzaChyZXN1bHQsIGtleSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgaW50ZXJuYWxPYmplY3RLZXlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1rZXlzLWludGVybmFsJyk7XG52YXIgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZW51bS1idWcta2V5cycpO1xuXG4vLyBgT2JqZWN0LmtleXNgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3Qua2V5c1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1rZXlzIC0tIHNhZmVcbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24ga2V5cyhPKSB7XG4gIHJldHVybiBpbnRlcm5hbE9iamVjdEtleXMoTywgZW51bUJ1Z0tleXMpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkcHJvcGVydHlJc0VudW1lcmFibGUgPSB7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZ2V0b3ducHJvcGVydHlkZXNjcmlwdG9yIC0tIHNhZmVcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuXG4vLyBOYXNob3JuIH4gSkRLOCBidWdcbnZhciBOQVNIT1JOX0JVRyA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvciAmJiAhJHByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoeyAxOiAyIH0sIDEpO1xuXG4vLyBgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZWAgbWV0aG9kIGltcGxlbWVudGF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5wcm90b3R5cGUucHJvcGVydHlpc2VudW1lcmFibGVcbmV4cG9ydHMuZiA9IE5BU0hPUk5fQlVHID8gZnVuY3Rpb24gcHJvcGVydHlJc0VudW1lcmFibGUoVikge1xuICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcih0aGlzLCBWKTtcbiAgcmV0dXJuICEhZGVzY3JpcHRvciAmJiBkZXNjcmlwdG9yLmVudW1lcmFibGU7XG59IDogJHByb3BlcnR5SXNFbnVtZXJhYmxlO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tcHJvdG8gLS0gc2FmZSAqL1xudmFyIHVuY3VycnlUaGlzQWNjZXNzb3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzLWFjY2Vzc29yJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4tb2JqZWN0Jyk7XG52YXIgYVBvc3NpYmxlUHJvdG90eXBlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2EtcG9zc2libGUtcHJvdG90eXBlJyk7XG5cbi8vIGBPYmplY3Quc2V0UHJvdG90eXBlT2ZgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3Quc2V0cHJvdG90eXBlb2Zcbi8vIFdvcmtzIHdpdGggX19wcm90b19fIG9ubHkuIE9sZCB2OCBjYW4ndCB3b3JrIHdpdGggbnVsbCBwcm90byBvYmplY3RzLlxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1zZXRwcm90b3R5cGVvZiAtLSBzYWZlXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCAoJ19fcHJvdG9fXycgaW4ge30gPyBmdW5jdGlvbiAoKSB7XG4gIHZhciBDT1JSRUNUX1NFVFRFUiA9IGZhbHNlO1xuICB2YXIgdGVzdCA9IHt9O1xuICB2YXIgc2V0dGVyO1xuICB0cnkge1xuICAgIHNldHRlciA9IHVuY3VycnlUaGlzQWNjZXNzb3IoT2JqZWN0LnByb3RvdHlwZSwgJ19fcHJvdG9fXycsICdzZXQnKTtcbiAgICBzZXR0ZXIodGVzdCwgW10pO1xuICAgIENPUlJFQ1RfU0VUVEVSID0gdGVzdCBpbnN0YW5jZW9mIEFycmF5O1xuICB9IGNhdGNoIChlcnJvcikgeyAvKiBlbXB0eSAqLyB9XG4gIHJldHVybiBmdW5jdGlvbiBzZXRQcm90b3R5cGVPZihPLCBwcm90bykge1xuICAgIGFuT2JqZWN0KE8pO1xuICAgIGFQb3NzaWJsZVByb3RvdHlwZShwcm90byk7XG4gICAgaWYgKENPUlJFQ1RfU0VUVEVSKSBzZXR0ZXIoTywgcHJvdG8pO1xuICAgIGVsc2UgTy5fX3Byb3RvX18gPSBwcm90bztcbiAgICByZXR1cm4gTztcbiAgfTtcbn0oKSA6IHVuZGVmaW5lZCk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnMnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcycpO1xudmFyIG9iamVjdEdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtcHJvdG90eXBlLW9mJyk7XG52YXIgb2JqZWN0S2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3Qta2V5cycpO1xudmFyIHRvSW5kZXhlZE9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdCcpO1xudmFyICRwcm9wZXJ0eUlzRW51bWVyYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtcHJvcGVydHktaXMtZW51bWVyYWJsZScpLmY7XG5cbnZhciBwcm9wZXJ0eUlzRW51bWVyYWJsZSA9IHVuY3VycnlUaGlzKCRwcm9wZXJ0eUlzRW51bWVyYWJsZSk7XG52YXIgcHVzaCA9IHVuY3VycnlUaGlzKFtdLnB1c2gpO1xuXG4vLyBpbiBzb21lIElFIHZlcnNpb25zLCBgcHJvcGVydHlJc0VudW1lcmFibGVgIHJldHVybnMgaW5jb3JyZWN0IHJlc3VsdCBvbiBpbnRlZ2VyIGtleXNcbi8vIG9mIGBudWxsYCBwcm90b3R5cGUgb2JqZWN0c1xudmFyIElFX0JVRyA9IERFU0NSSVBUT1JTICYmIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1jcmVhdGUgLS0gc2FmZVxuICB2YXIgTyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIE9bMl0gPSAyO1xuICByZXR1cm4gIXByb3BlcnR5SXNFbnVtZXJhYmxlKE8sIDIpO1xufSk7XG5cbi8vIGBPYmplY3QueyBlbnRyaWVzLCB2YWx1ZXMgfWAgbWV0aG9kcyBpbXBsZW1lbnRhdGlvblxudmFyIGNyZWF0ZU1ldGhvZCA9IGZ1bmN0aW9uIChUT19FTlRSSUVTKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoaXQpIHtcbiAgICB2YXIgTyA9IHRvSW5kZXhlZE9iamVjdChpdCk7XG4gICAgdmFyIGtleXMgPSBvYmplY3RLZXlzKE8pO1xuICAgIHZhciBJRV9XT1JLQVJPVU5EID0gSUVfQlVHICYmIG9iamVjdEdldFByb3RvdHlwZU9mKE8pID09PSBudWxsO1xuICAgIHZhciBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgICB2YXIgaSA9IDA7XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIHZhciBrZXk7XG4gICAgd2hpbGUgKGxlbmd0aCA+IGkpIHtcbiAgICAgIGtleSA9IGtleXNbaSsrXTtcbiAgICAgIGlmICghREVTQ1JJUFRPUlMgfHwgKElFX1dPUktBUk9VTkQgPyBrZXkgaW4gTyA6IHByb3BlcnR5SXNFbnVtZXJhYmxlKE8sIGtleSkpKSB7XG4gICAgICAgIHB1c2gocmVzdWx0LCBUT19FTlRSSUVTID8gW2tleSwgT1trZXldXSA6IE9ba2V5XSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLy8gYE9iamVjdC5lbnRyaWVzYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QuZW50cmllc1xuICBlbnRyaWVzOiBjcmVhdGVNZXRob2QodHJ1ZSksXG4gIC8vIGBPYmplY3QudmFsdWVzYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QudmFsdWVzXG4gIHZhbHVlczogY3JlYXRlTWV0aG9kKGZhbHNlKVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBUT19TVFJJTkdfVEFHX1NVUFBPUlQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tc3RyaW5nLXRhZy1zdXBwb3J0Jyk7XG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jbGFzc29mJyk7XG5cbi8vIGBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nYCBtZXRob2QgaW1wbGVtZW50YXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LnByb3RvdHlwZS50b3N0cmluZ1xubW9kdWxlLmV4cG9ydHMgPSBUT19TVFJJTkdfVEFHX1NVUFBPUlQgPyB7fS50b1N0cmluZyA6IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICByZXR1cm4gJ1tvYmplY3QgJyArIGNsYXNzb2YodGhpcykgKyAnXSc7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNhbGwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tY2FsbCcpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1vYmplY3QnKTtcblxudmFyICRUeXBlRXJyb3IgPSBUeXBlRXJyb3I7XG5cbi8vIGBPcmRpbmFyeVRvUHJpbWl0aXZlYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb3JkaW5hcnl0b3ByaW1pdGl2ZVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaW5wdXQsIHByZWYpIHtcbiAgdmFyIGZuLCB2YWw7XG4gIGlmIChwcmVmID09PSAnc3RyaW5nJyAmJiBpc0NhbGxhYmxlKGZuID0gaW5wdXQudG9TdHJpbmcpICYmICFpc09iamVjdCh2YWwgPSBjYWxsKGZuLCBpbnB1dCkpKSByZXR1cm4gdmFsO1xuICBpZiAoaXNDYWxsYWJsZShmbiA9IGlucHV0LnZhbHVlT2YpICYmICFpc09iamVjdCh2YWwgPSBjYWxsKGZuLCBpbnB1dCkpKSByZXR1cm4gdmFsO1xuICBpZiAocHJlZiAhPT0gJ3N0cmluZycgJiYgaXNDYWxsYWJsZShmbiA9IGlucHV0LnRvU3RyaW5nKSAmJiAhaXNPYmplY3QodmFsID0gY2FsbChmbiwgaW5wdXQpKSkgcmV0dXJuIHZhbDtcbiAgdGhyb3cgbmV3ICRUeXBlRXJyb3IoXCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWVcIik7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdldEJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LWJ1aWx0LWluJyk7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lc01vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1uYW1lcycpO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9sc01vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1zeW1ib2xzJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4tb2JqZWN0Jyk7XG5cbnZhciBjb25jYXQgPSB1bmN1cnJ5VGhpcyhbXS5jb25jYXQpO1xuXG4vLyBhbGwgb2JqZWN0IGtleXMsIGluY2x1ZGVzIG5vbi1lbnVtZXJhYmxlIGFuZCBzeW1ib2xzXG5tb2R1bGUuZXhwb3J0cyA9IGdldEJ1aWx0SW4oJ1JlZmxlY3QnLCAnb3duS2V5cycpIHx8IGZ1bmN0aW9uIG93bktleXMoaXQpIHtcbiAgdmFyIGtleXMgPSBnZXRPd25Qcm9wZXJ0eU5hbWVzTW9kdWxlLmYoYW5PYmplY3QoaXQpKTtcbiAgdmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9sc01vZHVsZS5mO1xuICByZXR1cm4gZ2V0T3duUHJvcGVydHlTeW1ib2xzID8gY29uY2F0KGtleXMsIGdldE93blByb3BlcnR5U3ltYm9scyhpdCkpIDoga2V5cztcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdsb2JhbDtcbiIsIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGV4ZWMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4geyBlcnJvcjogZmFsc2UsIHZhbHVlOiBleGVjKCkgfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4geyBlcnJvcjogdHJ1ZSwgdmFsdWU6IGVycm9yIH07XG4gIH1cbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIE5hdGl2ZVByb21pc2VDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9wcm9taXNlLW5hdGl2ZS1jb25zdHJ1Y3RvcicpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciBpc0ZvcmNlZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1mb3JjZWQnKTtcbnZhciBpbnNwZWN0U291cmNlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2luc3BlY3Qtc291cmNlJyk7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG52YXIgSVNfQlJPV1NFUiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9lbmdpbmUtaXMtYnJvd3NlcicpO1xudmFyIElTX0RFTk8gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZW5naW5lLWlzLWRlbm8nKTtcbnZhciBJU19QVVJFID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLXB1cmUnKTtcbnZhciBWOF9WRVJTSU9OID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2VuZ2luZS12OC12ZXJzaW9uJyk7XG5cbnZhciBOYXRpdmVQcm9taXNlUHJvdG90eXBlID0gTmF0aXZlUHJvbWlzZUNvbnN0cnVjdG9yICYmIE5hdGl2ZVByb21pc2VDb25zdHJ1Y3Rvci5wcm90b3R5cGU7XG52YXIgU1BFQ0lFUyA9IHdlbGxLbm93blN5bWJvbCgnc3BlY2llcycpO1xudmFyIFNVQkNMQVNTSU5HID0gZmFsc2U7XG52YXIgTkFUSVZFX1BST01JU0VfUkVKRUNUSU9OX0VWRU5UID0gaXNDYWxsYWJsZShnbG9iYWwuUHJvbWlzZVJlamVjdGlvbkV2ZW50KTtcblxudmFyIEZPUkNFRF9QUk9NSVNFX0NPTlNUUlVDVE9SID0gaXNGb3JjZWQoJ1Byb21pc2UnLCBmdW5jdGlvbiAoKSB7XG4gIHZhciBQUk9NSVNFX0NPTlNUUlVDVE9SX1NPVVJDRSA9IGluc3BlY3RTb3VyY2UoTmF0aXZlUHJvbWlzZUNvbnN0cnVjdG9yKTtcbiAgdmFyIEdMT0JBTF9DT1JFX0pTX1BST01JU0UgPSBQUk9NSVNFX0NPTlNUUlVDVE9SX1NPVVJDRSAhPT0gU3RyaW5nKE5hdGl2ZVByb21pc2VDb25zdHJ1Y3Rvcik7XG4gIC8vIFY4IDYuNiAoTm9kZSAxMCBhbmQgQ2hyb21lIDY2KSBoYXZlIGEgYnVnIHdpdGggcmVzb2x2aW5nIGN1c3RvbSB0aGVuYWJsZXNcbiAgLy8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9ODMwNTY1XG4gIC8vIFdlIGNhbid0IGRldGVjdCBpdCBzeW5jaHJvbm91c2x5LCBzbyBqdXN0IGNoZWNrIHZlcnNpb25zXG4gIGlmICghR0xPQkFMX0NPUkVfSlNfUFJPTUlTRSAmJiBWOF9WRVJTSU9OID09PSA2NikgcmV0dXJuIHRydWU7XG4gIC8vIFdlIG5lZWQgUHJvbWlzZSN7IGNhdGNoLCBmaW5hbGx5IH0gaW4gdGhlIHB1cmUgdmVyc2lvbiBmb3IgcHJldmVudGluZyBwcm90b3R5cGUgcG9sbHV0aW9uXG4gIGlmIChJU19QVVJFICYmICEoTmF0aXZlUHJvbWlzZVByb3RvdHlwZVsnY2F0Y2gnXSAmJiBOYXRpdmVQcm9taXNlUHJvdG90eXBlWydmaW5hbGx5J10pKSByZXR1cm4gdHJ1ZTtcbiAgLy8gV2UgY2FuJ3QgdXNlIEBAc3BlY2llcyBmZWF0dXJlIGRldGVjdGlvbiBpbiBWOCBzaW5jZSBpdCBjYXVzZXNcbiAgLy8gZGVvcHRpbWl6YXRpb24gYW5kIHBlcmZvcm1hbmNlIGRlZ3JhZGF0aW9uXG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy82NzlcbiAgaWYgKCFWOF9WRVJTSU9OIHx8IFY4X1ZFUlNJT04gPCA1MSB8fCAhL25hdGl2ZSBjb2RlLy50ZXN0KFBST01JU0VfQ09OU1RSVUNUT1JfU09VUkNFKSkge1xuICAgIC8vIERldGVjdCBjb3JyZWN0bmVzcyBvZiBzdWJjbGFzc2luZyB3aXRoIEBAc3BlY2llcyBzdXBwb3J0XG4gICAgdmFyIHByb21pc2UgPSBuZXcgTmF0aXZlUHJvbWlzZUNvbnN0cnVjdG9yKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUoMSk7IH0pO1xuICAgIHZhciBGYWtlUHJvbWlzZSA9IGZ1bmN0aW9uIChleGVjKSB7XG4gICAgICBleGVjKGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfSwgZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9KTtcbiAgICB9O1xuICAgIHZhciBjb25zdHJ1Y3RvciA9IHByb21pc2UuY29uc3RydWN0b3IgPSB7fTtcbiAgICBjb25zdHJ1Y3RvcltTUEVDSUVTXSA9IEZha2VQcm9taXNlO1xuICAgIFNVQkNMQVNTSU5HID0gcHJvbWlzZS50aGVuKGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfSkgaW5zdGFuY2VvZiBGYWtlUHJvbWlzZTtcbiAgICBpZiAoIVNVQkNMQVNTSU5HKSByZXR1cm4gdHJ1ZTtcbiAgLy8gVW5oYW5kbGVkIHJlamVjdGlvbnMgdHJhY2tpbmcgc3VwcG9ydCwgTm9kZUpTIFByb21pc2Ugd2l0aG91dCBpdCBmYWlscyBAQHNwZWNpZXMgdGVzdFxuICB9IHJldHVybiAhR0xPQkFMX0NPUkVfSlNfUFJPTUlTRSAmJiAoSVNfQlJPV1NFUiB8fCBJU19ERU5PKSAmJiAhTkFUSVZFX1BST01JU0VfUkVKRUNUSU9OX0VWRU5UO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBDT05TVFJVQ1RPUjogRk9SQ0VEX1BST01JU0VfQ09OU1RSVUNUT1IsXG4gIFJFSkVDVElPTl9FVkVOVDogTkFUSVZFX1BST01JU0VfUkVKRUNUSU9OX0VWRU5ULFxuICBTVUJDTEFTU0lORzogU1VCQ0xBU1NJTkdcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdsb2JhbC5Qcm9taXNlO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FuLW9iamVjdCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW9iamVjdCcpO1xudmFyIG5ld1Byb21pc2VDYXBhYmlsaXR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL25ldy1wcm9taXNlLWNhcGFiaWxpdHknKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQywgeCkge1xuICBhbk9iamVjdChDKTtcbiAgaWYgKGlzT2JqZWN0KHgpICYmIHguY29uc3RydWN0b3IgPT09IEMpIHJldHVybiB4O1xuICB2YXIgcHJvbWlzZUNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eS5mKEMpO1xuICB2YXIgcmVzb2x2ZSA9IHByb21pc2VDYXBhYmlsaXR5LnJlc29sdmU7XG4gIHJlc29sdmUoeCk7XG4gIHJldHVybiBwcm9taXNlQ2FwYWJpbGl0eS5wcm9taXNlO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBOYXRpdmVQcm9taXNlQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcHJvbWlzZS1uYXRpdmUtY29uc3RydWN0b3InKTtcbnZhciBjaGVja0NvcnJlY3RuZXNzT2ZJdGVyYXRpb24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2hlY2stY29ycmVjdG5lc3Mtb2YtaXRlcmF0aW9uJyk7XG52YXIgRk9SQ0VEX1BST01JU0VfQ09OU1RSVUNUT1IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcHJvbWlzZS1jb25zdHJ1Y3Rvci1kZXRlY3Rpb24nKS5DT05TVFJVQ1RPUjtcblxubW9kdWxlLmV4cG9ydHMgPSBGT1JDRURfUFJPTUlTRV9DT05TVFJVQ1RPUiB8fCAhY2hlY2tDb3JyZWN0bmVzc09mSXRlcmF0aW9uKGZ1bmN0aW9uIChpdGVyYWJsZSkge1xuICBOYXRpdmVQcm9taXNlQ29uc3RydWN0b3IuYWxsKGl0ZXJhYmxlKS50aGVuKHVuZGVmaW5lZCwgZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9KTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHknKS5mO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChUYXJnZXQsIFNvdXJjZSwga2V5KSB7XG4gIGtleSBpbiBUYXJnZXQgfHwgZGVmaW5lUHJvcGVydHkoVGFyZ2V0LCBrZXksIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBTb3VyY2Vba2V5XTsgfSxcbiAgICBzZXQ6IGZ1bmN0aW9uIChpdCkgeyBTb3VyY2Vba2V5XSA9IGl0OyB9XG4gIH0pO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBRdWV1ZSA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5oZWFkID0gbnVsbDtcbiAgdGhpcy50YWlsID0gbnVsbDtcbn07XG5cblF1ZXVlLnByb3RvdHlwZSA9IHtcbiAgYWRkOiBmdW5jdGlvbiAoaXRlbSkge1xuICAgIHZhciBlbnRyeSA9IHsgaXRlbTogaXRlbSwgbmV4dDogbnVsbCB9O1xuICAgIHZhciB0YWlsID0gdGhpcy50YWlsO1xuICAgIGlmICh0YWlsKSB0YWlsLm5leHQgPSBlbnRyeTtcbiAgICBlbHNlIHRoaXMuaGVhZCA9IGVudHJ5O1xuICAgIHRoaXMudGFpbCA9IGVudHJ5O1xuICB9LFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZW50cnkgPSB0aGlzLmhlYWQ7XG4gICAgaWYgKGVudHJ5KSB7XG4gICAgICB2YXIgbmV4dCA9IHRoaXMuaGVhZCA9IGVudHJ5Lm5leHQ7XG4gICAgICBpZiAobmV4dCA9PT0gbnVsbCkgdGhpcy50YWlsID0gbnVsbDtcbiAgICAgIHJldHVybiBlbnRyeS5pdGVtO1xuICAgIH1cbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBRdWV1ZTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBjYWxsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWNhbGwnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hbi1vYmplY3QnKTtcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jbGFzc29mLXJhdycpO1xudmFyIHJlZ2V4cEV4ZWMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLWV4ZWMnKTtcblxudmFyICRUeXBlRXJyb3IgPSBUeXBlRXJyb3I7XG5cbi8vIGBSZWdFeHBFeGVjYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtcmVnZXhwZXhlY1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoUiwgUykge1xuICB2YXIgZXhlYyA9IFIuZXhlYztcbiAgaWYgKGlzQ2FsbGFibGUoZXhlYykpIHtcbiAgICB2YXIgcmVzdWx0ID0gY2FsbChleGVjLCBSLCBTKTtcbiAgICBpZiAocmVzdWx0ICE9PSBudWxsKSBhbk9iamVjdChyZXN1bHQpO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbiAgaWYgKGNsYXNzb2YoUikgPT09ICdSZWdFeHAnKSByZXR1cm4gY2FsbChyZWdleHBFeGVjLCBSLCBTKTtcbiAgdGhyb3cgbmV3ICRUeXBlRXJyb3IoJ1JlZ0V4cCNleGVjIGNhbGxlZCBvbiBpbmNvbXBhdGlibGUgcmVjZWl2ZXInKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSByZWdleHAvbm8tZW1wdHktY2FwdHVyaW5nLWdyb3VwLCByZWdleHAvbm8tZW1wdHktZ3JvdXAsIHJlZ2V4cC9uby1sYXp5LWVuZHMgLS0gdGVzdGluZyAqL1xuLyogZXNsaW50LWRpc2FibGUgcmVnZXhwL25vLXVzZWxlc3MtcXVhbnRpZmllciAtLSB0ZXN0aW5nICovXG52YXIgY2FsbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1jYWxsJyk7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgdG9TdHJpbmcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tc3RyaW5nJyk7XG52YXIgcmVnZXhwRmxhZ3MgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLWZsYWdzJyk7XG52YXIgc3RpY2t5SGVscGVycyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWdleHAtc3RpY2t5LWhlbHBlcnMnKTtcbnZhciBzaGFyZWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2hhcmVkJyk7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1jcmVhdGUnKTtcbnZhciBnZXRJbnRlcm5hbFN0YXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ludGVybmFsLXN0YXRlJykuZ2V0O1xudmFyIFVOU1VQUE9SVEVEX0RPVF9BTEwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLXVuc3VwcG9ydGVkLWRvdC1hbGwnKTtcbnZhciBVTlNVUFBPUlRFRF9OQ0cgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLXVuc3VwcG9ydGVkLW5jZycpO1xuXG52YXIgbmF0aXZlUmVwbGFjZSA9IHNoYXJlZCgnbmF0aXZlLXN0cmluZy1yZXBsYWNlJywgU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlKTtcbnZhciBuYXRpdmVFeGVjID0gUmVnRXhwLnByb3RvdHlwZS5leGVjO1xudmFyIHBhdGNoZWRFeGVjID0gbmF0aXZlRXhlYztcbnZhciBjaGFyQXQgPSB1bmN1cnJ5VGhpcygnJy5jaGFyQXQpO1xudmFyIGluZGV4T2YgPSB1bmN1cnJ5VGhpcygnJy5pbmRleE9mKTtcbnZhciByZXBsYWNlID0gdW5jdXJyeVRoaXMoJycucmVwbGFjZSk7XG52YXIgc3RyaW5nU2xpY2UgPSB1bmN1cnJ5VGhpcygnJy5zbGljZSk7XG5cbnZhciBVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcgPSAoZnVuY3Rpb24gKCkge1xuICB2YXIgcmUxID0gL2EvO1xuICB2YXIgcmUyID0gL2IqL2c7XG4gIGNhbGwobmF0aXZlRXhlYywgcmUxLCAnYScpO1xuICBjYWxsKG5hdGl2ZUV4ZWMsIHJlMiwgJ2EnKTtcbiAgcmV0dXJuIHJlMS5sYXN0SW5kZXggIT09IDAgfHwgcmUyLmxhc3RJbmRleCAhPT0gMDtcbn0pKCk7XG5cbnZhciBVTlNVUFBPUlRFRF9ZID0gc3RpY2t5SGVscGVycy5CUk9LRU5fQ0FSRVQ7XG5cbi8vIG5vbnBhcnRpY2lwYXRpbmcgY2FwdHVyaW5nIGdyb3VwLCBjb3BpZWQgZnJvbSBlczUtc2hpbSdzIFN0cmluZyNzcGxpdCBwYXRjaC5cbnZhciBOUENHX0lOQ0xVREVEID0gLygpPz8vLmV4ZWMoJycpWzFdICE9PSB1bmRlZmluZWQ7XG5cbnZhciBQQVRDSCA9IFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORyB8fCBOUENHX0lOQ0xVREVEIHx8IFVOU1VQUE9SVEVEX1kgfHwgVU5TVVBQT1JURURfRE9UX0FMTCB8fCBVTlNVUFBPUlRFRF9OQ0c7XG5cbmlmIChQQVRDSCkge1xuICBwYXRjaGVkRXhlYyA9IGZ1bmN0aW9uIGV4ZWMoc3RyaW5nKSB7XG4gICAgdmFyIHJlID0gdGhpcztcbiAgICB2YXIgc3RhdGUgPSBnZXRJbnRlcm5hbFN0YXRlKHJlKTtcbiAgICB2YXIgc3RyID0gdG9TdHJpbmcoc3RyaW5nKTtcbiAgICB2YXIgcmF3ID0gc3RhdGUucmF3O1xuICAgIHZhciByZXN1bHQsIHJlQ29weSwgbGFzdEluZGV4LCBtYXRjaCwgaSwgb2JqZWN0LCBncm91cDtcblxuICAgIGlmIChyYXcpIHtcbiAgICAgIHJhdy5sYXN0SW5kZXggPSByZS5sYXN0SW5kZXg7XG4gICAgICByZXN1bHQgPSBjYWxsKHBhdGNoZWRFeGVjLCByYXcsIHN0cik7XG4gICAgICByZS5sYXN0SW5kZXggPSByYXcubGFzdEluZGV4O1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICB2YXIgZ3JvdXBzID0gc3RhdGUuZ3JvdXBzO1xuICAgIHZhciBzdGlja3kgPSBVTlNVUFBPUlRFRF9ZICYmIHJlLnN0aWNreTtcbiAgICB2YXIgZmxhZ3MgPSBjYWxsKHJlZ2V4cEZsYWdzLCByZSk7XG4gICAgdmFyIHNvdXJjZSA9IHJlLnNvdXJjZTtcbiAgICB2YXIgY2hhcnNBZGRlZCA9IDA7XG4gICAgdmFyIHN0ckNvcHkgPSBzdHI7XG5cbiAgICBpZiAoc3RpY2t5KSB7XG4gICAgICBmbGFncyA9IHJlcGxhY2UoZmxhZ3MsICd5JywgJycpO1xuICAgICAgaWYgKGluZGV4T2YoZmxhZ3MsICdnJykgPT09IC0xKSB7XG4gICAgICAgIGZsYWdzICs9ICdnJztcbiAgICAgIH1cblxuICAgICAgc3RyQ29weSA9IHN0cmluZ1NsaWNlKHN0ciwgcmUubGFzdEluZGV4KTtcbiAgICAgIC8vIFN1cHBvcnQgYW5jaG9yZWQgc3RpY2t5IGJlaGF2aW9yLlxuICAgICAgaWYgKHJlLmxhc3RJbmRleCA+IDAgJiYgKCFyZS5tdWx0aWxpbmUgfHwgcmUubXVsdGlsaW5lICYmIGNoYXJBdChzdHIsIHJlLmxhc3RJbmRleCAtIDEpICE9PSAnXFxuJykpIHtcbiAgICAgICAgc291cmNlID0gJyg/OiAnICsgc291cmNlICsgJyknO1xuICAgICAgICBzdHJDb3B5ID0gJyAnICsgc3RyQ29weTtcbiAgICAgICAgY2hhcnNBZGRlZCsrO1xuICAgICAgfVxuICAgICAgLy8gXig/ICsgcnggKyApIGlzIG5lZWRlZCwgaW4gY29tYmluYXRpb24gd2l0aCBzb21lIHN0ciBzbGljaW5nLCB0b1xuICAgICAgLy8gc2ltdWxhdGUgdGhlICd5JyBmbGFnLlxuICAgICAgcmVDb3B5ID0gbmV3IFJlZ0V4cCgnXig/OicgKyBzb3VyY2UgKyAnKScsIGZsYWdzKTtcbiAgICB9XG5cbiAgICBpZiAoTlBDR19JTkNMVURFRCkge1xuICAgICAgcmVDb3B5ID0gbmV3IFJlZ0V4cCgnXicgKyBzb3VyY2UgKyAnJCg/IVxcXFxzKScsIGZsYWdzKTtcbiAgICB9XG4gICAgaWYgKFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORykgbGFzdEluZGV4ID0gcmUubGFzdEluZGV4O1xuXG4gICAgbWF0Y2ggPSBjYWxsKG5hdGl2ZUV4ZWMsIHN0aWNreSA/IHJlQ29weSA6IHJlLCBzdHJDb3B5KTtcblxuICAgIGlmIChzdGlja3kpIHtcbiAgICAgIGlmIChtYXRjaCkge1xuICAgICAgICBtYXRjaC5pbnB1dCA9IHN0cmluZ1NsaWNlKG1hdGNoLmlucHV0LCBjaGFyc0FkZGVkKTtcbiAgICAgICAgbWF0Y2hbMF0gPSBzdHJpbmdTbGljZShtYXRjaFswXSwgY2hhcnNBZGRlZCk7XG4gICAgICAgIG1hdGNoLmluZGV4ID0gcmUubGFzdEluZGV4O1xuICAgICAgICByZS5sYXN0SW5kZXggKz0gbWF0Y2hbMF0ubGVuZ3RoO1xuICAgICAgfSBlbHNlIHJlLmxhc3RJbmRleCA9IDA7XG4gICAgfSBlbHNlIGlmIChVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcgJiYgbWF0Y2gpIHtcbiAgICAgIHJlLmxhc3RJbmRleCA9IHJlLmdsb2JhbCA/IG1hdGNoLmluZGV4ICsgbWF0Y2hbMF0ubGVuZ3RoIDogbGFzdEluZGV4O1xuICAgIH1cbiAgICBpZiAoTlBDR19JTkNMVURFRCAmJiBtYXRjaCAmJiBtYXRjaC5sZW5ndGggPiAxKSB7XG4gICAgICAvLyBGaXggYnJvd3NlcnMgd2hvc2UgYGV4ZWNgIG1ldGhvZHMgZG9uJ3QgY29uc2lzdGVudGx5IHJldHVybiBgdW5kZWZpbmVkYFxuICAgICAgLy8gZm9yIE5QQ0csIGxpa2UgSUU4LiBOT1RFOiBUaGlzIGRvZXNuJ3Qgd29yayBmb3IgLyguPyk/L1xuICAgICAgY2FsbChuYXRpdmVSZXBsYWNlLCBtYXRjaFswXSwgcmVDb3B5LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZvciAoaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoIC0gMjsgaSsrKSB7XG4gICAgICAgICAgaWYgKGFyZ3VtZW50c1tpXSA9PT0gdW5kZWZpbmVkKSBtYXRjaFtpXSA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKG1hdGNoICYmIGdyb3Vwcykge1xuICAgICAgbWF0Y2guZ3JvdXBzID0gb2JqZWN0ID0gY3JlYXRlKG51bGwpO1xuICAgICAgZm9yIChpID0gMDsgaSA8IGdyb3Vwcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBncm91cCA9IGdyb3Vwc1tpXTtcbiAgICAgICAgb2JqZWN0W2dyb3VwWzBdXSA9IG1hdGNoW2dyb3VwWzFdXTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbWF0Y2g7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcGF0Y2hlZEV4ZWM7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4tb2JqZWN0Jyk7XG5cbi8vIGBSZWdFeHAucHJvdG90eXBlLmZsYWdzYCBnZXR0ZXIgaW1wbGVtZW50YXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtZ2V0LXJlZ2V4cC5wcm90b3R5cGUuZmxhZ3Ncbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICB2YXIgdGhhdCA9IGFuT2JqZWN0KHRoaXMpO1xuICB2YXIgcmVzdWx0ID0gJyc7XG4gIGlmICh0aGF0Lmhhc0luZGljZXMpIHJlc3VsdCArPSAnZCc7XG4gIGlmICh0aGF0Lmdsb2JhbCkgcmVzdWx0ICs9ICdnJztcbiAgaWYgKHRoYXQuaWdub3JlQ2FzZSkgcmVzdWx0ICs9ICdpJztcbiAgaWYgKHRoYXQubXVsdGlsaW5lKSByZXN1bHQgKz0gJ20nO1xuICBpZiAodGhhdC5kb3RBbGwpIHJlc3VsdCArPSAncyc7XG4gIGlmICh0aGF0LnVuaWNvZGUpIHJlc3VsdCArPSAndSc7XG4gIGlmICh0aGF0LnVuaWNvZGVTZXRzKSByZXN1bHQgKz0gJ3YnO1xuICBpZiAodGhhdC5zdGlja3kpIHJlc3VsdCArPSAneSc7XG4gIHJldHVybiByZXN1bHQ7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNhbGwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tY2FsbCcpO1xudmFyIGhhc093biA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oYXMtb3duLXByb3BlcnR5Jyk7XG52YXIgaXNQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtaXMtcHJvdG90eXBlLW9mJyk7XG52YXIgcmVnRXhwRmxhZ3MgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLWZsYWdzJyk7XG5cbnZhciBSZWdFeHBQcm90b3R5cGUgPSBSZWdFeHAucHJvdG90eXBlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChSKSB7XG4gIHZhciBmbGFncyA9IFIuZmxhZ3M7XG4gIHJldHVybiBmbGFncyA9PT0gdW5kZWZpbmVkICYmICEoJ2ZsYWdzJyBpbiBSZWdFeHBQcm90b3R5cGUpICYmICFoYXNPd24oUiwgJ2ZsYWdzJykgJiYgaXNQcm90b3R5cGVPZihSZWdFeHBQcm90b3R5cGUsIFIpXG4gICAgPyBjYWxsKHJlZ0V4cEZsYWdzLCBSKSA6IGZsYWdzO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcblxuLy8gYmFiZWwtbWluaWZ5IGFuZCBDbG9zdXJlIENvbXBpbGVyIHRyYW5zcGlsZXMgUmVnRXhwKCdhJywgJ3knKSAtPiAvYS95IGFuZCBpdCBjYXVzZXMgU3ludGF4RXJyb3JcbnZhciAkUmVnRXhwID0gZ2xvYmFsLlJlZ0V4cDtcblxudmFyIFVOU1VQUE9SVEVEX1kgPSBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHZhciByZSA9ICRSZWdFeHAoJ2EnLCAneScpO1xuICByZS5sYXN0SW5kZXggPSAyO1xuICByZXR1cm4gcmUuZXhlYygnYWJjZCcpICE9PSBudWxsO1xufSk7XG5cbi8vIFVDIEJyb3dzZXIgYnVnXG4vLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvMTAwOFxudmFyIE1JU1NFRF9TVElDS1kgPSBVTlNVUFBPUlRFRF9ZIHx8IGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuICEkUmVnRXhwKCdhJywgJ3knKS5zdGlja3k7XG59KTtcblxudmFyIEJST0tFTl9DQVJFVCA9IFVOU1VQUE9SVEVEX1kgfHwgZmFpbHMoZnVuY3Rpb24gKCkge1xuICAvLyBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD03NzM2ODdcbiAgdmFyIHJlID0gJFJlZ0V4cCgnXnInLCAnZ3knKTtcbiAgcmUubGFzdEluZGV4ID0gMjtcbiAgcmV0dXJuIHJlLmV4ZWMoJ3N0cicpICE9PSBudWxsO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBCUk9LRU5fQ0FSRVQ6IEJST0tFTl9DQVJFVCxcbiAgTUlTU0VEX1NUSUNLWTogTUlTU0VEX1NUSUNLWSxcbiAgVU5TVVBQT1JURURfWTogVU5TVVBQT1JURURfWVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcblxuLy8gYmFiZWwtbWluaWZ5IGFuZCBDbG9zdXJlIENvbXBpbGVyIHRyYW5zcGlsZXMgUmVnRXhwKCcuJywgJ3MnKSAtPiAvLi9zIGFuZCBpdCBjYXVzZXMgU3ludGF4RXJyb3JcbnZhciAkUmVnRXhwID0gZ2xvYmFsLlJlZ0V4cDtcblxubW9kdWxlLmV4cG9ydHMgPSBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHZhciByZSA9ICRSZWdFeHAoJy4nLCAncycpO1xuICByZXR1cm4gIShyZS5kb3RBbGwgJiYgcmUudGVzdCgnXFxuJykgJiYgcmUuZmxhZ3MgPT09ICdzJyk7XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcblxuLy8gYmFiZWwtbWluaWZ5IGFuZCBDbG9zdXJlIENvbXBpbGVyIHRyYW5zcGlsZXMgUmVnRXhwKCcoPzxhPmIpJywgJ2cnKSAtPiAvKD88YT5iKS9nIGFuZCBpdCBjYXVzZXMgU3ludGF4RXJyb3JcbnZhciAkUmVnRXhwID0gZ2xvYmFsLlJlZ0V4cDtcblxubW9kdWxlLmV4cG9ydHMgPSBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHZhciByZSA9ICRSZWdFeHAoJyg/PGE+YiknLCAnZycpO1xuICByZXR1cm4gcmUuZXhlYygnYicpLmdyb3Vwcy5hICE9PSAnYicgfHxcbiAgICAnYicucmVwbGFjZShyZSwgJyQ8YT5jJykgIT09ICdiYyc7XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBpc051bGxPclVuZGVmaW5lZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1udWxsLW9yLXVuZGVmaW5lZCcpO1xuXG52YXIgJFR5cGVFcnJvciA9IFR5cGVFcnJvcjtcblxuLy8gYFJlcXVpcmVPYmplY3RDb2VyY2libGVgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1yZXF1aXJlb2JqZWN0Y29lcmNpYmxlXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoaXNOdWxsT3JVbmRlZmluZWQoaXQpKSB0aHJvdyBuZXcgJFR5cGVFcnJvcihcIkNhbid0IGNhbGwgbWV0aG9kIG9uIFwiICsgaXQpO1xuICByZXR1cm4gaXQ7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWdldG93bnByb3BlcnR5ZGVzY3JpcHRvciAtLSBzYWZlXG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcblxuLy8gQXZvaWQgTm9kZUpTIGV4cGVyaW1lbnRhbCB3YXJuaW5nXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gIGlmICghREVTQ1JJUFRPUlMpIHJldHVybiBnbG9iYWxbbmFtZV07XG4gIHZhciBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGdsb2JhbCwgbmFtZSk7XG4gIHJldHVybiBkZXNjcmlwdG9yICYmIGRlc2NyaXB0b3IudmFsdWU7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBhcHBseSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1hcHBseScpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciBFTkdJTkVfSVNfQlVOID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2VuZ2luZS1pcy1idW4nKTtcbnZhciBVU0VSX0FHRU5UID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2VuZ2luZS11c2VyLWFnZW50Jyk7XG52YXIgYXJyYXlTbGljZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1zbGljZScpO1xudmFyIHZhbGlkYXRlQXJndW1lbnRzTGVuZ3RoID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3ZhbGlkYXRlLWFyZ3VtZW50cy1sZW5ndGgnKTtcblxudmFyIEZ1bmN0aW9uID0gZ2xvYmFsLkZ1bmN0aW9uO1xuLy8gZGlydHkgSUU5LSBhbmQgQnVuIDAuMy4wLSBjaGVja3NcbnZhciBXUkFQID0gL01TSUUgLlxcLi8udGVzdChVU0VSX0FHRU5UKSB8fCBFTkdJTkVfSVNfQlVOICYmIChmdW5jdGlvbiAoKSB7XG4gIHZhciB2ZXJzaW9uID0gZ2xvYmFsLkJ1bi52ZXJzaW9uLnNwbGl0KCcuJyk7XG4gIHJldHVybiB2ZXJzaW9uLmxlbmd0aCA8IDMgfHwgdmVyc2lvblswXSA9PT0gJzAnICYmICh2ZXJzaW9uWzFdIDwgMyB8fCB2ZXJzaW9uWzFdID09PSAnMycgJiYgdmVyc2lvblsyXSA9PT0gJzAnKTtcbn0pKCk7XG5cbi8vIElFOS0gLyBCdW4gMC4zLjAtIHNldFRpbWVvdXQgLyBzZXRJbnRlcnZhbCAvIHNldEltbWVkaWF0ZSBhZGRpdGlvbmFsIHBhcmFtZXRlcnMgZml4XG4vLyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS90aW1lcnMtYW5kLXVzZXItcHJvbXB0cy5odG1sI3RpbWVyc1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL292ZW4tc2gvYnVuL2lzc3Vlcy8xNjMzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChzY2hlZHVsZXIsIGhhc1RpbWVBcmcpIHtcbiAgdmFyIGZpcnN0UGFyYW1JbmRleCA9IGhhc1RpbWVBcmcgPyAyIDogMTtcbiAgcmV0dXJuIFdSQVAgPyBmdW5jdGlvbiAoaGFuZGxlciwgdGltZW91dCAvKiAsIC4uLmFyZ3VtZW50cyAqLykge1xuICAgIHZhciBib3VuZEFyZ3MgPSB2YWxpZGF0ZUFyZ3VtZW50c0xlbmd0aChhcmd1bWVudHMubGVuZ3RoLCAxKSA+IGZpcnN0UGFyYW1JbmRleDtcbiAgICB2YXIgZm4gPSBpc0NhbGxhYmxlKGhhbmRsZXIpID8gaGFuZGxlciA6IEZ1bmN0aW9uKGhhbmRsZXIpO1xuICAgIHZhciBwYXJhbXMgPSBib3VuZEFyZ3MgPyBhcnJheVNsaWNlKGFyZ3VtZW50cywgZmlyc3RQYXJhbUluZGV4KSA6IFtdO1xuICAgIHZhciBjYWxsYmFjayA9IGJvdW5kQXJncyA/IGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwcGx5KGZuLCB0aGlzLCBwYXJhbXMpO1xuICAgIH0gOiBmbjtcbiAgICByZXR1cm4gaGFzVGltZUFyZyA/IHNjaGVkdWxlcihjYWxsYmFjaywgdGltZW91dCkgOiBzY2hlZHVsZXIoY2FsbGJhY2spO1xuICB9IDogc2NoZWR1bGVyO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnZXRCdWlsdEluID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dldC1idWlsdC1pbicpO1xudmFyIGRlZmluZUJ1aWx0SW5BY2Nlc3NvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZWZpbmUtYnVpbHQtaW4tYWNjZXNzb3InKTtcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xuXG52YXIgU1BFQ0lFUyA9IHdlbGxLbm93blN5bWJvbCgnc3BlY2llcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChDT05TVFJVQ1RPUl9OQU1FKSB7XG4gIHZhciBDb25zdHJ1Y3RvciA9IGdldEJ1aWx0SW4oQ09OU1RSVUNUT1JfTkFNRSk7XG5cbiAgaWYgKERFU0NSSVBUT1JTICYmIENvbnN0cnVjdG9yICYmICFDb25zdHJ1Y3RvcltTUEVDSUVTXSkge1xuICAgIGRlZmluZUJ1aWx0SW5BY2Nlc3NvcihDb25zdHJ1Y3RvciwgU1BFQ0lFUywge1xuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9XG4gICAgfSk7XG4gIH1cbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eScpLmY7XG52YXIgaGFzT3duID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hhcy1vd24tcHJvcGVydHknKTtcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcblxudmFyIFRPX1NUUklOR19UQUcgPSB3ZWxsS25vd25TeW1ib2woJ3RvU3RyaW5nVGFnJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHRhcmdldCwgVEFHLCBTVEFUSUMpIHtcbiAgaWYgKHRhcmdldCAmJiAhU1RBVElDKSB0YXJnZXQgPSB0YXJnZXQucHJvdG90eXBlO1xuICBpZiAodGFyZ2V0ICYmICFoYXNPd24odGFyZ2V0LCBUT19TVFJJTkdfVEFHKSkge1xuICAgIGRlZmluZVByb3BlcnR5KHRhcmdldCwgVE9fU1RSSU5HX1RBRywgeyBjb25maWd1cmFibGU6IHRydWUsIHZhbHVlOiBUQUcgfSk7XG4gIH1cbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgc2hhcmVkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NoYXJlZCcpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy91aWQnKTtcblxudmFyIGtleXMgPSBzaGFyZWQoJ2tleXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIHJldHVybiBrZXlzW2tleV0gfHwgKGtleXNba2V5XSA9IHVpZChrZXkpKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgSVNfUFVSRSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1wdXJlJyk7XG52YXIgZ2xvYmFsVGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBkZWZpbmVHbG9iYWxQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZWZpbmUtZ2xvYmFsLXByb3BlcnR5Jyk7XG5cbnZhciBTSEFSRUQgPSAnX19jb3JlLWpzX3NoYXJlZF9fJztcbnZhciBzdG9yZSA9IG1vZHVsZS5leHBvcnRzID0gZ2xvYmFsVGhpc1tTSEFSRURdIHx8IGRlZmluZUdsb2JhbFByb3BlcnR5KFNIQVJFRCwge30pO1xuXG4oc3RvcmUudmVyc2lvbnMgfHwgKHN0b3JlLnZlcnNpb25zID0gW10pKS5wdXNoKHtcbiAgdmVyc2lvbjogJzMuMzYuMCcsXG4gIG1vZGU6IElTX1BVUkUgPyAncHVyZScgOiAnZ2xvYmFsJyxcbiAgY29weXJpZ2h0OiAnwqkgMjAxNC0yMDI0IERlbmlzIFB1c2hrYXJldiAoemxvaXJvY2sucnUpJyxcbiAgbGljZW5zZTogJ2h0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2Jsb2IvdjMuMzYuMC9MSUNFTlNFJyxcbiAgc291cmNlOiAnaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMnXG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBzdG9yZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zaGFyZWQtc3RvcmUnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICByZXR1cm4gc3RvcmVba2V5XSB8fCAoc3RvcmVba2V5XSA9IHZhbHVlIHx8IHt9KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4tb2JqZWN0Jyk7XG52YXIgYUNvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2EtY29uc3RydWN0b3InKTtcbnZhciBpc051bGxPclVuZGVmaW5lZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1udWxsLW9yLXVuZGVmaW5lZCcpO1xudmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xuXG52YXIgU1BFQ0lFUyA9IHdlbGxLbm93blN5bWJvbCgnc3BlY2llcycpO1xuXG4vLyBgU3BlY2llc0NvbnN0cnVjdG9yYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtc3BlY2llc2NvbnN0cnVjdG9yXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChPLCBkZWZhdWx0Q29uc3RydWN0b3IpIHtcbiAgdmFyIEMgPSBhbk9iamVjdChPKS5jb25zdHJ1Y3RvcjtcbiAgdmFyIFM7XG4gIHJldHVybiBDID09PSB1bmRlZmluZWQgfHwgaXNOdWxsT3JVbmRlZmluZWQoUyA9IGFuT2JqZWN0KEMpW1NQRUNJRVNdKSA/IGRlZmF1bHRDb25zdHJ1Y3RvciA6IGFDb25zdHJ1Y3RvcihTKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgdG9JbnRlZ2VyT3JJbmZpbml0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1pbnRlZ2VyLW9yLWluZmluaXR5Jyk7XG52YXIgdG9TdHJpbmcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tc3RyaW5nJyk7XG52YXIgcmVxdWlyZU9iamVjdENvZXJjaWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGUnKTtcblxudmFyIGNoYXJBdCA9IHVuY3VycnlUaGlzKCcnLmNoYXJBdCk7XG52YXIgY2hhckNvZGVBdCA9IHVuY3VycnlUaGlzKCcnLmNoYXJDb2RlQXQpO1xudmFyIHN0cmluZ1NsaWNlID0gdW5jdXJyeVRoaXMoJycuc2xpY2UpO1xuXG52YXIgY3JlYXRlTWV0aG9kID0gZnVuY3Rpb24gKENPTlZFUlRfVE9fU1RSSU5HKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoJHRoaXMsIHBvcykge1xuICAgIHZhciBTID0gdG9TdHJpbmcocmVxdWlyZU9iamVjdENvZXJjaWJsZSgkdGhpcykpO1xuICAgIHZhciBwb3NpdGlvbiA9IHRvSW50ZWdlck9ySW5maW5pdHkocG9zKTtcbiAgICB2YXIgc2l6ZSA9IFMubGVuZ3RoO1xuICAgIHZhciBmaXJzdCwgc2Vjb25kO1xuICAgIGlmIChwb3NpdGlvbiA8IDAgfHwgcG9zaXRpb24gPj0gc2l6ZSkgcmV0dXJuIENPTlZFUlRfVE9fU1RSSU5HID8gJycgOiB1bmRlZmluZWQ7XG4gICAgZmlyc3QgPSBjaGFyQ29kZUF0KFMsIHBvc2l0aW9uKTtcbiAgICByZXR1cm4gZmlyc3QgPCAweEQ4MDAgfHwgZmlyc3QgPiAweERCRkYgfHwgcG9zaXRpb24gKyAxID09PSBzaXplXG4gICAgICB8fCAoc2Vjb25kID0gY2hhckNvZGVBdChTLCBwb3NpdGlvbiArIDEpKSA8IDB4REMwMCB8fCBzZWNvbmQgPiAweERGRkZcbiAgICAgICAgPyBDT05WRVJUX1RPX1NUUklOR1xuICAgICAgICAgID8gY2hhckF0KFMsIHBvc2l0aW9uKVxuICAgICAgICAgIDogZmlyc3RcbiAgICAgICAgOiBDT05WRVJUX1RPX1NUUklOR1xuICAgICAgICAgID8gc3RyaW5nU2xpY2UoUywgcG9zaXRpb24sIHBvc2l0aW9uICsgMilcbiAgICAgICAgICA6IChmaXJzdCAtIDB4RDgwMCA8PCAxMCkgKyAoc2Vjb25kIC0gMHhEQzAwKSArIDB4MTAwMDA7XG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLy8gYFN0cmluZy5wcm90b3R5cGUuY29kZVBvaW50QXRgIG1ldGhvZFxuICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUuY29kZXBvaW50YXRcbiAgY29kZUF0OiBjcmVhdGVNZXRob2QoZmFsc2UpLFxuICAvLyBgU3RyaW5nLnByb3RvdHlwZS5hdGAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXRoaWFzYnluZW5zL1N0cmluZy5wcm90b3R5cGUuYXRcbiAgY2hhckF0OiBjcmVhdGVNZXRob2QodHJ1ZSlcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgcmVxdWlyZU9iamVjdENvZXJjaWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGUnKTtcbnZhciB0b1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1zdHJpbmcnKTtcbnZhciB3aGl0ZXNwYWNlcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93aGl0ZXNwYWNlcycpO1xuXG52YXIgcmVwbGFjZSA9IHVuY3VycnlUaGlzKCcnLnJlcGxhY2UpO1xudmFyIGx0cmltID0gUmVnRXhwKCdeWycgKyB3aGl0ZXNwYWNlcyArICddKycpO1xudmFyIHJ0cmltID0gUmVnRXhwKCcoXnxbXicgKyB3aGl0ZXNwYWNlcyArICddKVsnICsgd2hpdGVzcGFjZXMgKyAnXSskJyk7XG5cbi8vIGBTdHJpbmcucHJvdG90eXBlLnsgdHJpbSwgdHJpbVN0YXJ0LCB0cmltRW5kLCB0cmltTGVmdCwgdHJpbVJpZ2h0IH1gIG1ldGhvZHMgaW1wbGVtZW50YXRpb25cbnZhciBjcmVhdGVNZXRob2QgPSBmdW5jdGlvbiAoVFlQRSkge1xuICByZXR1cm4gZnVuY3Rpb24gKCR0aGlzKSB7XG4gICAgdmFyIHN0cmluZyA9IHRvU3RyaW5nKHJlcXVpcmVPYmplY3RDb2VyY2libGUoJHRoaXMpKTtcbiAgICBpZiAoVFlQRSAmIDEpIHN0cmluZyA9IHJlcGxhY2Uoc3RyaW5nLCBsdHJpbSwgJycpO1xuICAgIGlmIChUWVBFICYgMikgc3RyaW5nID0gcmVwbGFjZShzdHJpbmcsIHJ0cmltLCAnJDEnKTtcbiAgICByZXR1cm4gc3RyaW5nO1xuICB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIC8vIGBTdHJpbmcucHJvdG90eXBlLnsgdHJpbUxlZnQsIHRyaW1TdGFydCB9YCBtZXRob2RzXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtc3RyaW5nLnByb3RvdHlwZS50cmltc3RhcnRcbiAgc3RhcnQ6IGNyZWF0ZU1ldGhvZCgxKSxcbiAgLy8gYFN0cmluZy5wcm90b3R5cGUueyB0cmltUmlnaHQsIHRyaW1FbmQgfWAgbWV0aG9kc1xuICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUudHJpbWVuZFxuICBlbmQ6IGNyZWF0ZU1ldGhvZCgyKSxcbiAgLy8gYFN0cmluZy5wcm90b3R5cGUudHJpbWAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtc3RyaW5nLnByb3RvdHlwZS50cmltXG4gIHRyaW06IGNyZWF0ZU1ldGhvZCgzKVxufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIGVzL25vLXN5bWJvbCAtLSByZXF1aXJlZCBmb3IgdGVzdGluZyAqL1xudmFyIFY4X1ZFUlNJT04gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZW5naW5lLXY4LXZlcnNpb24nKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcblxudmFyICRTdHJpbmcgPSBnbG9iYWwuU3RyaW5nO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWdldG93bnByb3BlcnR5c3ltYm9scyAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xubW9kdWxlLmV4cG9ydHMgPSAhIU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgJiYgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgdmFyIHN5bWJvbCA9IFN5bWJvbCgnc3ltYm9sIGRldGVjdGlvbicpO1xuICAvLyBDaHJvbWUgMzggU3ltYm9sIGhhcyBpbmNvcnJlY3QgdG9TdHJpbmcgY29udmVyc2lvblxuICAvLyBgZ2V0LW93bi1wcm9wZXJ0eS1zeW1ib2xzYCBwb2x5ZmlsbCBzeW1ib2xzIGNvbnZlcnRlZCB0byBvYmplY3QgYXJlIG5vdCBTeW1ib2wgaW5zdGFuY2VzXG4gIC8vIG5iOiBEbyBub3QgY2FsbCBgU3RyaW5nYCBkaXJlY3RseSB0byBhdm9pZCB0aGlzIGJlaW5nIG9wdGltaXplZCBvdXQgdG8gYHN5bWJvbCsnJ2Agd2hpY2ggd2lsbCxcbiAgLy8gb2YgY291cnNlLCBmYWlsLlxuICByZXR1cm4gISRTdHJpbmcoc3ltYm9sKSB8fCAhKE9iamVjdChzeW1ib2wpIGluc3RhbmNlb2YgU3ltYm9sKSB8fFxuICAgIC8vIENocm9tZSAzOC00MCBzeW1ib2xzIGFyZSBub3QgaW5oZXJpdGVkIGZyb20gRE9NIGNvbGxlY3Rpb25zIHByb3RvdHlwZXMgdG8gaW5zdGFuY2VzXG4gICAgIVN5bWJvbC5zaGFtICYmIFY4X1ZFUlNJT04gJiYgVjhfVkVSU0lPTiA8IDQxO1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1jYWxsJyk7XG52YXIgZ2V0QnVpbHRJbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nZXQtYnVpbHQtaW4nKTtcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcbnZhciBkZWZpbmVCdWlsdEluID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RlZmluZS1idWlsdC1pbicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIFN5bWJvbCA9IGdldEJ1aWx0SW4oJ1N5bWJvbCcpO1xuICB2YXIgU3ltYm9sUHJvdG90eXBlID0gU3ltYm9sICYmIFN5bWJvbC5wcm90b3R5cGU7XG4gIHZhciB2YWx1ZU9mID0gU3ltYm9sUHJvdG90eXBlICYmIFN5bWJvbFByb3RvdHlwZS52YWx1ZU9mO1xuICB2YXIgVE9fUFJJTUlUSVZFID0gd2VsbEtub3duU3ltYm9sKCd0b1ByaW1pdGl2ZScpO1xuXG4gIGlmIChTeW1ib2xQcm90b3R5cGUgJiYgIVN5bWJvbFByb3RvdHlwZVtUT19QUklNSVRJVkVdKSB7XG4gICAgLy8gYFN5bWJvbC5wcm90b3R5cGVbQEB0b1ByaW1pdGl2ZV1gIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtc3ltYm9sLnByb3RvdHlwZS1AQHRvcHJpbWl0aXZlXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzIC0tIHJlcXVpcmVkIGZvciAubGVuZ3RoXG4gICAgZGVmaW5lQnVpbHRJbihTeW1ib2xQcm90b3R5cGUsIFRPX1BSSU1JVElWRSwgZnVuY3Rpb24gKGhpbnQpIHtcbiAgICAgIHJldHVybiBjYWxsKHZhbHVlT2YsIHRoaXMpO1xuICAgIH0sIHsgYXJpdHk6IDEgfSk7XG4gIH1cbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgTkFUSVZFX1NZTUJPTCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zeW1ib2wtY29uc3RydWN0b3ItZGV0ZWN0aW9uJyk7XG5cbi8qIGVzbGludC1kaXNhYmxlIGVzL25vLXN5bWJvbCAtLSBzYWZlICovXG5tb2R1bGUuZXhwb3J0cyA9IE5BVElWRV9TWU1CT0wgJiYgISFTeW1ib2xbJ2ZvciddICYmICEhU3ltYm9sLmtleUZvcjtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgYXBwbHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tYXBwbHknKTtcbnZhciBiaW5kID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmQtY29udGV4dCcpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgaHRtbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9odG1sJyk7XG52YXIgYXJyYXlTbGljZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1zbGljZScpO1xudmFyIGNyZWF0ZUVsZW1lbnQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZG9jdW1lbnQtY3JlYXRlLWVsZW1lbnQnKTtcbnZhciB2YWxpZGF0ZUFyZ3VtZW50c0xlbmd0aCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy92YWxpZGF0ZS1hcmd1bWVudHMtbGVuZ3RoJyk7XG52YXIgSVNfSU9TID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2VuZ2luZS1pcy1pb3MnKTtcbnZhciBJU19OT0RFID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2VuZ2luZS1pcy1ub2RlJyk7XG5cbnZhciBzZXQgPSBnbG9iYWwuc2V0SW1tZWRpYXRlO1xudmFyIGNsZWFyID0gZ2xvYmFsLmNsZWFySW1tZWRpYXRlO1xudmFyIHByb2Nlc3MgPSBnbG9iYWwucHJvY2VzcztcbnZhciBEaXNwYXRjaCA9IGdsb2JhbC5EaXNwYXRjaDtcbnZhciBGdW5jdGlvbiA9IGdsb2JhbC5GdW5jdGlvbjtcbnZhciBNZXNzYWdlQ2hhbm5lbCA9IGdsb2JhbC5NZXNzYWdlQ2hhbm5lbDtcbnZhciBTdHJpbmcgPSBnbG9iYWwuU3RyaW5nO1xudmFyIGNvdW50ZXIgPSAwO1xudmFyIHF1ZXVlID0ge307XG52YXIgT05SRUFEWVNUQVRFQ0hBTkdFID0gJ29ucmVhZHlzdGF0ZWNoYW5nZSc7XG52YXIgJGxvY2F0aW9uLCBkZWZlciwgY2hhbm5lbCwgcG9ydDtcblxuZmFpbHMoZnVuY3Rpb24gKCkge1xuICAvLyBEZW5vIHRocm93cyBhIFJlZmVyZW5jZUVycm9yIG9uIGBsb2NhdGlvbmAgYWNjZXNzIHdpdGhvdXQgYC0tbG9jYXRpb25gIGZsYWdcbiAgJGxvY2F0aW9uID0gZ2xvYmFsLmxvY2F0aW9uO1xufSk7XG5cbnZhciBydW4gPSBmdW5jdGlvbiAoaWQpIHtcbiAgaWYgKGhhc093bihxdWV1ZSwgaWQpKSB7XG4gICAgdmFyIGZuID0gcXVldWVbaWRdO1xuICAgIGRlbGV0ZSBxdWV1ZVtpZF07XG4gICAgZm4oKTtcbiAgfVxufTtcblxudmFyIHJ1bm5lciA9IGZ1bmN0aW9uIChpZCkge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJ1bihpZCk7XG4gIH07XG59O1xuXG52YXIgZXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uIChldmVudCkge1xuICBydW4oZXZlbnQuZGF0YSk7XG59O1xuXG52YXIgZ2xvYmFsUG9zdE1lc3NhZ2VEZWZlciA9IGZ1bmN0aW9uIChpZCkge1xuICAvLyBvbGQgZW5naW5lcyBoYXZlIG5vdCBsb2NhdGlvbi5vcmlnaW5cbiAgZ2xvYmFsLnBvc3RNZXNzYWdlKFN0cmluZyhpZCksICRsb2NhdGlvbi5wcm90b2NvbCArICcvLycgKyAkbG9jYXRpb24uaG9zdCk7XG59O1xuXG4vLyBOb2RlLmpzIDAuOSsgJiBJRTEwKyBoYXMgc2V0SW1tZWRpYXRlLCBvdGhlcndpc2U6XG5pZiAoIXNldCB8fCAhY2xlYXIpIHtcbiAgc2V0ID0gZnVuY3Rpb24gc2V0SW1tZWRpYXRlKGhhbmRsZXIpIHtcbiAgICB2YWxpZGF0ZUFyZ3VtZW50c0xlbmd0aChhcmd1bWVudHMubGVuZ3RoLCAxKTtcbiAgICB2YXIgZm4gPSBpc0NhbGxhYmxlKGhhbmRsZXIpID8gaGFuZGxlciA6IEZ1bmN0aW9uKGhhbmRsZXIpO1xuICAgIHZhciBhcmdzID0gYXJyYXlTbGljZShhcmd1bWVudHMsIDEpO1xuICAgIHF1ZXVlWysrY291bnRlcl0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICBhcHBseShmbiwgdW5kZWZpbmVkLCBhcmdzKTtcbiAgICB9O1xuICAgIGRlZmVyKGNvdW50ZXIpO1xuICAgIHJldHVybiBjb3VudGVyO1xuICB9O1xuICBjbGVhciA9IGZ1bmN0aW9uIGNsZWFySW1tZWRpYXRlKGlkKSB7XG4gICAgZGVsZXRlIHF1ZXVlW2lkXTtcbiAgfTtcbiAgLy8gTm9kZS5qcyAwLjgtXG4gIGlmIChJU19OT0RFKSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIHByb2Nlc3MubmV4dFRpY2socnVubmVyKGlkKSk7XG4gICAgfTtcbiAgLy8gU3BoZXJlIChKUyBnYW1lIGVuZ2luZSkgRGlzcGF0Y2ggQVBJXG4gIH0gZWxzZSBpZiAoRGlzcGF0Y2ggJiYgRGlzcGF0Y2gubm93KSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIERpc3BhdGNoLm5vdyhydW5uZXIoaWQpKTtcbiAgICB9O1xuICAvLyBCcm93c2VycyB3aXRoIE1lc3NhZ2VDaGFubmVsLCBpbmNsdWRlcyBXZWJXb3JrZXJzXG4gIC8vIGV4Y2VwdCBpT1MgLSBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvNjI0XG4gIH0gZWxzZSBpZiAoTWVzc2FnZUNoYW5uZWwgJiYgIUlTX0lPUykge1xuICAgIGNoYW5uZWwgPSBuZXcgTWVzc2FnZUNoYW5uZWwoKTtcbiAgICBwb3J0ID0gY2hhbm5lbC5wb3J0MjtcbiAgICBjaGFubmVsLnBvcnQxLm9ubWVzc2FnZSA9IGV2ZW50TGlzdGVuZXI7XG4gICAgZGVmZXIgPSBiaW5kKHBvcnQucG9zdE1lc3NhZ2UsIHBvcnQpO1xuICAvLyBCcm93c2VycyB3aXRoIHBvc3RNZXNzYWdlLCBza2lwIFdlYldvcmtlcnNcbiAgLy8gSUU4IGhhcyBwb3N0TWVzc2FnZSwgYnV0IGl0J3Mgc3luYyAmIHR5cGVvZiBpdHMgcG9zdE1lc3NhZ2UgaXMgJ29iamVjdCdcbiAgfSBlbHNlIGlmIChcbiAgICBnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lciAmJlxuICAgIGlzQ2FsbGFibGUoZ2xvYmFsLnBvc3RNZXNzYWdlKSAmJlxuICAgICFnbG9iYWwuaW1wb3J0U2NyaXB0cyAmJlxuICAgICRsb2NhdGlvbiAmJiAkbG9jYXRpb24ucHJvdG9jb2wgIT09ICdmaWxlOicgJiZcbiAgICAhZmFpbHMoZ2xvYmFsUG9zdE1lc3NhZ2VEZWZlcilcbiAgKSB7XG4gICAgZGVmZXIgPSBnbG9iYWxQb3N0TWVzc2FnZURlZmVyO1xuICAgIGdsb2JhbC5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgZXZlbnRMaXN0ZW5lciwgZmFsc2UpO1xuICAvLyBJRTgtXG4gIH0gZWxzZSBpZiAoT05SRUFEWVNUQVRFQ0hBTkdFIGluIGNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpKSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIGh0bWwuYXBwZW5kQ2hpbGQoY3JlYXRlRWxlbWVudCgnc2NyaXB0JykpW09OUkVBRFlTVEFURUNIQU5HRV0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGh0bWwucmVtb3ZlQ2hpbGQodGhpcyk7XG4gICAgICAgIHJ1bihpZCk7XG4gICAgICB9O1xuICAgIH07XG4gIC8vIFJlc3Qgb2xkIGJyb3dzZXJzXG4gIH0gZWxzZSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIHNldFRpbWVvdXQocnVubmVyKGlkKSwgMCk7XG4gICAgfTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0OiBzZXQsXG4gIGNsZWFyOiBjbGVhclxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcblxuLy8gYHRoaXNOdW1iZXJWYWx1ZWAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXRoaXNudW1iZXJ2YWx1ZVxubW9kdWxlLmV4cG9ydHMgPSB1bmN1cnJ5VGhpcygxLjAudmFsdWVPZik7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdG9JbnRlZ2VyT3JJbmZpbml0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1pbnRlZ2VyLW9yLWluZmluaXR5Jyk7XG5cbnZhciBtYXggPSBNYXRoLm1heDtcbnZhciBtaW4gPSBNYXRoLm1pbjtcblxuLy8gSGVscGVyIGZvciBhIHBvcHVsYXIgcmVwZWF0aW5nIGNhc2Ugb2YgdGhlIHNwZWM6XG4vLyBMZXQgaW50ZWdlciBiZSA/IFRvSW50ZWdlcihpbmRleCkuXG4vLyBJZiBpbnRlZ2VyIDwgMCwgbGV0IHJlc3VsdCBiZSBtYXgoKGxlbmd0aCArIGludGVnZXIpLCAwKTsgZWxzZSBsZXQgcmVzdWx0IGJlIG1pbihpbnRlZ2VyLCBsZW5ndGgpLlxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaW5kZXgsIGxlbmd0aCkge1xuICB2YXIgaW50ZWdlciA9IHRvSW50ZWdlck9ySW5maW5pdHkoaW5kZXgpO1xuICByZXR1cm4gaW50ZWdlciA8IDAgPyBtYXgoaW50ZWdlciArIGxlbmd0aCwgMCkgOiBtaW4oaW50ZWdlciwgbGVuZ3RoKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG4vLyB0b09iamVjdCB3aXRoIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgc3RyaW5nc1xudmFyIEluZGV4ZWRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaW5kZXhlZC1vYmplY3QnKTtcbnZhciByZXF1aXJlT2JqZWN0Q29lcmNpYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlcXVpcmUtb2JqZWN0LWNvZXJjaWJsZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gSW5kZXhlZE9iamVjdChyZXF1aXJlT2JqZWN0Q29lcmNpYmxlKGl0KSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHRydW5jID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL21hdGgtdHJ1bmMnKTtcblxuLy8gYFRvSW50ZWdlck9ySW5maW5pdHlgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy10b2ludGVnZXJvcmluZmluaXR5XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICB2YXIgbnVtYmVyID0gK2FyZ3VtZW50O1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlIC0tIE5hTiBjaGVja1xuICByZXR1cm4gbnVtYmVyICE9PSBudW1iZXIgfHwgbnVtYmVyID09PSAwID8gMCA6IHRydW5jKG51bWJlcik7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHRvSW50ZWdlck9ySW5maW5pdHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8taW50ZWdlci1vci1pbmZpbml0eScpO1xuXG52YXIgbWluID0gTWF0aC5taW47XG5cbi8vIGBUb0xlbmd0aGAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXRvbGVuZ3RoXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICB2YXIgbGVuID0gdG9JbnRlZ2VyT3JJbmZpbml0eShhcmd1bWVudCk7XG4gIHJldHVybiBsZW4gPiAwID8gbWluKGxlbiwgMHgxRkZGRkZGRkZGRkZGRikgOiAwOyAvLyAyICoqIDUzIC0gMSA9PSA5MDA3MTk5MjU0NzQwOTkxXG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHJlcXVpcmVPYmplY3RDb2VyY2libGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVxdWlyZS1vYmplY3QtY29lcmNpYmxlJyk7XG5cbnZhciAkT2JqZWN0ID0gT2JqZWN0O1xuXG4vLyBgVG9PYmplY3RgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy10b29iamVjdFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYXJndW1lbnQpIHtcbiAgcmV0dXJuICRPYmplY3QocmVxdWlyZU9iamVjdENvZXJjaWJsZShhcmd1bWVudCkpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBjYWxsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWNhbGwnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1vYmplY3QnKTtcbnZhciBpc1N5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1zeW1ib2wnKTtcbnZhciBnZXRNZXRob2QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LW1ldGhvZCcpO1xudmFyIG9yZGluYXJ5VG9QcmltaXRpdmUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb3JkaW5hcnktdG8tcHJpbWl0aXZlJyk7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG5cbnZhciAkVHlwZUVycm9yID0gVHlwZUVycm9yO1xudmFyIFRPX1BSSU1JVElWRSA9IHdlbGxLbm93blN5bWJvbCgndG9QcmltaXRpdmUnKTtcblxuLy8gYFRvUHJpbWl0aXZlYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtdG9wcmltaXRpdmVcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGlucHV0LCBwcmVmKSB7XG4gIGlmICghaXNPYmplY3QoaW5wdXQpIHx8IGlzU3ltYm9sKGlucHV0KSkgcmV0dXJuIGlucHV0O1xuICB2YXIgZXhvdGljVG9QcmltID0gZ2V0TWV0aG9kKGlucHV0LCBUT19QUklNSVRJVkUpO1xuICB2YXIgcmVzdWx0O1xuICBpZiAoZXhvdGljVG9QcmltKSB7XG4gICAgaWYgKHByZWYgPT09IHVuZGVmaW5lZCkgcHJlZiA9ICdkZWZhdWx0JztcbiAgICByZXN1bHQgPSBjYWxsKGV4b3RpY1RvUHJpbSwgaW5wdXQsIHByZWYpO1xuICAgIGlmICghaXNPYmplY3QocmVzdWx0KSB8fCBpc1N5bWJvbChyZXN1bHQpKSByZXR1cm4gcmVzdWx0O1xuICAgIHRocm93IG5ldyAkVHlwZUVycm9yKFwiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlXCIpO1xuICB9XG4gIGlmIChwcmVmID09PSB1bmRlZmluZWQpIHByZWYgPSAnbnVtYmVyJztcbiAgcmV0dXJuIG9yZGluYXJ5VG9QcmltaXRpdmUoaW5wdXQsIHByZWYpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1wcmltaXRpdmUnKTtcbnZhciBpc1N5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1zeW1ib2wnKTtcblxuLy8gYFRvUHJvcGVydHlLZXlgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy10b3Byb3BlcnR5a2V5XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICB2YXIga2V5ID0gdG9QcmltaXRpdmUoYXJndW1lbnQsICdzdHJpbmcnKTtcbiAgcmV0dXJuIGlzU3ltYm9sKGtleSkgPyBrZXkgOiBrZXkgKyAnJztcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG5cbnZhciBUT19TVFJJTkdfVEFHID0gd2VsbEtub3duU3ltYm9sKCd0b1N0cmluZ1RhZycpO1xudmFyIHRlc3QgPSB7fTtcblxudGVzdFtUT19TVFJJTkdfVEFHXSA9ICd6JztcblxubW9kdWxlLmV4cG9ydHMgPSBTdHJpbmcodGVzdCkgPT09ICdbb2JqZWN0IHpdJztcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NsYXNzb2YnKTtcblxudmFyICRTdHJpbmcgPSBTdHJpbmc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIGlmIChjbGFzc29mKGFyZ3VtZW50KSA9PT0gJ1N5bWJvbCcpIHRocm93IG5ldyBUeXBlRXJyb3IoJ0Nhbm5vdCBjb252ZXJ0IGEgU3ltYm9sIHZhbHVlIHRvIGEgc3RyaW5nJyk7XG4gIHJldHVybiAkU3RyaW5nKGFyZ3VtZW50KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJFN0cmluZyA9IFN0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYXJndW1lbnQpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gJFN0cmluZyhhcmd1bWVudCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuICdPYmplY3QnO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcycpO1xuXG52YXIgaWQgPSAwO1xudmFyIHBvc3RmaXggPSBNYXRoLnJhbmRvbSgpO1xudmFyIHRvU3RyaW5nID0gdW5jdXJyeVRoaXMoMS4wLnRvU3RyaW5nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIHJldHVybiAnU3ltYm9sKCcgKyAoa2V5ID09PSB1bmRlZmluZWQgPyAnJyA6IGtleSkgKyAnKV8nICsgdG9TdHJpbmcoKytpZCArIHBvc3RmaXgsIDM2KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBlcy9uby1zeW1ib2wgLS0gcmVxdWlyZWQgZm9yIHRlc3RpbmcgKi9cbnZhciBOQVRJVkVfU1lNQk9MID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3N5bWJvbC1jb25zdHJ1Y3Rvci1kZXRlY3Rpb24nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBOQVRJVkVfU1lNQk9MXG4gICYmICFTeW1ib2wuc2hhbVxuICAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09ICdzeW1ib2wnO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcblxuLy8gVjggfiBDaHJvbWUgMzYtXG4vLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMzM0XG5tb2R1bGUuZXhwb3J0cyA9IERFU0NSSVBUT1JTICYmIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1kZWZpbmVwcm9wZXJ0eSAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfSwgJ3Byb3RvdHlwZScsIHtcbiAgICB2YWx1ZTogNDIsXG4gICAgd3JpdGFibGU6IGZhbHNlXG4gIH0pLnByb3RvdHlwZSAhPT0gNDI7XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkVHlwZUVycm9yID0gVHlwZUVycm9yO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChwYXNzZWQsIHJlcXVpcmVkKSB7XG4gIGlmIChwYXNzZWQgPCByZXF1aXJlZCkgdGhyb3cgbmV3ICRUeXBlRXJyb3IoJ05vdCBlbm91Z2ggYXJndW1lbnRzJyk7XG4gIHJldHVybiBwYXNzZWQ7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG5cbnZhciBXZWFrTWFwID0gZ2xvYmFsLldlYWtNYXA7XG5cbm1vZHVsZS5leHBvcnRzID0gaXNDYWxsYWJsZShXZWFrTWFwKSAmJiAvbmF0aXZlIGNvZGUvLnRlc3QoU3RyaW5nKFdlYWtNYXApKTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBwYXRoID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3BhdGgnKTtcbnZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xudmFyIHdyYXBwZWRXZWxsS25vd25TeW1ib2xNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wtd3JhcHBlZCcpO1xudmFyIGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHknKS5mO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChOQU1FKSB7XG4gIHZhciBTeW1ib2wgPSBwYXRoLlN5bWJvbCB8fCAocGF0aC5TeW1ib2wgPSB7fSk7XG4gIGlmICghaGFzT3duKFN5bWJvbCwgTkFNRSkpIGRlZmluZVByb3BlcnR5KFN5bWJvbCwgTkFNRSwge1xuICAgIHZhbHVlOiB3cmFwcGVkV2VsbEtub3duU3ltYm9sTW9kdWxlLmYoTkFNRSlcbiAgfSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xuXG5leHBvcnRzLmYgPSB3ZWxsS25vd25TeW1ib2w7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIHNoYXJlZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zaGFyZWQnKTtcbnZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy91aWQnKTtcbnZhciBOQVRJVkVfU1lNQk9MID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3N5bWJvbC1jb25zdHJ1Y3Rvci1kZXRlY3Rpb24nKTtcbnZhciBVU0VfU1lNQk9MX0FTX1VJRCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy91c2Utc3ltYm9sLWFzLXVpZCcpO1xuXG52YXIgU3ltYm9sID0gZ2xvYmFsLlN5bWJvbDtcbnZhciBXZWxsS25vd25TeW1ib2xzU3RvcmUgPSBzaGFyZWQoJ3drcycpO1xudmFyIGNyZWF0ZVdlbGxLbm93blN5bWJvbCA9IFVTRV9TWU1CT0xfQVNfVUlEID8gU3ltYm9sWydmb3InXSB8fCBTeW1ib2wgOiBTeW1ib2wgJiYgU3ltYm9sLndpdGhvdXRTZXR0ZXIgfHwgdWlkO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gIGlmICghaGFzT3duKFdlbGxLbm93blN5bWJvbHNTdG9yZSwgbmFtZSkpIHtcbiAgICBXZWxsS25vd25TeW1ib2xzU3RvcmVbbmFtZV0gPSBOQVRJVkVfU1lNQk9MICYmIGhhc093bihTeW1ib2wsIG5hbWUpXG4gICAgICA/IFN5bWJvbFtuYW1lXVxuICAgICAgOiBjcmVhdGVXZWxsS25vd25TeW1ib2woJ1N5bWJvbC4nICsgbmFtZSk7XG4gIH0gcmV0dXJuIFdlbGxLbm93blN5bWJvbHNTdG9yZVtuYW1lXTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG4vLyBhIHN0cmluZyBvZiBhbGwgdmFsaWQgdW5pY29kZSB3aGl0ZXNwYWNlc1xubW9kdWxlLmV4cG9ydHMgPSAnXFx1MDAwOVxcdTAwMEFcXHUwMDBCXFx1MDAwQ1xcdTAwMERcXHUwMDIwXFx1MDBBMFxcdTE2ODBcXHUyMDAwXFx1MjAwMVxcdTIwMDInICtcbiAgJ1xcdTIwMDNcXHUyMDA0XFx1MjAwNVxcdTIwMDZcXHUyMDA3XFx1MjAwOFxcdTIwMDlcXHUyMDBBXFx1MjAyRlxcdTIwNUZcXHUzMDAwXFx1MjAyOFxcdTIwMjlcXHVGRUZGJztcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgaXNBcnJheSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1hcnJheScpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW9iamVjdCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLW9iamVjdCcpO1xudmFyIGxlbmd0aE9mQXJyYXlMaWtlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2xlbmd0aC1vZi1hcnJheS1saWtlJyk7XG52YXIgZG9lc05vdEV4Y2VlZFNhZmVJbnRlZ2VyID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RvZXMtbm90LWV4Y2VlZC1zYWZlLWludGVnZXInKTtcbnZhciBjcmVhdGVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jcmVhdGUtcHJvcGVydHknKTtcbnZhciBhcnJheVNwZWNpZXNDcmVhdGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYXJyYXktc3BlY2llcy1jcmVhdGUnKTtcbnZhciBhcnJheU1ldGhvZEhhc1NwZWNpZXNTdXBwb3J0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC1oYXMtc3BlY2llcy1zdXBwb3J0Jyk7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG52YXIgVjhfVkVSU0lPTiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9lbmdpbmUtdjgtdmVyc2lvbicpO1xuXG52YXIgSVNfQ09OQ0FUX1NQUkVBREFCTEUgPSB3ZWxsS25vd25TeW1ib2woJ2lzQ29uY2F0U3ByZWFkYWJsZScpO1xuXG4vLyBXZSBjYW4ndCB1c2UgdGhpcyBmZWF0dXJlIGRldGVjdGlvbiBpbiBWOCBzaW5jZSBpdCBjYXVzZXNcbi8vIGRlb3B0aW1pemF0aW9uIGFuZCBzZXJpb3VzIHBlcmZvcm1hbmNlIGRlZ3JhZGF0aW9uXG4vLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvNjc5XG52YXIgSVNfQ09OQ0FUX1NQUkVBREFCTEVfU1VQUE9SVCA9IFY4X1ZFUlNJT04gPj0gNTEgfHwgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgdmFyIGFycmF5ID0gW107XG4gIGFycmF5W0lTX0NPTkNBVF9TUFJFQURBQkxFXSA9IGZhbHNlO1xuICByZXR1cm4gYXJyYXkuY29uY2F0KClbMF0gIT09IGFycmF5O1xufSk7XG5cbnZhciBpc0NvbmNhdFNwcmVhZGFibGUgPSBmdW5jdGlvbiAoTykge1xuICBpZiAoIWlzT2JqZWN0KE8pKSByZXR1cm4gZmFsc2U7XG4gIHZhciBzcHJlYWRhYmxlID0gT1tJU19DT05DQVRfU1BSRUFEQUJMRV07XG4gIHJldHVybiBzcHJlYWRhYmxlICE9PSB1bmRlZmluZWQgPyAhIXNwcmVhZGFibGUgOiBpc0FycmF5KE8pO1xufTtcblxudmFyIEZPUkNFRCA9ICFJU19DT05DQVRfU1BSRUFEQUJMRV9TVVBQT1JUIHx8ICFhcnJheU1ldGhvZEhhc1NwZWNpZXNTdXBwb3J0KCdjb25jYXQnKTtcblxuLy8gYEFycmF5LnByb3RvdHlwZS5jb25jYXRgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuY29uY2F0XG4vLyB3aXRoIGFkZGluZyBzdXBwb3J0IG9mIEBAaXNDb25jYXRTcHJlYWRhYmxlIGFuZCBAQHNwZWNpZXNcbiQoeyB0YXJnZXQ6ICdBcnJheScsIHByb3RvOiB0cnVlLCBhcml0eTogMSwgZm9yY2VkOiBGT1JDRUQgfSwge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMgLS0gcmVxdWlyZWQgZm9yIGAubGVuZ3RoYFxuICBjb25jYXQ6IGZ1bmN0aW9uIGNvbmNhdChhcmcpIHtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KHRoaXMpO1xuICAgIHZhciBBID0gYXJyYXlTcGVjaWVzQ3JlYXRlKE8sIDApO1xuICAgIHZhciBuID0gMDtcbiAgICB2YXIgaSwgaywgbGVuZ3RoLCBsZW4sIEU7XG4gICAgZm9yIChpID0gLTEsIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgRSA9IGkgPT09IC0xID8gTyA6IGFyZ3VtZW50c1tpXTtcbiAgICAgIGlmIChpc0NvbmNhdFNwcmVhZGFibGUoRSkpIHtcbiAgICAgICAgbGVuID0gbGVuZ3RoT2ZBcnJheUxpa2UoRSk7XG4gICAgICAgIGRvZXNOb3RFeGNlZWRTYWZlSW50ZWdlcihuICsgbGVuKTtcbiAgICAgICAgZm9yIChrID0gMDsgayA8IGxlbjsgaysrLCBuKyspIGlmIChrIGluIEUpIGNyZWF0ZVByb3BlcnR5KEEsIG4sIEVba10pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZG9lc05vdEV4Y2VlZFNhZmVJbnRlZ2VyKG4gKyAxKTtcbiAgICAgICAgY3JlYXRlUHJvcGVydHkoQSwgbisrLCBFKTtcbiAgICAgIH1cbiAgICB9XG4gICAgQS5sZW5ndGggPSBuO1xuICAgIHJldHVybiBBO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyICRmaWx0ZXIgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYXJyYXktaXRlcmF0aW9uJykuZmlsdGVyO1xudmFyIGFycmF5TWV0aG9kSGFzU3BlY2llc1N1cHBvcnQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLWhhcy1zcGVjaWVzLXN1cHBvcnQnKTtcblxudmFyIEhBU19TUEVDSUVTX1NVUFBPUlQgPSBhcnJheU1ldGhvZEhhc1NwZWNpZXNTdXBwb3J0KCdmaWx0ZXInKTtcblxuLy8gYEFycmF5LnByb3RvdHlwZS5maWx0ZXJgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuZmlsdGVyXG4vLyB3aXRoIGFkZGluZyBzdXBwb3J0IG9mIEBAc3BlY2llc1xuJCh7IHRhcmdldDogJ0FycmF5JywgcHJvdG86IHRydWUsIGZvcmNlZDogIUhBU19TUEVDSUVTX1NVUFBPUlQgfSwge1xuICBmaWx0ZXI6IGZ1bmN0aW9uIGZpbHRlcihjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgIHJldHVybiAkZmlsdGVyKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciAkZmluZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1pdGVyYXRpb24nKS5maW5kO1xudmFyIGFkZFRvVW5zY29wYWJsZXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYWRkLXRvLXVuc2NvcGFibGVzJyk7XG5cbnZhciBGSU5EID0gJ2ZpbmQnO1xudmFyIFNLSVBTX0hPTEVTID0gdHJ1ZTtcblxuLy8gU2hvdWxkbid0IHNraXAgaG9sZXNcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1hcnJheS1wcm90b3R5cGUtZmluZCAtLSB0ZXN0aW5nXG5pZiAoRklORCBpbiBbXSkgQXJyYXkoMSlbRklORF0oZnVuY3Rpb24gKCkgeyBTS0lQU19IT0xFUyA9IGZhbHNlOyB9KTtcblxuLy8gYEFycmF5LnByb3RvdHlwZS5maW5kYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLmZpbmRcbiQoeyB0YXJnZXQ6ICdBcnJheScsIHByb3RvOiB0cnVlLCBmb3JjZWQ6IFNLSVBTX0hPTEVTIH0sIHtcbiAgZmluZDogZnVuY3Rpb24gZmluZChjYWxsYmFja2ZuIC8qICwgdGhhdCA9IHVuZGVmaW5lZCAqLykge1xuICAgIHJldHVybiAkZmluZCh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gIH1cbn0pO1xuXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS1AQHVuc2NvcGFibGVzXG5hZGRUb1Vuc2NvcGFibGVzKEZJTkQpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgZnJvbSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1mcm9tJyk7XG52YXIgY2hlY2tDb3JyZWN0bmVzc09mSXRlcmF0aW9uID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NoZWNrLWNvcnJlY3RuZXNzLW9mLWl0ZXJhdGlvbicpO1xuXG52YXIgSU5DT1JSRUNUX0lURVJBVElPTiA9ICFjaGVja0NvcnJlY3RuZXNzT2ZJdGVyYXRpb24oZnVuY3Rpb24gKGl0ZXJhYmxlKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1hcnJheS1mcm9tIC0tIHJlcXVpcmVkIGZvciB0ZXN0aW5nXG4gIEFycmF5LmZyb20oaXRlcmFibGUpO1xufSk7XG5cbi8vIGBBcnJheS5mcm9tYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkuZnJvbVxuJCh7IHRhcmdldDogJ0FycmF5Jywgc3RhdDogdHJ1ZSwgZm9yY2VkOiBJTkNPUlJFQ1RfSVRFUkFUSU9OIH0sIHtcbiAgZnJvbTogZnJvbVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciAkaW5jbHVkZXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYXJyYXktaW5jbHVkZXMnKS5pbmNsdWRlcztcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGFkZFRvVW5zY29wYWJsZXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYWRkLXRvLXVuc2NvcGFibGVzJyk7XG5cbi8vIEZGOTkrIGJ1Z1xudmFyIEJST0tFTl9PTl9TUEFSU0UgPSBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1hcnJheS1wcm90b3R5cGUtaW5jbHVkZXMgLS0gZGV0ZWN0aW9uXG4gIHJldHVybiAhQXJyYXkoMSkuaW5jbHVkZXMoKTtcbn0pO1xuXG4vLyBgQXJyYXkucHJvdG90eXBlLmluY2x1ZGVzYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLmluY2x1ZGVzXG4kKHsgdGFyZ2V0OiAnQXJyYXknLCBwcm90bzogdHJ1ZSwgZm9yY2VkOiBCUk9LRU5fT05fU1BBUlNFIH0sIHtcbiAgaW5jbHVkZXM6IGZ1bmN0aW9uIGluY2x1ZGVzKGVsIC8qICwgZnJvbUluZGV4ID0gMCAqLykge1xuICAgIHJldHVybiAkaW5jbHVkZXModGhpcywgZWwsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG5cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLUBAdW5zY29wYWJsZXNcbmFkZFRvVW5zY29wYWJsZXMoJ2luY2x1ZGVzJyk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdG9JbmRleGVkT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWluZGV4ZWQtb2JqZWN0Jyk7XG52YXIgYWRkVG9VbnNjb3BhYmxlcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hZGQtdG8tdW5zY29wYWJsZXMnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXRlcmF0b3JzJyk7XG52YXIgSW50ZXJuYWxTdGF0ZU1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbnRlcm5hbC1zdGF0ZScpO1xudmFyIGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHknKS5mO1xudmFyIGRlZmluZUl0ZXJhdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2l0ZXJhdG9yLWRlZmluZScpO1xudmFyIGNyZWF0ZUl0ZXJSZXN1bHRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLWl0ZXItcmVzdWx0LW9iamVjdCcpO1xudmFyIElTX1BVUkUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtcHVyZScpO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG5cbnZhciBBUlJBWV9JVEVSQVRPUiA9ICdBcnJheSBJdGVyYXRvcic7XG52YXIgc2V0SW50ZXJuYWxTdGF0ZSA9IEludGVybmFsU3RhdGVNb2R1bGUuc2V0O1xudmFyIGdldEludGVybmFsU3RhdGUgPSBJbnRlcm5hbFN0YXRlTW9kdWxlLmdldHRlckZvcihBUlJBWV9JVEVSQVRPUik7XG5cbi8vIGBBcnJheS5wcm90b3R5cGUuZW50cmllc2AgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS5lbnRyaWVzXG4vLyBgQXJyYXkucHJvdG90eXBlLmtleXNgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUua2V5c1xuLy8gYEFycmF5LnByb3RvdHlwZS52YWx1ZXNgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUudmFsdWVzXG4vLyBgQXJyYXkucHJvdG90eXBlW0BAaXRlcmF0b3JdYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLUBAaXRlcmF0b3Jcbi8vIGBDcmVhdGVBcnJheUl0ZXJhdG9yYCBpbnRlcm5hbCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtY3JlYXRlYXJyYXlpdGVyYXRvclxubW9kdWxlLmV4cG9ydHMgPSBkZWZpbmVJdGVyYXRvcihBcnJheSwgJ0FycmF5JywgZnVuY3Rpb24gKGl0ZXJhdGVkLCBraW5kKSB7XG4gIHNldEludGVybmFsU3RhdGUodGhpcywge1xuICAgIHR5cGU6IEFSUkFZX0lURVJBVE9SLFxuICAgIHRhcmdldDogdG9JbmRleGVkT2JqZWN0KGl0ZXJhdGVkKSwgLy8gdGFyZ2V0XG4gICAgaW5kZXg6IDAsICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBuZXh0IGluZGV4XG4gICAga2luZDoga2luZCAgICAgICAgICAgICAgICAgICAgICAgICAvLyBraW5kXG4gIH0pO1xuLy8gYCVBcnJheUl0ZXJhdG9yUHJvdG90eXBlJS5uZXh0YCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtJWFycmF5aXRlcmF0b3Jwcm90b3R5cGUlLm5leHRcbn0sIGZ1bmN0aW9uICgpIHtcbiAgdmFyIHN0YXRlID0gZ2V0SW50ZXJuYWxTdGF0ZSh0aGlzKTtcbiAgdmFyIHRhcmdldCA9IHN0YXRlLnRhcmdldDtcbiAgdmFyIGluZGV4ID0gc3RhdGUuaW5kZXgrKztcbiAgaWYgKCF0YXJnZXQgfHwgaW5kZXggPj0gdGFyZ2V0Lmxlbmd0aCkge1xuICAgIHN0YXRlLnRhcmdldCA9IHVuZGVmaW5lZDtcbiAgICByZXR1cm4gY3JlYXRlSXRlclJlc3VsdE9iamVjdCh1bmRlZmluZWQsIHRydWUpO1xuICB9XG4gIHN3aXRjaCAoc3RhdGUua2luZCkge1xuICAgIGNhc2UgJ2tleXMnOiByZXR1cm4gY3JlYXRlSXRlclJlc3VsdE9iamVjdChpbmRleCwgZmFsc2UpO1xuICAgIGNhc2UgJ3ZhbHVlcyc6IHJldHVybiBjcmVhdGVJdGVyUmVzdWx0T2JqZWN0KHRhcmdldFtpbmRleF0sIGZhbHNlKTtcbiAgfSByZXR1cm4gY3JlYXRlSXRlclJlc3VsdE9iamVjdChbaW5kZXgsIHRhcmdldFtpbmRleF1dLCBmYWxzZSk7XG59LCAndmFsdWVzJyk7XG5cbi8vIGFyZ3VtZW50c0xpc3RbQEBpdGVyYXRvcl0gaXMgJUFycmF5UHJvdG9fdmFsdWVzJVxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1jcmVhdGV1bm1hcHBlZGFyZ3VtZW50c29iamVjdFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1jcmVhdGVtYXBwZWRhcmd1bWVudHNvYmplY3RcbnZhciB2YWx1ZXMgPSBJdGVyYXRvcnMuQXJndW1lbnRzID0gSXRlcmF0b3JzLkFycmF5O1xuXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS1AQHVuc2NvcGFibGVzXG5hZGRUb1Vuc2NvcGFibGVzKCdrZXlzJyk7XG5hZGRUb1Vuc2NvcGFibGVzKCd2YWx1ZXMnKTtcbmFkZFRvVW5zY29wYWJsZXMoJ2VudHJpZXMnKTtcblxuLy8gVjggfiBDaHJvbWUgNDUtIGJ1Z1xuaWYgKCFJU19QVVJFICYmIERFU0NSSVBUT1JTICYmIHZhbHVlcy5uYW1lICE9PSAndmFsdWVzJykgdHJ5IHtcbiAgZGVmaW5lUHJvcGVydHkodmFsdWVzLCAnbmFtZScsIHsgdmFsdWU6ICd2YWx1ZXMnIH0pO1xufSBjYXRjaCAoZXJyb3IpIHsgLyogZW1wdHkgKi8gfVxuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgSW5kZXhlZE9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbmRleGVkLW9iamVjdCcpO1xudmFyIHRvSW5kZXhlZE9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdCcpO1xudmFyIGFycmF5TWV0aG9kSXNTdHJpY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLWlzLXN0cmljdCcpO1xuXG52YXIgbmF0aXZlSm9pbiA9IHVuY3VycnlUaGlzKFtdLmpvaW4pO1xuXG52YXIgRVMzX1NUUklOR1MgPSBJbmRleGVkT2JqZWN0ICE9PSBPYmplY3Q7XG52YXIgRk9SQ0VEID0gRVMzX1NUUklOR1MgfHwgIWFycmF5TWV0aG9kSXNTdHJpY3QoJ2pvaW4nLCAnLCcpO1xuXG4vLyBgQXJyYXkucHJvdG90eXBlLmpvaW5gIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuam9pblxuJCh7IHRhcmdldDogJ0FycmF5JywgcHJvdG86IHRydWUsIGZvcmNlZDogRk9SQ0VEIH0sIHtcbiAgam9pbjogZnVuY3Rpb24gam9pbihzZXBhcmF0b3IpIHtcbiAgICByZXR1cm4gbmF0aXZlSm9pbih0b0luZGV4ZWRPYmplY3QodGhpcyksIHNlcGFyYXRvciA9PT0gdW5kZWZpbmVkID8gJywnIDogc2VwYXJhdG9yKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciAkbWFwID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LWl0ZXJhdGlvbicpLm1hcDtcbnZhciBhcnJheU1ldGhvZEhhc1NwZWNpZXNTdXBwb3J0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC1oYXMtc3BlY2llcy1zdXBwb3J0Jyk7XG5cbnZhciBIQVNfU1BFQ0lFU19TVVBQT1JUID0gYXJyYXlNZXRob2RIYXNTcGVjaWVzU3VwcG9ydCgnbWFwJyk7XG5cbi8vIGBBcnJheS5wcm90b3R5cGUubWFwYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLm1hcFxuLy8gd2l0aCBhZGRpbmcgc3VwcG9ydCBvZiBAQHNwZWNpZXNcbiQoeyB0YXJnZXQ6ICdBcnJheScsIHByb3RvOiB0cnVlLCBmb3JjZWQ6ICFIQVNfU1BFQ0lFU19TVVBQT1JUIH0sIHtcbiAgbWFwOiBmdW5jdGlvbiBtYXAoY2FsbGJhY2tmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICByZXR1cm4gJG1hcCh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgaXNBcnJheSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1hcnJheScpO1xudmFyIGlzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY29uc3RydWN0b3InKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1vYmplY3QnKTtcbnZhciB0b0Fic29sdXRlSW5kZXggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tYWJzb2x1dGUtaW5kZXgnKTtcbnZhciBsZW5ndGhPZkFycmF5TGlrZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9sZW5ndGgtb2YtYXJyYXktbGlrZScpO1xudmFyIHRvSW5kZXhlZE9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdCcpO1xudmFyIGNyZWF0ZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NyZWF0ZS1wcm9wZXJ0eScpO1xudmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xudmFyIGFycmF5TWV0aG9kSGFzU3BlY2llc1N1cHBvcnQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYXJyYXktbWV0aG9kLWhhcy1zcGVjaWVzLXN1cHBvcnQnKTtcbnZhciBuYXRpdmVTbGljZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1zbGljZScpO1xuXG52YXIgSEFTX1NQRUNJRVNfU1VQUE9SVCA9IGFycmF5TWV0aG9kSGFzU3BlY2llc1N1cHBvcnQoJ3NsaWNlJyk7XG5cbnZhciBTUEVDSUVTID0gd2VsbEtub3duU3ltYm9sKCdzcGVjaWVzJyk7XG52YXIgJEFycmF5ID0gQXJyYXk7XG52YXIgbWF4ID0gTWF0aC5tYXg7XG5cbi8vIGBBcnJheS5wcm90b3R5cGUuc2xpY2VgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuc2xpY2Vcbi8vIGZhbGxiYWNrIGZvciBub3QgYXJyYXktbGlrZSBFUzMgc3RyaW5ncyBhbmQgRE9NIG9iamVjdHNcbiQoeyB0YXJnZXQ6ICdBcnJheScsIHByb3RvOiB0cnVlLCBmb3JjZWQ6ICFIQVNfU1BFQ0lFU19TVVBQT1JUIH0sIHtcbiAgc2xpY2U6IGZ1bmN0aW9uIHNsaWNlKHN0YXJ0LCBlbmQpIHtcbiAgICB2YXIgTyA9IHRvSW5kZXhlZE9iamVjdCh0aGlzKTtcbiAgICB2YXIgbGVuZ3RoID0gbGVuZ3RoT2ZBcnJheUxpa2UoTyk7XG4gICAgdmFyIGsgPSB0b0Fic29sdXRlSW5kZXgoc3RhcnQsIGxlbmd0aCk7XG4gICAgdmFyIGZpbiA9IHRvQWJzb2x1dGVJbmRleChlbmQgPT09IHVuZGVmaW5lZCA/IGxlbmd0aCA6IGVuZCwgbGVuZ3RoKTtcbiAgICAvLyBpbmxpbmUgYEFycmF5U3BlY2llc0NyZWF0ZWAgZm9yIHVzYWdlIG5hdGl2ZSBgQXJyYXkjc2xpY2VgIHdoZXJlIGl0J3MgcG9zc2libGVcbiAgICB2YXIgQ29uc3RydWN0b3IsIHJlc3VsdCwgbjtcbiAgICBpZiAoaXNBcnJheShPKSkge1xuICAgICAgQ29uc3RydWN0b3IgPSBPLmNvbnN0cnVjdG9yO1xuICAgICAgLy8gY3Jvc3MtcmVhbG0gZmFsbGJhY2tcbiAgICAgIGlmIChpc0NvbnN0cnVjdG9yKENvbnN0cnVjdG9yKSAmJiAoQ29uc3RydWN0b3IgPT09ICRBcnJheSB8fCBpc0FycmF5KENvbnN0cnVjdG9yLnByb3RvdHlwZSkpKSB7XG4gICAgICAgIENvbnN0cnVjdG9yID0gdW5kZWZpbmVkO1xuICAgICAgfSBlbHNlIGlmIChpc09iamVjdChDb25zdHJ1Y3RvcikpIHtcbiAgICAgICAgQ29uc3RydWN0b3IgPSBDb25zdHJ1Y3RvcltTUEVDSUVTXTtcbiAgICAgICAgaWYgKENvbnN0cnVjdG9yID09PSBudWxsKSBDb25zdHJ1Y3RvciA9IHVuZGVmaW5lZDtcbiAgICAgIH1cbiAgICAgIGlmIChDb25zdHJ1Y3RvciA9PT0gJEFycmF5IHx8IENvbnN0cnVjdG9yID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIG5hdGl2ZVNsaWNlKE8sIGssIGZpbik7XG4gICAgICB9XG4gICAgfVxuICAgIHJlc3VsdCA9IG5ldyAoQ29uc3RydWN0b3IgPT09IHVuZGVmaW5lZCA/ICRBcnJheSA6IENvbnN0cnVjdG9yKShtYXgoZmluIC0gaywgMCkpO1xuICAgIGZvciAobiA9IDA7IGsgPCBmaW47IGsrKywgbisrKSBpZiAoayBpbiBPKSBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIG4sIE9ba10pO1xuICAgIHJlc3VsdC5sZW5ndGggPSBuO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgYUNhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2EtY2FsbGFibGUnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1vYmplY3QnKTtcbnZhciBsZW5ndGhPZkFycmF5TGlrZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9sZW5ndGgtb2YtYXJyYXktbGlrZScpO1xudmFyIGRlbGV0ZVByb3BlcnR5T3JUaHJvdyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZWxldGUtcHJvcGVydHktb3ItdGhyb3cnKTtcbnZhciB0b1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1zdHJpbmcnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGludGVybmFsU29ydCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1zb3J0Jyk7XG52YXIgYXJyYXlNZXRob2RJc1N0cmljdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1tZXRob2QtaXMtc3RyaWN0Jyk7XG52YXIgRkYgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZW5naW5lLWZmLXZlcnNpb24nKTtcbnZhciBJRV9PUl9FREdFID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2VuZ2luZS1pcy1pZS1vci1lZGdlJyk7XG52YXIgVjggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZW5naW5lLXY4LXZlcnNpb24nKTtcbnZhciBXRUJLSVQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZW5naW5lLXdlYmtpdC12ZXJzaW9uJyk7XG5cbnZhciB0ZXN0ID0gW107XG52YXIgbmF0aXZlU29ydCA9IHVuY3VycnlUaGlzKHRlc3Quc29ydCk7XG52YXIgcHVzaCA9IHVuY3VycnlUaGlzKHRlc3QucHVzaCk7XG5cbi8vIElFOC1cbnZhciBGQUlMU19PTl9VTkRFRklORUQgPSBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHRlc3Quc29ydCh1bmRlZmluZWQpO1xufSk7XG4vLyBWOCBidWdcbnZhciBGQUlMU19PTl9OVUxMID0gZmFpbHMoZnVuY3Rpb24gKCkge1xuICB0ZXN0LnNvcnQobnVsbCk7XG59KTtcbi8vIE9sZCBXZWJLaXRcbnZhciBTVFJJQ1RfTUVUSE9EID0gYXJyYXlNZXRob2RJc1N0cmljdCgnc29ydCcpO1xuXG52YXIgU1RBQkxFX1NPUlQgPSAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAvLyBmZWF0dXJlIGRldGVjdGlvbiBjYW4gYmUgdG9vIHNsb3csIHNvIGNoZWNrIGVuZ2luZXMgdmVyc2lvbnNcbiAgaWYgKFY4KSByZXR1cm4gVjggPCA3MDtcbiAgaWYgKEZGICYmIEZGID4gMykgcmV0dXJuO1xuICBpZiAoSUVfT1JfRURHRSkgcmV0dXJuIHRydWU7XG4gIGlmIChXRUJLSVQpIHJldHVybiBXRUJLSVQgPCA2MDM7XG5cbiAgdmFyIHJlc3VsdCA9ICcnO1xuICB2YXIgY29kZSwgY2hyLCB2YWx1ZSwgaW5kZXg7XG5cbiAgLy8gZ2VuZXJhdGUgYW4gYXJyYXkgd2l0aCBtb3JlIDUxMiBlbGVtZW50cyAoQ2hha3JhIGFuZCBvbGQgVjggZmFpbHMgb25seSBpbiB0aGlzIGNhc2UpXG4gIGZvciAoY29kZSA9IDY1OyBjb2RlIDwgNzY7IGNvZGUrKykge1xuICAgIGNociA9IFN0cmluZy5mcm9tQ2hhckNvZGUoY29kZSk7XG5cbiAgICBzd2l0Y2ggKGNvZGUpIHtcbiAgICAgIGNhc2UgNjY6IGNhc2UgNjk6IGNhc2UgNzA6IGNhc2UgNzI6IHZhbHVlID0gMzsgYnJlYWs7XG4gICAgICBjYXNlIDY4OiBjYXNlIDcxOiB2YWx1ZSA9IDQ7IGJyZWFrO1xuICAgICAgZGVmYXVsdDogdmFsdWUgPSAyO1xuICAgIH1cblxuICAgIGZvciAoaW5kZXggPSAwOyBpbmRleCA8IDQ3OyBpbmRleCsrKSB7XG4gICAgICB0ZXN0LnB1c2goeyBrOiBjaHIgKyBpbmRleCwgdjogdmFsdWUgfSk7XG4gICAgfVxuICB9XG5cbiAgdGVzdC5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7IHJldHVybiBiLnYgLSBhLnY7IH0pO1xuXG4gIGZvciAoaW5kZXggPSAwOyBpbmRleCA8IHRlc3QubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgY2hyID0gdGVzdFtpbmRleF0uay5jaGFyQXQoMCk7XG4gICAgaWYgKHJlc3VsdC5jaGFyQXQocmVzdWx0Lmxlbmd0aCAtIDEpICE9PSBjaHIpIHJlc3VsdCArPSBjaHI7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0ICE9PSAnREdCRUZIQUNJSksnO1xufSk7XG5cbnZhciBGT1JDRUQgPSBGQUlMU19PTl9VTkRFRklORUQgfHwgIUZBSUxTX09OX05VTEwgfHwgIVNUUklDVF9NRVRIT0QgfHwgIVNUQUJMRV9TT1JUO1xuXG52YXIgZ2V0U29ydENvbXBhcmUgPSBmdW5jdGlvbiAoY29tcGFyZWZuKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoeCwgeSkge1xuICAgIGlmICh5ID09PSB1bmRlZmluZWQpIHJldHVybiAtMTtcbiAgICBpZiAoeCA9PT0gdW5kZWZpbmVkKSByZXR1cm4gMTtcbiAgICBpZiAoY29tcGFyZWZuICE9PSB1bmRlZmluZWQpIHJldHVybiArY29tcGFyZWZuKHgsIHkpIHx8IDA7XG4gICAgcmV0dXJuIHRvU3RyaW5nKHgpID4gdG9TdHJpbmcoeSkgPyAxIDogLTE7XG4gIH07XG59O1xuXG4vLyBgQXJyYXkucHJvdG90eXBlLnNvcnRgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuc29ydFxuJCh7IHRhcmdldDogJ0FycmF5JywgcHJvdG86IHRydWUsIGZvcmNlZDogRk9SQ0VEIH0sIHtcbiAgc29ydDogZnVuY3Rpb24gc29ydChjb21wYXJlZm4pIHtcbiAgICBpZiAoY29tcGFyZWZuICE9PSB1bmRlZmluZWQpIGFDYWxsYWJsZShjb21wYXJlZm4pO1xuXG4gICAgdmFyIGFycmF5ID0gdG9PYmplY3QodGhpcyk7XG5cbiAgICBpZiAoU1RBQkxFX1NPUlQpIHJldHVybiBjb21wYXJlZm4gPT09IHVuZGVmaW5lZCA/IG5hdGl2ZVNvcnQoYXJyYXkpIDogbmF0aXZlU29ydChhcnJheSwgY29tcGFyZWZuKTtcblxuICAgIHZhciBpdGVtcyA9IFtdO1xuICAgIHZhciBhcnJheUxlbmd0aCA9IGxlbmd0aE9mQXJyYXlMaWtlKGFycmF5KTtcbiAgICB2YXIgaXRlbXNMZW5ndGgsIGluZGV4O1xuXG4gICAgZm9yIChpbmRleCA9IDA7IGluZGV4IDwgYXJyYXlMZW5ndGg7IGluZGV4KyspIHtcbiAgICAgIGlmIChpbmRleCBpbiBhcnJheSkgcHVzaChpdGVtcywgYXJyYXlbaW5kZXhdKTtcbiAgICB9XG5cbiAgICBpbnRlcm5hbFNvcnQoaXRlbXMsIGdldFNvcnRDb21wYXJlKGNvbXBhcmVmbikpO1xuXG4gICAgaXRlbXNMZW5ndGggPSBsZW5ndGhPZkFycmF5TGlrZShpdGVtcyk7XG4gICAgaW5kZXggPSAwO1xuXG4gICAgd2hpbGUgKGluZGV4IDwgaXRlbXNMZW5ndGgpIGFycmF5W2luZGV4XSA9IGl0ZW1zW2luZGV4KytdO1xuICAgIHdoaWxlIChpbmRleCA8IGFycmF5TGVuZ3RoKSBkZWxldGVQcm9wZXJ0eU9yVGhyb3coYXJyYXksIGluZGV4KyspO1xuXG4gICAgcmV0dXJuIGFycmF5O1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xudmFyIGRlZmluZUJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVmaW5lLWJ1aWx0LWluJyk7XG52YXIgZGF0ZVRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RhdGUtdG8tcHJpbWl0aXZlJyk7XG52YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7XG5cbnZhciBUT19QUklNSVRJVkUgPSB3ZWxsS25vd25TeW1ib2woJ3RvUHJpbWl0aXZlJyk7XG52YXIgRGF0ZVByb3RvdHlwZSA9IERhdGUucHJvdG90eXBlO1xuXG4vLyBgRGF0ZS5wcm90b3R5cGVbQEB0b1ByaW1pdGl2ZV1gIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1kYXRlLnByb3RvdHlwZS1AQHRvcHJpbWl0aXZlXG5pZiAoIWhhc093bihEYXRlUHJvdG90eXBlLCBUT19QUklNSVRJVkUpKSB7XG4gIGRlZmluZUJ1aWx0SW4oRGF0ZVByb3RvdHlwZSwgVE9fUFJJTUlUSVZFLCBkYXRlVG9QcmltaXRpdmUpO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG52YXIgRlVOQ1RJT05fTkFNRV9FWElTVFMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tbmFtZScpLkVYSVNUUztcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcbnZhciBkZWZpbmVCdWlsdEluQWNjZXNzb3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVmaW5lLWJ1aWx0LWluLWFjY2Vzc29yJyk7XG5cbnZhciBGdW5jdGlvblByb3RvdHlwZSA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcbnZhciBmdW5jdGlvblRvU3RyaW5nID0gdW5jdXJyeVRoaXMoRnVuY3Rpb25Qcm90b3R5cGUudG9TdHJpbmcpO1xudmFyIG5hbWVSRSA9IC9mdW5jdGlvblxcYig/Olxcc3xcXC9cXCpbXFxTXFxzXSo/XFwqXFwvfFxcL1xcL1teXFxuXFxyXSpbXFxuXFxyXSspKihbXlxccygvXSopLztcbnZhciByZWdFeHBFeGVjID0gdW5jdXJyeVRoaXMobmFtZVJFLmV4ZWMpO1xudmFyIE5BTUUgPSAnbmFtZSc7XG5cbi8vIEZ1bmN0aW9uIGluc3RhbmNlcyBgLm5hbWVgIHByb3BlcnR5XG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWZ1bmN0aW9uLWluc3RhbmNlcy1uYW1lXG5pZiAoREVTQ1JJUFRPUlMgJiYgIUZVTkNUSU9OX05BTUVfRVhJU1RTKSB7XG4gIGRlZmluZUJ1aWx0SW5BY2Nlc3NvcihGdW5jdGlvblByb3RvdHlwZSwgTkFNRSwge1xuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHJldHVybiByZWdFeHBFeGVjKG5hbWVSRSwgZnVuY3Rpb25Ub1N0cmluZyh0aGlzKSlbMV07XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIGdldEJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LWJ1aWx0LWluJyk7XG52YXIgYXBwbHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tYXBwbHknKTtcbnZhciBjYWxsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWNhbGwnKTtcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciBpc1N5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1zeW1ib2wnKTtcbnZhciBhcnJheVNsaWNlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LXNsaWNlJyk7XG52YXIgZ2V0UmVwbGFjZXJGdW5jdGlvbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nZXQtanNvbi1yZXBsYWNlci1mdW5jdGlvbicpO1xudmFyIE5BVElWRV9TWU1CT0wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc3ltYm9sLWNvbnN0cnVjdG9yLWRldGVjdGlvbicpO1xuXG52YXIgJFN0cmluZyA9IFN0cmluZztcbnZhciAkc3RyaW5naWZ5ID0gZ2V0QnVpbHRJbignSlNPTicsICdzdHJpbmdpZnknKTtcbnZhciBleGVjID0gdW5jdXJyeVRoaXMoLy4vLmV4ZWMpO1xudmFyIGNoYXJBdCA9IHVuY3VycnlUaGlzKCcnLmNoYXJBdCk7XG52YXIgY2hhckNvZGVBdCA9IHVuY3VycnlUaGlzKCcnLmNoYXJDb2RlQXQpO1xudmFyIHJlcGxhY2UgPSB1bmN1cnJ5VGhpcygnJy5yZXBsYWNlKTtcbnZhciBudW1iZXJUb1N0cmluZyA9IHVuY3VycnlUaGlzKDEuMC50b1N0cmluZyk7XG5cbnZhciB0ZXN0ZXIgPSAvW1xcdUQ4MDAtXFx1REZGRl0vZztcbnZhciBsb3cgPSAvXltcXHVEODAwLVxcdURCRkZdJC87XG52YXIgaGkgPSAvXltcXHVEQzAwLVxcdURGRkZdJC87XG5cbnZhciBXUk9OR19TWU1CT0xTX0NPTlZFUlNJT04gPSAhTkFUSVZFX1NZTUJPTCB8fCBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHZhciBzeW1ib2wgPSBnZXRCdWlsdEluKCdTeW1ib2wnKSgnc3RyaW5naWZ5IGRldGVjdGlvbicpO1xuICAvLyBNUyBFZGdlIGNvbnZlcnRzIHN5bWJvbCB2YWx1ZXMgdG8gSlNPTiBhcyB7fVxuICByZXR1cm4gJHN0cmluZ2lmeShbc3ltYm9sXSkgIT09ICdbbnVsbF0nXG4gICAgLy8gV2ViS2l0IGNvbnZlcnRzIHN5bWJvbCB2YWx1ZXMgdG8gSlNPTiBhcyBudWxsXG4gICAgfHwgJHN0cmluZ2lmeSh7IGE6IHN5bWJvbCB9KSAhPT0gJ3t9J1xuICAgIC8vIFY4IHRocm93cyBvbiBib3hlZCBzeW1ib2xzXG4gICAgfHwgJHN0cmluZ2lmeShPYmplY3Qoc3ltYm9sKSkgIT09ICd7fSc7XG59KTtcblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtd2VsbC1mb3JtZWQtc3RyaW5naWZ5XG52YXIgSUxMX0ZPUk1FRF9VTklDT0RFID0gZmFpbHMoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gJHN0cmluZ2lmeSgnXFx1REYwNlxcdUQ4MzQnKSAhPT0gJ1wiXFxcXHVkZjA2XFxcXHVkODM0XCInXG4gICAgfHwgJHN0cmluZ2lmeSgnXFx1REVBRCcpICE9PSAnXCJcXFxcdWRlYWRcIic7XG59KTtcblxudmFyIHN0cmluZ2lmeVdpdGhTeW1ib2xzRml4ID0gZnVuY3Rpb24gKGl0LCByZXBsYWNlcikge1xuICB2YXIgYXJncyA9IGFycmF5U2xpY2UoYXJndW1lbnRzKTtcbiAgdmFyICRyZXBsYWNlciA9IGdldFJlcGxhY2VyRnVuY3Rpb24ocmVwbGFjZXIpO1xuICBpZiAoIWlzQ2FsbGFibGUoJHJlcGxhY2VyKSAmJiAoaXQgPT09IHVuZGVmaW5lZCB8fCBpc1N5bWJvbChpdCkpKSByZXR1cm47IC8vIElFOCByZXR1cm5zIHN0cmluZyBvbiB1bmRlZmluZWRcbiAgYXJnc1sxXSA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgLy8gc29tZSBvbGQgaW1wbGVtZW50YXRpb25zIChsaWtlIFdlYktpdCkgY291bGQgcGFzcyBudW1iZXJzIGFzIGtleXNcbiAgICBpZiAoaXNDYWxsYWJsZSgkcmVwbGFjZXIpKSB2YWx1ZSA9IGNhbGwoJHJlcGxhY2VyLCB0aGlzLCAkU3RyaW5nKGtleSksIHZhbHVlKTtcbiAgICBpZiAoIWlzU3ltYm9sKHZhbHVlKSkgcmV0dXJuIHZhbHVlO1xuICB9O1xuICByZXR1cm4gYXBwbHkoJHN0cmluZ2lmeSwgbnVsbCwgYXJncyk7XG59O1xuXG52YXIgZml4SWxsRm9ybWVkID0gZnVuY3Rpb24gKG1hdGNoLCBvZmZzZXQsIHN0cmluZykge1xuICB2YXIgcHJldiA9IGNoYXJBdChzdHJpbmcsIG9mZnNldCAtIDEpO1xuICB2YXIgbmV4dCA9IGNoYXJBdChzdHJpbmcsIG9mZnNldCArIDEpO1xuICBpZiAoKGV4ZWMobG93LCBtYXRjaCkgJiYgIWV4ZWMoaGksIG5leHQpKSB8fCAoZXhlYyhoaSwgbWF0Y2gpICYmICFleGVjKGxvdywgcHJldikpKSB7XG4gICAgcmV0dXJuICdcXFxcdScgKyBudW1iZXJUb1N0cmluZyhjaGFyQ29kZUF0KG1hdGNoLCAwKSwgMTYpO1xuICB9IHJldHVybiBtYXRjaDtcbn07XG5cbmlmICgkc3RyaW5naWZ5KSB7XG4gIC8vIGBKU09OLnN0cmluZ2lmeWAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtanNvbi5zdHJpbmdpZnlcbiAgJCh7IHRhcmdldDogJ0pTT04nLCBzdGF0OiB0cnVlLCBhcml0eTogMywgZm9yY2VkOiBXUk9OR19TWU1CT0xTX0NPTlZFUlNJT04gfHwgSUxMX0ZPUk1FRF9VTklDT0RFIH0sIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMgLS0gcmVxdWlyZWQgZm9yIGAubGVuZ3RoYFxuICAgIHN0cmluZ2lmeTogZnVuY3Rpb24gc3RyaW5naWZ5KGl0LCByZXBsYWNlciwgc3BhY2UpIHtcbiAgICAgIHZhciBhcmdzID0gYXJyYXlTbGljZShhcmd1bWVudHMpO1xuICAgICAgdmFyIHJlc3VsdCA9IGFwcGx5KFdST05HX1NZTUJPTFNfQ09OVkVSU0lPTiA/IHN0cmluZ2lmeVdpdGhTeW1ib2xzRml4IDogJHN0cmluZ2lmeSwgbnVsbCwgYXJncyk7XG4gICAgICByZXR1cm4gSUxMX0ZPUk1FRF9VTklDT0RFICYmIHR5cGVvZiByZXN1bHQgPT0gJ3N0cmluZycgPyByZXBsYWNlKHJlc3VsdCwgdGVzdGVyLCBmaXhJbGxGb3JtZWQpIDogcmVzdWx0O1xuICAgIH1cbiAgfSk7XG59XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY29sbGVjdGlvbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jb2xsZWN0aW9uJyk7XG52YXIgY29sbGVjdGlvblN0cm9uZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jb2xsZWN0aW9uLXN0cm9uZycpO1xuXG4vLyBgTWFwYCBjb25zdHJ1Y3RvclxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1tYXAtb2JqZWN0c1xuY29sbGVjdGlvbignTWFwJywgZnVuY3Rpb24gKGluaXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIE1hcCgpIHsgcmV0dXJuIGluaXQodGhpcywgYXJndW1lbnRzLmxlbmd0aCA/IGFyZ3VtZW50c1swXSA6IHVuZGVmaW5lZCk7IH07XG59LCBjb2xsZWN0aW9uU3Ryb25nKTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIFRPRE86IFJlbW92ZSB0aGlzIG1vZHVsZSBmcm9tIGBjb3JlLWpzQDRgIHNpbmNlIGl0J3MgcmVwbGFjZWQgdG8gbW9kdWxlIGJlbG93XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzLm1hcC5jb25zdHJ1Y3RvcicpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgSVNfUFVSRSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1wdXJlJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnMnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgcGF0aCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9wYXRoJyk7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgaXNGb3JjZWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtZm9yY2VkJyk7XG52YXIgaGFzT3duID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hhcy1vd24tcHJvcGVydHknKTtcbnZhciBpbmhlcml0SWZSZXF1aXJlZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbmhlcml0LWlmLXJlcXVpcmVkJyk7XG52YXIgaXNQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtaXMtcHJvdG90eXBlLW9mJyk7XG52YXIgaXNTeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtc3ltYm9sJyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tcHJpbWl0aXZlJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcbnZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LW5hbWVzJykuZjtcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcicpLmY7XG52YXIgZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eScpLmY7XG52YXIgdGhpc051bWJlclZhbHVlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RoaXMtbnVtYmVyLXZhbHVlJyk7XG52YXIgdHJpbSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zdHJpbmctdHJpbScpLnRyaW07XG5cbnZhciBOVU1CRVIgPSAnTnVtYmVyJztcbnZhciBOYXRpdmVOdW1iZXIgPSBnbG9iYWxbTlVNQkVSXTtcbnZhciBQdXJlTnVtYmVyTmFtZXNwYWNlID0gcGF0aFtOVU1CRVJdO1xudmFyIE51bWJlclByb3RvdHlwZSA9IE5hdGl2ZU51bWJlci5wcm90b3R5cGU7XG52YXIgVHlwZUVycm9yID0gZ2xvYmFsLlR5cGVFcnJvcjtcbnZhciBzdHJpbmdTbGljZSA9IHVuY3VycnlUaGlzKCcnLnNsaWNlKTtcbnZhciBjaGFyQ29kZUF0ID0gdW5jdXJyeVRoaXMoJycuY2hhckNvZGVBdCk7XG5cbi8vIGBUb051bWVyaWNgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy10b251bWVyaWNcbnZhciB0b051bWVyaWMgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgdmFyIHByaW1WYWx1ZSA9IHRvUHJpbWl0aXZlKHZhbHVlLCAnbnVtYmVyJyk7XG4gIHJldHVybiB0eXBlb2YgcHJpbVZhbHVlID09ICdiaWdpbnQnID8gcHJpbVZhbHVlIDogdG9OdW1iZXIocHJpbVZhbHVlKTtcbn07XG5cbi8vIGBUb051bWJlcmAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXRvbnVtYmVyXG52YXIgdG9OdW1iZXIgPSBmdW5jdGlvbiAoYXJndW1lbnQpIHtcbiAgdmFyIGl0ID0gdG9QcmltaXRpdmUoYXJndW1lbnQsICdudW1iZXInKTtcbiAgdmFyIGZpcnN0LCB0aGlyZCwgcmFkaXgsIG1heENvZGUsIGRpZ2l0cywgbGVuZ3RoLCBpbmRleCwgY29kZTtcbiAgaWYgKGlzU3ltYm9sKGl0KSkgdGhyb3cgbmV3IFR5cGVFcnJvcignQ2Fubm90IGNvbnZlcnQgYSBTeW1ib2wgdmFsdWUgdG8gYSBudW1iZXInKTtcbiAgaWYgKHR5cGVvZiBpdCA9PSAnc3RyaW5nJyAmJiBpdC5sZW5ndGggPiAyKSB7XG4gICAgaXQgPSB0cmltKGl0KTtcbiAgICBmaXJzdCA9IGNoYXJDb2RlQXQoaXQsIDApO1xuICAgIGlmIChmaXJzdCA9PT0gNDMgfHwgZmlyc3QgPT09IDQ1KSB7XG4gICAgICB0aGlyZCA9IGNoYXJDb2RlQXQoaXQsIDIpO1xuICAgICAgaWYgKHRoaXJkID09PSA4OCB8fCB0aGlyZCA9PT0gMTIwKSByZXR1cm4gTmFOOyAvLyBOdW1iZXIoJysweDEnKSBzaG91bGQgYmUgTmFOLCBvbGQgVjggZml4XG4gICAgfSBlbHNlIGlmIChmaXJzdCA9PT0gNDgpIHtcbiAgICAgIHN3aXRjaCAoY2hhckNvZGVBdChpdCwgMSkpIHtcbiAgICAgICAgLy8gZmFzdCBlcXVhbCBvZiAvXjBiWzAxXSskL2lcbiAgICAgICAgY2FzZSA2NjpcbiAgICAgICAgY2FzZSA5ODpcbiAgICAgICAgICByYWRpeCA9IDI7XG4gICAgICAgICAgbWF4Q29kZSA9IDQ5O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICAvLyBmYXN0IGVxdWFsIG9mIC9eMG9bMC03XSskL2lcbiAgICAgICAgY2FzZSA3OTpcbiAgICAgICAgY2FzZSAxMTE6XG4gICAgICAgICAgcmFkaXggPSA4O1xuICAgICAgICAgIG1heENvZGUgPSA1NTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICByZXR1cm4gK2l0O1xuICAgICAgfVxuICAgICAgZGlnaXRzID0gc3RyaW5nU2xpY2UoaXQsIDIpO1xuICAgICAgbGVuZ3RoID0gZGlnaXRzLmxlbmd0aDtcbiAgICAgIGZvciAoaW5kZXggPSAwOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICBjb2RlID0gY2hhckNvZGVBdChkaWdpdHMsIGluZGV4KTtcbiAgICAgICAgLy8gcGFyc2VJbnQgcGFyc2VzIGEgc3RyaW5nIHRvIGEgZmlyc3QgdW5hdmFpbGFibGUgc3ltYm9sXG4gICAgICAgIC8vIGJ1dCBUb051bWJlciBzaG91bGQgcmV0dXJuIE5hTiBpZiBhIHN0cmluZyBjb250YWlucyB1bmF2YWlsYWJsZSBzeW1ib2xzXG4gICAgICAgIGlmIChjb2RlIDwgNDggfHwgY29kZSA+IG1heENvZGUpIHJldHVybiBOYU47XG4gICAgICB9IHJldHVybiBwYXJzZUludChkaWdpdHMsIHJhZGl4KTtcbiAgICB9XG4gIH0gcmV0dXJuICtpdDtcbn07XG5cbnZhciBGT1JDRUQgPSBpc0ZvcmNlZChOVU1CRVIsICFOYXRpdmVOdW1iZXIoJyAwbzEnKSB8fCAhTmF0aXZlTnVtYmVyKCcwYjEnKSB8fCBOYXRpdmVOdW1iZXIoJysweDEnKSk7XG5cbnZhciBjYWxsZWRXaXRoTmV3ID0gZnVuY3Rpb24gKGR1bW15KSB7XG4gIC8vIGluY2x1ZGVzIGNoZWNrIG9uIDEuLmNvbnN0cnVjdG9yKGZvbykgY2FzZVxuICByZXR1cm4gaXNQcm90b3R5cGVPZihOdW1iZXJQcm90b3R5cGUsIGR1bW15KSAmJiBmYWlscyhmdW5jdGlvbiAoKSB7IHRoaXNOdW1iZXJWYWx1ZShkdW1teSk7IH0pO1xufTtcblxuLy8gYE51bWJlcmAgY29uc3RydWN0b3Jcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtbnVtYmVyLWNvbnN0cnVjdG9yXG52YXIgTnVtYmVyV3JhcHBlciA9IGZ1bmN0aW9uIE51bWJlcih2YWx1ZSkge1xuICB2YXIgbiA9IGFyZ3VtZW50cy5sZW5ndGggPCAxID8gMCA6IE5hdGl2ZU51bWJlcih0b051bWVyaWModmFsdWUpKTtcbiAgcmV0dXJuIGNhbGxlZFdpdGhOZXcodGhpcykgPyBpbmhlcml0SWZSZXF1aXJlZChPYmplY3QobiksIHRoaXMsIE51bWJlcldyYXBwZXIpIDogbjtcbn07XG5cbk51bWJlcldyYXBwZXIucHJvdG90eXBlID0gTnVtYmVyUHJvdG90eXBlO1xuaWYgKEZPUkNFRCAmJiAhSVNfUFVSRSkgTnVtYmVyUHJvdG90eXBlLmNvbnN0cnVjdG9yID0gTnVtYmVyV3JhcHBlcjtcblxuJCh7IGdsb2JhbDogdHJ1ZSwgY29uc3RydWN0b3I6IHRydWUsIHdyYXA6IHRydWUsIGZvcmNlZDogRk9SQ0VEIH0sIHtcbiAgTnVtYmVyOiBOdW1iZXJXcmFwcGVyXG59KTtcblxuLy8gVXNlIGBpbnRlcm5hbC9jb3B5LWNvbnN0cnVjdG9yLXByb3BlcnRpZXNgIGhlbHBlciBpbiBgY29yZS1qc0A0YFxudmFyIGNvcHlDb25zdHJ1Y3RvclByb3BlcnRpZXMgPSBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcbiAgZm9yICh2YXIga2V5cyA9IERFU0NSSVBUT1JTID8gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2UpIDogKFxuICAgIC8vIEVTMzpcbiAgICAnTUFYX1ZBTFVFLE1JTl9WQUxVRSxOYU4sTkVHQVRJVkVfSU5GSU5JVFksUE9TSVRJVkVfSU5GSU5JVFksJyArXG4gICAgLy8gRVMyMDE1IChpbiBjYXNlLCBpZiBtb2R1bGVzIHdpdGggRVMyMDE1IE51bWJlciBzdGF0aWNzIHJlcXVpcmVkIGJlZm9yZSk6XG4gICAgJ0VQU0lMT04sTUFYX1NBRkVfSU5URUdFUixNSU5fU0FGRV9JTlRFR0VSLGlzRmluaXRlLGlzSW50ZWdlcixpc05hTixpc1NhZmVJbnRlZ2VyLHBhcnNlRmxvYXQscGFyc2VJbnQsJyArXG4gICAgLy8gRVNOZXh0XG4gICAgJ2Zyb21TdHJpbmcscmFuZ2UnXG4gICkuc3BsaXQoJywnKSwgaiA9IDAsIGtleTsga2V5cy5sZW5ndGggPiBqOyBqKyspIHtcbiAgICBpZiAoaGFzT3duKHNvdXJjZSwga2V5ID0ga2V5c1tqXSkgJiYgIWhhc093bih0YXJnZXQsIGtleSkpIHtcbiAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTtcbiAgICB9XG4gIH1cbn07XG5cbmlmIChJU19QVVJFICYmIFB1cmVOdW1iZXJOYW1lc3BhY2UpIGNvcHlDb25zdHJ1Y3RvclByb3BlcnRpZXMocGF0aFtOVU1CRVJdLCBQdXJlTnVtYmVyTmFtZXNwYWNlKTtcbmlmIChGT1JDRUQgfHwgSVNfUFVSRSkgY29weUNvbnN0cnVjdG9yUHJvcGVydGllcyhwYXRoW05VTUJFUl0sIE5hdGl2ZU51bWJlcik7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciBhc3NpZ24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWFzc2lnbicpO1xuXG4vLyBgT2JqZWN0LmFzc2lnbmAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5hc3NpZ25cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtYXNzaWduIC0tIHJlcXVpcmVkIGZvciB0ZXN0aW5nXG4kKHsgdGFyZ2V0OiAnT2JqZWN0Jywgc3RhdDogdHJ1ZSwgYXJpdHk6IDIsIGZvcmNlZDogT2JqZWN0LmFzc2lnbiAhPT0gYXNzaWduIH0sIHtcbiAgYXNzaWduOiBhc3NpZ25cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgJGVudHJpZXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LXRvLWFycmF5JykuZW50cmllcztcblxuLy8gYE9iamVjdC5lbnRyaWVzYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LmVudHJpZXNcbiQoeyB0YXJnZXQ6ICdPYmplY3QnLCBzdGF0OiB0cnVlIH0sIHtcbiAgZW50cmllczogZnVuY3Rpb24gZW50cmllcyhPKSB7XG4gICAgcmV0dXJuICRlbnRyaWVzKE8pO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgdG9JbmRleGVkT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWluZGV4ZWQtb2JqZWN0Jyk7XG52YXIgbmF0aXZlR2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3InKS5mO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG5cbnZhciBGT1JDRUQgPSAhREVTQ1JJUFRPUlMgfHwgZmFpbHMoZnVuY3Rpb24gKCkgeyBuYXRpdmVHZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoMSk7IH0pO1xuXG4vLyBgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcmAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5nZXRvd25wcm9wZXJ0eWRlc2NyaXB0b3JcbiQoeyB0YXJnZXQ6ICdPYmplY3QnLCBzdGF0OiB0cnVlLCBmb3JjZWQ6IEZPUkNFRCwgc2hhbTogIURFU0NSSVBUT1JTIH0sIHtcbiAgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaXQsIGtleSkge1xuICAgIHJldHVybiBuYXRpdmVHZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodG9JbmRleGVkT2JqZWN0KGl0KSwga2V5KTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIG93bktleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb3duLWtleXMnKTtcbnZhciB0b0luZGV4ZWRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8taW5kZXhlZC1vYmplY3QnKTtcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcicpO1xudmFyIGNyZWF0ZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NyZWF0ZS1wcm9wZXJ0eScpO1xuXG4vLyBgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnNgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QuZ2V0b3ducHJvcGVydHlkZXNjcmlwdG9yc1xuJCh7IHRhcmdldDogJ09iamVjdCcsIHN0YXQ6IHRydWUsIHNoYW06ICFERVNDUklQVE9SUyB9LCB7XG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcnM6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcnMob2JqZWN0KSB7XG4gICAgdmFyIE8gPSB0b0luZGV4ZWRPYmplY3Qob2JqZWN0KTtcbiAgICB2YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yTW9kdWxlLmY7XG4gICAgdmFyIGtleXMgPSBvd25LZXlzKE8pO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBrZXksIGRlc2NyaXB0b3I7XG4gICAgd2hpbGUgKGtleXMubGVuZ3RoID4gaW5kZXgpIHtcbiAgICAgIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywga2V5ID0ga2V5c1tpbmRleCsrXSk7XG4gICAgICBpZiAoZGVzY3JpcHRvciAhPT0gdW5kZWZpbmVkKSBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGtleSwgZGVzY3JpcHRvcik7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgTkFUSVZFX1NZTUJPTCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zeW1ib2wtY29uc3RydWN0b3ItZGV0ZWN0aW9uJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHNNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktc3ltYm9scycpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLW9iamVjdCcpO1xuXG4vLyBWOCB+IENocm9tZSAzOCBhbmQgMzkgYE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHNgIGZhaWxzIG9uIHByaW1pdGl2ZXNcbi8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTM0NDNcbnZhciBGT1JDRUQgPSAhTkFUSVZFX1NZTUJPTCB8fCBmYWlscyhmdW5jdGlvbiAoKSB7IGdldE93blByb3BlcnR5U3ltYm9sc01vZHVsZS5mKDEpOyB9KTtcblxuLy8gYE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHNgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QuZ2V0b3ducHJvcGVydHlzeW1ib2xzXG4kKHsgdGFyZ2V0OiAnT2JqZWN0Jywgc3RhdDogdHJ1ZSwgZm9yY2VkOiBGT1JDRUQgfSwge1xuICBnZXRPd25Qcm9wZXJ0eVN5bWJvbHM6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5U3ltYm9scyhpdCkge1xuICAgIHZhciAkZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzTW9kdWxlLmY7XG4gICAgcmV0dXJuICRnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPyAkZ2V0T3duUHJvcGVydHlTeW1ib2xzKHRvT2JqZWN0KGl0KSkgOiBbXTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLW9iamVjdCcpO1xudmFyIG5hdGl2ZUdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtcHJvdG90eXBlLW9mJyk7XG52YXIgQ09SUkVDVF9QUk9UT1RZUEVfR0VUVEVSID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NvcnJlY3QtcHJvdG90eXBlLWdldHRlcicpO1xuXG52YXIgRkFJTFNfT05fUFJJTUlUSVZFUyA9IGZhaWxzKGZ1bmN0aW9uICgpIHsgbmF0aXZlR2V0UHJvdG90eXBlT2YoMSk7IH0pO1xuXG4vLyBgT2JqZWN0LmdldFByb3RvdHlwZU9mYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LmdldHByb3RvdHlwZW9mXG4kKHsgdGFyZ2V0OiAnT2JqZWN0Jywgc3RhdDogdHJ1ZSwgZm9yY2VkOiBGQUlMU19PTl9QUklNSVRJVkVTLCBzaGFtOiAhQ09SUkVDVF9QUk9UT1RZUEVfR0VUVEVSIH0sIHtcbiAgZ2V0UHJvdG90eXBlT2Y6IGZ1bmN0aW9uIGdldFByb3RvdHlwZU9mKGl0KSB7XG4gICAgcmV0dXJuIG5hdGl2ZUdldFByb3RvdHlwZU9mKHRvT2JqZWN0KGl0KSk7XG4gIH1cbn0pO1xuXG4iLCIndXNlIHN0cmljdCc7XG52YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1vYmplY3QnKTtcbnZhciBuYXRpdmVLZXlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1rZXlzJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcblxudmFyIEZBSUxTX09OX1BSSU1JVElWRVMgPSBmYWlscyhmdW5jdGlvbiAoKSB7IG5hdGl2ZUtleXMoMSk7IH0pO1xuXG4vLyBgT2JqZWN0LmtleXNgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3Qua2V5c1xuJCh7IHRhcmdldDogJ09iamVjdCcsIHN0YXQ6IHRydWUsIGZvcmNlZDogRkFJTFNfT05fUFJJTUlUSVZFUyB9LCB7XG4gIGtleXM6IGZ1bmN0aW9uIGtleXMoaXQpIHtcbiAgICByZXR1cm4gbmF0aXZlS2V5cyh0b09iamVjdChpdCkpO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIHNldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1zZXQtcHJvdG90eXBlLW9mJyk7XG5cbi8vIGBPYmplY3Quc2V0UHJvdG90eXBlT2ZgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3Quc2V0cHJvdG90eXBlb2ZcbiQoeyB0YXJnZXQ6ICdPYmplY3QnLCBzdGF0OiB0cnVlIH0sIHtcbiAgc2V0UHJvdG90eXBlT2Y6IHNldFByb3RvdHlwZU9mXG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBUT19TVFJJTkdfVEFHX1NVUFBPUlQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tc3RyaW5nLXRhZy1zdXBwb3J0Jyk7XG52YXIgZGVmaW5lQnVpbHRJbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZWZpbmUtYnVpbHQtaW4nKTtcbnZhciB0b1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtdG8tc3RyaW5nJyk7XG5cbi8vIGBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LnByb3RvdHlwZS50b3N0cmluZ1xuaWYgKCFUT19TVFJJTkdfVEFHX1NVUFBPUlQpIHtcbiAgZGVmaW5lQnVpbHRJbihPYmplY3QucHJvdG90eXBlLCAndG9TdHJpbmcnLCB0b1N0cmluZywgeyB1bnNhZmU6IHRydWUgfSk7XG59XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciBjYWxsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWNhbGwnKTtcbnZhciBhQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYS1jYWxsYWJsZScpO1xudmFyIG5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL25ldy1wcm9taXNlLWNhcGFiaWxpdHknKTtcbnZhciBwZXJmb3JtID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3BlcmZvcm0nKTtcbnZhciBpdGVyYXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2l0ZXJhdGUnKTtcbnZhciBQUk9NSVNFX1NUQVRJQ1NfSU5DT1JSRUNUX0lURVJBVElPTiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9wcm9taXNlLXN0YXRpY3MtaW5jb3JyZWN0LWl0ZXJhdGlvbicpO1xuXG4vLyBgUHJvbWlzZS5hbGxgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1wcm9taXNlLmFsbFxuJCh7IHRhcmdldDogJ1Byb21pc2UnLCBzdGF0OiB0cnVlLCBmb3JjZWQ6IFBST01JU0VfU1RBVElDU19JTkNPUlJFQ1RfSVRFUkFUSU9OIH0sIHtcbiAgYWxsOiBmdW5jdGlvbiBhbGwoaXRlcmFibGUpIHtcbiAgICB2YXIgQyA9IHRoaXM7XG4gICAgdmFyIGNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eU1vZHVsZS5mKEMpO1xuICAgIHZhciByZXNvbHZlID0gY2FwYWJpbGl0eS5yZXNvbHZlO1xuICAgIHZhciByZWplY3QgPSBjYXBhYmlsaXR5LnJlamVjdDtcbiAgICB2YXIgcmVzdWx0ID0gcGVyZm9ybShmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHByb21pc2VSZXNvbHZlID0gYUNhbGxhYmxlKEMucmVzb2x2ZSk7XG4gICAgICB2YXIgdmFsdWVzID0gW107XG4gICAgICB2YXIgY291bnRlciA9IDA7XG4gICAgICB2YXIgcmVtYWluaW5nID0gMTtcbiAgICAgIGl0ZXJhdGUoaXRlcmFibGUsIGZ1bmN0aW9uIChwcm9taXNlKSB7XG4gICAgICAgIHZhciBpbmRleCA9IGNvdW50ZXIrKztcbiAgICAgICAgdmFyIGFscmVhZHlDYWxsZWQgPSBmYWxzZTtcbiAgICAgICAgcmVtYWluaW5nKys7XG4gICAgICAgIGNhbGwoJHByb21pc2VSZXNvbHZlLCBDLCBwcm9taXNlKS50aGVuKGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgIGlmIChhbHJlYWR5Q2FsbGVkKSByZXR1cm47XG4gICAgICAgICAgYWxyZWFkeUNhbGxlZCA9IHRydWU7XG4gICAgICAgICAgdmFsdWVzW2luZGV4XSA9IHZhbHVlO1xuICAgICAgICAgIC0tcmVtYWluaW5nIHx8IHJlc29sdmUodmFsdWVzKTtcbiAgICAgICAgfSwgcmVqZWN0KTtcbiAgICAgIH0pO1xuICAgICAgLS1yZW1haW5pbmcgfHwgcmVzb2x2ZSh2YWx1ZXMpO1xuICAgIH0pO1xuICAgIGlmIChyZXN1bHQuZXJyb3IpIHJlamVjdChyZXN1bHQudmFsdWUpO1xuICAgIHJldHVybiBjYXBhYmlsaXR5LnByb21pc2U7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgSVNfUFVSRSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1wdXJlJyk7XG52YXIgRk9SQ0VEX1BST01JU0VfQ09OU1RSVUNUT1IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcHJvbWlzZS1jb25zdHJ1Y3Rvci1kZXRlY3Rpb24nKS5DT05TVFJVQ1RPUjtcbnZhciBOYXRpdmVQcm9taXNlQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcHJvbWlzZS1uYXRpdmUtY29uc3RydWN0b3InKTtcbnZhciBnZXRCdWlsdEluID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dldC1idWlsdC1pbicpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciBkZWZpbmVCdWlsdEluID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RlZmluZS1idWlsdC1pbicpO1xuXG52YXIgTmF0aXZlUHJvbWlzZVByb3RvdHlwZSA9IE5hdGl2ZVByb21pc2VDb25zdHJ1Y3RvciAmJiBOYXRpdmVQcm9taXNlQ29uc3RydWN0b3IucHJvdG90eXBlO1xuXG4vLyBgUHJvbWlzZS5wcm90b3R5cGUuY2F0Y2hgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1wcm9taXNlLnByb3RvdHlwZS5jYXRjaFxuJCh7IHRhcmdldDogJ1Byb21pc2UnLCBwcm90bzogdHJ1ZSwgZm9yY2VkOiBGT1JDRURfUFJPTUlTRV9DT05TVFJVQ1RPUiwgcmVhbDogdHJ1ZSB9LCB7XG4gICdjYXRjaCc6IGZ1bmN0aW9uIChvblJlamVjdGVkKSB7XG4gICAgcmV0dXJuIHRoaXMudGhlbih1bmRlZmluZWQsIG9uUmVqZWN0ZWQpO1xuICB9XG59KTtcblxuLy8gbWFrZXMgc3VyZSB0aGF0IG5hdGl2ZSBwcm9taXNlLWJhc2VkIEFQSXMgYFByb21pc2UjY2F0Y2hgIHByb3Blcmx5IHdvcmtzIHdpdGggcGF0Y2hlZCBgUHJvbWlzZSN0aGVuYFxuaWYgKCFJU19QVVJFICYmIGlzQ2FsbGFibGUoTmF0aXZlUHJvbWlzZUNvbnN0cnVjdG9yKSkge1xuICB2YXIgbWV0aG9kID0gZ2V0QnVpbHRJbignUHJvbWlzZScpLnByb3RvdHlwZVsnY2F0Y2gnXTtcbiAgaWYgKE5hdGl2ZVByb21pc2VQcm90b3R5cGVbJ2NhdGNoJ10gIT09IG1ldGhvZCkge1xuICAgIGRlZmluZUJ1aWx0SW4oTmF0aXZlUHJvbWlzZVByb3RvdHlwZSwgJ2NhdGNoJywgbWV0aG9kLCB7IHVuc2FmZTogdHJ1ZSB9KTtcbiAgfVxufVxuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgSVNfUFVSRSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1wdXJlJyk7XG52YXIgSVNfTk9ERSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9lbmdpbmUtaXMtbm9kZScpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBjYWxsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWNhbGwnKTtcbnZhciBkZWZpbmVCdWlsdEluID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RlZmluZS1idWlsdC1pbicpO1xudmFyIHNldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1zZXQtcHJvdG90eXBlLW9mJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciBzZXRTcGVjaWVzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NldC1zcGVjaWVzJyk7XG52YXIgYUNhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2EtY2FsbGFibGUnKTtcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtb2JqZWN0Jyk7XG52YXIgYW5JbnN0YW5jZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hbi1pbnN0YW5jZScpO1xudmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG52YXIgdGFzayA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90YXNrJykuc2V0O1xudmFyIG1pY3JvdGFzayA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9taWNyb3Rhc2snKTtcbnZhciBob3N0UmVwb3J0RXJyb3JzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hvc3QtcmVwb3J0LWVycm9ycycpO1xudmFyIHBlcmZvcm0gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcGVyZm9ybScpO1xudmFyIFF1ZXVlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3F1ZXVlJyk7XG52YXIgSW50ZXJuYWxTdGF0ZU1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbnRlcm5hbC1zdGF0ZScpO1xudmFyIE5hdGl2ZVByb21pc2VDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9wcm9taXNlLW5hdGl2ZS1jb25zdHJ1Y3RvcicpO1xudmFyIFByb21pc2VDb25zdHJ1Y3RvckRldGVjdGlvbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9wcm9taXNlLWNvbnN0cnVjdG9yLWRldGVjdGlvbicpO1xudmFyIG5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL25ldy1wcm9taXNlLWNhcGFiaWxpdHknKTtcblxudmFyIFBST01JU0UgPSAnUHJvbWlzZSc7XG52YXIgRk9SQ0VEX1BST01JU0VfQ09OU1RSVUNUT1IgPSBQcm9taXNlQ29uc3RydWN0b3JEZXRlY3Rpb24uQ09OU1RSVUNUT1I7XG52YXIgTkFUSVZFX1BST01JU0VfUkVKRUNUSU9OX0VWRU5UID0gUHJvbWlzZUNvbnN0cnVjdG9yRGV0ZWN0aW9uLlJFSkVDVElPTl9FVkVOVDtcbnZhciBOQVRJVkVfUFJPTUlTRV9TVUJDTEFTU0lORyA9IFByb21pc2VDb25zdHJ1Y3RvckRldGVjdGlvbi5TVUJDTEFTU0lORztcbnZhciBnZXRJbnRlcm5hbFByb21pc2VTdGF0ZSA9IEludGVybmFsU3RhdGVNb2R1bGUuZ2V0dGVyRm9yKFBST01JU0UpO1xudmFyIHNldEludGVybmFsU3RhdGUgPSBJbnRlcm5hbFN0YXRlTW9kdWxlLnNldDtcbnZhciBOYXRpdmVQcm9taXNlUHJvdG90eXBlID0gTmF0aXZlUHJvbWlzZUNvbnN0cnVjdG9yICYmIE5hdGl2ZVByb21pc2VDb25zdHJ1Y3Rvci5wcm90b3R5cGU7XG52YXIgUHJvbWlzZUNvbnN0cnVjdG9yID0gTmF0aXZlUHJvbWlzZUNvbnN0cnVjdG9yO1xudmFyIFByb21pc2VQcm90b3R5cGUgPSBOYXRpdmVQcm9taXNlUHJvdG90eXBlO1xudmFyIFR5cGVFcnJvciA9IGdsb2JhbC5UeXBlRXJyb3I7XG52YXIgZG9jdW1lbnQgPSBnbG9iYWwuZG9jdW1lbnQ7XG52YXIgcHJvY2VzcyA9IGdsb2JhbC5wcm9jZXNzO1xudmFyIG5ld1Byb21pc2VDYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHlNb2R1bGUuZjtcbnZhciBuZXdHZW5lcmljUHJvbWlzZUNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eTtcblxudmFyIERJU1BBVENIX0VWRU5UID0gISEoZG9jdW1lbnQgJiYgZG9jdW1lbnQuY3JlYXRlRXZlbnQgJiYgZ2xvYmFsLmRpc3BhdGNoRXZlbnQpO1xudmFyIFVOSEFORExFRF9SRUpFQ1RJT04gPSAndW5oYW5kbGVkcmVqZWN0aW9uJztcbnZhciBSRUpFQ1RJT05fSEFORExFRCA9ICdyZWplY3Rpb25oYW5kbGVkJztcbnZhciBQRU5ESU5HID0gMDtcbnZhciBGVUxGSUxMRUQgPSAxO1xudmFyIFJFSkVDVEVEID0gMjtcbnZhciBIQU5ETEVEID0gMTtcbnZhciBVTkhBTkRMRUQgPSAyO1xuXG52YXIgSW50ZXJuYWwsIE93blByb21pc2VDYXBhYmlsaXR5LCBQcm9taXNlV3JhcHBlciwgbmF0aXZlVGhlbjtcblxuLy8gaGVscGVyc1xudmFyIGlzVGhlbmFibGUgPSBmdW5jdGlvbiAoaXQpIHtcbiAgdmFyIHRoZW47XG4gIHJldHVybiBpc09iamVjdChpdCkgJiYgaXNDYWxsYWJsZSh0aGVuID0gaXQudGhlbikgPyB0aGVuIDogZmFsc2U7XG59O1xuXG52YXIgY2FsbFJlYWN0aW9uID0gZnVuY3Rpb24gKHJlYWN0aW9uLCBzdGF0ZSkge1xuICB2YXIgdmFsdWUgPSBzdGF0ZS52YWx1ZTtcbiAgdmFyIG9rID0gc3RhdGUuc3RhdGUgPT09IEZVTEZJTExFRDtcbiAgdmFyIGhhbmRsZXIgPSBvayA/IHJlYWN0aW9uLm9rIDogcmVhY3Rpb24uZmFpbDtcbiAgdmFyIHJlc29sdmUgPSByZWFjdGlvbi5yZXNvbHZlO1xuICB2YXIgcmVqZWN0ID0gcmVhY3Rpb24ucmVqZWN0O1xuICB2YXIgZG9tYWluID0gcmVhY3Rpb24uZG9tYWluO1xuICB2YXIgcmVzdWx0LCB0aGVuLCBleGl0ZWQ7XG4gIHRyeSB7XG4gICAgaWYgKGhhbmRsZXIpIHtcbiAgICAgIGlmICghb2spIHtcbiAgICAgICAgaWYgKHN0YXRlLnJlamVjdGlvbiA9PT0gVU5IQU5ETEVEKSBvbkhhbmRsZVVuaGFuZGxlZChzdGF0ZSk7XG4gICAgICAgIHN0YXRlLnJlamVjdGlvbiA9IEhBTkRMRUQ7XG4gICAgICB9XG4gICAgICBpZiAoaGFuZGxlciA9PT0gdHJ1ZSkgcmVzdWx0ID0gdmFsdWU7XG4gICAgICBlbHNlIHtcbiAgICAgICAgaWYgKGRvbWFpbikgZG9tYWluLmVudGVyKCk7XG4gICAgICAgIHJlc3VsdCA9IGhhbmRsZXIodmFsdWUpOyAvLyBjYW4gdGhyb3dcbiAgICAgICAgaWYgKGRvbWFpbikge1xuICAgICAgICAgIGRvbWFpbi5leGl0KCk7XG4gICAgICAgICAgZXhpdGVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHJlc3VsdCA9PT0gcmVhY3Rpb24ucHJvbWlzZSkge1xuICAgICAgICByZWplY3QobmV3IFR5cGVFcnJvcignUHJvbWlzZS1jaGFpbiBjeWNsZScpKTtcbiAgICAgIH0gZWxzZSBpZiAodGhlbiA9IGlzVGhlbmFibGUocmVzdWx0KSkge1xuICAgICAgICBjYWxsKHRoZW4sIHJlc3VsdCwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgIH0gZWxzZSByZXNvbHZlKHJlc3VsdCk7XG4gICAgfSBlbHNlIHJlamVjdCh2YWx1ZSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgaWYgKGRvbWFpbiAmJiAhZXhpdGVkKSBkb21haW4uZXhpdCgpO1xuICAgIHJlamVjdChlcnJvcik7XG4gIH1cbn07XG5cbnZhciBub3RpZnkgPSBmdW5jdGlvbiAoc3RhdGUsIGlzUmVqZWN0KSB7XG4gIGlmIChzdGF0ZS5ub3RpZmllZCkgcmV0dXJuO1xuICBzdGF0ZS5ub3RpZmllZCA9IHRydWU7XG4gIG1pY3JvdGFzayhmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHJlYWN0aW9ucyA9IHN0YXRlLnJlYWN0aW9ucztcbiAgICB2YXIgcmVhY3Rpb247XG4gICAgd2hpbGUgKHJlYWN0aW9uID0gcmVhY3Rpb25zLmdldCgpKSB7XG4gICAgICBjYWxsUmVhY3Rpb24ocmVhY3Rpb24sIHN0YXRlKTtcbiAgICB9XG4gICAgc3RhdGUubm90aWZpZWQgPSBmYWxzZTtcbiAgICBpZiAoaXNSZWplY3QgJiYgIXN0YXRlLnJlamVjdGlvbikgb25VbmhhbmRsZWQoc3RhdGUpO1xuICB9KTtcbn07XG5cbnZhciBkaXNwYXRjaEV2ZW50ID0gZnVuY3Rpb24gKG5hbWUsIHByb21pc2UsIHJlYXNvbikge1xuICB2YXIgZXZlbnQsIGhhbmRsZXI7XG4gIGlmIChESVNQQVRDSF9FVkVOVCkge1xuICAgIGV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50Jyk7XG4gICAgZXZlbnQucHJvbWlzZSA9IHByb21pc2U7XG4gICAgZXZlbnQucmVhc29uID0gcmVhc29uO1xuICAgIGV2ZW50LmluaXRFdmVudChuYW1lLCBmYWxzZSwgdHJ1ZSk7XG4gICAgZ2xvYmFsLmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xuICB9IGVsc2UgZXZlbnQgPSB7IHByb21pc2U6IHByb21pc2UsIHJlYXNvbjogcmVhc29uIH07XG4gIGlmICghTkFUSVZFX1BST01JU0VfUkVKRUNUSU9OX0VWRU5UICYmIChoYW5kbGVyID0gZ2xvYmFsWydvbicgKyBuYW1lXSkpIGhhbmRsZXIoZXZlbnQpO1xuICBlbHNlIGlmIChuYW1lID09PSBVTkhBTkRMRURfUkVKRUNUSU9OKSBob3N0UmVwb3J0RXJyb3JzKCdVbmhhbmRsZWQgcHJvbWlzZSByZWplY3Rpb24nLCByZWFzb24pO1xufTtcblxudmFyIG9uVW5oYW5kbGVkID0gZnVuY3Rpb24gKHN0YXRlKSB7XG4gIGNhbGwodGFzaywgZ2xvYmFsLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHByb21pc2UgPSBzdGF0ZS5mYWNhZGU7XG4gICAgdmFyIHZhbHVlID0gc3RhdGUudmFsdWU7XG4gICAgdmFyIElTX1VOSEFORExFRCA9IGlzVW5oYW5kbGVkKHN0YXRlKTtcbiAgICB2YXIgcmVzdWx0O1xuICAgIGlmIChJU19VTkhBTkRMRUQpIHtcbiAgICAgIHJlc3VsdCA9IHBlcmZvcm0oZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoSVNfTk9ERSkge1xuICAgICAgICAgIHByb2Nlc3MuZW1pdCgndW5oYW5kbGVkUmVqZWN0aW9uJywgdmFsdWUsIHByb21pc2UpO1xuICAgICAgICB9IGVsc2UgZGlzcGF0Y2hFdmVudChVTkhBTkRMRURfUkVKRUNUSU9OLCBwcm9taXNlLCB2YWx1ZSk7XG4gICAgICB9KTtcbiAgICAgIC8vIEJyb3dzZXJzIHNob3VsZCBub3QgdHJpZ2dlciBgcmVqZWN0aW9uSGFuZGxlZGAgZXZlbnQgaWYgaXQgd2FzIGhhbmRsZWQgaGVyZSwgTm9kZUpTIC0gc2hvdWxkXG4gICAgICBzdGF0ZS5yZWplY3Rpb24gPSBJU19OT0RFIHx8IGlzVW5oYW5kbGVkKHN0YXRlKSA/IFVOSEFORExFRCA6IEhBTkRMRUQ7XG4gICAgICBpZiAocmVzdWx0LmVycm9yKSB0aHJvdyByZXN1bHQudmFsdWU7XG4gICAgfVxuICB9KTtcbn07XG5cbnZhciBpc1VuaGFuZGxlZCA9IGZ1bmN0aW9uIChzdGF0ZSkge1xuICByZXR1cm4gc3RhdGUucmVqZWN0aW9uICE9PSBIQU5ETEVEICYmICFzdGF0ZS5wYXJlbnQ7XG59O1xuXG52YXIgb25IYW5kbGVVbmhhbmRsZWQgPSBmdW5jdGlvbiAoc3RhdGUpIHtcbiAgY2FsbCh0YXNrLCBnbG9iYWwsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcHJvbWlzZSA9IHN0YXRlLmZhY2FkZTtcbiAgICBpZiAoSVNfTk9ERSkge1xuICAgICAgcHJvY2Vzcy5lbWl0KCdyZWplY3Rpb25IYW5kbGVkJywgcHJvbWlzZSk7XG4gICAgfSBlbHNlIGRpc3BhdGNoRXZlbnQoUkVKRUNUSU9OX0hBTkRMRUQsIHByb21pc2UsIHN0YXRlLnZhbHVlKTtcbiAgfSk7XG59O1xuXG52YXIgYmluZCA9IGZ1bmN0aW9uIChmbiwgc3RhdGUsIHVud3JhcCkge1xuICByZXR1cm4gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgZm4oc3RhdGUsIHZhbHVlLCB1bndyYXApO1xuICB9O1xufTtcblxudmFyIGludGVybmFsUmVqZWN0ID0gZnVuY3Rpb24gKHN0YXRlLCB2YWx1ZSwgdW53cmFwKSB7XG4gIGlmIChzdGF0ZS5kb25lKSByZXR1cm47XG4gIHN0YXRlLmRvbmUgPSB0cnVlO1xuICBpZiAodW53cmFwKSBzdGF0ZSA9IHVud3JhcDtcbiAgc3RhdGUudmFsdWUgPSB2YWx1ZTtcbiAgc3RhdGUuc3RhdGUgPSBSRUpFQ1RFRDtcbiAgbm90aWZ5KHN0YXRlLCB0cnVlKTtcbn07XG5cbnZhciBpbnRlcm5hbFJlc29sdmUgPSBmdW5jdGlvbiAoc3RhdGUsIHZhbHVlLCB1bndyYXApIHtcbiAgaWYgKHN0YXRlLmRvbmUpIHJldHVybjtcbiAgc3RhdGUuZG9uZSA9IHRydWU7XG4gIGlmICh1bndyYXApIHN0YXRlID0gdW53cmFwO1xuICB0cnkge1xuICAgIGlmIChzdGF0ZS5mYWNhZGUgPT09IHZhbHVlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJvbWlzZSBjYW4ndCBiZSByZXNvbHZlZCBpdHNlbGZcIik7XG4gICAgdmFyIHRoZW4gPSBpc1RoZW5hYmxlKHZhbHVlKTtcbiAgICBpZiAodGhlbikge1xuICAgICAgbWljcm90YXNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHdyYXBwZXIgPSB7IGRvbmU6IGZhbHNlIH07XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgY2FsbCh0aGVuLCB2YWx1ZSxcbiAgICAgICAgICAgIGJpbmQoaW50ZXJuYWxSZXNvbHZlLCB3cmFwcGVyLCBzdGF0ZSksXG4gICAgICAgICAgICBiaW5kKGludGVybmFsUmVqZWN0LCB3cmFwcGVyLCBzdGF0ZSlcbiAgICAgICAgICApO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgIGludGVybmFsUmVqZWN0KHdyYXBwZXIsIGVycm9yLCBzdGF0ZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdGF0ZS52YWx1ZSA9IHZhbHVlO1xuICAgICAgc3RhdGUuc3RhdGUgPSBGVUxGSUxMRUQ7XG4gICAgICBub3RpZnkoc3RhdGUsIGZhbHNlKTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgaW50ZXJuYWxSZWplY3QoeyBkb25lOiBmYWxzZSB9LCBlcnJvciwgc3RhdGUpO1xuICB9XG59O1xuXG4vLyBjb25zdHJ1Y3RvciBwb2x5ZmlsbFxuaWYgKEZPUkNFRF9QUk9NSVNFX0NPTlNUUlVDVE9SKSB7XG4gIC8vIDI1LjQuMy4xIFByb21pc2UoZXhlY3V0b3IpXG4gIFByb21pc2VDb25zdHJ1Y3RvciA9IGZ1bmN0aW9uIFByb21pc2UoZXhlY3V0b3IpIHtcbiAgICBhbkluc3RhbmNlKHRoaXMsIFByb21pc2VQcm90b3R5cGUpO1xuICAgIGFDYWxsYWJsZShleGVjdXRvcik7XG4gICAgY2FsbChJbnRlcm5hbCwgdGhpcyk7XG4gICAgdmFyIHN0YXRlID0gZ2V0SW50ZXJuYWxQcm9taXNlU3RhdGUodGhpcyk7XG4gICAgdHJ5IHtcbiAgICAgIGV4ZWN1dG9yKGJpbmQoaW50ZXJuYWxSZXNvbHZlLCBzdGF0ZSksIGJpbmQoaW50ZXJuYWxSZWplY3QsIHN0YXRlKSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGludGVybmFsUmVqZWN0KHN0YXRlLCBlcnJvcik7XG4gICAgfVxuICB9O1xuXG4gIFByb21pc2VQcm90b3R5cGUgPSBQcm9taXNlQ29uc3RydWN0b3IucHJvdG90eXBlO1xuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFycyAtLSByZXF1aXJlZCBmb3IgYC5sZW5ndGhgXG4gIEludGVybmFsID0gZnVuY3Rpb24gUHJvbWlzZShleGVjdXRvcikge1xuICAgIHNldEludGVybmFsU3RhdGUodGhpcywge1xuICAgICAgdHlwZTogUFJPTUlTRSxcbiAgICAgIGRvbmU6IGZhbHNlLFxuICAgICAgbm90aWZpZWQ6IGZhbHNlLFxuICAgICAgcGFyZW50OiBmYWxzZSxcbiAgICAgIHJlYWN0aW9uczogbmV3IFF1ZXVlKCksXG4gICAgICByZWplY3Rpb246IGZhbHNlLFxuICAgICAgc3RhdGU6IFBFTkRJTkcsXG4gICAgICB2YWx1ZTogdW5kZWZpbmVkXG4gICAgfSk7XG4gIH07XG5cbiAgLy8gYFByb21pc2UucHJvdG90eXBlLnRoZW5gIG1ldGhvZFxuICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXByb21pc2UucHJvdG90eXBlLnRoZW5cbiAgSW50ZXJuYWwucHJvdG90eXBlID0gZGVmaW5lQnVpbHRJbihQcm9taXNlUHJvdG90eXBlLCAndGhlbicsIGZ1bmN0aW9uIHRoZW4ob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpIHtcbiAgICB2YXIgc3RhdGUgPSBnZXRJbnRlcm5hbFByb21pc2VTdGF0ZSh0aGlzKTtcbiAgICB2YXIgcmVhY3Rpb24gPSBuZXdQcm9taXNlQ2FwYWJpbGl0eShzcGVjaWVzQ29uc3RydWN0b3IodGhpcywgUHJvbWlzZUNvbnN0cnVjdG9yKSk7XG4gICAgc3RhdGUucGFyZW50ID0gdHJ1ZTtcbiAgICByZWFjdGlvbi5vayA9IGlzQ2FsbGFibGUob25GdWxmaWxsZWQpID8gb25GdWxmaWxsZWQgOiB0cnVlO1xuICAgIHJlYWN0aW9uLmZhaWwgPSBpc0NhbGxhYmxlKG9uUmVqZWN0ZWQpICYmIG9uUmVqZWN0ZWQ7XG4gICAgcmVhY3Rpb24uZG9tYWluID0gSVNfTk9ERSA/IHByb2Nlc3MuZG9tYWluIDogdW5kZWZpbmVkO1xuICAgIGlmIChzdGF0ZS5zdGF0ZSA9PT0gUEVORElORykgc3RhdGUucmVhY3Rpb25zLmFkZChyZWFjdGlvbik7XG4gICAgZWxzZSBtaWNyb3Rhc2soZnVuY3Rpb24gKCkge1xuICAgICAgY2FsbFJlYWN0aW9uKHJlYWN0aW9uLCBzdGF0ZSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlYWN0aW9uLnByb21pc2U7XG4gIH0pO1xuXG4gIE93blByb21pc2VDYXBhYmlsaXR5ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBwcm9taXNlID0gbmV3IEludGVybmFsKCk7XG4gICAgdmFyIHN0YXRlID0gZ2V0SW50ZXJuYWxQcm9taXNlU3RhdGUocHJvbWlzZSk7XG4gICAgdGhpcy5wcm9taXNlID0gcHJvbWlzZTtcbiAgICB0aGlzLnJlc29sdmUgPSBiaW5kKGludGVybmFsUmVzb2x2ZSwgc3RhdGUpO1xuICAgIHRoaXMucmVqZWN0ID0gYmluZChpbnRlcm5hbFJlamVjdCwgc3RhdGUpO1xuICB9O1xuXG4gIG5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlLmYgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eSA9IGZ1bmN0aW9uIChDKSB7XG4gICAgcmV0dXJuIEMgPT09IFByb21pc2VDb25zdHJ1Y3RvciB8fCBDID09PSBQcm9taXNlV3JhcHBlclxuICAgICAgPyBuZXcgT3duUHJvbWlzZUNhcGFiaWxpdHkoQylcbiAgICAgIDogbmV3R2VuZXJpY1Byb21pc2VDYXBhYmlsaXR5KEMpO1xuICB9O1xuXG4gIGlmICghSVNfUFVSRSAmJiBpc0NhbGxhYmxlKE5hdGl2ZVByb21pc2VDb25zdHJ1Y3RvcikgJiYgTmF0aXZlUHJvbWlzZVByb3RvdHlwZSAhPT0gT2JqZWN0LnByb3RvdHlwZSkge1xuICAgIG5hdGl2ZVRoZW4gPSBOYXRpdmVQcm9taXNlUHJvdG90eXBlLnRoZW47XG5cbiAgICBpZiAoIU5BVElWRV9QUk9NSVNFX1NVQkNMQVNTSU5HKSB7XG4gICAgICAvLyBtYWtlIGBQcm9taXNlI3RoZW5gIHJldHVybiBhIHBvbHlmaWxsZWQgYFByb21pc2VgIGZvciBuYXRpdmUgcHJvbWlzZS1iYXNlZCBBUElzXG4gICAgICBkZWZpbmVCdWlsdEluKE5hdGl2ZVByb21pc2VQcm90b3R5cGUsICd0aGVuJywgZnVuY3Rpb24gdGhlbihvbkZ1bGZpbGxlZCwgb25SZWplY3RlZCkge1xuICAgICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZUNvbnN0cnVjdG9yKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICBjYWxsKG5hdGl2ZVRoZW4sIHRoYXQsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgIH0pLnRoZW4ob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpO1xuICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzY0MFxuICAgICAgfSwgeyB1bnNhZmU6IHRydWUgfSk7XG4gICAgfVxuXG4gICAgLy8gbWFrZSBgLmNvbnN0cnVjdG9yID09PSBQcm9taXNlYCB3b3JrIGZvciBuYXRpdmUgcHJvbWlzZS1iYXNlZCBBUElzXG4gICAgdHJ5IHtcbiAgICAgIGRlbGV0ZSBOYXRpdmVQcm9taXNlUHJvdG90eXBlLmNvbnN0cnVjdG9yO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7IC8qIGVtcHR5ICovIH1cblxuICAgIC8vIG1ha2UgYGluc3RhbmNlb2YgUHJvbWlzZWAgd29yayBmb3IgbmF0aXZlIHByb21pc2UtYmFzZWQgQVBJc1xuICAgIGlmIChzZXRQcm90b3R5cGVPZikge1xuICAgICAgc2V0UHJvdG90eXBlT2YoTmF0aXZlUHJvbWlzZVByb3RvdHlwZSwgUHJvbWlzZVByb3RvdHlwZSk7XG4gICAgfVxuICB9XG59XG5cbiQoeyBnbG9iYWw6IHRydWUsIGNvbnN0cnVjdG9yOiB0cnVlLCB3cmFwOiB0cnVlLCBmb3JjZWQ6IEZPUkNFRF9QUk9NSVNFX0NPTlNUUlVDVE9SIH0sIHtcbiAgUHJvbWlzZTogUHJvbWlzZUNvbnN0cnVjdG9yXG59KTtcblxuc2V0VG9TdHJpbmdUYWcoUHJvbWlzZUNvbnN0cnVjdG9yLCBQUk9NSVNFLCBmYWxzZSwgdHJ1ZSk7XG5zZXRTcGVjaWVzKFBST01JU0UpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gVE9ETzogUmVtb3ZlIHRoaXMgbW9kdWxlIGZyb20gYGNvcmUtanNANGAgc2luY2UgaXQncyBzcGxpdCB0byBtb2R1bGVzIGxpc3RlZCBiZWxvd1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lcy5wcm9taXNlLmNvbnN0cnVjdG9yJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzLnByb21pc2UuYWxsJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzLnByb21pc2UuY2F0Y2gnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXMucHJvbWlzZS5yYWNlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzLnByb21pc2UucmVqZWN0Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzLnByb21pc2UucmVzb2x2ZScpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1jYWxsJyk7XG52YXIgYUNhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2EtY2FsbGFibGUnKTtcbnZhciBuZXdQcm9taXNlQ2FwYWJpbGl0eU1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9uZXctcHJvbWlzZS1jYXBhYmlsaXR5Jyk7XG52YXIgcGVyZm9ybSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9wZXJmb3JtJyk7XG52YXIgaXRlcmF0ZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pdGVyYXRlJyk7XG52YXIgUFJPTUlTRV9TVEFUSUNTX0lOQ09SUkVDVF9JVEVSQVRJT04gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcHJvbWlzZS1zdGF0aWNzLWluY29ycmVjdC1pdGVyYXRpb24nKTtcblxuLy8gYFByb21pc2UucmFjZWAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXByb21pc2UucmFjZVxuJCh7IHRhcmdldDogJ1Byb21pc2UnLCBzdGF0OiB0cnVlLCBmb3JjZWQ6IFBST01JU0VfU1RBVElDU19JTkNPUlJFQ1RfSVRFUkFUSU9OIH0sIHtcbiAgcmFjZTogZnVuY3Rpb24gcmFjZShpdGVyYWJsZSkge1xuICAgIHZhciBDID0gdGhpcztcbiAgICB2YXIgY2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlLmYoQyk7XG4gICAgdmFyIHJlamVjdCA9IGNhcGFiaWxpdHkucmVqZWN0O1xuICAgIHZhciByZXN1bHQgPSBwZXJmb3JtKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkcHJvbWlzZVJlc29sdmUgPSBhQ2FsbGFibGUoQy5yZXNvbHZlKTtcbiAgICAgIGl0ZXJhdGUoaXRlcmFibGUsIGZ1bmN0aW9uIChwcm9taXNlKSB7XG4gICAgICAgIGNhbGwoJHByb21pc2VSZXNvbHZlLCBDLCBwcm9taXNlKS50aGVuKGNhcGFiaWxpdHkucmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIGlmIChyZXN1bHQuZXJyb3IpIHJlamVjdChyZXN1bHQudmFsdWUpO1xuICAgIHJldHVybiBjYXBhYmlsaXR5LnByb21pc2U7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgbmV3UHJvbWlzZUNhcGFiaWxpdHlNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvbmV3LXByb21pc2UtY2FwYWJpbGl0eScpO1xudmFyIEZPUkNFRF9QUk9NSVNFX0NPTlNUUlVDVE9SID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3Byb21pc2UtY29uc3RydWN0b3ItZGV0ZWN0aW9uJykuQ09OU1RSVUNUT1I7XG5cbi8vIGBQcm9taXNlLnJlamVjdGAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXByb21pc2UucmVqZWN0XG4kKHsgdGFyZ2V0OiAnUHJvbWlzZScsIHN0YXQ6IHRydWUsIGZvcmNlZDogRk9SQ0VEX1BST01JU0VfQ09OU1RSVUNUT1IgfSwge1xuICByZWplY3Q6IGZ1bmN0aW9uIHJlamVjdChyKSB7XG4gICAgdmFyIGNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eU1vZHVsZS5mKHRoaXMpO1xuICAgIHZhciBjYXBhYmlsaXR5UmVqZWN0ID0gY2FwYWJpbGl0eS5yZWplY3Q7XG4gICAgY2FwYWJpbGl0eVJlamVjdChyKTtcbiAgICByZXR1cm4gY2FwYWJpbGl0eS5wcm9taXNlO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIGdldEJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LWJ1aWx0LWluJyk7XG52YXIgSVNfUFVSRSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1wdXJlJyk7XG52YXIgTmF0aXZlUHJvbWlzZUNvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3Byb21pc2UtbmF0aXZlLWNvbnN0cnVjdG9yJyk7XG52YXIgRk9SQ0VEX1BST01JU0VfQ09OU1RSVUNUT1IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcHJvbWlzZS1jb25zdHJ1Y3Rvci1kZXRlY3Rpb24nKS5DT05TVFJVQ1RPUjtcbnZhciBwcm9taXNlUmVzb2x2ZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9wcm9taXNlLXJlc29sdmUnKTtcblxudmFyIFByb21pc2VDb25zdHJ1Y3RvcldyYXBwZXIgPSBnZXRCdWlsdEluKCdQcm9taXNlJyk7XG52YXIgQ0hFQ0tfV1JBUFBFUiA9IElTX1BVUkUgJiYgIUZPUkNFRF9QUk9NSVNFX0NPTlNUUlVDVE9SO1xuXG4vLyBgUHJvbWlzZS5yZXNvbHZlYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtcHJvbWlzZS5yZXNvbHZlXG4kKHsgdGFyZ2V0OiAnUHJvbWlzZScsIHN0YXQ6IHRydWUsIGZvcmNlZDogSVNfUFVSRSB8fCBGT1JDRURfUFJPTUlTRV9DT05TVFJVQ1RPUiB9LCB7XG4gIHJlc29sdmU6IGZ1bmN0aW9uIHJlc29sdmUoeCkge1xuICAgIHJldHVybiBwcm9taXNlUmVzb2x2ZShDSEVDS19XUkFQUEVSICYmIHRoaXMgPT09IFByb21pc2VDb25zdHJ1Y3RvcldyYXBwZXIgPyBOYXRpdmVQcm9taXNlQ29uc3RydWN0b3IgOiB0aGlzLCB4KTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciBnZXRCdWlsdEluID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dldC1idWlsdC1pbicpO1xudmFyIGFwcGx5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWFwcGx5Jyk7XG52YXIgYmluZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1iaW5kJyk7XG52YXIgYUNvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2EtY29uc3RydWN0b3InKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hbi1vYmplY3QnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1vYmplY3QnKTtcbnZhciBjcmVhdGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWNyZWF0ZScpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG5cbnZhciBuYXRpdmVDb25zdHJ1Y3QgPSBnZXRCdWlsdEluKCdSZWZsZWN0JywgJ2NvbnN0cnVjdCcpO1xudmFyIE9iamVjdFByb3RvdHlwZSA9IE9iamVjdC5wcm90b3R5cGU7XG52YXIgcHVzaCA9IFtdLnB1c2g7XG5cbi8vIGBSZWZsZWN0LmNvbnN0cnVjdGAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXJlZmxlY3QuY29uc3RydWN0XG4vLyBNUyBFZGdlIHN1cHBvcnRzIG9ubHkgMiBhcmd1bWVudHMgYW5kIGFyZ3VtZW50c0xpc3QgYXJndW1lbnQgaXMgb3B0aW9uYWxcbi8vIEZGIE5pZ2h0bHkgc2V0cyB0aGlyZCBhcmd1bWVudCBhcyBgbmV3LnRhcmdldGAsIGJ1dCBkb2VzIG5vdCBjcmVhdGUgYHRoaXNgIGZyb20gaXRcbnZhciBORVdfVEFSR0VUX0JVRyA9IGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gRigpIHsgLyogZW1wdHkgKi8gfVxuICByZXR1cm4gIShuYXRpdmVDb25zdHJ1Y3QoZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9LCBbXSwgRikgaW5zdGFuY2VvZiBGKTtcbn0pO1xuXG52YXIgQVJHU19CVUcgPSAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICBuYXRpdmVDb25zdHJ1Y3QoZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9KTtcbn0pO1xuXG52YXIgRk9SQ0VEID0gTkVXX1RBUkdFVF9CVUcgfHwgQVJHU19CVUc7XG5cbiQoeyB0YXJnZXQ6ICdSZWZsZWN0Jywgc3RhdDogdHJ1ZSwgZm9yY2VkOiBGT1JDRUQsIHNoYW06IEZPUkNFRCB9LCB7XG4gIGNvbnN0cnVjdDogZnVuY3Rpb24gY29uc3RydWN0KFRhcmdldCwgYXJncyAvKiAsIG5ld1RhcmdldCAqLykge1xuICAgIGFDb25zdHJ1Y3RvcihUYXJnZXQpO1xuICAgIGFuT2JqZWN0KGFyZ3MpO1xuICAgIHZhciBuZXdUYXJnZXQgPSBhcmd1bWVudHMubGVuZ3RoIDwgMyA/IFRhcmdldCA6IGFDb25zdHJ1Y3Rvcihhcmd1bWVudHNbMl0pO1xuICAgIGlmIChBUkdTX0JVRyAmJiAhTkVXX1RBUkdFVF9CVUcpIHJldHVybiBuYXRpdmVDb25zdHJ1Y3QoVGFyZ2V0LCBhcmdzLCBuZXdUYXJnZXQpO1xuICAgIGlmIChUYXJnZXQgPT09IG5ld1RhcmdldCkge1xuICAgICAgLy8gdy9vIGFsdGVyZWQgbmV3VGFyZ2V0LCBvcHRpbWl6YXRpb24gZm9yIDAtNCBhcmd1bWVudHNcbiAgICAgIHN3aXRjaCAoYXJncy5sZW5ndGgpIHtcbiAgICAgICAgY2FzZSAwOiByZXR1cm4gbmV3IFRhcmdldCgpO1xuICAgICAgICBjYXNlIDE6IHJldHVybiBuZXcgVGFyZ2V0KGFyZ3NbMF0pO1xuICAgICAgICBjYXNlIDI6IHJldHVybiBuZXcgVGFyZ2V0KGFyZ3NbMF0sIGFyZ3NbMV0pO1xuICAgICAgICBjYXNlIDM6IHJldHVybiBuZXcgVGFyZ2V0KGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0pO1xuICAgICAgICBjYXNlIDQ6IHJldHVybiBuZXcgVGFyZ2V0KGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pO1xuICAgICAgfVxuICAgICAgLy8gdy9vIGFsdGVyZWQgbmV3VGFyZ2V0LCBsb3Qgb2YgYXJndW1lbnRzIGNhc2VcbiAgICAgIHZhciAkYXJncyA9IFtudWxsXTtcbiAgICAgIGFwcGx5KHB1c2gsICRhcmdzLCBhcmdzKTtcbiAgICAgIHJldHVybiBuZXcgKGFwcGx5KGJpbmQsIFRhcmdldCwgJGFyZ3MpKSgpO1xuICAgIH1cbiAgICAvLyB3aXRoIGFsdGVyZWQgbmV3VGFyZ2V0LCBub3Qgc3VwcG9ydCBidWlsdC1pbiBjb25zdHJ1Y3RvcnNcbiAgICB2YXIgcHJvdG8gPSBuZXdUYXJnZXQucHJvdG90eXBlO1xuICAgIHZhciBpbnN0YW5jZSA9IGNyZWF0ZShpc09iamVjdChwcm90bykgPyBwcm90byA6IE9iamVjdFByb3RvdHlwZSk7XG4gICAgdmFyIHJlc3VsdCA9IGFwcGx5KFRhcmdldCwgaW5zdGFuY2UsIGFyZ3MpO1xuICAgIHJldHVybiBpc09iamVjdChyZXN1bHQpID8gcmVzdWx0IDogaW5zdGFuY2U7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcycpO1xudmFyIGlzRm9yY2VkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWZvcmNlZCcpO1xudmFyIGluaGVyaXRJZlJlcXVpcmVkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2luaGVyaXQtaWYtcmVxdWlyZWQnKTtcbnZhciBjcmVhdGVOb25FbnVtZXJhYmxlUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLW5vbi1lbnVtZXJhYmxlLXByb3BlcnR5Jyk7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1jcmVhdGUnKTtcbnZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LW5hbWVzJykuZjtcbnZhciBpc1Byb3RvdHlwZU9mID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1pcy1wcm90b3R5cGUtb2YnKTtcbnZhciBpc1JlZ0V4cCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1yZWdleHAnKTtcbnZhciB0b1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1zdHJpbmcnKTtcbnZhciBnZXRSZWdFeHBGbGFncyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWdleHAtZ2V0LWZsYWdzJyk7XG52YXIgc3RpY2t5SGVscGVycyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWdleHAtc3RpY2t5LWhlbHBlcnMnKTtcbnZhciBwcm94eUFjY2Vzc29yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3Byb3h5LWFjY2Vzc29yJyk7XG52YXIgZGVmaW5lQnVpbHRJbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZWZpbmUtYnVpbHQtaW4nKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGhhc093biA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oYXMtb3duLXByb3BlcnR5Jyk7XG52YXIgZW5mb3JjZUludGVybmFsU3RhdGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaW50ZXJuYWwtc3RhdGUnKS5lbmZvcmNlO1xudmFyIHNldFNwZWNpZXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2V0LXNwZWNpZXMnKTtcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcbnZhciBVTlNVUFBPUlRFRF9ET1RfQUxMID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZ2V4cC11bnN1cHBvcnRlZC1kb3QtYWxsJyk7XG52YXIgVU5TVVBQT1JURURfTkNHID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZ2V4cC11bnN1cHBvcnRlZC1uY2cnKTtcblxudmFyIE1BVENIID0gd2VsbEtub3duU3ltYm9sKCdtYXRjaCcpO1xudmFyIE5hdGl2ZVJlZ0V4cCA9IGdsb2JhbC5SZWdFeHA7XG52YXIgUmVnRXhwUHJvdG90eXBlID0gTmF0aXZlUmVnRXhwLnByb3RvdHlwZTtcbnZhciBTeW50YXhFcnJvciA9IGdsb2JhbC5TeW50YXhFcnJvcjtcbnZhciBleGVjID0gdW5jdXJyeVRoaXMoUmVnRXhwUHJvdG90eXBlLmV4ZWMpO1xudmFyIGNoYXJBdCA9IHVuY3VycnlUaGlzKCcnLmNoYXJBdCk7XG52YXIgcmVwbGFjZSA9IHVuY3VycnlUaGlzKCcnLnJlcGxhY2UpO1xudmFyIHN0cmluZ0luZGV4T2YgPSB1bmN1cnJ5VGhpcygnJy5pbmRleE9mKTtcbnZhciBzdHJpbmdTbGljZSA9IHVuY3VycnlUaGlzKCcnLnNsaWNlKTtcbi8vIFRPRE86IFVzZSBvbmx5IHByb3BlciBSZWdFeHBJZGVudGlmaWVyTmFtZVxudmFyIElTX05DRyA9IC9eXFw/PFteXFxzXFxkISMlJiorPD0+QF5dW15cXHMhIyUmKis8PT5AXl0qPi87XG52YXIgcmUxID0gL2EvZztcbnZhciByZTIgPSAvYS9nO1xuXG4vLyBcIm5ld1wiIHNob3VsZCBjcmVhdGUgYSBuZXcgb2JqZWN0LCBvbGQgd2Via2l0IGJ1Z1xudmFyIENPUlJFQ1RfTkVXID0gbmV3IE5hdGl2ZVJlZ0V4cChyZTEpICE9PSByZTE7XG5cbnZhciBNSVNTRURfU1RJQ0tZID0gc3RpY2t5SGVscGVycy5NSVNTRURfU1RJQ0tZO1xudmFyIFVOU1VQUE9SVEVEX1kgPSBzdGlja3lIZWxwZXJzLlVOU1VQUE9SVEVEX1k7XG5cbnZhciBCQVNFX0ZPUkNFRCA9IERFU0NSSVBUT1JTICYmXG4gICghQ09SUkVDVF9ORVcgfHwgTUlTU0VEX1NUSUNLWSB8fCBVTlNVUFBPUlRFRF9ET1RfQUxMIHx8IFVOU1VQUE9SVEVEX05DRyB8fCBmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgcmUyW01BVENIXSA9IGZhbHNlO1xuICAgIC8vIFJlZ0V4cCBjb25zdHJ1Y3RvciBjYW4gYWx0ZXIgZmxhZ3MgYW5kIElzUmVnRXhwIHdvcmtzIGNvcnJlY3Qgd2l0aCBAQG1hdGNoXG4gICAgcmV0dXJuIE5hdGl2ZVJlZ0V4cChyZTEpICE9PSByZTEgfHwgTmF0aXZlUmVnRXhwKHJlMikgPT09IHJlMiB8fCBTdHJpbmcoTmF0aXZlUmVnRXhwKHJlMSwgJ2knKSkgIT09ICcvYS9pJztcbiAgfSkpO1xuXG52YXIgaGFuZGxlRG90QWxsID0gZnVuY3Rpb24gKHN0cmluZykge1xuICB2YXIgbGVuZ3RoID0gc3RyaW5nLmxlbmd0aDtcbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIHJlc3VsdCA9ICcnO1xuICB2YXIgYnJhY2tldHMgPSBmYWxzZTtcbiAgdmFyIGNocjtcbiAgZm9yICg7IGluZGV4IDw9IGxlbmd0aDsgaW5kZXgrKykge1xuICAgIGNociA9IGNoYXJBdChzdHJpbmcsIGluZGV4KTtcbiAgICBpZiAoY2hyID09PSAnXFxcXCcpIHtcbiAgICAgIHJlc3VsdCArPSBjaHIgKyBjaGFyQXQoc3RyaW5nLCArK2luZGV4KTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBpZiAoIWJyYWNrZXRzICYmIGNociA9PT0gJy4nKSB7XG4gICAgICByZXN1bHQgKz0gJ1tcXFxcc1xcXFxTXSc7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChjaHIgPT09ICdbJykge1xuICAgICAgICBicmFja2V0cyA9IHRydWU7XG4gICAgICB9IGVsc2UgaWYgKGNociA9PT0gJ10nKSB7XG4gICAgICAgIGJyYWNrZXRzID0gZmFsc2U7XG4gICAgICB9IHJlc3VsdCArPSBjaHI7XG4gICAgfVxuICB9IHJldHVybiByZXN1bHQ7XG59O1xuXG52YXIgaGFuZGxlTkNHID0gZnVuY3Rpb24gKHN0cmluZykge1xuICB2YXIgbGVuZ3RoID0gc3RyaW5nLmxlbmd0aDtcbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIHJlc3VsdCA9ICcnO1xuICB2YXIgbmFtZWQgPSBbXTtcbiAgdmFyIG5hbWVzID0gY3JlYXRlKG51bGwpO1xuICB2YXIgYnJhY2tldHMgPSBmYWxzZTtcbiAgdmFyIG5jZyA9IGZhbHNlO1xuICB2YXIgZ3JvdXBpZCA9IDA7XG4gIHZhciBncm91cG5hbWUgPSAnJztcbiAgdmFyIGNocjtcbiAgZm9yICg7IGluZGV4IDw9IGxlbmd0aDsgaW5kZXgrKykge1xuICAgIGNociA9IGNoYXJBdChzdHJpbmcsIGluZGV4KTtcbiAgICBpZiAoY2hyID09PSAnXFxcXCcpIHtcbiAgICAgIGNociArPSBjaGFyQXQoc3RyaW5nLCArK2luZGV4KTtcbiAgICB9IGVsc2UgaWYgKGNociA9PT0gJ10nKSB7XG4gICAgICBicmFja2V0cyA9IGZhbHNlO1xuICAgIH0gZWxzZSBpZiAoIWJyYWNrZXRzKSBzd2l0Y2ggKHRydWUpIHtcbiAgICAgIGNhc2UgY2hyID09PSAnWyc6XG4gICAgICAgIGJyYWNrZXRzID0gdHJ1ZTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIGNociA9PT0gJygnOlxuICAgICAgICBpZiAoZXhlYyhJU19OQ0csIHN0cmluZ1NsaWNlKHN0cmluZywgaW5kZXggKyAxKSkpIHtcbiAgICAgICAgICBpbmRleCArPSAyO1xuICAgICAgICAgIG5jZyA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0ICs9IGNocjtcbiAgICAgICAgZ3JvdXBpZCsrO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIGNhc2UgY2hyID09PSAnPicgJiYgbmNnOlxuICAgICAgICBpZiAoZ3JvdXBuYW1lID09PSAnJyB8fCBoYXNPd24obmFtZXMsIGdyb3VwbmFtZSkpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3IoJ0ludmFsaWQgY2FwdHVyZSBncm91cCBuYW1lJyk7XG4gICAgICAgIH1cbiAgICAgICAgbmFtZXNbZ3JvdXBuYW1lXSA9IHRydWU7XG4gICAgICAgIG5hbWVkW25hbWVkLmxlbmd0aF0gPSBbZ3JvdXBuYW1lLCBncm91cGlkXTtcbiAgICAgICAgbmNnID0gZmFsc2U7XG4gICAgICAgIGdyb3VwbmFtZSA9ICcnO1xuICAgICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgaWYgKG5jZykgZ3JvdXBuYW1lICs9IGNocjtcbiAgICBlbHNlIHJlc3VsdCArPSBjaHI7XG4gIH0gcmV0dXJuIFtyZXN1bHQsIG5hbWVkXTtcbn07XG5cbi8vIGBSZWdFeHBgIGNvbnN0cnVjdG9yXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXJlZ2V4cC1jb25zdHJ1Y3RvclxuaWYgKGlzRm9yY2VkKCdSZWdFeHAnLCBCQVNFX0ZPUkNFRCkpIHtcbiAgdmFyIFJlZ0V4cFdyYXBwZXIgPSBmdW5jdGlvbiBSZWdFeHAocGF0dGVybiwgZmxhZ3MpIHtcbiAgICB2YXIgdGhpc0lzUmVnRXhwID0gaXNQcm90b3R5cGVPZihSZWdFeHBQcm90b3R5cGUsIHRoaXMpO1xuICAgIHZhciBwYXR0ZXJuSXNSZWdFeHAgPSBpc1JlZ0V4cChwYXR0ZXJuKTtcbiAgICB2YXIgZmxhZ3NBcmVVbmRlZmluZWQgPSBmbGFncyA9PT0gdW5kZWZpbmVkO1xuICAgIHZhciBncm91cHMgPSBbXTtcbiAgICB2YXIgcmF3UGF0dGVybiA9IHBhdHRlcm47XG4gICAgdmFyIHJhd0ZsYWdzLCBkb3RBbGwsIHN0aWNreSwgaGFuZGxlZCwgcmVzdWx0LCBzdGF0ZTtcblxuICAgIGlmICghdGhpc0lzUmVnRXhwICYmIHBhdHRlcm5Jc1JlZ0V4cCAmJiBmbGFnc0FyZVVuZGVmaW5lZCAmJiBwYXR0ZXJuLmNvbnN0cnVjdG9yID09PSBSZWdFeHBXcmFwcGVyKSB7XG4gICAgICByZXR1cm4gcGF0dGVybjtcbiAgICB9XG5cbiAgICBpZiAocGF0dGVybklzUmVnRXhwIHx8IGlzUHJvdG90eXBlT2YoUmVnRXhwUHJvdG90eXBlLCBwYXR0ZXJuKSkge1xuICAgICAgcGF0dGVybiA9IHBhdHRlcm4uc291cmNlO1xuICAgICAgaWYgKGZsYWdzQXJlVW5kZWZpbmVkKSBmbGFncyA9IGdldFJlZ0V4cEZsYWdzKHJhd1BhdHRlcm4pO1xuICAgIH1cblxuICAgIHBhdHRlcm4gPSBwYXR0ZXJuID09PSB1bmRlZmluZWQgPyAnJyA6IHRvU3RyaW5nKHBhdHRlcm4pO1xuICAgIGZsYWdzID0gZmxhZ3MgPT09IHVuZGVmaW5lZCA/ICcnIDogdG9TdHJpbmcoZmxhZ3MpO1xuICAgIHJhd1BhdHRlcm4gPSBwYXR0ZXJuO1xuXG4gICAgaWYgKFVOU1VQUE9SVEVEX0RPVF9BTEwgJiYgJ2RvdEFsbCcgaW4gcmUxKSB7XG4gICAgICBkb3RBbGwgPSAhIWZsYWdzICYmIHN0cmluZ0luZGV4T2YoZmxhZ3MsICdzJykgPiAtMTtcbiAgICAgIGlmIChkb3RBbGwpIGZsYWdzID0gcmVwbGFjZShmbGFncywgL3MvZywgJycpO1xuICAgIH1cblxuICAgIHJhd0ZsYWdzID0gZmxhZ3M7XG5cbiAgICBpZiAoTUlTU0VEX1NUSUNLWSAmJiAnc3RpY2t5JyBpbiByZTEpIHtcbiAgICAgIHN0aWNreSA9ICEhZmxhZ3MgJiYgc3RyaW5nSW5kZXhPZihmbGFncywgJ3knKSA+IC0xO1xuICAgICAgaWYgKHN0aWNreSAmJiBVTlNVUFBPUlRFRF9ZKSBmbGFncyA9IHJlcGxhY2UoZmxhZ3MsIC95L2csICcnKTtcbiAgICB9XG5cbiAgICBpZiAoVU5TVVBQT1JURURfTkNHKSB7XG4gICAgICBoYW5kbGVkID0gaGFuZGxlTkNHKHBhdHRlcm4pO1xuICAgICAgcGF0dGVybiA9IGhhbmRsZWRbMF07XG4gICAgICBncm91cHMgPSBoYW5kbGVkWzFdO1xuICAgIH1cblxuICAgIHJlc3VsdCA9IGluaGVyaXRJZlJlcXVpcmVkKE5hdGl2ZVJlZ0V4cChwYXR0ZXJuLCBmbGFncyksIHRoaXNJc1JlZ0V4cCA/IHRoaXMgOiBSZWdFeHBQcm90b3R5cGUsIFJlZ0V4cFdyYXBwZXIpO1xuXG4gICAgaWYgKGRvdEFsbCB8fCBzdGlja3kgfHwgZ3JvdXBzLmxlbmd0aCkge1xuICAgICAgc3RhdGUgPSBlbmZvcmNlSW50ZXJuYWxTdGF0ZShyZXN1bHQpO1xuICAgICAgaWYgKGRvdEFsbCkge1xuICAgICAgICBzdGF0ZS5kb3RBbGwgPSB0cnVlO1xuICAgICAgICBzdGF0ZS5yYXcgPSBSZWdFeHBXcmFwcGVyKGhhbmRsZURvdEFsbChwYXR0ZXJuKSwgcmF3RmxhZ3MpO1xuICAgICAgfVxuICAgICAgaWYgKHN0aWNreSkgc3RhdGUuc3RpY2t5ID0gdHJ1ZTtcbiAgICAgIGlmIChncm91cHMubGVuZ3RoKSBzdGF0ZS5ncm91cHMgPSBncm91cHM7XG4gICAgfVxuXG4gICAgaWYgKHBhdHRlcm4gIT09IHJhd1BhdHRlcm4pIHRyeSB7XG4gICAgICAvLyBmYWlscyBpbiBvbGQgZW5naW5lcywgYnV0IHdlIGhhdmUgbm8gYWx0ZXJuYXRpdmVzIGZvciB1bnN1cHBvcnRlZCByZWdleCBzeW50YXhcbiAgICAgIGNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eShyZXN1bHQsICdzb3VyY2UnLCByYXdQYXR0ZXJuID09PSAnJyA/ICcoPzopJyA6IHJhd1BhdHRlcm4pO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7IC8qIGVtcHR5ICovIH1cblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgZm9yICh2YXIga2V5cyA9IGdldE93blByb3BlcnR5TmFtZXMoTmF0aXZlUmVnRXhwKSwgaW5kZXggPSAwOyBrZXlzLmxlbmd0aCA+IGluZGV4Oykge1xuICAgIHByb3h5QWNjZXNzb3IoUmVnRXhwV3JhcHBlciwgTmF0aXZlUmVnRXhwLCBrZXlzW2luZGV4KytdKTtcbiAgfVxuXG4gIFJlZ0V4cFByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IFJlZ0V4cFdyYXBwZXI7XG4gIFJlZ0V4cFdyYXBwZXIucHJvdG90eXBlID0gUmVnRXhwUHJvdG90eXBlO1xuICBkZWZpbmVCdWlsdEluKGdsb2JhbCwgJ1JlZ0V4cCcsIFJlZ0V4cFdyYXBwZXIsIHsgY29uc3RydWN0b3I6IHRydWUgfSk7XG59XG5cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtZ2V0LXJlZ2V4cC1AQHNwZWNpZXNcbnNldFNwZWNpZXMoJ1JlZ0V4cCcpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgZXhlYyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWdleHAtZXhlYycpO1xuXG4vLyBgUmVnRXhwLnByb3RvdHlwZS5leGVjYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS5leGVjXG4kKHsgdGFyZ2V0OiAnUmVnRXhwJywgcHJvdG86IHRydWUsIGZvcmNlZDogLy4vLmV4ZWMgIT09IGV4ZWMgfSwge1xuICBleGVjOiBleGVjXG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBQUk9QRVJfRlVOQ1RJT05fTkFNRSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1uYW1lJykuUFJPUEVSO1xudmFyIGRlZmluZUJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVmaW5lLWJ1aWx0LWluJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4tb2JqZWN0Jyk7XG52YXIgJHRvU3RyaW5nID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXN0cmluZycpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgZ2V0UmVnRXhwRmxhZ3MgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLWdldC1mbGFncycpO1xuXG52YXIgVE9fU1RSSU5HID0gJ3RvU3RyaW5nJztcbnZhciBSZWdFeHBQcm90b3R5cGUgPSBSZWdFeHAucHJvdG90eXBlO1xudmFyIG5hdGl2ZVRvU3RyaW5nID0gUmVnRXhwUHJvdG90eXBlW1RPX1NUUklOR107XG5cbnZhciBOT1RfR0VORVJJQyA9IGZhaWxzKGZ1bmN0aW9uICgpIHsgcmV0dXJuIG5hdGl2ZVRvU3RyaW5nLmNhbGwoeyBzb3VyY2U6ICdhJywgZmxhZ3M6ICdiJyB9KSAhPT0gJy9hL2InOyB9KTtcbi8vIEZGNDQtIFJlZ0V4cCN0b1N0cmluZyBoYXMgYSB3cm9uZyBuYW1lXG52YXIgSU5DT1JSRUNUX05BTUUgPSBQUk9QRVJfRlVOQ1RJT05fTkFNRSAmJiBuYXRpdmVUb1N0cmluZy5uYW1lICE9PSBUT19TVFJJTkc7XG5cbi8vIGBSZWdFeHAucHJvdG90eXBlLnRvU3RyaW5nYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS50b3N0cmluZ1xuaWYgKE5PVF9HRU5FUklDIHx8IElOQ09SUkVDVF9OQU1FKSB7XG4gIGRlZmluZUJ1aWx0SW4oUmVnRXhwUHJvdG90eXBlLCBUT19TVFJJTkcsIGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHZhciBSID0gYW5PYmplY3QodGhpcyk7XG4gICAgdmFyIHBhdHRlcm4gPSAkdG9TdHJpbmcoUi5zb3VyY2UpO1xuICAgIHZhciBmbGFncyA9ICR0b1N0cmluZyhnZXRSZWdFeHBGbGFncyhSKSk7XG4gICAgcmV0dXJuICcvJyArIHBhdHRlcm4gKyAnLycgKyBmbGFncztcbiAgfSwgeyB1bnNhZmU6IHRydWUgfSk7XG59XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY29sbGVjdGlvbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jb2xsZWN0aW9uJyk7XG52YXIgY29sbGVjdGlvblN0cm9uZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jb2xsZWN0aW9uLXN0cm9uZycpO1xuXG4vLyBgU2V0YCBjb25zdHJ1Y3RvclxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1zZXQtb2JqZWN0c1xuY29sbGVjdGlvbignU2V0JywgZnVuY3Rpb24gKGluaXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIFNldCgpIHsgcmV0dXJuIGluaXQodGhpcywgYXJndW1lbnRzLmxlbmd0aCA/IGFyZ3VtZW50c1swXSA6IHVuZGVmaW5lZCk7IH07XG59LCBjb2xsZWN0aW9uU3Ryb25nKTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIFRPRE86IFJlbW92ZSB0aGlzIG1vZHVsZSBmcm9tIGBjb3JlLWpzQDRgIHNpbmNlIGl0J3MgcmVwbGFjZWQgdG8gbW9kdWxlIGJlbG93XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzLnNldC5jb25zdHJ1Y3RvcicpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzLWNsYXVzZScpO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yJykuZjtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1sZW5ndGgnKTtcbnZhciB0b1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1zdHJpbmcnKTtcbnZhciBub3RBUmVnRXhwID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL25vdC1hLXJlZ2V4cCcpO1xudmFyIHJlcXVpcmVPYmplY3RDb2VyY2libGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVxdWlyZS1vYmplY3QtY29lcmNpYmxlJyk7XG52YXIgY29ycmVjdElzUmVnRXhwTG9naWMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY29ycmVjdC1pcy1yZWdleHAtbG9naWMnKTtcbnZhciBJU19QVVJFID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLXB1cmUnKTtcblxudmFyIHNsaWNlID0gdW5jdXJyeVRoaXMoJycuc2xpY2UpO1xudmFyIG1pbiA9IE1hdGgubWluO1xuXG52YXIgQ09SUkVDVF9JU19SRUdFWFBfTE9HSUMgPSBjb3JyZWN0SXNSZWdFeHBMb2dpYygnZW5kc1dpdGgnKTtcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL3B1bGwvNzAyXG52YXIgTUROX1BPTFlGSUxMX0JVRyA9ICFJU19QVVJFICYmICFDT1JSRUNUX0lTX1JFR0VYUF9MT0dJQyAmJiAhIWZ1bmN0aW9uICgpIHtcbiAgdmFyIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoU3RyaW5nLnByb3RvdHlwZSwgJ2VuZHNXaXRoJyk7XG4gIHJldHVybiBkZXNjcmlwdG9yICYmICFkZXNjcmlwdG9yLndyaXRhYmxlO1xufSgpO1xuXG4vLyBgU3RyaW5nLnByb3RvdHlwZS5lbmRzV2l0aGAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUuZW5kc3dpdGhcbiQoeyB0YXJnZXQ6ICdTdHJpbmcnLCBwcm90bzogdHJ1ZSwgZm9yY2VkOiAhTUROX1BPTFlGSUxMX0JVRyAmJiAhQ09SUkVDVF9JU19SRUdFWFBfTE9HSUMgfSwge1xuICBlbmRzV2l0aDogZnVuY3Rpb24gZW5kc1dpdGgoc2VhcmNoU3RyaW5nIC8qICwgZW5kUG9zaXRpb24gPSBAbGVuZ3RoICovKSB7XG4gICAgdmFyIHRoYXQgPSB0b1N0cmluZyhyZXF1aXJlT2JqZWN0Q29lcmNpYmxlKHRoaXMpKTtcbiAgICBub3RBUmVnRXhwKHNlYXJjaFN0cmluZyk7XG4gICAgdmFyIGVuZFBvc2l0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7XG4gICAgdmFyIGxlbiA9IHRoYXQubGVuZ3RoO1xuICAgIHZhciBlbmQgPSBlbmRQb3NpdGlvbiA9PT0gdW5kZWZpbmVkID8gbGVuIDogbWluKHRvTGVuZ3RoKGVuZFBvc2l0aW9uKSwgbGVuKTtcbiAgICB2YXIgc2VhcmNoID0gdG9TdHJpbmcoc2VhcmNoU3RyaW5nKTtcbiAgICByZXR1cm4gc2xpY2UodGhhdCwgZW5kIC0gc2VhcmNoLmxlbmd0aCwgZW5kKSA9PT0gc2VhcmNoO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcycpO1xudmFyIG5vdEFSZWdFeHAgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvbm90LWEtcmVnZXhwJyk7XG52YXIgcmVxdWlyZU9iamVjdENvZXJjaWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGUnKTtcbnZhciB0b1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1zdHJpbmcnKTtcbnZhciBjb3JyZWN0SXNSZWdFeHBMb2dpYyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jb3JyZWN0LWlzLXJlZ2V4cC1sb2dpYycpO1xuXG52YXIgc3RyaW5nSW5kZXhPZiA9IHVuY3VycnlUaGlzKCcnLmluZGV4T2YpO1xuXG4vLyBgU3RyaW5nLnByb3RvdHlwZS5pbmNsdWRlc2AgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUuaW5jbHVkZXNcbiQoeyB0YXJnZXQ6ICdTdHJpbmcnLCBwcm90bzogdHJ1ZSwgZm9yY2VkOiAhY29ycmVjdElzUmVnRXhwTG9naWMoJ2luY2x1ZGVzJykgfSwge1xuICBpbmNsdWRlczogZnVuY3Rpb24gaW5jbHVkZXMoc2VhcmNoU3RyaW5nIC8qICwgcG9zaXRpb24gPSAwICovKSB7XG4gICAgcmV0dXJuICEhfnN0cmluZ0luZGV4T2YoXG4gICAgICB0b1N0cmluZyhyZXF1aXJlT2JqZWN0Q29lcmNpYmxlKHRoaXMpKSxcbiAgICAgIHRvU3RyaW5nKG5vdEFSZWdFeHAoc2VhcmNoU3RyaW5nKSksXG4gICAgICBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZFxuICAgICk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNoYXJBdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zdHJpbmctbXVsdGlieXRlJykuY2hhckF0O1xudmFyIHRvU3RyaW5nID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXN0cmluZycpO1xudmFyIEludGVybmFsU3RhdGVNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaW50ZXJuYWwtc3RhdGUnKTtcbnZhciBkZWZpbmVJdGVyYXRvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pdGVyYXRvci1kZWZpbmUnKTtcbnZhciBjcmVhdGVJdGVyUmVzdWx0T2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NyZWF0ZS1pdGVyLXJlc3VsdC1vYmplY3QnKTtcblxudmFyIFNUUklOR19JVEVSQVRPUiA9ICdTdHJpbmcgSXRlcmF0b3InO1xudmFyIHNldEludGVybmFsU3RhdGUgPSBJbnRlcm5hbFN0YXRlTW9kdWxlLnNldDtcbnZhciBnZXRJbnRlcm5hbFN0YXRlID0gSW50ZXJuYWxTdGF0ZU1vZHVsZS5nZXR0ZXJGb3IoU1RSSU5HX0lURVJBVE9SKTtcblxuLy8gYFN0cmluZy5wcm90b3R5cGVbQEBpdGVyYXRvcl1gIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1zdHJpbmcucHJvdG90eXBlLUBAaXRlcmF0b3JcbmRlZmluZUl0ZXJhdG9yKFN0cmluZywgJ1N0cmluZycsIGZ1bmN0aW9uIChpdGVyYXRlZCkge1xuICBzZXRJbnRlcm5hbFN0YXRlKHRoaXMsIHtcbiAgICB0eXBlOiBTVFJJTkdfSVRFUkFUT1IsXG4gICAgc3RyaW5nOiB0b1N0cmluZyhpdGVyYXRlZCksXG4gICAgaW5kZXg6IDBcbiAgfSk7XG4vLyBgJVN0cmluZ0l0ZXJhdG9yUHJvdG90eXBlJS5uZXh0YCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtJXN0cmluZ2l0ZXJhdG9ycHJvdG90eXBlJS5uZXh0XG59LCBmdW5jdGlvbiBuZXh0KCkge1xuICB2YXIgc3RhdGUgPSBnZXRJbnRlcm5hbFN0YXRlKHRoaXMpO1xuICB2YXIgc3RyaW5nID0gc3RhdGUuc3RyaW5nO1xuICB2YXIgaW5kZXggPSBzdGF0ZS5pbmRleDtcbiAgdmFyIHBvaW50O1xuICBpZiAoaW5kZXggPj0gc3RyaW5nLmxlbmd0aCkgcmV0dXJuIGNyZWF0ZUl0ZXJSZXN1bHRPYmplY3QodW5kZWZpbmVkLCB0cnVlKTtcbiAgcG9pbnQgPSBjaGFyQXQoc3RyaW5nLCBpbmRleCk7XG4gIHN0YXRlLmluZGV4ICs9IHBvaW50Lmxlbmd0aDtcbiAgcmV0dXJuIGNyZWF0ZUl0ZXJSZXN1bHRPYmplY3QocG9pbnQsIGZhbHNlKTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNhbGwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tY2FsbCcpO1xudmFyIGZpeFJlZ0V4cFdlbGxLbm93blN5bWJvbExvZ2ljID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZpeC1yZWdleHAtd2VsbC1rbm93bi1zeW1ib2wtbG9naWMnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hbi1vYmplY3QnKTtcbnZhciBpc051bGxPclVuZGVmaW5lZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1udWxsLW9yLXVuZGVmaW5lZCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWxlbmd0aCcpO1xudmFyIHRvU3RyaW5nID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXN0cmluZycpO1xudmFyIHJlcXVpcmVPYmplY3RDb2VyY2libGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVxdWlyZS1vYmplY3QtY29lcmNpYmxlJyk7XG52YXIgZ2V0TWV0aG9kID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dldC1tZXRob2QnKTtcbnZhciBhZHZhbmNlU3RyaW5nSW5kZXggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYWR2YW5jZS1zdHJpbmctaW5kZXgnKTtcbnZhciByZWdFeHBFeGVjID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZ2V4cC1leGVjLWFic3RyYWN0Jyk7XG5cbi8vIEBAbWF0Y2ggbG9naWNcbmZpeFJlZ0V4cFdlbGxLbm93blN5bWJvbExvZ2ljKCdtYXRjaCcsIGZ1bmN0aW9uIChNQVRDSCwgbmF0aXZlTWF0Y2gsIG1heWJlQ2FsbE5hdGl2ZSkge1xuICByZXR1cm4gW1xuICAgIC8vIGBTdHJpbmcucHJvdG90eXBlLm1hdGNoYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUubWF0Y2hcbiAgICBmdW5jdGlvbiBtYXRjaChyZWdleHApIHtcbiAgICAgIHZhciBPID0gcmVxdWlyZU9iamVjdENvZXJjaWJsZSh0aGlzKTtcbiAgICAgIHZhciBtYXRjaGVyID0gaXNOdWxsT3JVbmRlZmluZWQocmVnZXhwKSA/IHVuZGVmaW5lZCA6IGdldE1ldGhvZChyZWdleHAsIE1BVENIKTtcbiAgICAgIHJldHVybiBtYXRjaGVyID8gY2FsbChtYXRjaGVyLCByZWdleHAsIE8pIDogbmV3IFJlZ0V4cChyZWdleHApW01BVENIXSh0b1N0cmluZyhPKSk7XG4gICAgfSxcbiAgICAvLyBgUmVnRXhwLnByb3RvdHlwZVtAQG1hdGNoXWAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1yZWdleHAucHJvdG90eXBlLUBAbWF0Y2hcbiAgICBmdW5jdGlvbiAoc3RyaW5nKSB7XG4gICAgICB2YXIgcnggPSBhbk9iamVjdCh0aGlzKTtcbiAgICAgIHZhciBTID0gdG9TdHJpbmcoc3RyaW5nKTtcbiAgICAgIHZhciByZXMgPSBtYXliZUNhbGxOYXRpdmUobmF0aXZlTWF0Y2gsIHJ4LCBTKTtcblxuICAgICAgaWYgKHJlcy5kb25lKSByZXR1cm4gcmVzLnZhbHVlO1xuXG4gICAgICBpZiAoIXJ4Lmdsb2JhbCkgcmV0dXJuIHJlZ0V4cEV4ZWMocngsIFMpO1xuXG4gICAgICB2YXIgZnVsbFVuaWNvZGUgPSByeC51bmljb2RlO1xuICAgICAgcngubGFzdEluZGV4ID0gMDtcbiAgICAgIHZhciBBID0gW107XG4gICAgICB2YXIgbiA9IDA7XG4gICAgICB2YXIgcmVzdWx0O1xuICAgICAgd2hpbGUgKChyZXN1bHQgPSByZWdFeHBFeGVjKHJ4LCBTKSkgIT09IG51bGwpIHtcbiAgICAgICAgdmFyIG1hdGNoU3RyID0gdG9TdHJpbmcocmVzdWx0WzBdKTtcbiAgICAgICAgQVtuXSA9IG1hdGNoU3RyO1xuICAgICAgICBpZiAobWF0Y2hTdHIgPT09ICcnKSByeC5sYXN0SW5kZXggPSBhZHZhbmNlU3RyaW5nSW5kZXgoUywgdG9MZW5ndGgocngubGFzdEluZGV4KSwgZnVsbFVuaWNvZGUpO1xuICAgICAgICBuKys7XG4gICAgICB9XG4gICAgICByZXR1cm4gbiA9PT0gMCA/IG51bGwgOiBBO1xuICAgIH1cbiAgXTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGFwcGx5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWFwcGx5Jyk7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1jYWxsJyk7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgZml4UmVnRXhwV2VsbEtub3duU3ltYm9sTG9naWMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZml4LXJlZ2V4cC13ZWxsLWtub3duLXN5bWJvbC1sb2dpYycpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4tb2JqZWN0Jyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xudmFyIGlzTnVsbE9yVW5kZWZpbmVkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW51bGwtb3ItdW5kZWZpbmVkJyk7XG52YXIgdG9JbnRlZ2VyT3JJbmZpbml0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1pbnRlZ2VyLW9yLWluZmluaXR5Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoJyk7XG52YXIgdG9TdHJpbmcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tc3RyaW5nJyk7XG52YXIgcmVxdWlyZU9iamVjdENvZXJjaWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGUnKTtcbnZhciBhZHZhbmNlU3RyaW5nSW5kZXggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYWR2YW5jZS1zdHJpbmctaW5kZXgnKTtcbnZhciBnZXRNZXRob2QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LW1ldGhvZCcpO1xudmFyIGdldFN1YnN0aXR1dGlvbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nZXQtc3Vic3RpdHV0aW9uJyk7XG52YXIgcmVnRXhwRXhlYyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWdleHAtZXhlYy1hYnN0cmFjdCcpO1xudmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xuXG52YXIgUkVQTEFDRSA9IHdlbGxLbm93blN5bWJvbCgncmVwbGFjZScpO1xudmFyIG1heCA9IE1hdGgubWF4O1xudmFyIG1pbiA9IE1hdGgubWluO1xudmFyIGNvbmNhdCA9IHVuY3VycnlUaGlzKFtdLmNvbmNhdCk7XG52YXIgcHVzaCA9IHVuY3VycnlUaGlzKFtdLnB1c2gpO1xudmFyIHN0cmluZ0luZGV4T2YgPSB1bmN1cnJ5VGhpcygnJy5pbmRleE9mKTtcbnZhciBzdHJpbmdTbGljZSA9IHVuY3VycnlUaGlzKCcnLnNsaWNlKTtcblxudmFyIG1heWJlVG9TdHJpbmcgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGl0ID09PSB1bmRlZmluZWQgPyBpdCA6IFN0cmluZyhpdCk7XG59O1xuXG4vLyBJRSA8PSAxMSByZXBsYWNlcyAkMCB3aXRoIHRoZSB3aG9sZSBtYXRjaCwgYXMgaWYgaXQgd2FzICQmXG4vLyBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy82MDI0NjY2L2dldHRpbmctaWUtdG8tcmVwbGFjZS1hLXJlZ2V4LXdpdGgtdGhlLWxpdGVyYWwtc3RyaW5nLTBcbnZhciBSRVBMQUNFX0tFRVBTXyQwID0gKGZ1bmN0aW9uICgpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlZ2V4cC9wcmVmZXItZXNjYXBlLXJlcGxhY2VtZW50LWRvbGxhci1jaGFyIC0tIHJlcXVpcmVkIGZvciB0ZXN0aW5nXG4gIHJldHVybiAnYScucmVwbGFjZSgvLi8sICckMCcpID09PSAnJDAnO1xufSkoKTtcblxuLy8gU2FmYXJpIDw9IDEzLjAuMyg/KSBzdWJzdGl0dXRlcyBudGggY2FwdHVyZSB3aGVyZSBuPm0gd2l0aCBhbiBlbXB0eSBzdHJpbmdcbnZhciBSRUdFWFBfUkVQTEFDRV9TVUJTVElUVVRFU19VTkRFRklORURfQ0FQVFVSRSA9IChmdW5jdGlvbiAoKSB7XG4gIGlmICgvLi9bUkVQTEFDRV0pIHtcbiAgICByZXR1cm4gLy4vW1JFUExBQ0VdKCdhJywgJyQwJykgPT09ICcnO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn0pKCk7XG5cbnZhciBSRVBMQUNFX1NVUFBPUlRTX05BTUVEX0dST1VQUyA9ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHZhciByZSA9IC8uLztcbiAgcmUuZXhlYyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgcmVzdWx0Lmdyb3VwcyA9IHsgYTogJzcnIH07XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlZ2V4cC9uby11c2VsZXNzLWRvbGxhci1yZXBsYWNlbWVudHMgLS0gZmFsc2UgcG9zaXRpdmVcbiAgcmV0dXJuICcnLnJlcGxhY2UocmUsICckPGE+JykgIT09ICc3Jztcbn0pO1xuXG4vLyBAQHJlcGxhY2UgbG9naWNcbmZpeFJlZ0V4cFdlbGxLbm93blN5bWJvbExvZ2ljKCdyZXBsYWNlJywgZnVuY3Rpb24gKF8sIG5hdGl2ZVJlcGxhY2UsIG1heWJlQ2FsbE5hdGl2ZSkge1xuICB2YXIgVU5TQUZFX1NVQlNUSVRVVEUgPSBSRUdFWFBfUkVQTEFDRV9TVUJTVElUVVRFU19VTkRFRklORURfQ0FQVFVSRSA/ICckJyA6ICckMCc7XG5cbiAgcmV0dXJuIFtcbiAgICAvLyBgU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUucmVwbGFjZVxuICAgIGZ1bmN0aW9uIHJlcGxhY2Uoc2VhcmNoVmFsdWUsIHJlcGxhY2VWYWx1ZSkge1xuICAgICAgdmFyIE8gPSByZXF1aXJlT2JqZWN0Q29lcmNpYmxlKHRoaXMpO1xuICAgICAgdmFyIHJlcGxhY2VyID0gaXNOdWxsT3JVbmRlZmluZWQoc2VhcmNoVmFsdWUpID8gdW5kZWZpbmVkIDogZ2V0TWV0aG9kKHNlYXJjaFZhbHVlLCBSRVBMQUNFKTtcbiAgICAgIHJldHVybiByZXBsYWNlclxuICAgICAgICA/IGNhbGwocmVwbGFjZXIsIHNlYXJjaFZhbHVlLCBPLCByZXBsYWNlVmFsdWUpXG4gICAgICAgIDogY2FsbChuYXRpdmVSZXBsYWNlLCB0b1N0cmluZyhPKSwgc2VhcmNoVmFsdWUsIHJlcGxhY2VWYWx1ZSk7XG4gICAgfSxcbiAgICAvLyBgUmVnRXhwLnByb3RvdHlwZVtAQHJlcGxhY2VdYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXJlZ2V4cC5wcm90b3R5cGUtQEByZXBsYWNlXG4gICAgZnVuY3Rpb24gKHN0cmluZywgcmVwbGFjZVZhbHVlKSB7XG4gICAgICB2YXIgcnggPSBhbk9iamVjdCh0aGlzKTtcbiAgICAgIHZhciBTID0gdG9TdHJpbmcoc3RyaW5nKTtcblxuICAgICAgaWYgKFxuICAgICAgICB0eXBlb2YgcmVwbGFjZVZhbHVlID09ICdzdHJpbmcnICYmXG4gICAgICAgIHN0cmluZ0luZGV4T2YocmVwbGFjZVZhbHVlLCBVTlNBRkVfU1VCU1RJVFVURSkgPT09IC0xICYmXG4gICAgICAgIHN0cmluZ0luZGV4T2YocmVwbGFjZVZhbHVlLCAnJDwnKSA9PT0gLTFcbiAgICAgICkge1xuICAgICAgICB2YXIgcmVzID0gbWF5YmVDYWxsTmF0aXZlKG5hdGl2ZVJlcGxhY2UsIHJ4LCBTLCByZXBsYWNlVmFsdWUpO1xuICAgICAgICBpZiAocmVzLmRvbmUpIHJldHVybiByZXMudmFsdWU7XG4gICAgICB9XG5cbiAgICAgIHZhciBmdW5jdGlvbmFsUmVwbGFjZSA9IGlzQ2FsbGFibGUocmVwbGFjZVZhbHVlKTtcbiAgICAgIGlmICghZnVuY3Rpb25hbFJlcGxhY2UpIHJlcGxhY2VWYWx1ZSA9IHRvU3RyaW5nKHJlcGxhY2VWYWx1ZSk7XG5cbiAgICAgIHZhciBnbG9iYWwgPSByeC5nbG9iYWw7XG4gICAgICB2YXIgZnVsbFVuaWNvZGU7XG4gICAgICBpZiAoZ2xvYmFsKSB7XG4gICAgICAgIGZ1bGxVbmljb2RlID0gcngudW5pY29kZTtcbiAgICAgICAgcngubGFzdEluZGV4ID0gMDtcbiAgICAgIH1cblxuICAgICAgdmFyIHJlc3VsdHMgPSBbXTtcbiAgICAgIHZhciByZXN1bHQ7XG4gICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICByZXN1bHQgPSByZWdFeHBFeGVjKHJ4LCBTKTtcbiAgICAgICAgaWYgKHJlc3VsdCA9PT0gbnVsbCkgYnJlYWs7XG5cbiAgICAgICAgcHVzaChyZXN1bHRzLCByZXN1bHQpO1xuICAgICAgICBpZiAoIWdsb2JhbCkgYnJlYWs7XG5cbiAgICAgICAgdmFyIG1hdGNoU3RyID0gdG9TdHJpbmcocmVzdWx0WzBdKTtcbiAgICAgICAgaWYgKG1hdGNoU3RyID09PSAnJykgcngubGFzdEluZGV4ID0gYWR2YW5jZVN0cmluZ0luZGV4KFMsIHRvTGVuZ3RoKHJ4Lmxhc3RJbmRleCksIGZ1bGxVbmljb2RlKTtcbiAgICAgIH1cblxuICAgICAgdmFyIGFjY3VtdWxhdGVkUmVzdWx0ID0gJyc7XG4gICAgICB2YXIgbmV4dFNvdXJjZVBvc2l0aW9uID0gMDtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzdWx0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICByZXN1bHQgPSByZXN1bHRzW2ldO1xuXG4gICAgICAgIHZhciBtYXRjaGVkID0gdG9TdHJpbmcocmVzdWx0WzBdKTtcbiAgICAgICAgdmFyIHBvc2l0aW9uID0gbWF4KG1pbih0b0ludGVnZXJPckluZmluaXR5KHJlc3VsdC5pbmRleCksIFMubGVuZ3RoKSwgMCk7XG4gICAgICAgIHZhciBjYXB0dXJlcyA9IFtdO1xuICAgICAgICB2YXIgcmVwbGFjZW1lbnQ7XG4gICAgICAgIC8vIE5PVEU6IFRoaXMgaXMgZXF1aXZhbGVudCB0b1xuICAgICAgICAvLyAgIGNhcHR1cmVzID0gcmVzdWx0LnNsaWNlKDEpLm1hcChtYXliZVRvU3RyaW5nKVxuICAgICAgICAvLyBidXQgZm9yIHNvbWUgcmVhc29uIGBuYXRpdmVTbGljZS5jYWxsKHJlc3VsdCwgMSwgcmVzdWx0Lmxlbmd0aClgIChjYWxsZWQgaW5cbiAgICAgICAgLy8gdGhlIHNsaWNlIHBvbHlmaWxsIHdoZW4gc2xpY2luZyBuYXRpdmUgYXJyYXlzKSBcImRvZXNuJ3Qgd29ya1wiIGluIHNhZmFyaSA5IGFuZFxuICAgICAgICAvLyBjYXVzZXMgYSBjcmFzaCAoaHR0cHM6Ly9wYXN0ZWJpbi5jb20vTjIxUXplUUEpIHdoZW4gdHJ5aW5nIHRvIGRlYnVnIGl0LlxuICAgICAgICBmb3IgKHZhciBqID0gMTsgaiA8IHJlc3VsdC5sZW5ndGg7IGorKykgcHVzaChjYXB0dXJlcywgbWF5YmVUb1N0cmluZyhyZXN1bHRbal0pKTtcbiAgICAgICAgdmFyIG5hbWVkQ2FwdHVyZXMgPSByZXN1bHQuZ3JvdXBzO1xuICAgICAgICBpZiAoZnVuY3Rpb25hbFJlcGxhY2UpIHtcbiAgICAgICAgICB2YXIgcmVwbGFjZXJBcmdzID0gY29uY2F0KFttYXRjaGVkXSwgY2FwdHVyZXMsIHBvc2l0aW9uLCBTKTtcbiAgICAgICAgICBpZiAobmFtZWRDYXB0dXJlcyAhPT0gdW5kZWZpbmVkKSBwdXNoKHJlcGxhY2VyQXJncywgbmFtZWRDYXB0dXJlcyk7XG4gICAgICAgICAgcmVwbGFjZW1lbnQgPSB0b1N0cmluZyhhcHBseShyZXBsYWNlVmFsdWUsIHVuZGVmaW5lZCwgcmVwbGFjZXJBcmdzKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVwbGFjZW1lbnQgPSBnZXRTdWJzdGl0dXRpb24obWF0Y2hlZCwgUywgcG9zaXRpb24sIGNhcHR1cmVzLCBuYW1lZENhcHR1cmVzLCByZXBsYWNlVmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwb3NpdGlvbiA+PSBuZXh0U291cmNlUG9zaXRpb24pIHtcbiAgICAgICAgICBhY2N1bXVsYXRlZFJlc3VsdCArPSBzdHJpbmdTbGljZShTLCBuZXh0U291cmNlUG9zaXRpb24sIHBvc2l0aW9uKSArIHJlcGxhY2VtZW50O1xuICAgICAgICAgIG5leHRTb3VyY2VQb3NpdGlvbiA9IHBvc2l0aW9uICsgbWF0Y2hlZC5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGFjY3VtdWxhdGVkUmVzdWx0ICsgc3RyaW5nU2xpY2UoUywgbmV4dFNvdXJjZVBvc2l0aW9uKTtcbiAgICB9XG4gIF07XG59LCAhUkVQTEFDRV9TVVBQT1JUU19OQU1FRF9HUk9VUFMgfHwgIVJFUExBQ0VfS0VFUFNfJDAgfHwgUkVHRVhQX1JFUExBQ0VfU1VCU1RJVFVURVNfVU5ERUZJTkVEX0NBUFRVUkUpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzLWNsYXVzZScpO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yJykuZjtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1sZW5ndGgnKTtcbnZhciB0b1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1zdHJpbmcnKTtcbnZhciBub3RBUmVnRXhwID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL25vdC1hLXJlZ2V4cCcpO1xudmFyIHJlcXVpcmVPYmplY3RDb2VyY2libGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVxdWlyZS1vYmplY3QtY29lcmNpYmxlJyk7XG52YXIgY29ycmVjdElzUmVnRXhwTG9naWMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY29ycmVjdC1pcy1yZWdleHAtbG9naWMnKTtcbnZhciBJU19QVVJFID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLXB1cmUnKTtcblxudmFyIHN0cmluZ1NsaWNlID0gdW5jdXJyeVRoaXMoJycuc2xpY2UpO1xudmFyIG1pbiA9IE1hdGgubWluO1xuXG52YXIgQ09SUkVDVF9JU19SRUdFWFBfTE9HSUMgPSBjb3JyZWN0SXNSZWdFeHBMb2dpYygnc3RhcnRzV2l0aCcpO1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvcHVsbC83MDJcbnZhciBNRE5fUE9MWUZJTExfQlVHID0gIUlTX1BVUkUgJiYgIUNPUlJFQ1RfSVNfUkVHRVhQX0xPR0lDICYmICEhZnVuY3Rpb24gKCkge1xuICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihTdHJpbmcucHJvdG90eXBlLCAnc3RhcnRzV2l0aCcpO1xuICByZXR1cm4gZGVzY3JpcHRvciAmJiAhZGVzY3JpcHRvci53cml0YWJsZTtcbn0oKTtcblxuLy8gYFN0cmluZy5wcm90b3R5cGUuc3RhcnRzV2l0aGAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUuc3RhcnRzd2l0aFxuJCh7IHRhcmdldDogJ1N0cmluZycsIHByb3RvOiB0cnVlLCBmb3JjZWQ6ICFNRE5fUE9MWUZJTExfQlVHICYmICFDT1JSRUNUX0lTX1JFR0VYUF9MT0dJQyB9LCB7XG4gIHN0YXJ0c1dpdGg6IGZ1bmN0aW9uIHN0YXJ0c1dpdGgoc2VhcmNoU3RyaW5nIC8qICwgcG9zaXRpb24gPSAwICovKSB7XG4gICAgdmFyIHRoYXQgPSB0b1N0cmluZyhyZXF1aXJlT2JqZWN0Q29lcmNpYmxlKHRoaXMpKTtcbiAgICBub3RBUmVnRXhwKHNlYXJjaFN0cmluZyk7XG4gICAgdmFyIGluZGV4ID0gdG9MZW5ndGgobWluKGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkLCB0aGF0Lmxlbmd0aCkpO1xuICAgIHZhciBzZWFyY2ggPSB0b1N0cmluZyhzZWFyY2hTdHJpbmcpO1xuICAgIHJldHVybiBzdHJpbmdTbGljZSh0aGF0LCBpbmRleCwgaW5kZXggKyBzZWFyY2gubGVuZ3RoKSA9PT0gc2VhcmNoO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBjYWxsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWNhbGwnKTtcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcbnZhciBJU19QVVJFID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLXB1cmUnKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIE5BVElWRV9TWU1CT0wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc3ltYm9sLWNvbnN0cnVjdG9yLWRldGVjdGlvbicpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgaGFzT3duID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hhcy1vd24tcHJvcGVydHknKTtcbnZhciBpc1Byb3RvdHlwZU9mID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1pcy1wcm90b3R5cGUtb2YnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hbi1vYmplY3QnKTtcbnZhciB0b0luZGV4ZWRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8taW5kZXhlZC1vYmplY3QnKTtcbnZhciB0b1Byb3BlcnR5S2V5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXByb3BlcnR5LWtleScpO1xudmFyICR0b1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1zdHJpbmcnKTtcbnZhciBjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5LWRlc2NyaXB0b3InKTtcbnZhciBuYXRpdmVPYmplY3RDcmVhdGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWNyZWF0ZScpO1xudmFyIG9iamVjdEtleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWtleXMnKTtcbnZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LW5hbWVzJyk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lc0V4dGVybmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LW5hbWVzLWV4dGVybmFsJyk7XG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LXN5bWJvbHMnKTtcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcicpO1xudmFyIGRlZmluZVByb3BlcnR5TW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHknKTtcbnZhciBkZWZpbmVQcm9wZXJ0aWVzTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydGllcycpO1xudmFyIHByb3BlcnR5SXNFbnVtZXJhYmxlTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1wcm9wZXJ0eS1pcy1lbnVtZXJhYmxlJyk7XG52YXIgZGVmaW5lQnVpbHRJbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZWZpbmUtYnVpbHQtaW4nKTtcbnZhciBkZWZpbmVCdWlsdEluQWNjZXNzb3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVmaW5lLWJ1aWx0LWluLWFjY2Vzc29yJyk7XG52YXIgc2hhcmVkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NoYXJlZCcpO1xudmFyIHNoYXJlZEtleSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zaGFyZWQta2V5Jyk7XG52YXIgaGlkZGVuS2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oaWRkZW4ta2V5cycpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy91aWQnKTtcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcbnZhciB3cmFwcGVkV2VsbEtub3duU3ltYm9sTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sLXdyYXBwZWQnKTtcbnZhciBkZWZpbmVXZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wtZGVmaW5lJyk7XG52YXIgZGVmaW5lU3ltYm9sVG9QcmltaXRpdmUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc3ltYm9sLWRlZmluZS10by1wcmltaXRpdmUnKTtcbnZhciBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIEludGVybmFsU3RhdGVNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaW50ZXJuYWwtc3RhdGUnKTtcbnZhciAkZm9yRWFjaCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1pdGVyYXRpb24nKS5mb3JFYWNoO1xuXG52YXIgSElEREVOID0gc2hhcmVkS2V5KCdoaWRkZW4nKTtcbnZhciBTWU1CT0wgPSAnU3ltYm9sJztcbnZhciBQUk9UT1RZUEUgPSAncHJvdG90eXBlJztcblxudmFyIHNldEludGVybmFsU3RhdGUgPSBJbnRlcm5hbFN0YXRlTW9kdWxlLnNldDtcbnZhciBnZXRJbnRlcm5hbFN0YXRlID0gSW50ZXJuYWxTdGF0ZU1vZHVsZS5nZXR0ZXJGb3IoU1lNQk9MKTtcblxudmFyIE9iamVjdFByb3RvdHlwZSA9IE9iamVjdFtQUk9UT1RZUEVdO1xudmFyICRTeW1ib2wgPSBnbG9iYWwuU3ltYm9sO1xudmFyIFN5bWJvbFByb3RvdHlwZSA9ICRTeW1ib2wgJiYgJFN5bWJvbFtQUk9UT1RZUEVdO1xudmFyIFJhbmdlRXJyb3IgPSBnbG9iYWwuUmFuZ2VFcnJvcjtcbnZhciBUeXBlRXJyb3IgPSBnbG9iYWwuVHlwZUVycm9yO1xudmFyIFFPYmplY3QgPSBnbG9iYWwuUU9iamVjdDtcbnZhciBuYXRpdmVHZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JNb2R1bGUuZjtcbnZhciBuYXRpdmVEZWZpbmVQcm9wZXJ0eSA9IGRlZmluZVByb3BlcnR5TW9kdWxlLmY7XG52YXIgbmF0aXZlR2V0T3duUHJvcGVydHlOYW1lcyA9IGdldE93blByb3BlcnR5TmFtZXNFeHRlcm5hbC5mO1xudmFyIG5hdGl2ZVByb3BlcnR5SXNFbnVtZXJhYmxlID0gcHJvcGVydHlJc0VudW1lcmFibGVNb2R1bGUuZjtcbnZhciBwdXNoID0gdW5jdXJyeVRoaXMoW10ucHVzaCk7XG5cbnZhciBBbGxTeW1ib2xzID0gc2hhcmVkKCdzeW1ib2xzJyk7XG52YXIgT2JqZWN0UHJvdG90eXBlU3ltYm9scyA9IHNoYXJlZCgnb3Atc3ltYm9scycpO1xudmFyIFdlbGxLbm93blN5bWJvbHNTdG9yZSA9IHNoYXJlZCgnd2tzJyk7XG5cbi8vIERvbid0IHVzZSBzZXR0ZXJzIGluIFF0IFNjcmlwdCwgaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzE3M1xudmFyIFVTRV9TRVRURVIgPSAhUU9iamVjdCB8fCAhUU9iamVjdFtQUk9UT1RZUEVdIHx8ICFRT2JqZWN0W1BST1RPVFlQRV0uZmluZENoaWxkO1xuXG4vLyBmYWxsYmFjayBmb3Igb2xkIEFuZHJvaWQsIGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvdjgvaXNzdWVzL2RldGFpbD9pZD02ODdcbnZhciBmYWxsYmFja0RlZmluZVByb3BlcnR5ID0gZnVuY3Rpb24gKE8sIFAsIEF0dHJpYnV0ZXMpIHtcbiAgdmFyIE9iamVjdFByb3RvdHlwZURlc2NyaXB0b3IgPSBuYXRpdmVHZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoT2JqZWN0UHJvdG90eXBlLCBQKTtcbiAgaWYgKE9iamVjdFByb3RvdHlwZURlc2NyaXB0b3IpIGRlbGV0ZSBPYmplY3RQcm90b3R5cGVbUF07XG4gIG5hdGl2ZURlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpO1xuICBpZiAoT2JqZWN0UHJvdG90eXBlRGVzY3JpcHRvciAmJiBPICE9PSBPYmplY3RQcm90b3R5cGUpIHtcbiAgICBuYXRpdmVEZWZpbmVQcm9wZXJ0eShPYmplY3RQcm90b3R5cGUsIFAsIE9iamVjdFByb3RvdHlwZURlc2NyaXB0b3IpO1xuICB9XG59O1xuXG52YXIgc2V0U3ltYm9sRGVzY3JpcHRvciA9IERFU0NSSVBUT1JTICYmIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIG5hdGl2ZU9iamVjdENyZWF0ZShuYXRpdmVEZWZpbmVQcm9wZXJ0eSh7fSwgJ2EnLCB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBuYXRpdmVEZWZpbmVQcm9wZXJ0eSh0aGlzLCAnYScsIHsgdmFsdWU6IDcgfSkuYTsgfVxuICB9KSkuYSAhPT0gNztcbn0pID8gZmFsbGJhY2tEZWZpbmVQcm9wZXJ0eSA6IG5hdGl2ZURlZmluZVByb3BlcnR5O1xuXG52YXIgd3JhcCA9IGZ1bmN0aW9uICh0YWcsIGRlc2NyaXB0aW9uKSB7XG4gIHZhciBzeW1ib2wgPSBBbGxTeW1ib2xzW3RhZ10gPSBuYXRpdmVPYmplY3RDcmVhdGUoU3ltYm9sUHJvdG90eXBlKTtcbiAgc2V0SW50ZXJuYWxTdGF0ZShzeW1ib2wsIHtcbiAgICB0eXBlOiBTWU1CT0wsXG4gICAgdGFnOiB0YWcsXG4gICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uXG4gIH0pO1xuICBpZiAoIURFU0NSSVBUT1JTKSBzeW1ib2wuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcbiAgcmV0dXJuIHN5bWJvbDtcbn07XG5cbnZhciAkZGVmaW5lUHJvcGVydHkgPSBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKSB7XG4gIGlmIChPID09PSBPYmplY3RQcm90b3R5cGUpICRkZWZpbmVQcm9wZXJ0eShPYmplY3RQcm90b3R5cGVTeW1ib2xzLCBQLCBBdHRyaWJ1dGVzKTtcbiAgYW5PYmplY3QoTyk7XG4gIHZhciBrZXkgPSB0b1Byb3BlcnR5S2V5KFApO1xuICBhbk9iamVjdChBdHRyaWJ1dGVzKTtcbiAgaWYgKGhhc093bihBbGxTeW1ib2xzLCBrZXkpKSB7XG4gICAgaWYgKCFBdHRyaWJ1dGVzLmVudW1lcmFibGUpIHtcbiAgICAgIGlmICghaGFzT3duKE8sIEhJRERFTikpIG5hdGl2ZURlZmluZVByb3BlcnR5KE8sIEhJRERFTiwgY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yKDEsIG5hdGl2ZU9iamVjdENyZWF0ZShudWxsKSkpO1xuICAgICAgT1tISURERU5dW2tleV0gPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoaGFzT3duKE8sIEhJRERFTikgJiYgT1tISURERU5dW2tleV0pIE9bSElEREVOXVtrZXldID0gZmFsc2U7XG4gICAgICBBdHRyaWJ1dGVzID0gbmF0aXZlT2JqZWN0Q3JlYXRlKEF0dHJpYnV0ZXMsIHsgZW51bWVyYWJsZTogY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yKDAsIGZhbHNlKSB9KTtcbiAgICB9IHJldHVybiBzZXRTeW1ib2xEZXNjcmlwdG9yKE8sIGtleSwgQXR0cmlidXRlcyk7XG4gIH0gcmV0dXJuIG5hdGl2ZURlZmluZVByb3BlcnR5KE8sIGtleSwgQXR0cmlidXRlcyk7XG59O1xuXG52YXIgJGRlZmluZVByb3BlcnRpZXMgPSBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpIHtcbiAgYW5PYmplY3QoTyk7XG4gIHZhciBwcm9wZXJ0aWVzID0gdG9JbmRleGVkT2JqZWN0KFByb3BlcnRpZXMpO1xuICB2YXIga2V5cyA9IG9iamVjdEtleXMocHJvcGVydGllcykuY29uY2F0KCRnZXRPd25Qcm9wZXJ0eVN5bWJvbHMocHJvcGVydGllcykpO1xuICAkZm9yRWFjaChrZXlzLCBmdW5jdGlvbiAoa2V5KSB7XG4gICAgaWYgKCFERVNDUklQVE9SUyB8fCBjYWxsKCRwcm9wZXJ0eUlzRW51bWVyYWJsZSwgcHJvcGVydGllcywga2V5KSkgJGRlZmluZVByb3BlcnR5KE8sIGtleSwgcHJvcGVydGllc1trZXldKTtcbiAgfSk7XG4gIHJldHVybiBPO1xufTtcblxudmFyICRjcmVhdGUgPSBmdW5jdGlvbiBjcmVhdGUoTywgUHJvcGVydGllcykge1xuICByZXR1cm4gUHJvcGVydGllcyA9PT0gdW5kZWZpbmVkID8gbmF0aXZlT2JqZWN0Q3JlYXRlKE8pIDogJGRlZmluZVByb3BlcnRpZXMobmF0aXZlT2JqZWN0Q3JlYXRlKE8pLCBQcm9wZXJ0aWVzKTtcbn07XG5cbnZhciAkcHJvcGVydHlJc0VudW1lcmFibGUgPSBmdW5jdGlvbiBwcm9wZXJ0eUlzRW51bWVyYWJsZShWKSB7XG4gIHZhciBQID0gdG9Qcm9wZXJ0eUtleShWKTtcbiAgdmFyIGVudW1lcmFibGUgPSBjYWxsKG5hdGl2ZVByb3BlcnR5SXNFbnVtZXJhYmxlLCB0aGlzLCBQKTtcbiAgaWYgKHRoaXMgPT09IE9iamVjdFByb3RvdHlwZSAmJiBoYXNPd24oQWxsU3ltYm9scywgUCkgJiYgIWhhc093bihPYmplY3RQcm90b3R5cGVTeW1ib2xzLCBQKSkgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gZW51bWVyYWJsZSB8fCAhaGFzT3duKHRoaXMsIFApIHx8ICFoYXNPd24oQWxsU3ltYm9scywgUCkgfHwgaGFzT3duKHRoaXMsIEhJRERFTikgJiYgdGhpc1tISURERU5dW1BdXG4gICAgPyBlbnVtZXJhYmxlIDogdHJ1ZTtcbn07XG5cbnZhciAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApIHtcbiAgdmFyIGl0ID0gdG9JbmRleGVkT2JqZWN0KE8pO1xuICB2YXIga2V5ID0gdG9Qcm9wZXJ0eUtleShQKTtcbiAgaWYgKGl0ID09PSBPYmplY3RQcm90b3R5cGUgJiYgaGFzT3duKEFsbFN5bWJvbHMsIGtleSkgJiYgIWhhc093bihPYmplY3RQcm90b3R5cGVTeW1ib2xzLCBrZXkpKSByZXR1cm47XG4gIHZhciBkZXNjcmlwdG9yID0gbmF0aXZlR2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGl0LCBrZXkpO1xuICBpZiAoZGVzY3JpcHRvciAmJiBoYXNPd24oQWxsU3ltYm9scywga2V5KSAmJiAhKGhhc093bihpdCwgSElEREVOKSAmJiBpdFtISURERU5dW2tleV0pKSB7XG4gICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gdHJ1ZTtcbiAgfVxuICByZXR1cm4gZGVzY3JpcHRvcjtcbn07XG5cbnZhciAkZ2V0T3duUHJvcGVydHlOYW1lcyA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5TmFtZXMoTykge1xuICB2YXIgbmFtZXMgPSBuYXRpdmVHZXRPd25Qcm9wZXJ0eU5hbWVzKHRvSW5kZXhlZE9iamVjdChPKSk7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgJGZvckVhY2gobmFtZXMsIGZ1bmN0aW9uIChrZXkpIHtcbiAgICBpZiAoIWhhc093bihBbGxTeW1ib2xzLCBrZXkpICYmICFoYXNPd24oaGlkZGVuS2V5cywga2V5KSkgcHVzaChyZXN1bHQsIGtleSk7XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufTtcblxudmFyICRnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBmdW5jdGlvbiAoTykge1xuICB2YXIgSVNfT0JKRUNUX1BST1RPVFlQRSA9IE8gPT09IE9iamVjdFByb3RvdHlwZTtcbiAgdmFyIG5hbWVzID0gbmF0aXZlR2V0T3duUHJvcGVydHlOYW1lcyhJU19PQkpFQ1RfUFJPVE9UWVBFID8gT2JqZWN0UHJvdG90eXBlU3ltYm9scyA6IHRvSW5kZXhlZE9iamVjdChPKSk7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgJGZvckVhY2gobmFtZXMsIGZ1bmN0aW9uIChrZXkpIHtcbiAgICBpZiAoaGFzT3duKEFsbFN5bWJvbHMsIGtleSkgJiYgKCFJU19PQkpFQ1RfUFJPVE9UWVBFIHx8IGhhc093bihPYmplY3RQcm90b3R5cGUsIGtleSkpKSB7XG4gICAgICBwdXNoKHJlc3VsdCwgQWxsU3ltYm9sc1trZXldKTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufTtcblxuLy8gYFN5bWJvbGAgY29uc3RydWN0b3Jcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtc3ltYm9sLWNvbnN0cnVjdG9yXG5pZiAoIU5BVElWRV9TWU1CT0wpIHtcbiAgJFN5bWJvbCA9IGZ1bmN0aW9uIFN5bWJvbCgpIHtcbiAgICBpZiAoaXNQcm90b3R5cGVPZihTeW1ib2xQcm90b3R5cGUsIHRoaXMpKSB0aHJvdyBuZXcgVHlwZUVycm9yKCdTeW1ib2wgaXMgbm90IGEgY29uc3RydWN0b3InKTtcbiAgICB2YXIgZGVzY3JpcHRpb24gPSAhYXJndW1lbnRzLmxlbmd0aCB8fCBhcmd1bWVudHNbMF0gPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6ICR0b1N0cmluZyhhcmd1bWVudHNbMF0pO1xuICAgIHZhciB0YWcgPSB1aWQoZGVzY3JpcHRpb24pO1xuICAgIHZhciBzZXR0ZXIgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgIHZhciAkdGhpcyA9IHRoaXMgPT09IHVuZGVmaW5lZCA/IGdsb2JhbCA6IHRoaXM7XG4gICAgICBpZiAoJHRoaXMgPT09IE9iamVjdFByb3RvdHlwZSkgY2FsbChzZXR0ZXIsIE9iamVjdFByb3RvdHlwZVN5bWJvbHMsIHZhbHVlKTtcbiAgICAgIGlmIChoYXNPd24oJHRoaXMsIEhJRERFTikgJiYgaGFzT3duKCR0aGlzW0hJRERFTl0sIHRhZykpICR0aGlzW0hJRERFTl1bdGFnXSA9IGZhbHNlO1xuICAgICAgdmFyIGRlc2NyaXB0b3IgPSBjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IoMSwgdmFsdWUpO1xuICAgICAgdHJ5IHtcbiAgICAgICAgc2V0U3ltYm9sRGVzY3JpcHRvcigkdGhpcywgdGFnLCBkZXNjcmlwdG9yKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGlmICghKGVycm9yIGluc3RhbmNlb2YgUmFuZ2VFcnJvcikpIHRocm93IGVycm9yO1xuICAgICAgICBmYWxsYmFja0RlZmluZVByb3BlcnR5KCR0aGlzLCB0YWcsIGRlc2NyaXB0b3IpO1xuICAgICAgfVxuICAgIH07XG4gICAgaWYgKERFU0NSSVBUT1JTICYmIFVTRV9TRVRURVIpIHNldFN5bWJvbERlc2NyaXB0b3IoT2JqZWN0UHJvdG90eXBlLCB0YWcsIHsgY29uZmlndXJhYmxlOiB0cnVlLCBzZXQ6IHNldHRlciB9KTtcbiAgICByZXR1cm4gd3JhcCh0YWcsIGRlc2NyaXB0aW9uKTtcbiAgfTtcblxuICBTeW1ib2xQcm90b3R5cGUgPSAkU3ltYm9sW1BST1RPVFlQRV07XG5cbiAgZGVmaW5lQnVpbHRJbihTeW1ib2xQcm90b3R5cGUsICd0b1N0cmluZycsIGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiBnZXRJbnRlcm5hbFN0YXRlKHRoaXMpLnRhZztcbiAgfSk7XG5cbiAgZGVmaW5lQnVpbHRJbigkU3ltYm9sLCAnd2l0aG91dFNldHRlcicsIGZ1bmN0aW9uIChkZXNjcmlwdGlvbikge1xuICAgIHJldHVybiB3cmFwKHVpZChkZXNjcmlwdGlvbiksIGRlc2NyaXB0aW9uKTtcbiAgfSk7XG5cbiAgcHJvcGVydHlJc0VudW1lcmFibGVNb2R1bGUuZiA9ICRwcm9wZXJ0eUlzRW51bWVyYWJsZTtcbiAgZGVmaW5lUHJvcGVydHlNb2R1bGUuZiA9ICRkZWZpbmVQcm9wZXJ0eTtcbiAgZGVmaW5lUHJvcGVydGllc01vZHVsZS5mID0gJGRlZmluZVByb3BlcnRpZXM7XG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvck1vZHVsZS5mID0gJGdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbiAgZ2V0T3duUHJvcGVydHlOYW1lc01vZHVsZS5mID0gZ2V0T3duUHJvcGVydHlOYW1lc0V4dGVybmFsLmYgPSAkZ2V0T3duUHJvcGVydHlOYW1lcztcbiAgZ2V0T3duUHJvcGVydHlTeW1ib2xzTW9kdWxlLmYgPSAkZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xuXG4gIHdyYXBwZWRXZWxsS25vd25TeW1ib2xNb2R1bGUuZiA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgcmV0dXJuIHdyYXAod2VsbEtub3duU3ltYm9sKG5hbWUpLCBuYW1lKTtcbiAgfTtcblxuICBpZiAoREVTQ1JJUFRPUlMpIHtcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1TeW1ib2wtZGVzY3JpcHRpb25cbiAgICBkZWZpbmVCdWlsdEluQWNjZXNzb3IoU3ltYm9sUHJvdG90eXBlLCAnZGVzY3JpcHRpb24nLCB7XG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGRlc2NyaXB0aW9uKCkge1xuICAgICAgICByZXR1cm4gZ2V0SW50ZXJuYWxTdGF0ZSh0aGlzKS5kZXNjcmlwdGlvbjtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoIUlTX1BVUkUpIHtcbiAgICAgIGRlZmluZUJ1aWx0SW4oT2JqZWN0UHJvdG90eXBlLCAncHJvcGVydHlJc0VudW1lcmFibGUnLCAkcHJvcGVydHlJc0VudW1lcmFibGUsIHsgdW5zYWZlOiB0cnVlIH0pO1xuICAgIH1cbiAgfVxufVxuXG4kKHsgZ2xvYmFsOiB0cnVlLCBjb25zdHJ1Y3RvcjogdHJ1ZSwgd3JhcDogdHJ1ZSwgZm9yY2VkOiAhTkFUSVZFX1NZTUJPTCwgc2hhbTogIU5BVElWRV9TWU1CT0wgfSwge1xuICBTeW1ib2w6ICRTeW1ib2xcbn0pO1xuXG4kZm9yRWFjaChvYmplY3RLZXlzKFdlbGxLbm93blN5bWJvbHNTdG9yZSksIGZ1bmN0aW9uIChuYW1lKSB7XG4gIGRlZmluZVdlbGxLbm93blN5bWJvbChuYW1lKTtcbn0pO1xuXG4kKHsgdGFyZ2V0OiBTWU1CT0wsIHN0YXQ6IHRydWUsIGZvcmNlZDogIU5BVElWRV9TWU1CT0wgfSwge1xuICB1c2VTZXR0ZXI6IGZ1bmN0aW9uICgpIHsgVVNFX1NFVFRFUiA9IHRydWU7IH0sXG4gIHVzZVNpbXBsZTogZnVuY3Rpb24gKCkgeyBVU0VfU0VUVEVSID0gZmFsc2U7IH1cbn0pO1xuXG4kKHsgdGFyZ2V0OiAnT2JqZWN0Jywgc3RhdDogdHJ1ZSwgZm9yY2VkOiAhTkFUSVZFX1NZTUJPTCwgc2hhbTogIURFU0NSSVBUT1JTIH0sIHtcbiAgLy8gYE9iamVjdC5jcmVhdGVgIG1ldGhvZFxuICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5jcmVhdGVcbiAgY3JlYXRlOiAkY3JlYXRlLFxuICAvLyBgT2JqZWN0LmRlZmluZVByb3BlcnR5YCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QuZGVmaW5lcHJvcGVydHlcbiAgZGVmaW5lUHJvcGVydHk6ICRkZWZpbmVQcm9wZXJ0eSxcbiAgLy8gYE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QuZGVmaW5lcHJvcGVydGllc1xuICBkZWZpbmVQcm9wZXJ0aWVzOiAkZGVmaW5lUHJvcGVydGllcyxcbiAgLy8gYE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JgIG1ldGhvZFxuICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5nZXRvd25wcm9wZXJ0eWRlc2NyaXB0b3JzXG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogJGdldE93blByb3BlcnR5RGVzY3JpcHRvclxufSk7XG5cbiQoeyB0YXJnZXQ6ICdPYmplY3QnLCBzdGF0OiB0cnVlLCBmb3JjZWQ6ICFOQVRJVkVfU1lNQk9MIH0sIHtcbiAgLy8gYE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QuZ2V0b3ducHJvcGVydHluYW1lc1xuICBnZXRPd25Qcm9wZXJ0eU5hbWVzOiAkZ2V0T3duUHJvcGVydHlOYW1lc1xufSk7XG5cbi8vIGBTeW1ib2wucHJvdG90eXBlW0BAdG9QcmltaXRpdmVdYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtc3ltYm9sLnByb3RvdHlwZS1AQHRvcHJpbWl0aXZlXG5kZWZpbmVTeW1ib2xUb1ByaW1pdGl2ZSgpO1xuXG4vLyBgU3ltYm9sLnByb3RvdHlwZVtAQHRvU3RyaW5nVGFnXWAgcHJvcGVydHlcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtc3ltYm9sLnByb3RvdHlwZS1AQHRvc3RyaW5ndGFnXG5zZXRUb1N0cmluZ1RhZygkU3ltYm9sLCBTWU1CT0wpO1xuXG5oaWRkZW5LZXlzW0hJRERFTl0gPSB0cnVlO1xuIiwiLy8gYFN5bWJvbC5wcm90b3R5cGUuZGVzY3JpcHRpb25gIGdldHRlclxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1zeW1ib2wucHJvdG90eXBlLmRlc2NyaXB0aW9uXG4ndXNlIHN0cmljdCc7XG52YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcbnZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciBpc1Byb3RvdHlwZU9mID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1pcy1wcm90b3R5cGUtb2YnKTtcbnZhciB0b1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1zdHJpbmcnKTtcbnZhciBkZWZpbmVCdWlsdEluQWNjZXNzb3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVmaW5lLWJ1aWx0LWluLWFjY2Vzc29yJyk7XG52YXIgY29weUNvbnN0cnVjdG9yUHJvcGVydGllcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jb3B5LWNvbnN0cnVjdG9yLXByb3BlcnRpZXMnKTtcblxudmFyIE5hdGl2ZVN5bWJvbCA9IGdsb2JhbC5TeW1ib2w7XG52YXIgU3ltYm9sUHJvdG90eXBlID0gTmF0aXZlU3ltYm9sICYmIE5hdGl2ZVN5bWJvbC5wcm90b3R5cGU7XG5cbmlmIChERVNDUklQVE9SUyAmJiBpc0NhbGxhYmxlKE5hdGl2ZVN5bWJvbCkgJiYgKCEoJ2Rlc2NyaXB0aW9uJyBpbiBTeW1ib2xQcm90b3R5cGUpIHx8XG4gIC8vIFNhZmFyaSAxMiBidWdcbiAgTmF0aXZlU3ltYm9sKCkuZGVzY3JpcHRpb24gIT09IHVuZGVmaW5lZFxuKSkge1xuICB2YXIgRW1wdHlTdHJpbmdEZXNjcmlwdGlvblN0b3JlID0ge307XG4gIC8vIHdyYXAgU3ltYm9sIGNvbnN0cnVjdG9yIGZvciBjb3JyZWN0IHdvcmsgd2l0aCB1bmRlZmluZWQgZGVzY3JpcHRpb25cbiAgdmFyIFN5bWJvbFdyYXBwZXIgPSBmdW5jdGlvbiBTeW1ib2woKSB7XG4gICAgdmFyIGRlc2NyaXB0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA8IDEgfHwgYXJndW1lbnRzWzBdID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiB0b1N0cmluZyhhcmd1bWVudHNbMF0pO1xuICAgIHZhciByZXN1bHQgPSBpc1Byb3RvdHlwZU9mKFN5bWJvbFByb3RvdHlwZSwgdGhpcylcbiAgICAgID8gbmV3IE5hdGl2ZVN5bWJvbChkZXNjcmlwdGlvbilcbiAgICAgIC8vIGluIEVkZ2UgMTMsIFN0cmluZyhTeW1ib2wodW5kZWZpbmVkKSkgPT09ICdTeW1ib2wodW5kZWZpbmVkKSdcbiAgICAgIDogZGVzY3JpcHRpb24gPT09IHVuZGVmaW5lZCA/IE5hdGl2ZVN5bWJvbCgpIDogTmF0aXZlU3ltYm9sKGRlc2NyaXB0aW9uKTtcbiAgICBpZiAoZGVzY3JpcHRpb24gPT09ICcnKSBFbXB0eVN0cmluZ0Rlc2NyaXB0aW9uU3RvcmVbcmVzdWx0XSA9IHRydWU7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcblxuICBjb3B5Q29uc3RydWN0b3JQcm9wZXJ0aWVzKFN5bWJvbFdyYXBwZXIsIE5hdGl2ZVN5bWJvbCk7XG4gIFN5bWJvbFdyYXBwZXIucHJvdG90eXBlID0gU3ltYm9sUHJvdG90eXBlO1xuICBTeW1ib2xQcm90b3R5cGUuY29uc3RydWN0b3IgPSBTeW1ib2xXcmFwcGVyO1xuXG4gIHZhciBOQVRJVkVfU1lNQk9MID0gU3RyaW5nKE5hdGl2ZVN5bWJvbCgnZGVzY3JpcHRpb24gZGV0ZWN0aW9uJykpID09PSAnU3ltYm9sKGRlc2NyaXB0aW9uIGRldGVjdGlvbiknO1xuICB2YXIgdGhpc1N5bWJvbFZhbHVlID0gdW5jdXJyeVRoaXMoU3ltYm9sUHJvdG90eXBlLnZhbHVlT2YpO1xuICB2YXIgc3ltYm9sRGVzY3JpcHRpdmVTdHJpbmcgPSB1bmN1cnJ5VGhpcyhTeW1ib2xQcm90b3R5cGUudG9TdHJpbmcpO1xuICB2YXIgcmVnZXhwID0gL15TeW1ib2xcXCgoLiopXFwpW14pXSskLztcbiAgdmFyIHJlcGxhY2UgPSB1bmN1cnJ5VGhpcygnJy5yZXBsYWNlKTtcbiAgdmFyIHN0cmluZ1NsaWNlID0gdW5jdXJyeVRoaXMoJycuc2xpY2UpO1xuXG4gIGRlZmluZUJ1aWx0SW5BY2Nlc3NvcihTeW1ib2xQcm90b3R5cGUsICdkZXNjcmlwdGlvbicsIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiBkZXNjcmlwdGlvbigpIHtcbiAgICAgIHZhciBzeW1ib2wgPSB0aGlzU3ltYm9sVmFsdWUodGhpcyk7XG4gICAgICBpZiAoaGFzT3duKEVtcHR5U3RyaW5nRGVzY3JpcHRpb25TdG9yZSwgc3ltYm9sKSkgcmV0dXJuICcnO1xuICAgICAgdmFyIHN0cmluZyA9IHN5bWJvbERlc2NyaXB0aXZlU3RyaW5nKHN5bWJvbCk7XG4gICAgICB2YXIgZGVzYyA9IE5BVElWRV9TWU1CT0wgPyBzdHJpbmdTbGljZShzdHJpbmcsIDcsIC0xKSA6IHJlcGxhY2Uoc3RyaW5nLCByZWdleHAsICckMScpO1xuICAgICAgcmV0dXJuIGRlc2MgPT09ICcnID8gdW5kZWZpbmVkIDogZGVzYztcbiAgICB9XG4gIH0pO1xuXG4gICQoeyBnbG9iYWw6IHRydWUsIGNvbnN0cnVjdG9yOiB0cnVlLCBmb3JjZWQ6IHRydWUgfSwge1xuICAgIFN5bWJvbDogU3ltYm9sV3JhcHBlclxuICB9KTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIGdldEJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LWJ1aWx0LWluJyk7XG52YXIgaGFzT3duID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hhcy1vd24tcHJvcGVydHknKTtcbnZhciB0b1N0cmluZyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1zdHJpbmcnKTtcbnZhciBzaGFyZWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2hhcmVkJyk7XG52YXIgTkFUSVZFX1NZTUJPTF9SRUdJU1RSWSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zeW1ib2wtcmVnaXN0cnktZGV0ZWN0aW9uJyk7XG5cbnZhciBTdHJpbmdUb1N5bWJvbFJlZ2lzdHJ5ID0gc2hhcmVkKCdzdHJpbmctdG8tc3ltYm9sLXJlZ2lzdHJ5Jyk7XG52YXIgU3ltYm9sVG9TdHJpbmdSZWdpc3RyeSA9IHNoYXJlZCgnc3ltYm9sLXRvLXN0cmluZy1yZWdpc3RyeScpO1xuXG4vLyBgU3ltYm9sLmZvcmAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXN5bWJvbC5mb3JcbiQoeyB0YXJnZXQ6ICdTeW1ib2wnLCBzdGF0OiB0cnVlLCBmb3JjZWQ6ICFOQVRJVkVfU1lNQk9MX1JFR0lTVFJZIH0sIHtcbiAgJ2Zvcic6IGZ1bmN0aW9uIChrZXkpIHtcbiAgICB2YXIgc3RyaW5nID0gdG9TdHJpbmcoa2V5KTtcbiAgICBpZiAoaGFzT3duKFN0cmluZ1RvU3ltYm9sUmVnaXN0cnksIHN0cmluZykpIHJldHVybiBTdHJpbmdUb1N5bWJvbFJlZ2lzdHJ5W3N0cmluZ107XG4gICAgdmFyIHN5bWJvbCA9IGdldEJ1aWx0SW4oJ1N5bWJvbCcpKHN0cmluZyk7XG4gICAgU3RyaW5nVG9TeW1ib2xSZWdpc3RyeVtzdHJpbmddID0gc3ltYm9sO1xuICAgIFN5bWJvbFRvU3RyaW5nUmVnaXN0cnlbc3ltYm9sXSA9IHN0cmluZztcbiAgICByZXR1cm4gc3ltYm9sO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBkZWZpbmVXZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wtZGVmaW5lJyk7XG5cbi8vIGBTeW1ib2wuaXRlcmF0b3JgIHdlbGwta25vd24gc3ltYm9sXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXN5bWJvbC5pdGVyYXRvclxuZGVmaW5lV2VsbEtub3duU3ltYm9sKCdpdGVyYXRvcicpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gVE9ETzogUmVtb3ZlIHRoaXMgbW9kdWxlIGZyb20gYGNvcmUtanNANGAgc2luY2UgaXQncyBzcGxpdCB0byBtb2R1bGVzIGxpc3RlZCBiZWxvd1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lcy5zeW1ib2wuY29uc3RydWN0b3InKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXMuc3ltYm9sLmZvcicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lcy5zeW1ib2wua2V5LWZvcicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lcy5qc29uLnN0cmluZ2lmeScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1zeW1ib2xzJyk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9leHBvcnQnKTtcbnZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xudmFyIGlzU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLXN5bWJvbCcpO1xudmFyIHRyeVRvU3RyaW5nID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RyeS10by1zdHJpbmcnKTtcbnZhciBzaGFyZWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2hhcmVkJyk7XG52YXIgTkFUSVZFX1NZTUJPTF9SRUdJU1RSWSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zeW1ib2wtcmVnaXN0cnktZGV0ZWN0aW9uJyk7XG5cbnZhciBTeW1ib2xUb1N0cmluZ1JlZ2lzdHJ5ID0gc2hhcmVkKCdzeW1ib2wtdG8tc3RyaW5nLXJlZ2lzdHJ5Jyk7XG5cbi8vIGBTeW1ib2wua2V5Rm9yYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtc3ltYm9sLmtleWZvclxuJCh7IHRhcmdldDogJ1N5bWJvbCcsIHN0YXQ6IHRydWUsIGZvcmNlZDogIU5BVElWRV9TWU1CT0xfUkVHSVNUUlkgfSwge1xuICBrZXlGb3I6IGZ1bmN0aW9uIGtleUZvcihzeW0pIHtcbiAgICBpZiAoIWlzU3ltYm9sKHN5bSkpIHRocm93IG5ldyBUeXBlRXJyb3IodHJ5VG9TdHJpbmcoc3ltKSArICcgaXMgbm90IGEgc3ltYm9sJyk7XG4gICAgaWYgKGhhc093bihTeW1ib2xUb1N0cmluZ1JlZ2lzdHJ5LCBzeW0pKSByZXR1cm4gU3ltYm9sVG9TdHJpbmdSZWdpc3RyeVtzeW1dO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBkZWZpbmVXZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wtZGVmaW5lJyk7XG52YXIgZGVmaW5lU3ltYm9sVG9QcmltaXRpdmUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc3ltYm9sLWRlZmluZS10by1wcmltaXRpdmUnKTtcblxuLy8gYFN5bWJvbC50b1ByaW1pdGl2ZWAgd2VsbC1rbm93biBzeW1ib2xcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtc3ltYm9sLnRvcHJpbWl0aXZlXG5kZWZpbmVXZWxsS25vd25TeW1ib2woJ3RvUHJpbWl0aXZlJyk7XG5cbi8vIGBTeW1ib2wucHJvdG90eXBlW0BAdG9QcmltaXRpdmVdYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtc3ltYm9sLnByb3RvdHlwZS1AQHRvcHJpbWl0aXZlXG5kZWZpbmVTeW1ib2xUb1ByaW1pdGl2ZSgpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBET01JdGVyYWJsZXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZG9tLWl0ZXJhYmxlcycpO1xudmFyIERPTVRva2VuTGlzdFByb3RvdHlwZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kb20tdG9rZW4tbGlzdC1wcm90b3R5cGUnKTtcbnZhciBmb3JFYWNoID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LWZvci1lYWNoJyk7XG52YXIgY3JlYXRlTm9uRW51bWVyYWJsZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eScpO1xuXG52YXIgaGFuZGxlUHJvdG90eXBlID0gZnVuY3Rpb24gKENvbGxlY3Rpb25Qcm90b3R5cGUpIHtcbiAgLy8gc29tZSBDaHJvbWUgdmVyc2lvbnMgaGF2ZSBub24tY29uZmlndXJhYmxlIG1ldGhvZHMgb24gRE9NVG9rZW5MaXN0XG4gIGlmIChDb2xsZWN0aW9uUHJvdG90eXBlICYmIENvbGxlY3Rpb25Qcm90b3R5cGUuZm9yRWFjaCAhPT0gZm9yRWFjaCkgdHJ5IHtcbiAgICBjcmVhdGVOb25FbnVtZXJhYmxlUHJvcGVydHkoQ29sbGVjdGlvblByb3RvdHlwZSwgJ2ZvckVhY2gnLCBmb3JFYWNoKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBDb2xsZWN0aW9uUHJvdG90eXBlLmZvckVhY2ggPSBmb3JFYWNoO1xuICB9XG59O1xuXG5mb3IgKHZhciBDT0xMRUNUSU9OX05BTUUgaW4gRE9NSXRlcmFibGVzKSB7XG4gIGlmIChET01JdGVyYWJsZXNbQ09MTEVDVElPTl9OQU1FXSkge1xuICAgIGhhbmRsZVByb3RvdHlwZShnbG9iYWxbQ09MTEVDVElPTl9OQU1FXSAmJiBnbG9iYWxbQ09MTEVDVElPTl9OQU1FXS5wcm90b3R5cGUpO1xuICB9XG59XG5cbmhhbmRsZVByb3RvdHlwZShET01Ub2tlbkxpc3RQcm90b3R5cGUpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBET01JdGVyYWJsZXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZG9tLWl0ZXJhYmxlcycpO1xudmFyIERPTVRva2VuTGlzdFByb3RvdHlwZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kb20tdG9rZW4tbGlzdC1wcm90b3R5cGUnKTtcbnZhciBBcnJheUl0ZXJhdG9yTWV0aG9kcyA9IHJlcXVpcmUoJy4uL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3InKTtcbnZhciBjcmVhdGVOb25FbnVtZXJhYmxlUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLW5vbi1lbnVtZXJhYmxlLXByb3BlcnR5Jyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcblxudmFyIElURVJBVE9SID0gd2VsbEtub3duU3ltYm9sKCdpdGVyYXRvcicpO1xudmFyIEFycmF5VmFsdWVzID0gQXJyYXlJdGVyYXRvck1ldGhvZHMudmFsdWVzO1xuXG52YXIgaGFuZGxlUHJvdG90eXBlID0gZnVuY3Rpb24gKENvbGxlY3Rpb25Qcm90b3R5cGUsIENPTExFQ1RJT05fTkFNRSkge1xuICBpZiAoQ29sbGVjdGlvblByb3RvdHlwZSkge1xuICAgIC8vIHNvbWUgQ2hyb21lIHZlcnNpb25zIGhhdmUgbm9uLWNvbmZpZ3VyYWJsZSBtZXRob2RzIG9uIERPTVRva2VuTGlzdFxuICAgIGlmIChDb2xsZWN0aW9uUHJvdG90eXBlW0lURVJBVE9SXSAhPT0gQXJyYXlWYWx1ZXMpIHRyeSB7XG4gICAgICBjcmVhdGVOb25FbnVtZXJhYmxlUHJvcGVydHkoQ29sbGVjdGlvblByb3RvdHlwZSwgSVRFUkFUT1IsIEFycmF5VmFsdWVzKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgQ29sbGVjdGlvblByb3RvdHlwZVtJVEVSQVRPUl0gPSBBcnJheVZhbHVlcztcbiAgICB9XG4gICAgc2V0VG9TdHJpbmdUYWcoQ29sbGVjdGlvblByb3RvdHlwZSwgQ09MTEVDVElPTl9OQU1FLCB0cnVlKTtcbiAgICBpZiAoRE9NSXRlcmFibGVzW0NPTExFQ1RJT05fTkFNRV0pIGZvciAodmFyIE1FVEhPRF9OQU1FIGluIEFycmF5SXRlcmF0b3JNZXRob2RzKSB7XG4gICAgICAvLyBzb21lIENocm9tZSB2ZXJzaW9ucyBoYXZlIG5vbi1jb25maWd1cmFibGUgbWV0aG9kcyBvbiBET01Ub2tlbkxpc3RcbiAgICAgIGlmIChDb2xsZWN0aW9uUHJvdG90eXBlW01FVEhPRF9OQU1FXSAhPT0gQXJyYXlJdGVyYXRvck1ldGhvZHNbTUVUSE9EX05BTUVdKSB0cnkge1xuICAgICAgICBjcmVhdGVOb25FbnVtZXJhYmxlUHJvcGVydHkoQ29sbGVjdGlvblByb3RvdHlwZSwgTUVUSE9EX05BTUUsIEFycmF5SXRlcmF0b3JNZXRob2RzW01FVEhPRF9OQU1FXSk7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBDb2xsZWN0aW9uUHJvdG90eXBlW01FVEhPRF9OQU1FXSA9IEFycmF5SXRlcmF0b3JNZXRob2RzW01FVEhPRF9OQU1FXTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn07XG5cbmZvciAodmFyIENPTExFQ1RJT05fTkFNRSBpbiBET01JdGVyYWJsZXMpIHtcbiAgaGFuZGxlUHJvdG90eXBlKGdsb2JhbFtDT0xMRUNUSU9OX05BTUVdICYmIGdsb2JhbFtDT0xMRUNUSU9OX05BTUVdLnByb3RvdHlwZSwgQ09MTEVDVElPTl9OQU1FKTtcbn1cblxuaGFuZGxlUHJvdG90eXBlKERPTVRva2VuTGlzdFByb3RvdHlwZSwgJ0RPTVRva2VuTGlzdCcpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIHNjaGVkdWxlcnNGaXggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2NoZWR1bGVycy1maXgnKTtcblxudmFyIHNldEludGVydmFsID0gc2NoZWR1bGVyc0ZpeChnbG9iYWwuc2V0SW50ZXJ2YWwsIHRydWUpO1xuXG4vLyBCdW4gLyBJRTktIHNldEludGVydmFsIGFkZGl0aW9uYWwgcGFyYW1ldGVycyBmaXhcbi8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3RpbWVycy1hbmQtdXNlci1wcm9tcHRzLmh0bWwjZG9tLXNldGludGVydmFsXG4kKHsgZ2xvYmFsOiB0cnVlLCBiaW5kOiB0cnVlLCBmb3JjZWQ6IGdsb2JhbC5zZXRJbnRlcnZhbCAhPT0gc2V0SW50ZXJ2YWwgfSwge1xuICBzZXRJbnRlcnZhbDogc2V0SW50ZXJ2YWxcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIHNjaGVkdWxlcnNGaXggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2NoZWR1bGVycy1maXgnKTtcblxudmFyIHNldFRpbWVvdXQgPSBzY2hlZHVsZXJzRml4KGdsb2JhbC5zZXRUaW1lb3V0LCB0cnVlKTtcblxuLy8gQnVuIC8gSUU5LSBzZXRUaW1lb3V0IGFkZGl0aW9uYWwgcGFyYW1ldGVycyBmaXhcbi8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3RpbWVycy1hbmQtdXNlci1wcm9tcHRzLmh0bWwjZG9tLXNldHRpbWVvdXRcbiQoeyBnbG9iYWw6IHRydWUsIGJpbmQ6IHRydWUsIGZvcmNlZDogZ2xvYmFsLnNldFRpbWVvdXQgIT09IHNldFRpbWVvdXQgfSwge1xuICBzZXRUaW1lb3V0OiBzZXRUaW1lb3V0XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIFRPRE86IFJlbW92ZSB0aGlzIG1vZHVsZSBmcm9tIGBjb3JlLWpzQDRgIHNpbmNlIGl0J3Mgc3BsaXQgdG8gbW9kdWxlcyBsaXN0ZWQgYmVsb3dcbnJlcXVpcmUoJy4uL21vZHVsZXMvd2ViLnNldC1pbnRlcnZhbCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy93ZWIuc2V0LXRpbWVvdXQnKTtcbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwidmFyIG4sbCx1LHQsaSxvLHIsZixlLGM9e30scz1bXSxhPS9hY2l0fGV4KD86c3xnfG58cHwkKXxycGh8Z3JpZHxvd3N8bW5jfG50d3xpbmVbY2hdfHpvb3xeb3JkfGl0ZXJhL2ksaD1BcnJheS5pc0FycmF5O2Z1bmN0aW9uIHYobixsKXtmb3IodmFyIHUgaW4gbCluW3VdPWxbdV07cmV0dXJuIG59ZnVuY3Rpb24gcChuKXt2YXIgbD1uLnBhcmVudE5vZGU7bCYmbC5yZW1vdmVDaGlsZChuKX1mdW5jdGlvbiB5KGwsdSx0KXt2YXIgaSxvLHIsZj17fTtmb3IociBpbiB1KVwia2V5XCI9PXI/aT11W3JdOlwicmVmXCI9PXI/bz11W3JdOmZbcl09dVtyXTtpZihhcmd1bWVudHMubGVuZ3RoPjImJihmLmNoaWxkcmVuPWFyZ3VtZW50cy5sZW5ndGg+Mz9uLmNhbGwoYXJndW1lbnRzLDIpOnQpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGwmJm51bGwhPWwuZGVmYXVsdFByb3BzKWZvcihyIGluIGwuZGVmYXVsdFByb3BzKXZvaWQgMD09PWZbcl0mJihmW3JdPWwuZGVmYXVsdFByb3BzW3JdKTtyZXR1cm4gZChsLGYsaSxvLG51bGwpfWZ1bmN0aW9uIGQobix0LGksbyxyKXt2YXIgZj17dHlwZTpuLHByb3BzOnQsa2V5OmkscmVmOm8sX19rOm51bGwsX186bnVsbCxfX2I6MCxfX2U6bnVsbCxfX2Q6dm9pZCAwLF9fYzpudWxsLGNvbnN0cnVjdG9yOnZvaWQgMCxfX3Y6bnVsbD09cj8rK3U6cixfX2k6LTEsX191OjB9O3JldHVybiBudWxsPT1yJiZudWxsIT1sLnZub2RlJiZsLnZub2RlKGYpLGZ9ZnVuY3Rpb24gXygpe3JldHVybntjdXJyZW50Om51bGx9fWZ1bmN0aW9uIGcobil7cmV0dXJuIG4uY2hpbGRyZW59ZnVuY3Rpb24gYihuLGwpe3RoaXMucHJvcHM9bix0aGlzLmNvbnRleHQ9bH1mdW5jdGlvbiBtKG4sbCl7aWYobnVsbD09bClyZXR1cm4gbi5fXz9tKG4uX18sbi5fX2krMSk6bnVsbDtmb3IodmFyIHU7bDxuLl9fay5sZW5ndGg7bCsrKWlmKG51bGwhPSh1PW4uX19rW2xdKSYmbnVsbCE9dS5fX2UpcmV0dXJuIHUuX19lO3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIG4udHlwZT9tKG4pOm51bGx9ZnVuY3Rpb24gdyhuLHUsdCl7dmFyIGksbz1uLl9fdixyPW8uX19lLGY9bi5fX1A7aWYoZilyZXR1cm4oaT12KHt9LG8pKS5fX3Y9by5fX3YrMSxsLnZub2RlJiZsLnZub2RlKGkpLE0oZixpLG8sbi5fX24sdm9pZCAwIT09Zi5vd25lclNWR0VsZW1lbnQsMzImby5fX3U/W3JdOm51bGwsdSxudWxsPT1yP20obyk6ciwhISgzMiZvLl9fdSksdCksaS5fX3Y9by5fX3YsaS5fXy5fX2tbaS5fX2ldPWksaS5fX2Q9dm9pZCAwLGkuX19lIT1yJiZrKGkpLGl9ZnVuY3Rpb24gayhuKXt2YXIgbCx1O2lmKG51bGwhPShuPW4uX18pJiZudWxsIT1uLl9fYyl7Zm9yKG4uX19lPW4uX19jLmJhc2U9bnVsbCxsPTA7bDxuLl9fay5sZW5ndGg7bCsrKWlmKG51bGwhPSh1PW4uX19rW2xdKSYmbnVsbCE9dS5fX2Upe24uX19lPW4uX19jLmJhc2U9dS5fX2U7YnJlYWt9cmV0dXJuIGsobil9fWZ1bmN0aW9uIHgobil7KCFuLl9fZCYmKG4uX19kPSEwKSYmaS5wdXNoKG4pJiYhQy5fX3IrK3x8byE9PWwuZGVib3VuY2VSZW5kZXJpbmcpJiYoKG89bC5kZWJvdW5jZVJlbmRlcmluZyl8fHIpKEMpfWZ1bmN0aW9uIEMoKXt2YXIgbix1LHQsbz1bXSxyPVtdO2ZvcihpLnNvcnQoZik7bj1pLnNoaWZ0KCk7KW4uX19kJiYodD1pLmxlbmd0aCx1PXcobixvLHIpfHx1LDA9PT10fHxpLmxlbmd0aD50PyhqKG8sdSxyKSxyLmxlbmd0aD1vLmxlbmd0aD0wLHU9dm9pZCAwLGkuc29ydChmKSk6dSYmbC5fX2MmJmwuX19jKHUscykpO3UmJmoobyx1LHIpLEMuX19yPTB9ZnVuY3Rpb24gUChuLGwsdSx0LGksbyxyLGYsZSxhLGgpe3ZhciB2LHAseSxkLF8sZz10JiZ0Ll9fa3x8cyxiPWwubGVuZ3RoO2Zvcih1Ll9fZD1lLFModSxsLGcpLGU9dS5fX2Qsdj0wO3Y8Yjt2KyspbnVsbCE9KHk9dS5fX2tbdl0pJiZcImJvb2xlYW5cIiE9dHlwZW9mIHkmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIHkmJihwPS0xPT09eS5fX2k/YzpnW3kuX19pXXx8Yyx5Ll9faT12LE0obix5LHAsaSxvLHIsZixlLGEsaCksZD15Ll9fZSx5LnJlZiYmcC5yZWYhPXkucmVmJiYocC5yZWYmJk4ocC5yZWYsbnVsbCx5KSxoLnB1c2goeS5yZWYseS5fX2N8fGQseSkpLG51bGw9PV8mJm51bGwhPWQmJihfPWQpLDY1NTM2JnkuX191fHxwLl9faz09PXkuX19rP2U9JCh5LGUsbik6XCJmdW5jdGlvblwiPT10eXBlb2YgeS50eXBlJiZ2b2lkIDAhPT15Ll9fZD9lPXkuX19kOmQmJihlPWQubmV4dFNpYmxpbmcpLHkuX19kPXZvaWQgMCx5Ll9fdSY9LTE5NjYwOSk7dS5fX2Q9ZSx1Ll9fZT1ffWZ1bmN0aW9uIFMobixsLHUpe3ZhciB0LGksbyxyLGYsZT1sLmxlbmd0aCxjPXUubGVuZ3RoLHM9YyxhPTA7Zm9yKG4uX19rPVtdLHQ9MDt0PGU7dCsrKXI9dCthLG51bGwhPShpPW4uX19rW3RdPW51bGw9PShpPWxbdF0pfHxcImJvb2xlYW5cIj09dHlwZW9mIGl8fFwiZnVuY3Rpb25cIj09dHlwZW9mIGk/bnVsbDpcInN0cmluZ1wiPT10eXBlb2YgaXx8XCJudW1iZXJcIj09dHlwZW9mIGl8fFwiYmlnaW50XCI9PXR5cGVvZiBpfHxpLmNvbnN0cnVjdG9yPT1TdHJpbmc/ZChudWxsLGksbnVsbCxudWxsLG51bGwpOmgoaSk/ZChnLHtjaGlsZHJlbjppfSxudWxsLG51bGwsbnVsbCk6dm9pZCAwPT09aS5jb25zdHJ1Y3RvciYmaS5fX2I+MD9kKGkudHlwZSxpLnByb3BzLGkua2V5LGkucmVmP2kucmVmOm51bGwsaS5fX3YpOmkpPyhpLl9fPW4saS5fX2I9bi5fX2IrMSxmPUkoaSx1LHIscyksaS5fX2k9ZixvPW51bGwsLTEhPT1mJiYocy0tLChvPXVbZl0pJiYoby5fX3V8PTEzMTA3MikpLG51bGw9PW98fG51bGw9PT1vLl9fdj8oLTE9PWYmJmEtLSxcImZ1bmN0aW9uXCIhPXR5cGVvZiBpLnR5cGUmJihpLl9fdXw9NjU1MzYpKTpmIT09ciYmKGY9PT1yKzE/YSsrOmY+cj9zPmUtcj9hKz1mLXI6YS0tOmY8cj9mPT1yLTEmJihhPWYtcik6YT0wLGYhPT10K2EmJihpLl9fdXw9NjU1MzYpKSk6KG89dVtyXSkmJm51bGw9PW8ua2V5JiZvLl9fZSYmMD09KDEzMTA3MiZvLl9fdSkmJihvLl9fZT09bi5fX2QmJihuLl9fZD1tKG8pKSxPKG8sbywhMSksdVtyXT1udWxsLHMtLSk7aWYocylmb3IodD0wO3Q8Yzt0KyspbnVsbCE9KG89dVt0XSkmJjA9PSgxMzEwNzImby5fX3UpJiYoby5fX2U9PW4uX19kJiYobi5fX2Q9bShvKSksTyhvLG8pKX1mdW5jdGlvbiAkKG4sbCx1KXt2YXIgdCxpO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIG4udHlwZSl7Zm9yKHQ9bi5fX2ssaT0wO3QmJmk8dC5sZW5ndGg7aSsrKXRbaV0mJih0W2ldLl9fPW4sbD0kKHRbaV0sbCx1KSk7cmV0dXJuIGx9bi5fX2UhPWwmJih1Lmluc2VydEJlZm9yZShuLl9fZSxsfHxudWxsKSxsPW4uX19lKTtkb3tsPWwmJmwubmV4dFNpYmxpbmd9d2hpbGUobnVsbCE9bCYmOD09PWwubm9kZVR5cGUpO3JldHVybiBsfWZ1bmN0aW9uIEgobixsKXtyZXR1cm4gbD1sfHxbXSxudWxsPT1ufHxcImJvb2xlYW5cIj09dHlwZW9mIG58fChoKG4pP24uc29tZShmdW5jdGlvbihuKXtIKG4sbCl9KTpsLnB1c2gobikpLGx9ZnVuY3Rpb24gSShuLGwsdSx0KXt2YXIgaT1uLmtleSxvPW4udHlwZSxyPXUtMSxmPXUrMSxlPWxbdV07aWYobnVsbD09PWV8fGUmJmk9PWUua2V5JiZvPT09ZS50eXBlJiYwPT0oMTMxMDcyJmUuX191KSlyZXR1cm4gdTtpZih0PihudWxsIT1lJiYwPT0oMTMxMDcyJmUuX191KT8xOjApKWZvcig7cj49MHx8ZjxsLmxlbmd0aDspe2lmKHI+PTApe2lmKChlPWxbcl0pJiYwPT0oMTMxMDcyJmUuX191KSYmaT09ZS5rZXkmJm89PT1lLnR5cGUpcmV0dXJuIHI7ci0tfWlmKGY8bC5sZW5ndGgpe2lmKChlPWxbZl0pJiYwPT0oMTMxMDcyJmUuX191KSYmaT09ZS5rZXkmJm89PT1lLnR5cGUpcmV0dXJuIGY7ZisrfX1yZXR1cm4tMX1mdW5jdGlvbiBUKG4sbCx1KXtcIi1cIj09PWxbMF0/bi5zZXRQcm9wZXJ0eShsLG51bGw9PXU/XCJcIjp1KTpuW2xdPW51bGw9PXU/XCJcIjpcIm51bWJlclwiIT10eXBlb2YgdXx8YS50ZXN0KGwpP3U6dStcInB4XCJ9ZnVuY3Rpb24gQShuLGwsdSx0LGkpe3ZhciBvO246aWYoXCJzdHlsZVwiPT09bClpZihcInN0cmluZ1wiPT10eXBlb2YgdSluLnN0eWxlLmNzc1RleHQ9dTtlbHNle2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0JiYobi5zdHlsZS5jc3NUZXh0PXQ9XCJcIiksdClmb3IobCBpbiB0KXUmJmwgaW4gdXx8VChuLnN0eWxlLGwsXCJcIik7aWYodSlmb3IobCBpbiB1KXQmJnVbbF09PT10W2xdfHxUKG4uc3R5bGUsbCx1W2xdKX1lbHNlIGlmKFwib1wiPT09bFswXSYmXCJuXCI9PT1sWzFdKW89bCE9PShsPWwucmVwbGFjZSgvKFBvaW50ZXJDYXB0dXJlKSR8Q2FwdHVyZSQvaSxcIiQxXCIpKSxsPWwudG9Mb3dlckNhc2UoKWluIG4/bC50b0xvd2VyQ2FzZSgpLnNsaWNlKDIpOmwuc2xpY2UoMiksbi5sfHwobi5sPXt9KSxuLmxbbCtvXT11LHU/dD91LnU9dC51Oih1LnU9RGF0ZS5ub3coKSxuLmFkZEV2ZW50TGlzdGVuZXIobCxvP0w6RCxvKSk6bi5yZW1vdmVFdmVudExpc3RlbmVyKGwsbz9MOkQsbyk7ZWxzZXtpZihpKWw9bC5yZXBsYWNlKC94bGluayhIfDpoKS8sXCJoXCIpLnJlcGxhY2UoL3NOYW1lJC8sXCJzXCIpO2Vsc2UgaWYoXCJ3aWR0aFwiIT09bCYmXCJoZWlnaHRcIiE9PWwmJlwiaHJlZlwiIT09bCYmXCJsaXN0XCIhPT1sJiZcImZvcm1cIiE9PWwmJlwidGFiSW5kZXhcIiE9PWwmJlwiZG93bmxvYWRcIiE9PWwmJlwicm93U3BhblwiIT09bCYmXCJjb2xTcGFuXCIhPT1sJiZcInJvbGVcIiE9PWwmJmwgaW4gbil0cnl7bltsXT1udWxsPT11P1wiXCI6dTticmVhayBufWNhdGNoKG4pe31cImZ1bmN0aW9uXCI9PXR5cGVvZiB1fHwobnVsbD09dXx8ITE9PT11JiZcIi1cIiE9PWxbNF0/bi5yZW1vdmVBdHRyaWJ1dGUobCk6bi5zZXRBdHRyaWJ1dGUobCx1KSl9fWZ1bmN0aW9uIEQobil7aWYodGhpcy5sKXt2YXIgdT10aGlzLmxbbi50eXBlKyExXTtpZihuLnQpe2lmKG4udDw9dS51KXJldHVybn1lbHNlIG4udD1EYXRlLm5vdygpO3JldHVybiB1KGwuZXZlbnQ/bC5ldmVudChuKTpuKX19ZnVuY3Rpb24gTChuKXtpZih0aGlzLmwpcmV0dXJuIHRoaXMubFtuLnR5cGUrITBdKGwuZXZlbnQ/bC5ldmVudChuKTpuKX1mdW5jdGlvbiBNKG4sdSx0LGksbyxyLGYsZSxjLHMpe3ZhciBhLHAseSxkLF8sbSx3LGsseCxDLFMsJCxILEksVCxBPXUudHlwZTtpZih2b2lkIDAhPT11LmNvbnN0cnVjdG9yKXJldHVybiBudWxsOzEyOCZ0Ll9fdSYmKGM9ISEoMzImdC5fX3UpLHI9W2U9dS5fX2U9dC5fX2VdKSwoYT1sLl9fYikmJmEodSk7bjppZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBBKXRyeXtpZihrPXUucHJvcHMseD0oYT1BLmNvbnRleHRUeXBlKSYmaVthLl9fY10sQz1hP3g/eC5wcm9wcy52YWx1ZTphLl9fOmksdC5fX2M/dz0ocD11Ll9fYz10Ll9fYykuX189cC5fX0U6KFwicHJvdG90eXBlXCJpbiBBJiZBLnByb3RvdHlwZS5yZW5kZXI/dS5fX2M9cD1uZXcgQShrLEMpOih1Ll9fYz1wPW5ldyBiKGssQykscC5jb25zdHJ1Y3Rvcj1BLHAucmVuZGVyPXEpLHgmJnguc3ViKHApLHAucHJvcHM9ayxwLnN0YXRlfHwocC5zdGF0ZT17fSkscC5jb250ZXh0PUMscC5fX249aSx5PXAuX19kPSEwLHAuX19oPVtdLHAuX3NiPVtdKSxudWxsPT1wLl9fcyYmKHAuX19zPXAuc3RhdGUpLG51bGwhPUEuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzJiYocC5fX3M9PXAuc3RhdGUmJihwLl9fcz12KHt9LHAuX19zKSksdihwLl9fcyxBLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyhrLHAuX19zKSkpLGQ9cC5wcm9wcyxfPXAuc3RhdGUscC5fX3Y9dSx5KW51bGw9PUEuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzJiZudWxsIT1wLmNvbXBvbmVudFdpbGxNb3VudCYmcC5jb21wb25lbnRXaWxsTW91bnQoKSxudWxsIT1wLmNvbXBvbmVudERpZE1vdW50JiZwLl9faC5wdXNoKHAuY29tcG9uZW50RGlkTW91bnQpO2Vsc2V7aWYobnVsbD09QS5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMmJmshPT1kJiZudWxsIT1wLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJnAuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhrLEMpLCFwLl9fZSYmKG51bGwhPXAuc2hvdWxkQ29tcG9uZW50VXBkYXRlJiYhMT09PXAuc2hvdWxkQ29tcG9uZW50VXBkYXRlKGsscC5fX3MsQyl8fHUuX192PT09dC5fX3YpKXtmb3IodS5fX3YhPT10Ll9fdiYmKHAucHJvcHM9ayxwLnN0YXRlPXAuX19zLHAuX19kPSExKSx1Ll9fZT10Ll9fZSx1Ll9faz10Ll9fayx1Ll9fay5mb3JFYWNoKGZ1bmN0aW9uKG4pe24mJihuLl9fPXUpfSksUz0wO1M8cC5fc2IubGVuZ3RoO1MrKylwLl9faC5wdXNoKHAuX3NiW1NdKTtwLl9zYj1bXSxwLl9faC5sZW5ndGgmJmYucHVzaChwKTticmVhayBufW51bGwhPXAuY29tcG9uZW50V2lsbFVwZGF0ZSYmcC5jb21wb25lbnRXaWxsVXBkYXRlKGsscC5fX3MsQyksbnVsbCE9cC5jb21wb25lbnREaWRVcGRhdGUmJnAuX19oLnB1c2goZnVuY3Rpb24oKXtwLmNvbXBvbmVudERpZFVwZGF0ZShkLF8sbSl9KX1pZihwLmNvbnRleHQ9QyxwLnByb3BzPWsscC5fX1A9bixwLl9fZT0hMSwkPWwuX19yLEg9MCxcInByb3RvdHlwZVwiaW4gQSYmQS5wcm90b3R5cGUucmVuZGVyKXtmb3IocC5zdGF0ZT1wLl9fcyxwLl9fZD0hMSwkJiYkKHUpLGE9cC5yZW5kZXIocC5wcm9wcyxwLnN0YXRlLHAuY29udGV4dCksST0wO0k8cC5fc2IubGVuZ3RoO0krKylwLl9faC5wdXNoKHAuX3NiW0ldKTtwLl9zYj1bXX1lbHNlIGRve3AuX19kPSExLCQmJiQodSksYT1wLnJlbmRlcihwLnByb3BzLHAuc3RhdGUscC5jb250ZXh0KSxwLnN0YXRlPXAuX19zfXdoaWxlKHAuX19kJiYrK0g8MjUpO3Auc3RhdGU9cC5fX3MsbnVsbCE9cC5nZXRDaGlsZENvbnRleHQmJihpPXYodih7fSxpKSxwLmdldENoaWxkQ29udGV4dCgpKSkseXx8bnVsbD09cC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8KG09cC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShkLF8pKSxQKG4saChUPW51bGwhPWEmJmEudHlwZT09PWcmJm51bGw9PWEua2V5P2EucHJvcHMuY2hpbGRyZW46YSk/VDpbVF0sdSx0LGksbyxyLGYsZSxjLHMpLHAuYmFzZT11Ll9fZSx1Ll9fdSY9LTE2MSxwLl9faC5sZW5ndGgmJmYucHVzaChwKSx3JiYocC5fX0U9cC5fXz1udWxsKX1jYXRjaChuKXt1Ll9fdj1udWxsLGN8fG51bGwhPXI/KHUuX19lPWUsdS5fX3V8PWM/MTYwOjMyLHJbci5pbmRleE9mKGUpXT1udWxsKToodS5fX2U9dC5fX2UsdS5fX2s9dC5fX2spLGwuX19lKG4sdSx0KX1lbHNlIG51bGw9PXImJnUuX192PT09dC5fX3Y/KHUuX19rPXQuX19rLHUuX19lPXQuX19lKTp1Ll9fZT16KHQuX19lLHUsdCxpLG8scixmLGMscyk7KGE9bC5kaWZmZWQpJiZhKHUpfWZ1bmN0aW9uIGoobix1LHQpe2Zvcih2YXIgaT0wO2k8dC5sZW5ndGg7aSsrKU4odFtpXSx0WysraV0sdFsrK2ldKTtsLl9fYyYmbC5fX2ModSxuKSxuLnNvbWUoZnVuY3Rpb24odSl7dHJ5e249dS5fX2gsdS5fX2g9W10sbi5zb21lKGZ1bmN0aW9uKG4pe24uY2FsbCh1KX0pfWNhdGNoKG4pe2wuX19lKG4sdS5fX3YpfX0pfWZ1bmN0aW9uIHoobCx1LHQsaSxvLHIsZixlLHMpe3ZhciBhLHYseSxkLF8sZyxiLHc9dC5wcm9wcyxrPXUucHJvcHMseD11LnR5cGU7aWYoXCJzdmdcIj09PXgmJihvPSEwKSxudWxsIT1yKWZvcihhPTA7YTxyLmxlbmd0aDthKyspaWYoKF89clthXSkmJlwic2V0QXR0cmlidXRlXCJpbiBfPT0hIXgmJih4P18ubG9jYWxOYW1lPT09eDozPT09Xy5ub2RlVHlwZSkpe2w9XyxyW2FdPW51bGw7YnJlYWt9aWYobnVsbD09bCl7aWYobnVsbD09PXgpcmV0dXJuIGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGspO2w9bz9kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLHgpOmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoeCxrLmlzJiZrKSxyPW51bGwsZT0hMX1pZihudWxsPT09eCl3PT09a3x8ZSYmbC5kYXRhPT09a3x8KGwuZGF0YT1rKTtlbHNle2lmKHI9ciYmbi5jYWxsKGwuY2hpbGROb2Rlcyksdz10LnByb3BzfHxjLCFlJiZudWxsIT1yKWZvcih3PXt9LGE9MDthPGwuYXR0cmlidXRlcy5sZW5ndGg7YSsrKXdbKF89bC5hdHRyaWJ1dGVzW2FdKS5uYW1lXT1fLnZhbHVlO2ZvcihhIGluIHcpXz13W2FdLFwiY2hpbGRyZW5cIj09YXx8KFwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09YT95PV86XCJrZXlcIj09PWF8fGEgaW4ga3x8QShsLGEsbnVsbCxfLG8pKTtmb3IoYSBpbiBrKV89a1thXSxcImNoaWxkcmVuXCI9PWE/ZD1fOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09YT92PV86XCJ2YWx1ZVwiPT1hP2c9XzpcImNoZWNrZWRcIj09YT9iPV86XCJrZXlcIj09PWF8fGUmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIF98fHdbYV09PT1ffHxBKGwsYSxfLHdbYV0sbyk7aWYodillfHx5JiYodi5fX2h0bWw9PT15Ll9faHRtbHx8di5fX2h0bWw9PT1sLmlubmVySFRNTCl8fChsLmlubmVySFRNTD12Ll9faHRtbCksdS5fX2s9W107ZWxzZSBpZih5JiYobC5pbm5lckhUTUw9XCJcIiksUChsLGgoZCk/ZDpbZF0sdSx0LGksbyYmXCJmb3JlaWduT2JqZWN0XCIhPT14LHIsZixyP3JbMF06dC5fX2smJm0odCwwKSxlLHMpLG51bGwhPXIpZm9yKGE9ci5sZW5ndGg7YS0tOyludWxsIT1yW2FdJiZwKHJbYV0pO2V8fChhPVwidmFsdWVcIix2b2lkIDAhPT1nJiYoZyE9PWxbYV18fFwicHJvZ3Jlc3NcIj09PXgmJiFnfHxcIm9wdGlvblwiPT09eCYmZyE9PXdbYV0pJiZBKGwsYSxnLHdbYV0sITEpLGE9XCJjaGVja2VkXCIsdm9pZCAwIT09YiYmYiE9PWxbYV0mJkEobCxhLGIsd1thXSwhMSkpfXJldHVybiBsfWZ1bmN0aW9uIE4obix1LHQpe3RyeXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBuP24odSk6bi5jdXJyZW50PXV9Y2F0Y2gobil7bC5fX2Uobix0KX19ZnVuY3Rpb24gTyhuLHUsdCl7dmFyIGksbztpZihsLnVubW91bnQmJmwudW5tb3VudChuKSwoaT1uLnJlZikmJihpLmN1cnJlbnQmJmkuY3VycmVudCE9PW4uX19lfHxOKGksbnVsbCx1KSksbnVsbCE9KGk9bi5fX2MpKXtpZihpLmNvbXBvbmVudFdpbGxVbm1vdW50KXRyeXtpLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2gobil7bC5fX2Uobix1KX1pLmJhc2U9aS5fX1A9bnVsbCxuLl9fYz12b2lkIDB9aWYoaT1uLl9faylmb3Iobz0wO288aS5sZW5ndGg7bysrKWlbb10mJk8oaVtvXSx1LHR8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIG4udHlwZSk7dHx8bnVsbD09bi5fX2V8fHAobi5fX2UpLG4uX189bi5fX2U9bi5fX2Q9dm9pZCAwfWZ1bmN0aW9uIHEobixsLHUpe3JldHVybiB0aGlzLmNvbnN0cnVjdG9yKG4sdSl9ZnVuY3Rpb24gQih1LHQsaSl7dmFyIG8scixmLGU7bC5fXyYmbC5fXyh1LHQpLHI9KG89XCJmdW5jdGlvblwiPT10eXBlb2YgaSk/bnVsbDppJiZpLl9fa3x8dC5fX2ssZj1bXSxlPVtdLE0odCx1PSghbyYmaXx8dCkuX19rPXkoZyxudWxsLFt1XSkscnx8YyxjLHZvaWQgMCE9PXQub3duZXJTVkdFbGVtZW50LCFvJiZpP1tpXTpyP251bGw6dC5maXJzdENoaWxkP24uY2FsbCh0LmNoaWxkTm9kZXMpOm51bGwsZiwhbyYmaT9pOnI/ci5fX2U6dC5maXJzdENoaWxkLG8sZSksdS5fX2Q9dm9pZCAwLGooZix1LGUpfWZ1bmN0aW9uIEUobixsKXtCKG4sbCxFKX1mdW5jdGlvbiBGKGwsdSx0KXt2YXIgaSxvLHIsZixlPXYoe30sbC5wcm9wcyk7Zm9yKHIgaW4gbC50eXBlJiZsLnR5cGUuZGVmYXVsdFByb3BzJiYoZj1sLnR5cGUuZGVmYXVsdFByb3BzKSx1KVwia2V5XCI9PXI/aT11W3JdOlwicmVmXCI9PXI/bz11W3JdOmVbcl09dm9pZCAwPT09dVtyXSYmdm9pZCAwIT09Zj9mW3JdOnVbcl07cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg+MiYmKGUuY2hpbGRyZW49YXJndW1lbnRzLmxlbmd0aD4zP24uY2FsbChhcmd1bWVudHMsMik6dCksZChsLnR5cGUsZSxpfHxsLmtleSxvfHxsLnJlZixudWxsKX1mdW5jdGlvbiBHKG4sbCl7dmFyIHU9e19fYzpsPVwiX19jQ1wiK2UrKyxfXzpuLENvbnN1bWVyOmZ1bmN0aW9uKG4sbCl7cmV0dXJuIG4uY2hpbGRyZW4obCl9LFByb3ZpZGVyOmZ1bmN0aW9uKG4pe3ZhciB1LHQ7cmV0dXJuIHRoaXMuZ2V0Q2hpbGRDb250ZXh0fHwodT1bXSwodD17fSlbbF09dGhpcyx0aGlzLmdldENoaWxkQ29udGV4dD1mdW5jdGlvbigpe3JldHVybiB0fSx0aGlzLnNob3VsZENvbXBvbmVudFVwZGF0ZT1mdW5jdGlvbihuKXt0aGlzLnByb3BzLnZhbHVlIT09bi52YWx1ZSYmdS5zb21lKGZ1bmN0aW9uKG4pe24uX19lPSEwLHgobil9KX0sdGhpcy5zdWI9ZnVuY3Rpb24obil7dS5wdXNoKG4pO3ZhciBsPW4uY29tcG9uZW50V2lsbFVubW91bnQ7bi5jb21wb25lbnRXaWxsVW5tb3VudD1mdW5jdGlvbigpe3Uuc3BsaWNlKHUuaW5kZXhPZihuKSwxKSxsJiZsLmNhbGwobil9fSksbi5jaGlsZHJlbn19O3JldHVybiB1LlByb3ZpZGVyLl9fPXUuQ29uc3VtZXIuY29udGV4dFR5cGU9dX1uPXMuc2xpY2UsbD17X19lOmZ1bmN0aW9uKG4sbCx1LHQpe2Zvcih2YXIgaSxvLHI7bD1sLl9fOylpZigoaT1sLl9fYykmJiFpLl9fKXRyeXtpZigobz1pLmNvbnN0cnVjdG9yKSYmbnVsbCE9by5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3ImJihpLnNldFN0YXRlKG8uZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yKG4pKSxyPWkuX19kKSxudWxsIT1pLmNvbXBvbmVudERpZENhdGNoJiYoaS5jb21wb25lbnREaWRDYXRjaChuLHR8fHt9KSxyPWkuX19kKSxyKXJldHVybiBpLl9fRT1pfWNhdGNoKGwpe249bH10aHJvdyBufX0sdT0wLHQ9ZnVuY3Rpb24obil7cmV0dXJuIG51bGwhPW4mJm51bGw9PW4uY29uc3RydWN0b3J9LGIucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKG4sbCl7dmFyIHU7dT1udWxsIT10aGlzLl9fcyYmdGhpcy5fX3MhPT10aGlzLnN0YXRlP3RoaXMuX19zOnRoaXMuX19zPXYoe30sdGhpcy5zdGF0ZSksXCJmdW5jdGlvblwiPT10eXBlb2YgbiYmKG49bih2KHt9LHUpLHRoaXMucHJvcHMpKSxuJiZ2KHUsbiksbnVsbCE9biYmdGhpcy5fX3YmJihsJiZ0aGlzLl9zYi5wdXNoKGwpLHgodGhpcykpfSxiLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihuKXt0aGlzLl9fdiYmKHRoaXMuX19lPSEwLG4mJnRoaXMuX19oLnB1c2gobikseCh0aGlzKSl9LGIucHJvdG90eXBlLnJlbmRlcj1nLGk9W10scj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBQcm9taXNlP1Byb21pc2UucHJvdG90eXBlLnRoZW4uYmluZChQcm9taXNlLnJlc29sdmUoKSk6c2V0VGltZW91dCxmPWZ1bmN0aW9uKG4sbCl7cmV0dXJuIG4uX192Ll9fYi1sLl9fdi5fX2J9LEMuX19yPTAsZT0wO2V4cG9ydHtiIGFzIENvbXBvbmVudCxnIGFzIEZyYWdtZW50LEYgYXMgY2xvbmVFbGVtZW50LEcgYXMgY3JlYXRlQ29udGV4dCx5IGFzIGNyZWF0ZUVsZW1lbnQsXyBhcyBjcmVhdGVSZWYseSBhcyBoLEUgYXMgaHlkcmF0ZSx0IGFzIGlzVmFsaWRFbGVtZW50LGwgYXMgb3B0aW9ucyxCIGFzIHJlbmRlcixIIGFzIHRvQ2hpbGRBcnJheX07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcmVhY3QubW9kdWxlLmpzLm1hcFxuIiwiaW1wb3J0e29wdGlvbnMgYXMgbn1mcm9tXCJwcmVhY3RcIjt2YXIgdCxyLHUsaSxvPTAsZj1bXSxjPVtdLGU9bixhPWUuX19iLHY9ZS5fX3IsbD1lLmRpZmZlZCxtPWUuX19jLHM9ZS51bm1vdW50LGQ9ZS5fXztmdW5jdGlvbiBoKG4sdCl7ZS5fX2gmJmUuX19oKHIsbixvfHx0KSxvPTA7dmFyIHU9ci5fX0h8fChyLl9fSD17X186W10sX19oOltdfSk7cmV0dXJuIG4+PXUuX18ubGVuZ3RoJiZ1Ll9fLnB1c2goe19fVjpjfSksdS5fX1tuXX1mdW5jdGlvbiBwKG4pe3JldHVybiBvPTEseShELG4pfWZ1bmN0aW9uIHkobix1LGkpe3ZhciBvPWgodCsrLDIpO2lmKG8udD1uLCFvLl9fYyYmKG8uX189W2k/aSh1KTpEKHZvaWQgMCx1KSxmdW5jdGlvbihuKXt2YXIgdD1vLl9fTj9vLl9fTlswXTpvLl9fWzBdLHI9by50KHQsbik7dCE9PXImJihvLl9fTj1bcixvLl9fWzFdXSxvLl9fYy5zZXRTdGF0ZSh7fSkpfV0sby5fX2M9ciwhci51KSl7dmFyIGY9ZnVuY3Rpb24obix0LHIpe2lmKCFvLl9fYy5fX0gpcmV0dXJuITA7dmFyIHU9by5fX2MuX19ILl9fLmZpbHRlcihmdW5jdGlvbihuKXtyZXR1cm4hIW4uX19jfSk7aWYodS5ldmVyeShmdW5jdGlvbihuKXtyZXR1cm4hbi5fX059KSlyZXR1cm4hY3x8Yy5jYWxsKHRoaXMsbix0LHIpO3ZhciBpPSExO3JldHVybiB1LmZvckVhY2goZnVuY3Rpb24obil7aWYobi5fX04pe3ZhciB0PW4uX19bMF07bi5fXz1uLl9fTixuLl9fTj12b2lkIDAsdCE9PW4uX19bMF0mJihpPSEwKX19KSwhKCFpJiZvLl9fYy5wcm9wcz09PW4pJiYoIWN8fGMuY2FsbCh0aGlzLG4sdCxyKSl9O3IudT0hMDt2YXIgYz1yLnNob3VsZENvbXBvbmVudFVwZGF0ZSxlPXIuY29tcG9uZW50V2lsbFVwZGF0ZTtyLmNvbXBvbmVudFdpbGxVcGRhdGU9ZnVuY3Rpb24obix0LHIpe2lmKHRoaXMuX19lKXt2YXIgdT1jO2M9dm9pZCAwLGYobix0LHIpLGM9dX1lJiZlLmNhbGwodGhpcyxuLHQscil9LHIuc2hvdWxkQ29tcG9uZW50VXBkYXRlPWZ9cmV0dXJuIG8uX19OfHxvLl9ffWZ1bmN0aW9uIF8obix1KXt2YXIgaT1oKHQrKywzKTshZS5fX3MmJkMoaS5fX0gsdSkmJihpLl9fPW4saS5pPXUsci5fX0guX19oLnB1c2goaSkpfWZ1bmN0aW9uIEEobix1KXt2YXIgaT1oKHQrKyw0KTshZS5fX3MmJkMoaS5fX0gsdSkmJihpLl9fPW4saS5pPXUsci5fX2gucHVzaChpKSl9ZnVuY3Rpb24gRihuKXtyZXR1cm4gbz01LHEoZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpufX0sW10pfWZ1bmN0aW9uIFQobix0LHIpe289NixBKGZ1bmN0aW9uKCl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2Ygbj8obih0KCkpLGZ1bmN0aW9uKCl7cmV0dXJuIG4obnVsbCl9KTpuPyhuLmN1cnJlbnQ9dCgpLGZ1bmN0aW9uKCl7cmV0dXJuIG4uY3VycmVudD1udWxsfSk6dm9pZCAwfSxudWxsPT1yP3I6ci5jb25jYXQobikpfWZ1bmN0aW9uIHEobixyKXt2YXIgdT1oKHQrKyw3KTtyZXR1cm4gQyh1Ll9fSCxyKT8odS5fX1Y9bigpLHUuaT1yLHUuX19oPW4sdS5fX1YpOnUuX199ZnVuY3Rpb24geChuLHQpe3JldHVybiBvPTgscShmdW5jdGlvbigpe3JldHVybiBufSx0KX1mdW5jdGlvbiBQKG4pe3ZhciB1PXIuY29udGV4dFtuLl9fY10saT1oKHQrKyw5KTtyZXR1cm4gaS5jPW4sdT8obnVsbD09aS5fXyYmKGkuX189ITAsdS5zdWIocikpLHUucHJvcHMudmFsdWUpOm4uX199ZnVuY3Rpb24gVihuLHQpe2UudXNlRGVidWdWYWx1ZSYmZS51c2VEZWJ1Z1ZhbHVlKHQ/dChuKTpuKX1mdW5jdGlvbiBiKG4pe3ZhciB1PWgodCsrLDEwKSxpPXAoKTtyZXR1cm4gdS5fXz1uLHIuY29tcG9uZW50RGlkQ2F0Y2h8fChyLmNvbXBvbmVudERpZENhdGNoPWZ1bmN0aW9uKG4sdCl7dS5fXyYmdS5fXyhuLHQpLGlbMV0obil9KSxbaVswXSxmdW5jdGlvbigpe2lbMV0odm9pZCAwKX1dfWZ1bmN0aW9uIGcoKXt2YXIgbj1oKHQrKywxMSk7aWYoIW4uX18pe2Zvcih2YXIgdT1yLl9fdjtudWxsIT09dSYmIXUuX19tJiZudWxsIT09dS5fXzspdT11Ll9fO3ZhciBpPXUuX19tfHwodS5fX209WzAsMF0pO24uX189XCJQXCIraVswXStcIi1cIitpWzFdKyt9cmV0dXJuIG4uX199ZnVuY3Rpb24gaigpe2Zvcih2YXIgbjtuPWYuc2hpZnQoKTspaWYobi5fX1AmJm4uX19IKXRyeXtuLl9fSC5fX2guZm9yRWFjaCh6KSxuLl9fSC5fX2guZm9yRWFjaChCKSxuLl9fSC5fX2g9W119Y2F0Y2godCl7bi5fX0guX19oPVtdLGUuX19lKHQsbi5fX3YpfX1lLl9fYj1mdW5jdGlvbihuKXtyPW51bGwsYSYmYShuKX0sZS5fXz1mdW5jdGlvbihuLHQpe24mJnQuX19rJiZ0Ll9fay5fX20mJihuLl9fbT10Ll9fay5fX20pLGQmJmQobix0KX0sZS5fX3I9ZnVuY3Rpb24obil7diYmdihuKSx0PTA7dmFyIGk9KHI9bi5fX2MpLl9fSDtpJiYodT09PXI/KGkuX19oPVtdLHIuX19oPVtdLGkuX18uZm9yRWFjaChmdW5jdGlvbihuKXtuLl9fTiYmKG4uX189bi5fX04pLG4uX19WPWMsbi5fX049bi5pPXZvaWQgMH0pKTooaS5fX2guZm9yRWFjaCh6KSxpLl9faC5mb3JFYWNoKEIpLGkuX19oPVtdLHQ9MCkpLHU9cn0sZS5kaWZmZWQ9ZnVuY3Rpb24obil7bCYmbChuKTt2YXIgdD1uLl9fYzt0JiZ0Ll9fSCYmKHQuX19ILl9faC5sZW5ndGgmJigxIT09Zi5wdXNoKHQpJiZpPT09ZS5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fCgoaT1lLnJlcXVlc3RBbmltYXRpb25GcmFtZSl8fHcpKGopKSx0Ll9fSC5fXy5mb3JFYWNoKGZ1bmN0aW9uKG4pe24uaSYmKG4uX19IPW4uaSksbi5fX1YhPT1jJiYobi5fXz1uLl9fViksbi5pPXZvaWQgMCxuLl9fVj1jfSkpLHU9cj1udWxsfSxlLl9fYz1mdW5jdGlvbihuLHQpe3Quc29tZShmdW5jdGlvbihuKXt0cnl7bi5fX2guZm9yRWFjaCh6KSxuLl9faD1uLl9faC5maWx0ZXIoZnVuY3Rpb24obil7cmV0dXJuIW4uX198fEIobil9KX1jYXRjaChyKXt0LnNvbWUoZnVuY3Rpb24obil7bi5fX2gmJihuLl9faD1bXSl9KSx0PVtdLGUuX19lKHIsbi5fX3YpfX0pLG0mJm0obix0KX0sZS51bm1vdW50PWZ1bmN0aW9uKG4pe3MmJnMobik7dmFyIHQscj1uLl9fYztyJiZyLl9fSCYmKHIuX19ILl9fLmZvckVhY2goZnVuY3Rpb24obil7dHJ5e3oobil9Y2F0Y2gobil7dD1ufX0pLHIuX19IPXZvaWQgMCx0JiZlLl9fZSh0LHIuX192KSl9O3ZhciBrPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVlc3RBbmltYXRpb25GcmFtZTtmdW5jdGlvbiB3KG4pe3ZhciB0LHI9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQodSksayYmY2FuY2VsQW5pbWF0aW9uRnJhbWUodCksc2V0VGltZW91dChuKX0sdT1zZXRUaW1lb3V0KHIsMTAwKTtrJiYodD1yZXF1ZXN0QW5pbWF0aW9uRnJhbWUocikpfWZ1bmN0aW9uIHoobil7dmFyIHQ9cix1PW4uX19jO1wiZnVuY3Rpb25cIj09dHlwZW9mIHUmJihuLl9fYz12b2lkIDAsdSgpKSxyPXR9ZnVuY3Rpb24gQihuKXt2YXIgdD1yO24uX19jPW4uX18oKSxyPXR9ZnVuY3Rpb24gQyhuLHQpe3JldHVybiFufHxuLmxlbmd0aCE9PXQubGVuZ3RofHx0LnNvbWUoZnVuY3Rpb24odCxyKXtyZXR1cm4gdCE9PW5bcl19KX1mdW5jdGlvbiBEKG4sdCl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgdD90KG4pOnR9ZXhwb3J0e3ggYXMgdXNlQ2FsbGJhY2ssUCBhcyB1c2VDb250ZXh0LFYgYXMgdXNlRGVidWdWYWx1ZSxfIGFzIHVzZUVmZmVjdCxiIGFzIHVzZUVycm9yQm91bmRhcnksZyBhcyB1c2VJZCxUIGFzIHVzZUltcGVyYXRpdmVIYW5kbGUsQSBhcyB1c2VMYXlvdXRFZmZlY3QscSBhcyB1c2VNZW1vLHkgYXMgdXNlUmVkdWNlcixGIGFzIHVzZVJlZixwIGFzIHVzZVN0YXRlfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhvb2tzLm1vZHVsZS5qcy5tYXBcbiIsImltcG9ydHtDb21wb25lbnQgYXMgbixjcmVhdGVFbGVtZW50IGFzIHQsb3B0aW9ucyBhcyBlLHRvQ2hpbGRBcnJheSBhcyByLEZyYWdtZW50IGFzIHUscmVuZGVyIGFzIG8saHlkcmF0ZSBhcyBpLGNyZWF0ZUNvbnRleHQgYXMgbCxjcmVhdGVSZWYgYXMgYyxjbG9uZUVsZW1lbnQgYXMgZn1mcm9tXCJwcmVhY3RcIjtleHBvcnR7Q29tcG9uZW50LEZyYWdtZW50LGNyZWF0ZUNvbnRleHQsY3JlYXRlRWxlbWVudCxjcmVhdGVSZWZ9ZnJvbVwicHJlYWN0XCI7aW1wb3J0e3VzZVN0YXRlIGFzIGEsdXNlSWQgYXMgcyx1c2VSZWR1Y2VyIGFzIGgsdXNlRWZmZWN0IGFzIHYsdXNlTGF5b3V0RWZmZWN0IGFzIGQsdXNlUmVmIGFzIHAsdXNlSW1wZXJhdGl2ZUhhbmRsZSBhcyBtLHVzZU1lbW8gYXMgeSx1c2VDYWxsYmFjayBhcyBfLHVzZUNvbnRleHQgYXMgYix1c2VEZWJ1Z1ZhbHVlIGFzIFN9ZnJvbVwicHJlYWN0L2hvb2tzXCI7ZXhwb3J0KmZyb21cInByZWFjdC9ob29rc1wiO2Z1bmN0aW9uIGcobix0KXtmb3IodmFyIGUgaW4gdCluW2VdPXRbZV07cmV0dXJuIG59ZnVuY3Rpb24gQyhuLHQpe2Zvcih2YXIgZSBpbiBuKWlmKFwiX19zb3VyY2VcIiE9PWUmJiEoZSBpbiB0KSlyZXR1cm4hMDtmb3IodmFyIHIgaW4gdClpZihcIl9fc291cmNlXCIhPT1yJiZuW3JdIT09dFtyXSlyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiBFKG4sdCl7dGhpcy5wcm9wcz1uLHRoaXMuY29udGV4dD10fWZ1bmN0aW9uIHcobixlKXtmdW5jdGlvbiByKG4pe3ZhciB0PXRoaXMucHJvcHMucmVmLHI9dD09bi5yZWY7cmV0dXJuIXImJnQmJih0LmNhbGw/dChudWxsKTp0LmN1cnJlbnQ9bnVsbCksZT8hZSh0aGlzLnByb3BzLG4pfHwhcjpDKHRoaXMucHJvcHMsbil9ZnVuY3Rpb24gdShlKXtyZXR1cm4gdGhpcy5zaG91bGRDb21wb25lbnRVcGRhdGU9cix0KG4sZSl9cmV0dXJuIHUuZGlzcGxheU5hbWU9XCJNZW1vKFwiKyhuLmRpc3BsYXlOYW1lfHxuLm5hbWUpK1wiKVwiLHUucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9ITAsdS5fX2Y9ITAsdX0oRS5wcm90b3R5cGU9bmV3IG4pLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwLEUucHJvdG90eXBlLnNob3VsZENvbXBvbmVudFVwZGF0ZT1mdW5jdGlvbihuLHQpe3JldHVybiBDKHRoaXMucHJvcHMsbil8fEModGhpcy5zdGF0ZSx0KX07dmFyIHg9ZS5fX2I7ZS5fX2I9ZnVuY3Rpb24obil7bi50eXBlJiZuLnR5cGUuX19mJiZuLnJlZiYmKG4ucHJvcHMucmVmPW4ucmVmLG4ucmVmPW51bGwpLHgmJngobil9O3ZhciBSPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3ImJlN5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKXx8MzkxMTtmdW5jdGlvbiBOKG4pe2Z1bmN0aW9uIHQodCl7dmFyIGU9Zyh7fSx0KTtyZXR1cm4gZGVsZXRlIGUucmVmLG4oZSx0LnJlZnx8bnVsbCl9cmV0dXJuIHQuJCR0eXBlb2Y9Uix0LnJlbmRlcj10LHQucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9dC5fX2Y9ITAsdC5kaXNwbGF5TmFtZT1cIkZvcndhcmRSZWYoXCIrKG4uZGlzcGxheU5hbWV8fG4ubmFtZSkrXCIpXCIsdH12YXIgaz1mdW5jdGlvbihuLHQpe3JldHVybiBudWxsPT1uP251bGw6cihyKG4pLm1hcCh0KSl9LEE9e21hcDprLGZvckVhY2g6ayxjb3VudDpmdW5jdGlvbihuKXtyZXR1cm4gbj9yKG4pLmxlbmd0aDowfSxvbmx5OmZ1bmN0aW9uKG4pe3ZhciB0PXIobik7aWYoMSE9PXQubGVuZ3RoKXRocm93XCJDaGlsZHJlbi5vbmx5XCI7cmV0dXJuIHRbMF19LHRvQXJyYXk6cn0sTz1lLl9fZTtlLl9fZT1mdW5jdGlvbihuLHQsZSxyKXtpZihuLnRoZW4pZm9yKHZhciB1LG89dDtvPW8uX187KWlmKCh1PW8uX19jKSYmdS5fX2MpcmV0dXJuIG51bGw9PXQuX19lJiYodC5fX2U9ZS5fX2UsdC5fX2s9ZS5fX2spLHUuX19jKG4sdCk7TyhuLHQsZSxyKX07dmFyIFQ9ZS51bm1vdW50O2Z1bmN0aW9uIEYobix0LGUpe3JldHVybiBuJiYobi5fX2MmJm4uX19jLl9fSCYmKG4uX19jLl9fSC5fXy5mb3JFYWNoKGZ1bmN0aW9uKG4pe1wiZnVuY3Rpb25cIj09dHlwZW9mIG4uX19jJiZuLl9fYygpfSksbi5fX2MuX19IPW51bGwpLG51bGwhPShuPWcoe30sbikpLl9fYyYmKG4uX19jLl9fUD09PWUmJihuLl9fYy5fX1A9dCksbi5fX2M9bnVsbCksbi5fX2s9bi5fX2smJm4uX19rLm1hcChmdW5jdGlvbihuKXtyZXR1cm4gRihuLHQsZSl9KSksbn1mdW5jdGlvbiBJKG4sdCxlKXtyZXR1cm4gbiYmZSYmKG4uX192PW51bGwsbi5fX2s9bi5fX2smJm4uX19rLm1hcChmdW5jdGlvbihuKXtyZXR1cm4gSShuLHQsZSl9KSxuLl9fYyYmbi5fX2MuX19QPT09dCYmKG4uX19lJiZlLmFwcGVuZENoaWxkKG4uX19lKSxuLl9fYy5fX2U9ITAsbi5fX2MuX19QPWUpKSxufWZ1bmN0aW9uIEwoKXt0aGlzLl9fdT0wLHRoaXMudD1udWxsLHRoaXMuX19iPW51bGx9ZnVuY3Rpb24gVShuKXt2YXIgdD1uLl9fLl9fYztyZXR1cm4gdCYmdC5fX2EmJnQuX19hKG4pfWZ1bmN0aW9uIEQobil7dmFyIGUscix1O2Z1bmN0aW9uIG8obyl7aWYoZXx8KGU9bigpKS50aGVuKGZ1bmN0aW9uKG4pe3I9bi5kZWZhdWx0fHxufSxmdW5jdGlvbihuKXt1PW59KSx1KXRocm93IHU7aWYoIXIpdGhyb3cgZTtyZXR1cm4gdChyLG8pfXJldHVybiBvLmRpc3BsYXlOYW1lPVwiTGF6eVwiLG8uX19mPSEwLG99ZnVuY3Rpb24gTSgpe3RoaXMudT1udWxsLHRoaXMubz1udWxsfWUudW5tb3VudD1mdW5jdGlvbihuKXt2YXIgdD1uLl9fYzt0JiZ0Ll9fUiYmdC5fX1IoKSx0JiYzMiZuLl9fdSYmKG4udHlwZT1udWxsKSxUJiZUKG4pfSwoTC5wcm90b3R5cGU9bmV3IG4pLl9fYz1mdW5jdGlvbihuLHQpe3ZhciBlPXQuX19jLHI9dGhpcztudWxsPT1yLnQmJihyLnQ9W10pLHIudC5wdXNoKGUpO3ZhciB1PVUoci5fX3YpLG89ITEsaT1mdW5jdGlvbigpe298fChvPSEwLGUuX19SPW51bGwsdT91KGwpOmwoKSl9O2UuX19SPWk7dmFyIGw9ZnVuY3Rpb24oKXtpZighLS1yLl9fdSl7aWYoci5zdGF0ZS5fX2Epe3ZhciBuPXIuc3RhdGUuX19hO3IuX192Ll9fa1swXT1JKG4sbi5fX2MuX19QLG4uX19jLl9fTyl9dmFyIHQ7Zm9yKHIuc2V0U3RhdGUoe19fYTpyLl9fYj1udWxsfSk7dD1yLnQucG9wKCk7KXQuZm9yY2VVcGRhdGUoKX19O3IuX191Kyt8fDMyJnQuX191fHxyLnNldFN0YXRlKHtfX2E6ci5fX2I9ci5fX3YuX19rWzBdfSksbi50aGVuKGksaSl9LEwucHJvdG90eXBlLmNvbXBvbmVudFdpbGxVbm1vdW50PWZ1bmN0aW9uKCl7dGhpcy50PVtdfSxMLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24obixlKXtpZih0aGlzLl9fYil7aWYodGhpcy5fX3YuX19rKXt2YXIgcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLG89dGhpcy5fX3YuX19rWzBdLl9fYzt0aGlzLl9fdi5fX2tbMF09Rih0aGlzLl9fYixyLG8uX19PPW8uX19QKX10aGlzLl9fYj1udWxsfXZhciBpPWUuX19hJiZ0KHUsbnVsbCxuLmZhbGxiYWNrKTtyZXR1cm4gaSYmKGkuX191Jj0tMzMpLFt0KHUsbnVsbCxlLl9fYT9udWxsOm4uY2hpbGRyZW4pLGldfTt2YXIgVj1mdW5jdGlvbihuLHQsZSl7aWYoKytlWzFdPT09ZVswXSYmbi5vLmRlbGV0ZSh0KSxuLnByb3BzLnJldmVhbE9yZGVyJiYoXCJ0XCIhPT1uLnByb3BzLnJldmVhbE9yZGVyWzBdfHwhbi5vLnNpemUpKWZvcihlPW4udTtlOyl7Zm9yKDtlLmxlbmd0aD4zOyllLnBvcCgpKCk7aWYoZVsxXTxlWzBdKWJyZWFrO24udT1lPWVbMl19fTtmdW5jdGlvbiBXKG4pe3JldHVybiB0aGlzLmdldENoaWxkQ29udGV4dD1mdW5jdGlvbigpe3JldHVybiBuLmNvbnRleHR9LG4uY2hpbGRyZW59ZnVuY3Rpb24gUChuKXt2YXIgZT10aGlzLHI9bi5pO2UuY29tcG9uZW50V2lsbFVubW91bnQ9ZnVuY3Rpb24oKXtvKG51bGwsZS5sKSxlLmw9bnVsbCxlLmk9bnVsbH0sZS5pJiZlLmkhPT1yJiZlLmNvbXBvbmVudFdpbGxVbm1vdW50KCksZS5sfHwoZS5pPXIsZS5sPXtub2RlVHlwZToxLHBhcmVudE5vZGU6cixjaGlsZE5vZGVzOltdLGFwcGVuZENoaWxkOmZ1bmN0aW9uKG4pe3RoaXMuY2hpbGROb2Rlcy5wdXNoKG4pLGUuaS5hcHBlbmRDaGlsZChuKX0saW5zZXJ0QmVmb3JlOmZ1bmN0aW9uKG4sdCl7dGhpcy5jaGlsZE5vZGVzLnB1c2gobiksZS5pLmFwcGVuZENoaWxkKG4pfSxyZW1vdmVDaGlsZDpmdW5jdGlvbihuKXt0aGlzLmNoaWxkTm9kZXMuc3BsaWNlKHRoaXMuY2hpbGROb2Rlcy5pbmRleE9mKG4pPj4+MSwxKSxlLmkucmVtb3ZlQ2hpbGQobil9fSksbyh0KFcse2NvbnRleHQ6ZS5jb250ZXh0fSxuLl9fdiksZS5sKX1mdW5jdGlvbiBqKG4sZSl7dmFyIHI9dChQLHtfX3Y6bixpOmV9KTtyZXR1cm4gci5jb250YWluZXJJbmZvPWUscn0oTS5wcm90b3R5cGU9bmV3IG4pLl9fYT1mdW5jdGlvbihuKXt2YXIgdD10aGlzLGU9VSh0Ll9fdikscj10Lm8uZ2V0KG4pO3JldHVybiByWzBdKyssZnVuY3Rpb24odSl7dmFyIG89ZnVuY3Rpb24oKXt0LnByb3BzLnJldmVhbE9yZGVyPyhyLnB1c2godSksVih0LG4scikpOnUoKX07ZT9lKG8pOm8oKX19LE0ucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihuKXt0aGlzLnU9bnVsbCx0aGlzLm89bmV3IE1hcDt2YXIgdD1yKG4uY2hpbGRyZW4pO24ucmV2ZWFsT3JkZXImJlwiYlwiPT09bi5yZXZlYWxPcmRlclswXSYmdC5yZXZlcnNlKCk7Zm9yKHZhciBlPXQubGVuZ3RoO2UtLTspdGhpcy5vLnNldCh0W2VdLHRoaXMudT1bMSwwLHRoaXMudV0pO3JldHVybiBuLmNoaWxkcmVufSxNLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGU9TS5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQ9ZnVuY3Rpb24oKXt2YXIgbj10aGlzO3RoaXMuby5mb3JFYWNoKGZ1bmN0aW9uKHQsZSl7VihuLGUsdCl9KX07dmFyIHo9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvciYmU3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIil8fDYwMTAzLEI9L14oPzphY2NlbnR8YWxpZ25tZW50fGFyYWJpY3xiYXNlbGluZXxjYXB8Y2xpcCg/IVBhdGhVKXxjb2xvcnxkb21pbmFudHxmaWxsfGZsb29kfGZvbnR8Z2x5cGgoPyFSKXxob3JpenxpbWFnZSghUyl8bGV0dGVyfGxpZ2h0aW5nfG1hcmtlcig/IUh8V3xVKXxvdmVybGluZXxwYWludHxwb2ludGVyfHNoYXBlfHN0b3B8c3RyaWtldGhyb3VnaHxzdHJva2V8dGV4dCg/IUwpfHRyYW5zZm9ybXx1bmRlcmxpbmV8dW5pY29kZXx1bml0c3x2fHZlY3Rvcnx2ZXJ0fHdvcmR8d3JpdGluZ3x4KD8hQykpW0EtWl0vLEg9L15vbihBbml8VHJhfFRvdXxCZWZvcmVJbnB8Q29tcG8pLyxaPS9bQS1aMC05XS9nLFk9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGRvY3VtZW50LCQ9ZnVuY3Rpb24obil7cmV0dXJuKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2woKT8vZmlsfGNoZXxyYWQvOi9maWx8Y2hlfHJhLykudGVzdChuKX07ZnVuY3Rpb24gcShuLHQsZSl7cmV0dXJuIG51bGw9PXQuX19rJiYodC50ZXh0Q29udGVudD1cIlwiKSxvKG4sdCksXCJmdW5jdGlvblwiPT10eXBlb2YgZSYmZSgpLG4/bi5fX2M6bnVsbH1mdW5jdGlvbiBHKG4sdCxlKXtyZXR1cm4gaShuLHQpLFwiZnVuY3Rpb25cIj09dHlwZW9mIGUmJmUoKSxuP24uX19jOm51bGx9bi5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fSxbXCJjb21wb25lbnRXaWxsTW91bnRcIixcImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHNcIixcImNvbXBvbmVudFdpbGxVcGRhdGVcIl0uZm9yRWFjaChmdW5jdGlvbih0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkobi5wcm90b3R5cGUsdCx7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzW1wiVU5TQUZFX1wiK3RdfSxzZXQ6ZnVuY3Rpb24obil7T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsdCx7Y29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOm59KX19KX0pO3ZhciBKPWUuZXZlbnQ7ZnVuY3Rpb24gSygpe31mdW5jdGlvbiBRKCl7cmV0dXJuIHRoaXMuY2FuY2VsQnViYmxlfWZ1bmN0aW9uIFgoKXtyZXR1cm4gdGhpcy5kZWZhdWx0UHJldmVudGVkfWUuZXZlbnQ9ZnVuY3Rpb24obil7cmV0dXJuIEomJihuPUoobikpLG4ucGVyc2lzdD1LLG4uaXNQcm9wYWdhdGlvblN0b3BwZWQ9USxuLmlzRGVmYXVsdFByZXZlbnRlZD1YLG4ubmF0aXZlRXZlbnQ9bn07dmFyIG5uLHRuPXtlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jbGFzc319LGVuPWUudm5vZGU7ZS52bm9kZT1mdW5jdGlvbihuKXtcInN0cmluZ1wiPT10eXBlb2Ygbi50eXBlJiZmdW5jdGlvbihuKXt2YXIgdD1uLnByb3BzLGU9bi50eXBlLHU9e307Zm9yKHZhciBvIGluIHQpe3ZhciBpPXRbb107aWYoIShcInZhbHVlXCI9PT1vJiZcImRlZmF1bHRWYWx1ZVwiaW4gdCYmbnVsbD09aXx8WSYmXCJjaGlsZHJlblwiPT09byYmXCJub3NjcmlwdFwiPT09ZXx8XCJjbGFzc1wiPT09b3x8XCJjbGFzc05hbWVcIj09PW8pKXt2YXIgbD1vLnRvTG93ZXJDYXNlKCk7XCJkZWZhdWx0VmFsdWVcIj09PW8mJlwidmFsdWVcImluIHQmJm51bGw9PXQudmFsdWU/bz1cInZhbHVlXCI6XCJkb3dubG9hZFwiPT09byYmITA9PT1pP2k9XCJcIjpcInRyYW5zbGF0ZVwiPT09bCYmXCJub1wiPT09aT9pPSExOlwib25kb3VibGVjbGlja1wiPT09bD9vPVwib25kYmxjbGlja1wiOlwib25jaGFuZ2VcIiE9PWx8fFwiaW5wdXRcIiE9PWUmJlwidGV4dGFyZWFcIiE9PWV8fCQodC50eXBlKT9cIm9uZm9jdXNcIj09PWw/bz1cIm9uZm9jdXNpblwiOlwib25ibHVyXCI9PT1sP289XCJvbmZvY3Vzb3V0XCI6SC50ZXN0KG8pP289bDotMT09PWUuaW5kZXhPZihcIi1cIikmJkIudGVzdChvKT9vPW8ucmVwbGFjZShaLFwiLSQmXCIpLnRvTG93ZXJDYXNlKCk6bnVsbD09PWkmJihpPXZvaWQgMCk6bD1vPVwib25pbnB1dFwiLFwib25pbnB1dFwiPT09bCYmdVtvPWxdJiYobz1cIm9uaW5wdXRDYXB0dXJlXCIpLHVbb109aX19XCJzZWxlY3RcIj09ZSYmdS5tdWx0aXBsZSYmQXJyYXkuaXNBcnJheSh1LnZhbHVlKSYmKHUudmFsdWU9cih0LmNoaWxkcmVuKS5mb3JFYWNoKGZ1bmN0aW9uKG4pe24ucHJvcHMuc2VsZWN0ZWQ9LTEhPXUudmFsdWUuaW5kZXhPZihuLnByb3BzLnZhbHVlKX0pKSxcInNlbGVjdFwiPT1lJiZudWxsIT11LmRlZmF1bHRWYWx1ZSYmKHUudmFsdWU9cih0LmNoaWxkcmVuKS5mb3JFYWNoKGZ1bmN0aW9uKG4pe24ucHJvcHMuc2VsZWN0ZWQ9dS5tdWx0aXBsZT8tMSE9dS5kZWZhdWx0VmFsdWUuaW5kZXhPZihuLnByb3BzLnZhbHVlKTp1LmRlZmF1bHRWYWx1ZT09bi5wcm9wcy52YWx1ZX0pKSx0LmNsYXNzJiYhdC5jbGFzc05hbWU/KHUuY2xhc3M9dC5jbGFzcyxPYmplY3QuZGVmaW5lUHJvcGVydHkodSxcImNsYXNzTmFtZVwiLHRuKSk6KHQuY2xhc3NOYW1lJiYhdC5jbGFzc3x8dC5jbGFzcyYmdC5jbGFzc05hbWUpJiYodS5jbGFzcz11LmNsYXNzTmFtZT10LmNsYXNzTmFtZSksbi5wcm9wcz11fShuKSxuLiQkdHlwZW9mPXosZW4mJmVuKG4pfTt2YXIgcm49ZS5fX3I7ZS5fX3I9ZnVuY3Rpb24obil7cm4mJnJuKG4pLG5uPW4uX19jfTt2YXIgdW49ZS5kaWZmZWQ7ZS5kaWZmZWQ9ZnVuY3Rpb24obil7dW4mJnVuKG4pO3ZhciB0PW4ucHJvcHMsZT1uLl9fZTtudWxsIT1lJiZcInRleHRhcmVhXCI9PT1uLnR5cGUmJlwidmFsdWVcImluIHQmJnQudmFsdWUhPT1lLnZhbHVlJiYoZS52YWx1ZT1udWxsPT10LnZhbHVlP1wiXCI6dC52YWx1ZSksbm49bnVsbH07dmFyIG9uPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOntjdXJyZW50OntyZWFkQ29udGV4dDpmdW5jdGlvbihuKXtyZXR1cm4gbm4uX19uW24uX19jXS5wcm9wcy52YWx1ZX19fX0sbG49XCIxNy4wLjJcIjtmdW5jdGlvbiBjbihuKXtyZXR1cm4gdC5iaW5kKG51bGwsbil9ZnVuY3Rpb24gZm4obil7cmV0dXJuISFuJiZuLiQkdHlwZW9mPT09en1mdW5jdGlvbiBhbihuKXtyZXR1cm4gZm4obikmJm4udHlwZT09PXV9ZnVuY3Rpb24gc24obil7cmV0dXJuIGZuKG4pP2YuYXBwbHkobnVsbCxhcmd1bWVudHMpOm59ZnVuY3Rpb24gaG4obil7cmV0dXJuISFuLl9fayYmKG8obnVsbCxuKSwhMCl9ZnVuY3Rpb24gdm4obil7cmV0dXJuIG4mJihuLmJhc2V8fDE9PT1uLm5vZGVUeXBlJiZuKXx8bnVsbH12YXIgZG49ZnVuY3Rpb24obix0KXtyZXR1cm4gbih0KX0scG49ZnVuY3Rpb24obix0KXtyZXR1cm4gbih0KX0sbW49dTtmdW5jdGlvbiB5bihuKXtuKCl9ZnVuY3Rpb24gX24obil7cmV0dXJuIG59ZnVuY3Rpb24gYm4oKXtyZXR1cm5bITEseW5dfXZhciBTbj1kLGduPWZuO2Z1bmN0aW9uIENuKG4sdCl7dmFyIGU9dCgpLHI9YSh7aDp7X186ZSx2OnR9fSksdT1yWzBdLmgsbz1yWzFdO3JldHVybiBkKGZ1bmN0aW9uKCl7dS5fXz1lLHUudj10LEVuKHUpJiZvKHtoOnV9KX0sW24sZSx0XSksdihmdW5jdGlvbigpe3JldHVybiBFbih1KSYmbyh7aDp1fSksbihmdW5jdGlvbigpe0VuKHUpJiZvKHtoOnV9KX0pfSxbbl0pLGV9ZnVuY3Rpb24gRW4obil7dmFyIHQsZSxyPW4udix1PW4uX187dHJ5e3ZhciBvPXIoKTtyZXR1cm4hKCh0PXUpPT09KGU9bykmJigwIT09dHx8MS90PT0xL2UpfHx0IT10JiZlIT1lKX1jYXRjaChuKXtyZXR1cm4hMH19dmFyIHduPXt1c2VTdGF0ZTphLHVzZUlkOnMsdXNlUmVkdWNlcjpoLHVzZUVmZmVjdDp2LHVzZUxheW91dEVmZmVjdDpkLHVzZUluc2VydGlvbkVmZmVjdDpTbix1c2VUcmFuc2l0aW9uOmJuLHVzZURlZmVycmVkVmFsdWU6X24sdXNlU3luY0V4dGVybmFsU3RvcmU6Q24sc3RhcnRUcmFuc2l0aW9uOnluLHVzZVJlZjpwLHVzZUltcGVyYXRpdmVIYW5kbGU6bSx1c2VNZW1vOnksdXNlQ2FsbGJhY2s6Xyx1c2VDb250ZXh0OmIsdXNlRGVidWdWYWx1ZTpTLHZlcnNpb246XCIxNy4wLjJcIixDaGlsZHJlbjpBLHJlbmRlcjpxLGh5ZHJhdGU6Ryx1bm1vdW50Q29tcG9uZW50QXROb2RlOmhuLGNyZWF0ZVBvcnRhbDpqLGNyZWF0ZUVsZW1lbnQ6dCxjcmVhdGVDb250ZXh0OmwsY3JlYXRlRmFjdG9yeTpjbixjbG9uZUVsZW1lbnQ6c24sY3JlYXRlUmVmOmMsRnJhZ21lbnQ6dSxpc1ZhbGlkRWxlbWVudDpmbixpc0VsZW1lbnQ6Z24saXNGcmFnbWVudDphbixmaW5kRE9NTm9kZTp2bixDb21wb25lbnQ6bixQdXJlQ29tcG9uZW50OkUsbWVtbzp3LGZvcndhcmRSZWY6TixmbHVzaFN5bmM6cG4sdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM6ZG4sU3RyaWN0TW9kZTptbixTdXNwZW5zZTpMLFN1c3BlbnNlTGlzdDpNLGxhenk6RCxfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDpvbn07ZXhwb3J0e0EgYXMgQ2hpbGRyZW4sRSBhcyBQdXJlQ29tcG9uZW50LG1uIGFzIFN0cmljdE1vZGUsTCBhcyBTdXNwZW5zZSxNIGFzIFN1c3BlbnNlTGlzdCxvbiBhcyBfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCxzbiBhcyBjbG9uZUVsZW1lbnQsY24gYXMgY3JlYXRlRmFjdG9yeSxqIGFzIGNyZWF0ZVBvcnRhbCx3biBhcyBkZWZhdWx0LHZuIGFzIGZpbmRET01Ob2RlLHBuIGFzIGZsdXNoU3luYyxOIGFzIGZvcndhcmRSZWYsRyBhcyBoeWRyYXRlLGduIGFzIGlzRWxlbWVudCxhbiBhcyBpc0ZyYWdtZW50LGZuIGFzIGlzVmFsaWRFbGVtZW50LEQgYXMgbGF6eSx3IGFzIG1lbW8scSBhcyByZW5kZXIseW4gYXMgc3RhcnRUcmFuc2l0aW9uLGhuIGFzIHVubW91bnRDb21wb25lbnRBdE5vZGUsZG4gYXMgdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMsX24gYXMgdXNlRGVmZXJyZWRWYWx1ZSxTbiBhcyB1c2VJbnNlcnRpb25FZmZlY3QsQ24gYXMgdXNlU3luY0V4dGVybmFsU3RvcmUsYm4gYXMgdXNlVHJhbnNpdGlvbixsbiBhcyB2ZXJzaW9ufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbXBhdC5tb2R1bGUuanMubWFwXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuZXhwb3J0IGNvbnN0IENsb3NlID0gKHsgdCB9KSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPHN2Z1xuICAgICAgICAgICAgcm9sZT1cImltZ1wiXG4gICAgICAgICAgICBhcmlhLWxhYmVsPXt0KFsnY2xvc2UnXSl9XG4gICAgICAgICAgICB3aWR0aD1cIjEyXCJcbiAgICAgICAgICAgIGhlaWdodD1cIjEyXCJcbiAgICAgICAgICAgIHZlcnNpb249XCIxLjFcIlxuICAgICAgICAgICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gICAgICAgID5cbiAgICAgICAgICAgIDx0aXRsZT57dChbJ2Nsb3NlJ10pfTwvdGl0bGU+XG4gICAgICAgICAgICA8bGluZSB4MT1cIjFcIiB5MT1cIjExXCIgeDI9XCIxMVwiIHkyPVwiMVwiIHN0cm9rZVdpZHRoPVwiMVwiIC8+XG4gICAgICAgICAgICA8bGluZSB4MT1cIjFcIiB5MT1cIjFcIiB4Mj1cIjExXCIgeTI9XCIxMVwiIHN0cm9rZVdpZHRoPVwiMVwiIC8+XG4gICAgICAgIDwvc3ZnPlxuICAgICk7XG59O1xuXG5DbG9zZS5wcm9wVHlwZXMgPSB7XG4gICAgdDogUHJvcFR5cGVzLmZ1bmMsXG59O1xuIiwiXG5leHBvcnQgZnVuY3Rpb24gYXNUaXRsZShzdHIpe1xuICAgIHJldHVybiBzdHIuc3BsaXQoJy0nKS5tYXAocyA9PiBzLnNsaWNlKDAsIDEpLnRvVXBwZXJDYXNlKCkrcy5zbGljZSgxKSkuam9pbignICcpXG59XG4iLCJjb25zdCBmb3JtYXQgPSAoc3RyLCAuLi5yZXN0KSA9PiB7XG4gICAgY29uc3QgdCA9IHR5cGVvZiByZXN0WzBdO1xuICAgIGxldCBhcmdzO1xuICAgIGlmIChyZXN0Lmxlbmd0aCA9PT0gMCkgYXJncyA9IHt9O1xuICAgIGVsc2VcbiAgICAgICAgYXJncyA9XG4gICAgICAgICAgICB0ID09PSAnc3RyaW5nJyB8fCB0ID09PSAnbnVtYmVyJ1xuICAgICAgICAgICAgICAgID8gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwocmVzdClcbiAgICAgICAgICAgICAgICA6IHJlc3RbMF07XG5cbiAgICBjb25zdCBzcGxpdHMgPSBbXTtcblxuICAgIGxldCBzID0gc3RyLnRvU3RyaW5nKCk7XG4gICAgd2hpbGUgKHMubGVuZ3RoID4gMCkge1xuICAgICAgICBjb25zdCBtID0gcy5tYXRjaCgvXFx7KD8hXFx7KShbXFx3XFxkXSspXFx9KD8hXFx9KS8pO1xuICAgICAgICBpZiAobSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgY29uc3QgbGVmdCA9IHMuc3Vic3RyKDAsIG0uaW5kZXgpO1xuICAgICAgICAgICAgcyA9IHMuc3Vic3RyKG0uaW5kZXggKyBtWzBdLmxlbmd0aCk7XG4gICAgICAgICAgICBjb25zdCBuID0gcGFyc2VJbnQobVsxXSk7XG4gICAgICAgICAgICBzcGxpdHMucHVzaChsZWZ0KTtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcbiAgICAgICAgICAgIGlmIChuICE9IG4pIHtcbiAgICAgICAgICAgICAgICAvLyBub3QgYSBudW1iZXJcbiAgICAgICAgICAgICAgICBzcGxpdHMucHVzaChhcmdzW21bMV1dKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gYSBudW1iZXJlZCBhcmd1bWVudFxuICAgICAgICAgICAgICAgIHNwbGl0cy5wdXNoKGFyZ3Nbbl0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc3BsaXRzLnB1c2gocyk7XG4gICAgICAgICAgICBzID0gJyc7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHNwbGl0cztcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBsYW5ndWFnZShjb25maWcpIHtcbiAgICAvLyBpZiBhIGxhbmdhdWdlIGlzIGdpdmVuIGluIHRoZSBjb25maWcgd2UgYWx3YXlzIHJldHVybiB0aGF0XG4gICAgaWYgKGNvbmZpZyAhPT0gdW5kZWZpbmVkICYmIGNvbmZpZy5sYW5nICE9PSB1bmRlZmluZWQgJiYgY29uZmlnLmxhbmcgIT09ICd6eicpIHJldHVybiBjb25maWcubGFuZztcbiAgICBjb25zdCBsYW5nID0gKFxuICAgICAgICAodHlwZW9mIHdpbmRvdy5sYW5ndWFnZSA9PT0gJ3N0cmluZycgPyB3aW5kb3cubGFuZ3VhZ2UgOiBudWxsKSB8fFxuICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQubGFuZyB8fFxuICAgICAgICAoY29uZmlnICE9PSB1bmRlZmluZWQgJiYgY29uZmlnLmxhbmd1YWdlcyAhPT0gdW5kZWZpbmVkICYmIGNvbmZpZy5sYW5ndWFnZXNbMF0gIT09IHVuZGVmaW5lZCA/IGNvbmZpZy5sYW5ndWFnZXNbMF0gOiAnZW4nKVxuICAgICkudG9Mb3dlckNhc2UoKTtcbiAgICBjb25zdCByZWdleCA9IG5ldyBSZWdFeHAoJ14oW1xcXFx3XSspLShbXFxcXHddKykkJyk7XG4gICAgY29uc3QgcmVzdWx0ID0gcmVnZXguZXhlYyhsYW5nKTtcbiAgICBpZiAocmVzdWx0ID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBsYW5nO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0WzFdO1xufVxuXG5mdW5jdGlvbiBoZ2V0KGQsIGtleSwgZGVmYXVsdFZhbHVlKSB7XG4gICAgbGV0IGtsID0ga2V5O1xuICAgIGlmICghQXJyYXkuaXNBcnJheShrbCkpIGtsID0gW2tsXTtcbiAgICBsZXQgY3YgPSBkO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwga2wubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGN2ID09PSB1bmRlZmluZWQpIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gICAgICAgIGlmIChrbFtpXSAhPT0gdW5kZWZpbmVkICYmIGtsW2ldLmVuZHNXaXRoKCc/JykpIHtcbiAgICAgICAgICAgIGNvbnN0IGtsZSA9IGtsW2ldLnNsaWNlKDAsIGtsW2ldLmxlbmd0aCAtIDEpO1xuICAgICAgICAgICAgbGV0IGN2bjtcbiAgICAgICAgICAgIGlmIChjdiBpbnN0YW5jZW9mIE1hcCkgY3ZuID0gY3YuZ2V0KGtsZSk7XG4gICAgICAgICAgICBlbHNlIGN2biA9IGN2W2tsZV07XG4gICAgICAgICAgICBpZiAoY3ZuICE9PSB1bmRlZmluZWQgJiYgdHlwZW9mIGN2biA9PT0gXCJzdHJpbmdcIilcbiAgICAgICAgICAgICAgICAvLyB3ZSBvbmx5IGFzc2lnbiBpdCBpZiB0aGUgdmFsdWUgZXhpc3RzXG4gICAgICAgICAgICAgICAgY3YgPSBjdm47XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAoY3YgaW5zdGFuY2VvZiBNYXApIGN2ID0gY3YuZ2V0KGtsW2ldKTtcbiAgICAgICAgICAgIGVsc2UgY3YgPSBjdltrbFtpXV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKGN2ID09PSB1bmRlZmluZWQgfHwgISh0eXBlb2YgY3YgPT09IFwic3RyaW5nXCIpKSByZXR1cm4gZGVmYXVsdFZhbHVlO1xuICAgIC8vIHdlIGNvbnZlcnQgZW1wdHkgc3RyaW5ncyB0byAndW5kZWZpbmVkJ1xuICAgIGlmIChjdiA9PT0gJycpIHJldHVybiB1bmRlZmluZWQ7XG4gICAgcmV0dXJuIGN2O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdCh0cmFucywgbGFuZywgZmFsbGJhY2tMYW5nLCBrZXksIC4uLnBhcmFtcykge1xuICAgIGxldCBrbCA9IGtleTtcbiAgICBsZXQgcmV0dXJuVW5kZWZpbmVkID0gZmFsc2U7XG4gICAgaWYgKGtsWzBdID09PSAnIScpIHtcbiAgICAgICAga2wgPSBrbC5zbGljZSgxKTtcbiAgICAgICAgcmV0dXJuVW5kZWZpbmVkID0gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGtsKSkga2wgPSBba2xdO1xuICAgIGxldCB2YWx1ZSA9IGhnZXQodHJhbnMsIFtsYW5nLCAuLi5rbF0pO1xuICAgIC8vIGlmIGEgZmFsbGJhY2sgbGFuZ3VhZ2UgaXMgZGVmaW5lZCwgd2UgdHJ5IHRvIGxvb2sgdXAgdGhlIHRyYW5zbGF0aW9uIGZvclxuICAgIC8vIHRoYXQgbGFuZ3VhZ2UgaW5zdGVhZC4uLlxuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkICYmIGZhbGxiYWNrTGFuZyAhPT0gdW5kZWZpbmVkKVxuICAgICAgICB2YWx1ZSA9IGhnZXQodHJhbnMsIFtmYWxsYmFja0xhbmcsIC4uLmtsXSk7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgaWYgKHJldHVyblVuZGVmaW5lZCkgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgcmV0dXJuIFtgW21pc3NpbmcgdHJhbnNsYXRpb246ICR7bGFuZ30vJHtrbC5qb2luKCcvJyl9XWBdO1xuICAgIH1cbiAgICBpZiAocGFyYW1zLmxlbmd0aCA+IDApIHJldHVybiBmb3JtYXQodmFsdWUsIC4uLnBhcmFtcyk7XG4gICAgcmV0dXJuIHZhbHVlO1xufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuY29uc3QgVGV4dCA9ICh7IHRleHQsIGNvbmZpZyB9KSA9PiB7XG4gICAgaWYgKCEodGV4dCBpbnN0YW5jZW9mIEFycmF5KSlcbiAgICAgICAgdGV4dCA9IFt0ZXh0XVxuICAgIGlmIChjb25maWcuaHRtbFRleHRzID09PSB0cnVlKSB7XG4gICAgICAgIGxldCB3cmFwcGVkID0gZmFsc2U7XG4gICAgICAgIC8vIGlmIHRoZSBmaXJzdCBjaGFyYWN0ZXIgaXMgYW4gb3BlbmluZyBicmFja2V0LCB3ZSBhc3N1bWUgdGhhdCB0aGVcbiAgICAgICAgLy8gdGV4dCBpcyB3cmFwcGVkIGluIGEgY3VzdG9tIGVsZW1lbnQgYWxyZWFkeS4gSWYgbm90LCB3ZSBwdXQgaXRcbiAgICAgICAgLy8gaW5zaWRlIGEgSFRNTCBzcGFuICg8c3Bhbj4uLi48L3NwYW4+KS5cbiAgICAgICAgaWYgKHRleHRbMF1bMF0gPT09ICc8Jykgd3JhcHBlZCA9IHRydWU7XG4gICAgICAgIGNvbnN0IGVsZW1lbnRzID0gdGV4dC5tYXAoKHRleHRFbGVtZW50LCBpKSA9PiB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHRleHRFbGVtZW50ID09PSAnc3RyaW5nJylcbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBrZXk9e2l9IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogdGV4dEVsZW1lbnQgfX0gLz5cbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgLy8gd2UgYXNzdW1lIHRoaXMgYWxyZWFkeSBpcyBhIFJlYWN0IGVsZW1lbnRcbiAgICAgICAgICAgIHJldHVybiB0ZXh0RWxlbWVudDtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICh3cmFwcGVkKSByZXR1cm4gPFJlYWN0LkZyYWdtZW50PntlbGVtZW50c308L1JlYWN0LkZyYWdtZW50PjtcbiAgICAgICAgZWxzZSByZXR1cm4gPHNwYW4+e2VsZW1lbnRzfTwvc3Bhbj47XG4gICAgfSBlbHNlIHJldHVybiA8c3Bhbj57dGV4dH08L3NwYW4+O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgVGV4dDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBhc1RpdGxlIH0gZnJvbSAnLi4vdXRpbHMvc3RyaW5ncyc7XG5pbXBvcnQgeyB0IGFzIHR0IH0gZnJvbSAnLi4vdXRpbHMvaTE4bic7XG5pbXBvcnQgVGV4dCBmcm9tICcuL3RleHQnO1xuXG4vLyB0byBkbzogcmVtb3ZlIHRoZSBkZXByZWNhdGVkIHRyYW5zbGF0aW9uIGtleXMgW25hbWUsICd0aXRsZSddICYgW25hbWUsICdkZXNjcmlwdGlvbiddXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlcnZpY2VJdGVtIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIGNoZWNrZWQsXG4gICAgICAgICAgICBvbmx5UmVxdWlyZWRFbmFibGVkLFxuICAgICAgICAgICAgb25Ub2dnbGUsXG4gICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgbGFuZyxcbiAgICAgICAgICAgIGNvbmZpZyxcbiAgICAgICAgICAgIHRyYW5zbGF0aW9ucyxcbiAgICAgICAgICAgIHRpdGxlLFxuICAgICAgICAgICAgZGVzY3JpcHRpb24sXG4gICAgICAgICAgICB2aXNpYmxlLFxuICAgICAgICAgICAgdCxcbiAgICAgICAgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHJlcXVpcmVkID0gdGhpcy5wcm9wcy5yZXF1aXJlZCB8fCBmYWxzZTtcbiAgICAgICAgY29uc3Qgb3B0T3V0ID0gdGhpcy5wcm9wcy5vcHRPdXQgfHwgZmFsc2U7XG4gICAgICAgIGNvbnN0IHB1cnBvc2VzID0gdGhpcy5wcm9wcy5wdXJwb3NlcyB8fCBbXTtcbiAgICAgICAgY29uc3Qgb25DaGFuZ2UgPSAoZSkgPT4ge1xuICAgICAgICAgICAgb25Ub2dnbGUoZS50YXJnZXQuY2hlY2tlZCk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGlkID0gYHNlcnZpY2UtaXRlbS0ke25hbWV9YDtcbiAgICAgICAgY29uc3QgdGl0bGVpZCA9IGAke2lkfS10aXRsZWA7XG4gICAgICAgIGNvbnN0IHB1cnBvc2VzVGV4dCA9IHB1cnBvc2VzXG4gICAgICAgICAgICAubWFwKFxuICAgICAgICAgICAgICAgIChwdXJwb3NlKSA9PlxuICAgICAgICAgICAgICAgICAgICB0KFsnIScsICdwdXJwb3NlcycsIHB1cnBvc2UsICd0aXRsZT8nXSkgfHwgYXNUaXRsZShwdXJwb3NlKVxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgLmpvaW4oJywgJyk7XG4gICAgICAgIGNvbnN0IG9wdE91dFRleHQgPSBvcHRPdXQgPyAoXG4gICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNtLW9wdC1vdXRcIlxuICAgICAgICAgICAgICAgIHRpdGxlPXt0KFsnc2VydmljZScsICdvcHRPdXQnLCAnZGVzY3JpcHRpb24nXSl9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3QoWydzZXJ2aWNlJywgJ29wdE91dCcsICd0aXRsZSddKX1cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgKSA6IChcbiAgICAgICAgICAgICcnXG4gICAgICAgICk7XG4gICAgICAgIGNvbnN0IHJlcXVpcmVkVGV4dCA9IHJlcXVpcmVkID8gKFxuICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjbS1yZXF1aXJlZFwiXG4gICAgICAgICAgICAgICAgdGl0bGU9e3QoWydzZXJ2aWNlJywgJ3JlcXVpcmVkJywgJ2Rlc2NyaXB0aW9uJ10pfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHt0KFsnc2VydmljZScsICdyZXF1aXJlZCcsICd0aXRsZSddKX1cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgKSA6IChcbiAgICAgICAgICAgICcnXG4gICAgICAgICk7XG5cbiAgICAgICAgbGV0IHB1cnBvc2VzQ29udGVudDtcbiAgICAgICAgaWYgKHB1cnBvc2VzLmxlbmd0aCA+IDApXG4gICAgICAgICAgICBwdXJwb3Nlc0NvbnRlbnQgPSAoXG4gICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwicHVycG9zZXNcIj5cbiAgICAgICAgICAgICAgICAgICAge3QoW1xuICAgICAgICAgICAgICAgICAgICAgICAgJ3NlcnZpY2UnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHVycG9zZXMubGVuZ3RoID4gMSA/ICdwdXJwb3NlcycgOiAncHVycG9zZScsXG4gICAgICAgICAgICAgICAgICAgIF0pfVxuICAgICAgICAgICAgICAgICAgICA6IHtwdXJwb3Nlc1RleHR9XG4gICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgKTtcblxuICAgICAgICBjb25zdCBkZXNjcmlwdGlvblRleHQgPVxuICAgICAgICAgICAgZGVzY3JpcHRpb24gfHxcbiAgICAgICAgICAgIHR0KHRyYW5zbGF0aW9ucywgbGFuZywgJ3p6JywgWychJywgJ2Rlc2NyaXB0aW9uJ10pIHx8XG4gICAgICAgICAgICB0KFsnIScsIG5hbWUsICdkZXNjcmlwdGlvbj8nXSk7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgIGlkPXtpZH1cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtcbiAgICAgICAgICAgICAgICAgICAgICAgICdjbS1saXN0LWlucHV0JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAocmVxdWlyZWQgPyAnIHJlcXVpcmVkJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAob25seVJlcXVpcmVkRW5hYmxlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gJyBoYWxmLWNoZWNrZWQgb25seS1yZXF1aXJlZCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ICcnKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGFyaWEtbGFiZWxsZWRieT17YCR7dGl0bGVpZH1gfVxuICAgICAgICAgICAgICAgICAgICBhcmlhLWRlc2NyaWJlZGJ5PXtgJHtpZH0tZGVzY3JpcHRpb25gfVxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17cmVxdWlyZWR9XG4gICAgICAgICAgICAgICAgICAgIGNoZWNrZWQ9e2NoZWNrZWQgfHwgcmVxdWlyZWR9XG4gICAgICAgICAgICAgICAgICAgIHRhYkluZGV4PXt2aXNpYmxlID8gJzAnIDogJy0xJ31cbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgIGh0bWxGb3I9e2lkfVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjbS1saXN0LWxhYmVsXCJcbiAgICAgICAgICAgICAgICAgICAgey4uLihyZXF1aXJlZCA/IHsgdGFiSW5kZXg6ICcwJyB9IDoge30pfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiY20tbGlzdC10aXRsZVwiIGlkPXtgJHt0aXRsZWlkfWB9PlxuICAgICAgICAgICAgICAgICAgICAgICAge3RpdGxlIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHQodHJhbnNsYXRpb25zLCBsYW5nLCAnenonLCBbJyEnLCAndGl0bGUnXSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0KFsnIScsIG5hbWUsICd0aXRsZT8nXSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhc1RpdGxlKG5hbWUpfVxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIHtyZXF1aXJlZFRleHR9XG4gICAgICAgICAgICAgICAgICAgIHtvcHRPdXRUZXh0fVxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJjbS1zd2l0Y2hcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2xpZGVyIHJvdW5kIGFjdGl2ZVwiPjwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICA8ZGl2IGlkPXtgJHtpZH0tZGVzY3JpcHRpb25gfT5cbiAgICAgICAgICAgICAgICAgICAge2Rlc2NyaXB0aW9uVGV4dCAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJjbS1saXN0LWRlc2NyaXB0aW9uXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPFRleHQgY29uZmlnPXtjb25maWd9IHRleHQ9e2Rlc2NyaXB0aW9uVGV4dH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAge3B1cnBvc2VzQ29udGVudH1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgU2VydmljZUl0ZW0gZnJvbSAnLi9zZXJ2aWNlLWl0ZW0nO1xuXG5leHBvcnQgY29uc3QgU2VydmljZUl0ZW1zID0gKHtcbiAgICBzZXJ2aWNlcyxcbiAgICBjb25maWcsXG4gICAgY29uc2VudHMsXG4gICAgbGFuZyxcbiAgICB0b2dnbGUsXG4gICAgdmlzaWJsZSxcbiAgICB0LFxufSkgPT4ge1xuICAgIHJldHVybiBzZXJ2aWNlcy5tYXAoKHNlcnZpY2UpID0+IHtcbiAgICAgICAgY29uc3QgdG9nZ2xlU2VydmljZSA9ICh2YWx1ZSkgPT4ge1xuICAgICAgICAgICAgdG9nZ2xlKFtzZXJ2aWNlXSwgdmFsdWUpO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBjaGVja2VkID0gY29uc2VudHNbc2VydmljZS5uYW1lXTtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxsaSBrZXk9e3NlcnZpY2UubmFtZX0gY2xhc3NOYW1lPVwiY20tc2VydmljZVwiPlxuICAgICAgICAgICAgICAgIDxTZXJ2aWNlSXRlbVxuICAgICAgICAgICAgICAgICAgICBjaGVja2VkPXtjaGVja2VkIHx8IHNlcnZpY2UucmVxdWlyZWR9XG4gICAgICAgICAgICAgICAgICAgIG9uVG9nZ2xlPXt0b2dnbGVTZXJ2aWNlfVxuICAgICAgICAgICAgICAgICAgICBjb25maWc9e2NvbmZpZ31cbiAgICAgICAgICAgICAgICAgICAgbGFuZz17bGFuZ31cbiAgICAgICAgICAgICAgICAgICAgdmlzaWJsZT17dmlzaWJsZX1cbiAgICAgICAgICAgICAgICAgICAgdD17dH1cbiAgICAgICAgICAgICAgICAgICAgey4uLnNlcnZpY2V9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICk7XG4gICAgfSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZXJ2aWNlcyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICBwcm9wcy5tYW5hZ2VyLndhdGNoKHRoaXMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgY29uc2VudHM6IHByb3BzLm1hbmFnZXIuY29uc2VudHMsXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICAgIHRoaXMucHJvcHMubWFuYWdlci51bndhdGNoKHRoaXMpO1xuICAgIH1cblxuICAgIHVwZGF0ZShvYmosIHR5cGUsIGRhdGEpIHtcbiAgICAgICAgaWYgKG9iaiA9PT0gdGhpcy5wcm9wcy5tYW5hZ2VyICYmIHR5cGUgPT09ICdjb25zZW50cycpXG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgY29uc2VudHM6IGRhdGEgfSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IGNvbmZpZywgdCwgbWFuYWdlciwgbGFuZyB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgeyBjb25zZW50cyB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgY29uc3QgeyBzZXJ2aWNlcyB9ID0gY29uZmlnO1xuXG4gICAgICAgIGNvbnN0IHRvZ2dsZSA9IChzZXJ2aWNlcywgdmFsdWUpID0+IHtcbiAgICAgICAgICAgIHNlcnZpY2VzLm1hcCgoc2VydmljZSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghc2VydmljZS5yZXF1aXJlZCkge1xuICAgICAgICAgICAgICAgICAgICBtYW5hZ2VyLnVwZGF0ZUNvbnNlbnQoc2VydmljZS5uYW1lLCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgY29uc3QgdG9nZ2xlQWxsID0gKHZhbHVlKSA9PiB7XG4gICAgICAgICAgICB0b2dnbGUoc2VydmljZXMsIHZhbHVlKTtcbiAgICAgICAgfTtcblxuICAgICAgICBjb25zdCBzZXJ2aWNlSXRlbXMgPSAoXG4gICAgICAgICAgICA8U2VydmljZUl0ZW1zXG4gICAgICAgICAgICAgICAgY29uZmlnPXtjb25maWd9XG4gICAgICAgICAgICAgICAgbGFuZz17bGFuZ31cbiAgICAgICAgICAgICAgICBzZXJ2aWNlcz17c2VydmljZXN9XG4gICAgICAgICAgICAgICAgdD17dH1cbiAgICAgICAgICAgICAgICBjb25zZW50cz17Y29uc2VudHN9XG4gICAgICAgICAgICAgICAgdG9nZ2xlPXt0b2dnbGV9XG4gICAgICAgICAgICAvPlxuICAgICAgICApO1xuXG4gICAgICAgIGNvbnN0IHRvZ2dsYWJsZVNlcnZpY2VzID0gc2VydmljZXMuZmlsdGVyKFxuICAgICAgICAgICAgKHNlcnZpY2UpID0+ICFzZXJ2aWNlLnJlcXVpcmVkXG4gICAgICAgICk7XG5cbiAgICAgICAgY29uc3QgbkVuYWJsZWQgPSB0b2dnbGFibGVTZXJ2aWNlcy5maWx0ZXIoXG4gICAgICAgICAgICAoc2VydmljZSkgPT4gY29uc2VudHNbc2VydmljZS5uYW1lXVxuICAgICAgICApLmxlbmd0aDtcbiAgICAgICAgY29uc3QgblJlcXVpcmVkID0gc2VydmljZXMuZmlsdGVyKChzZXJ2aWNlKSA9PiBzZXJ2aWNlLnJlcXVpcmVkKS5sZW5ndGg7XG5cbiAgICAgICAgY29uc3QgYWxsRW5hYmxlZCA9IG5FbmFibGVkID09PSB0b2dnbGFibGVTZXJ2aWNlcy5sZW5ndGg7XG5cbiAgICAgICAgY29uc3QgYWxsRGlzYWJsZWQgPSBuRW5hYmxlZCA9PT0gMDtcblxuICAgICAgICBjb25zdCBvbmx5UmVxdWlyZWRFbmFibGVkID1cbiAgICAgICAgICAgIHNlcnZpY2VzLmZpbHRlcigoc2VydmljZSkgPT4gc2VydmljZS5yZXF1aXJlZCkubGVuZ3RoID4gMCAmJlxuICAgICAgICAgICAgYWxsRGlzYWJsZWQ7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJjbS1zZXJ2aWNlc1wiPlxuICAgICAgICAgICAgICAgIHtzZXJ2aWNlSXRlbXN9XG4gICAgICAgICAgICAgICAgeyFjb25maWcuaGlkZVRvZ2dsZUFsbCAmJiB0b2dnbGFibGVTZXJ2aWNlcy5sZW5ndGggPiAxICYmIChcbiAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzTmFtZT1cImNtLXNlcnZpY2UgY20tdG9nZ2xlLWFsbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPFNlcnZpY2VJdGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cImRpc2FibGVBbGxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPXt0KFsnc2VydmljZScsICdkaXNhYmxlQWxsJywgJ3RpdGxlJ10pfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3NlcnZpY2UnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGlzYWJsZUFsbCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkZXNjcmlwdGlvbicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tlZD17YWxsRW5hYmxlZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maWc9e2NvbmZpZ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbmx5UmVxdWlyZWRFbmFibGVkPXshYWxsRW5hYmxlZCAmJiBuUmVxdWlyZWQgPiAwfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uVG9nZ2xlPXt0b2dnbGVBbGx9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFuZz17bGFuZ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0PXt0fVxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgKTtcbiAgICB9XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgU2VydmljZUl0ZW1zIH0gZnJvbSAnLi9zZXJ2aWNlcyc7XG5pbXBvcnQgeyBhc1RpdGxlIH0gZnJvbSAnLi4vdXRpbHMvc3RyaW5ncyc7XG5pbXBvcnQgVGV4dCBmcm9tICcuL3RleHQnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQdXJwb3NlSXRlbSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgc2VydmljZXNWaXNpYmxlOiBmYWxzZSxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIGFsbEVuYWJsZWQsXG4gICAgICAgICAgICBvbmx5UmVxdWlyZWRFbmFibGVkLFxuICAgICAgICAgICAgYWxsRGlzYWJsZWQsXG4gICAgICAgICAgICBzZXJ2aWNlcyxcbiAgICAgICAgICAgIGNvbmZpZyxcbiAgICAgICAgICAgIG9uVG9nZ2xlLFxuICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgIGxhbmcsXG4gICAgICAgICAgICBtYW5hZ2VyLFxuICAgICAgICAgICAgY29uc2VudHMsXG4gICAgICAgICAgICB0aXRsZSxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgICAgICAgdCxcbiAgICAgICAgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHsgc2VydmljZXNWaXNpYmxlIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICBjb25zdCByZXF1aXJlZCA9IHRoaXMucHJvcHMucmVxdWlyZWQgfHwgZmFsc2U7XG4gICAgICAgIGNvbnN0IHB1cnBvc2VzID0gdGhpcy5wcm9wcy5wdXJwb3NlcyB8fCBbXTtcbiAgICAgICAgY29uc3Qgb25DaGFuZ2UgPSAoZSkgPT4ge1xuICAgICAgICAgICAgb25Ub2dnbGUoZS50YXJnZXQuY2hlY2tlZCk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGlkID0gYHB1cnBvc2UtaXRlbS0ke25hbWV9YDtcbiAgICAgICAgY29uc3QgdGl0bGVpZCA9IGAke2lkfS10aXRsZWA7XG4gICAgICAgIGNvbnN0IHB1cnBvc2VzVGV4dCA9IHB1cnBvc2VzXG4gICAgICAgICAgICAubWFwKFxuICAgICAgICAgICAgICAgIChwdXJwb3NlKSA9PlxuICAgICAgICAgICAgICAgICAgICB0KFsnIScsICdwdXJwb3NlcycsIHB1cnBvc2UsICd0aXRsZT8nXSkgfHwgYXNUaXRsZShwdXJwb3NlKVxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgLmpvaW4oJywgJyk7XG4gICAgICAgIGNvbnN0IHJlcXVpcmVkVGV4dCA9IHJlcXVpcmVkID8gKFxuICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjbS1yZXF1aXJlZFwiXG4gICAgICAgICAgICAgICAgdGl0bGU9e3QoWychJywgJ3NlcnZpY2UnLCAncmVxdWlyZWQnLCAnZGVzY3JpcHRpb24nXSkgfHwgJyd9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3QoWydzZXJ2aWNlJywgJ3JlcXVpcmVkJywgJ3RpdGxlJ10pfVxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICApIDogKFxuICAgICAgICAgICAgJydcbiAgICAgICAgKTtcblxuICAgICAgICBsZXQgcHVycG9zZXNDb250ZW50O1xuICAgICAgICBpZiAocHVycG9zZXMubGVuZ3RoID4gMClcbiAgICAgICAgICAgIHB1cnBvc2VzQ29udGVudCA9IChcbiAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJwdXJwb3Nlc1wiPlxuICAgICAgICAgICAgICAgICAgICB7dChbXG4gICAgICAgICAgICAgICAgICAgICAgICAncHVycG9zZScsXG4gICAgICAgICAgICAgICAgICAgICAgICBwdXJwb3Nlcy5sZW5ndGggPiAxID8gJ3B1cnBvc2VzJyA6ICdwdXJwb3NlJyxcbiAgICAgICAgICAgICAgICAgICAgXSl9XG4gICAgICAgICAgICAgICAgICAgIDoge3B1cnBvc2VzVGV4dH1cbiAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICApO1xuXG4gICAgICAgIGNvbnN0IHRvZ2dsZVNlcnZpY2VzVmlzaWJsZSA9IChlKSA9PiB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBjb25zdCBnZXRDdXJyZW50RXhwYW5kZWRTdGF0dXMgPVxuICAgICAgICAgICAgICAgIGUuY3VycmVudFRhcmdldC5nZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnKSA9PT0gJ2ZhbHNlJ1xuICAgICAgICAgICAgICAgICAgICA/IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgIDogdHJ1ZTtcbiAgICAgICAgICAgIGUuY3VycmVudFRhcmdldC5zZXRBdHRyaWJ1dGUoXG4gICAgICAgICAgICAgICAgJ2FyaWEtZXhwYW5kZWQnLFxuICAgICAgICAgICAgICAgICFnZXRDdXJyZW50RXhwYW5kZWRTdGF0dXNcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgc2VydmljZXNWaXNpYmxlOiAhc2VydmljZXNWaXNpYmxlIH0pO1xuICAgICAgICB9O1xuXG4gICAgICAgIGNvbnN0IGhhbmRsZVNwYWNlID0gKGUpID0+IHtcbiAgICAgICAgICAgIC8vIFNwYWNlYmFyIHByZXNzXG4gICAgICAgICAgICBpZiAoZS5rZXlDb2RlID09PSAzMikge1xuICAgICAgICAgICAgICAgIHRvZ2dsZVNlcnZpY2VzVmlzaWJsZShlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBjb25zdCB0b2dnbGUgPSAoc2VydmljZXMsIHZhbHVlKSA9PiB7XG4gICAgICAgICAgICBzZXJ2aWNlcy5tYXAoKHNlcnZpY2UpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIXNlcnZpY2UucmVxdWlyZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgbWFuYWdlci51cGRhdGVDb25zZW50KHNlcnZpY2UubmFtZSwgdmFsdWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuXG4gICAgICAgIGNvbnN0IHNlcnZpY2VJdGVtcyA9IChcbiAgICAgICAgICAgIDxTZXJ2aWNlSXRlbXNcbiAgICAgICAgICAgICAgICBjb25maWc9e2NvbmZpZ31cbiAgICAgICAgICAgICAgICBsYW5nPXtsYW5nfVxuICAgICAgICAgICAgICAgIHNlcnZpY2VzPXtzZXJ2aWNlc31cbiAgICAgICAgICAgICAgICB0b2dnbGU9e3RvZ2dsZX1cbiAgICAgICAgICAgICAgICBjb25zZW50cz17Y29uc2VudHN9XG4gICAgICAgICAgICAgICAgdmlzaWJsZT17c2VydmljZXNWaXNpYmxlfVxuICAgICAgICAgICAgICAgIHQ9e3R9XG4gICAgICAgICAgICAvPlxuICAgICAgICApO1xuXG4gICAgICAgIGNvbnN0IGRlc2NyaXB0aW9uVGV4dCA9XG4gICAgICAgICAgICBkZXNjcmlwdGlvbiB8fCB0KFsnIScsICdwdXJwb3NlcycsIG5hbWUsICdkZXNjcmlwdGlvbiddKTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICBpZD17aWR9XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17XG4gICAgICAgICAgICAgICAgICAgICAgICAnY20tbGlzdC1pbnB1dCcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgKHJlcXVpcmVkID8gJyByZXF1aXJlZCcgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgKCFhbGxFbmFibGVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBvbmx5UmVxdWlyZWRFbmFibGVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gJyBvbmx5LXJlcXVpcmVkJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ICcgaGFsZi1jaGVja2VkJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogJycpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYXJpYS1sYWJlbGxlZGJ5PXtgJHt0aXRsZWlkfWB9XG4gICAgICAgICAgICAgICAgICAgIGFyaWEtZGVzY3JpYmVkYnk9e2Ake2lkfS1kZXNjcmlwdGlvbmB9XG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXtyZXF1aXJlZH1cbiAgICAgICAgICAgICAgICAgICAgY2hlY2tlZD17XG4gICAgICAgICAgICAgICAgICAgICAgICBhbGxFbmFibGVkIHx8ICghYWxsRGlzYWJsZWQgJiYgIW9ubHlSZXF1aXJlZEVuYWJsZWQpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgIGh0bWxGb3I9e2lkfVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjbS1saXN0LWxhYmVsXCJcbiAgICAgICAgICAgICAgICAgICAgey4uLihyZXF1aXJlZCA/IHsgdGFiSW5kZXg6ICcwJyB9IDoge30pfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiY20tbGlzdC10aXRsZVwiIGlkPXtgJHt0aXRsZWlkfWB9PlxuICAgICAgICAgICAgICAgICAgICAgICAge3RpdGxlIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdChbJyEnLCAncHVycG9zZXMnLCBuYW1lLCAndGl0bGU/J10pIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXNUaXRsZShuYW1lKX1cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICB7cmVxdWlyZWRUZXh0fVxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJjbS1zd2l0Y2hcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2xpZGVyIHJvdW5kIGFjdGl2ZVwiPjwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICA8ZGl2IGlkPXtgJHtpZH0tZGVzY3JpcHRpb25gfT5cbiAgICAgICAgICAgICAgICAgICAge2Rlc2NyaXB0aW9uVGV4dCAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJjbS1saXN0LWRlc2NyaXB0aW9uXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPFRleHQgY29uZmlnPXtjb25maWd9IHRleHQ9e2Rlc2NyaXB0aW9uVGV4dH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAge3B1cnBvc2VzQ29udGVudH1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICB7c2VydmljZXMubGVuZ3RoID4gMCAmJiAoXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY20tc2VydmljZXNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY20tY2FyZXRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPVwiI1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyaWEtaGFzcG9wdXA9XCJ0cnVlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJpYS1leHBhbmRlZD1cImZhbHNlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFiSW5kZXg9XCIwXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17dG9nZ2xlU2VydmljZXNWaXNpYmxlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbktleURvd249e2hhbmRsZVNwYWNlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyhzZXJ2aWNlc1Zpc2libGUgJiYgPHNwYW4+JiM4NTkzOzwvc3Bhbj4pIHx8IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPiYjODU5NTs8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICl9eycgJ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3NlcnZpY2VzLmxlbmd0aH17JyAnfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dChbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAncHVycG9zZUl0ZW0nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmljZXMubGVuZ3RoID4gMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gJ3NlcnZpY2VzJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogJ3NlcnZpY2UnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx1bFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdjbS1jb250ZW50JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChzZXJ2aWNlc1Zpc2libGUgPyAnIGV4cGFuZGVkJyA6ICcnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7c2VydmljZUl0ZW1zfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICk7XG4gICAgfVxufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQdXJwb3NlSXRlbSBmcm9tICcuL3B1cnBvc2UtaXRlbSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFB1cnBvc2VzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHByb3BzLm1hbmFnZXIud2F0Y2godGhpcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBjb25zZW50czogcHJvcHMubWFuYWdlci5jb25zZW50cyxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgICAgdGhpcy5wcm9wcy5tYW5hZ2VyLnVud2F0Y2godGhpcyk7XG4gICAgfVxuXG4gICAgdXBkYXRlKG9iaiwgdHlwZSwgZGF0YSkge1xuICAgICAgICBpZiAob2JqID09PSB0aGlzLnByb3BzLm1hbmFnZXIgJiYgdHlwZSA9PT0gJ2NvbnNlbnRzJylcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBjb25zZW50czogZGF0YSB9KTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgY29uZmlnLCB0LCBtYW5hZ2VyLCBsYW5nIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCB7IGNvbnNlbnRzIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICBjb25zdCB7IHNlcnZpY2VzIH0gPSBjb25maWc7XG5cbiAgICAgICAgY29uc3QgcHVycG9zZXMgPSB7fTtcblxuICAgICAgICBmb3IgKGNvbnN0IHNlcnZpY2Ugb2Ygc2VydmljZXMpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgcHVycG9zZSBvZiBzZXJ2aWNlLnB1cnBvc2VzKSB7XG4gICAgICAgICAgICAgICAgaWYgKHB1cnBvc2VzW3B1cnBvc2VdID09PSB1bmRlZmluZWQpIHB1cnBvc2VzW3B1cnBvc2VdID0gW107XG4gICAgICAgICAgICAgICAgcHVycG9zZXNbcHVycG9zZV0ucHVzaChzZXJ2aWNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHRvZ2dsZSA9IChwdXJwb3NlS2V5cywgdmFsdWUpID0+IHtcbiAgICAgICAgICAgIHB1cnBvc2VLZXlzLm1hcCgocHVycG9zZSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHB1cnBvc2VTZXJ2aWNlcyA9IHB1cnBvc2VzW3B1cnBvc2VdO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgc2VydmljZSBvZiBwdXJwb3NlU2VydmljZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFzZXJ2aWNlLnJlcXVpcmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYW5hZ2VyLnVwZGF0ZUNvbnNlbnQoc2VydmljZS5uYW1lLCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcblxuICAgICAgICBjb25zdCB0b2dnbGVBbGwgPSAodmFsdWUpID0+IHtcbiAgICAgICAgICAgIHRvZ2dsZShPYmplY3Qua2V5cyhwdXJwb3NlcyksIHZhbHVlKTtcbiAgICAgICAgfTtcblxuICAgICAgICBjb25zdCBjaGVja1NlcnZpY2VzID0gKHNlcnZpY2VzKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBzdGF0dXMgPSB7XG4gICAgICAgICAgICAgICAgYWxsRW5hYmxlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBvbmx5UmVxdWlyZWRFbmFibGVkOiB0cnVlLFxuICAgICAgICAgICAgICAgIGFsbERpc2FibGVkOiB0cnVlLFxuICAgICAgICAgICAgICAgIGFsbFJlcXVpcmVkOiB0cnVlLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGZvciAoY29uc3Qgc2VydmljZSBvZiBzZXJ2aWNlcykge1xuICAgICAgICAgICAgICAgIGlmICghc2VydmljZS5yZXF1aXJlZCkgc3RhdHVzLmFsbFJlcXVpcmVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgaWYgKGNvbnNlbnRzW3NlcnZpY2UubmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFzZXJ2aWNlLnJlcXVpcmVkKSBzdGF0dXMub25seVJlcXVpcmVkRW5hYmxlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICBzdGF0dXMuYWxsRGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCFzZXJ2aWNlLnJlcXVpcmVkKSBzdGF0dXMuYWxsRW5hYmxlZCA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHN0YXR1cy5hbGxEaXNhYmxlZCkgc3RhdHVzLm9ubHlSZXF1aXJlZEVuYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIHJldHVybiBzdGF0dXM7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHB1cnBvc2VPcmRlciA9IGNvbmZpZy5wdXJwb3NlT3JkZXIgfHwgW11cbiAgICAgICAgY29uc3QgcHVycG9zZUl0ZW1zID0gT2JqZWN0LmtleXMocHVycG9zZXMpLnNvcnQoKGEsYikgPT4gcHVycG9zZU9yZGVyLmluZGV4T2YoYSktcHVycG9zZU9yZGVyLmluZGV4T2YoYikpLm1hcCgocHVycG9zZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdG9nZ2xlUHVycG9zZSA9ICh2YWx1ZSkgPT4ge1xuICAgICAgICAgICAgICAgIHRvZ2dsZShbcHVycG9zZV0sIHZhbHVlKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjb25zdCBzdGF0dXMgPSBjaGVja1NlcnZpY2VzKHB1cnBvc2VzW3B1cnBvc2VdKTtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGxpIGtleT17cHVycG9zZX0gY2xhc3NOYW1lPVwiY20tcHVycG9zZVwiPlxuICAgICAgICAgICAgICAgICAgICA8UHVycG9zZUl0ZW1cbiAgICAgICAgICAgICAgICAgICAgICAgIGFsbEVuYWJsZWQ9e3N0YXR1cy5hbGxFbmFibGVkfVxuICAgICAgICAgICAgICAgICAgICAgICAgYWxsRGlzYWJsZWQ9e3N0YXR1cy5hbGxEaXNhYmxlZH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9ubHlSZXF1aXJlZEVuYWJsZWQ9e3N0YXR1cy5vbmx5UmVxdWlyZWRFbmFibGVkfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ9e3N0YXR1cy5hbGxSZXF1aXJlZH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNlbnRzPXtjb25zZW50c31cbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9e3B1cnBvc2V9XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25maWc9e2NvbmZpZ31cbiAgICAgICAgICAgICAgICAgICAgICAgIGxhbmc9e2xhbmd9XG4gICAgICAgICAgICAgICAgICAgICAgICBtYW5hZ2VyPXttYW5hZ2VyfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25Ub2dnbGU9e3RvZ2dsZVB1cnBvc2V9XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXJ2aWNlcz17cHVycG9zZXNbcHVycG9zZV19XG4gICAgICAgICAgICAgICAgICAgICAgICB0PXt0fVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICApO1xuICAgICAgICB9KTtcblxuICAgICAgICBjb25zdCB0b2dnbGFibGVQdXJwb3NlcyA9IE9iamVjdC5rZXlzKHB1cnBvc2VzKS5maWx0ZXIoKHB1cnBvc2UpID0+IHtcbiAgICAgICAgICAgIGZvciAoY29uc3Qgc2VydmljZSBvZiBwdXJwb3Nlc1twdXJwb3NlXSkge1xuICAgICAgICAgICAgICAgIGlmICghc2VydmljZS5yZXF1aXJlZCkgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnN0IHN0YXR1cyA9IGNoZWNrU2VydmljZXMoc2VydmljZXMpO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8dWwgY2xhc3NOYW1lPVwiY20tcHVycG9zZXNcIj5cbiAgICAgICAgICAgICAgICB7cHVycG9zZUl0ZW1zfVxuICAgICAgICAgICAgICAgIHt0b2dnbGFibGVQdXJwb3Nlcy5sZW5ndGggPiAxICYmIChcbiAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzTmFtZT1cImNtLXB1cnBvc2UgY20tdG9nZ2xlLWFsbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPFB1cnBvc2VJdGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cImRpc2FibGVBbGxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPXt0KFsnc2VydmljZScsICdkaXNhYmxlQWxsJywgJ3RpdGxlJ10pfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3NlcnZpY2UnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGlzYWJsZUFsbCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkZXNjcmlwdGlvbicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxsRGlzYWJsZWQ9e3N0YXR1cy5hbGxEaXNhYmxlZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGxFbmFibGVkPXtzdGF0dXMuYWxsRW5hYmxlZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbmx5UmVxdWlyZWRFbmFibGVkPXtzdGF0dXMub25seVJlcXVpcmVkRW5hYmxlZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblRvZ2dsZT17dG9nZ2xlQWxsfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hbmFnZXI9e21hbmFnZXJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc2VudHM9e2NvbnNlbnRzfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpZz17Y29uZmlnfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhbmc9e2xhbmd9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmljZXM9e1tdfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHQ9e3R9XG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICApO1xuICAgIH1cbn1cbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBDbG9zZSB9IGZyb20gJy4vaWNvbnMnO1xuaW1wb3J0IFNlcnZpY2VzIGZyb20gJy4vc2VydmljZXMnO1xuaW1wb3J0IFB1cnBvc2VzIGZyb20gJy4vcHVycG9zZXMnO1xuaW1wb3J0IFRleHQgZnJvbSAnLi90ZXh0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29uc2VudE1vZGFsIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgaWYodGhpcy5jb25zZW50TW9kYWxSZWYpIHtcbiAgICAgICAgICAgIHRoaXMuY29uc2VudE1vZGFsUmVmLmZvY3VzKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIGhpZGUsXG4gICAgICAgICAgICBjb25maXJtaW5nLFxuICAgICAgICAgICAgc2F2ZUFuZEhpZGUsXG4gICAgICAgICAgICBhY2NlcHRBbmRIaWRlLFxuICAgICAgICAgICAgZGVjbGluZUFuZEhpZGUsXG4gICAgICAgICAgICBjb25maWcsXG4gICAgICAgICAgICBtYW5hZ2VyLFxuICAgICAgICAgICAgbGFuZyxcbiAgICAgICAgICAgIHQsXG4gICAgICAgIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCB7IGVtYmVkZGVkIH0gPSBjb25maWc7XG4gICAgICAgIGNvbnN0IGdyb3VwQnlQdXJwb3NlID1cbiAgICAgICAgICAgIGNvbmZpZy5ncm91cEJ5UHVycG9zZSAhPT0gdW5kZWZpbmVkID8gY29uZmlnLmdyb3VwQnlQdXJwb3NlIDogdHJ1ZTtcblxuICAgICAgICBsZXQgY2xvc2VMaW5rO1xuICAgICAgICBpZiAoIWNvbmZpZy5tdXN0Q29uc2VudCkge1xuICAgICAgICAgICAgY2xvc2VMaW5rID0gKFxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgdGl0bGU9e3QoWydjbG9zZSddKX1cbiAgICAgICAgICAgICAgICAgICAgYXJpYS1sYWJlbD17dChbJ2Nsb3NlJ10pfVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJoaWRlXCJcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2hpZGV9XG4gICAgICAgICAgICAgICAgICAgIHRhYkluZGV4PVwiMFwiXG4gICAgICAgICAgICAgICAgICAgIHJlZj17KGRpdikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb25zZW50TW9kYWxSZWYgPSBkaXY7XG4gICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8Q2xvc2UgdD17dH0gLz5cbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgZGVjbGluZUJ1dHRvbjtcblxuICAgICAgICBpZiAoIWNvbmZpZy5oaWRlRGVjbGluZUFsbCAmJiAhbWFuYWdlci5jb25maXJtZWQpXG4gICAgICAgICAgICBkZWNsaW5lQnV0dG9uID0gKFxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e2NvbmZpcm1pbmd9XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNtLWJ0biBjbS1idG4tZGVjbGluZSBjbS1idG4tZGFuZ2VyIGNuLWRlY2xpbmVcIlxuICAgICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17ZGVjbGluZUFuZEhpZGV9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICB7dChbJ2RlY2xpbmUnXSl9XG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICApO1xuICAgICAgICBsZXQgYWNjZXB0QWxsQnV0dG9uO1xuICAgICAgICBjb25zdCBhY2NlcHRCdXR0b24gPSAoXG4gICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgZGlzYWJsZWQ9e2NvbmZpcm1pbmd9XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY20tYnRuIGNtLWJ0bi1zdWNjZXNzIGNtLWJ0bi1pbmZvIGNtLWJ0bi1hY2NlcHRcIlxuICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3NhdmVBbmRIaWRlfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHt0KFttYW5hZ2VyLmNvbmZpcm1lZCA/ICdzYXZlJyA6ICdhY2NlcHRTZWxlY3RlZCddKX1cbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICApO1xuICAgICAgICBpZiAoY29uZmlnLmFjY2VwdEFsbCAmJiAhbWFuYWdlci5jb25maXJtZWQpIHtcbiAgICAgICAgICAgIGFjY2VwdEFsbEJ1dHRvbiA9IChcbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXtjb25maXJtaW5nfVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjbS1idG4gY20tYnRuLXN1Y2Nlc3MgY20tYnRuLWFjY2VwdC1hbGxcIlxuICAgICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17YWNjZXB0QW5kSGlkZX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIHt0KFsnYWNjZXB0QWxsJ10pfVxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBwcFVybDtcbiAgICAgICAgLy8gdG8gZG86IGRlcHJlY2F0ZSBhbmQgcmVtb3ZlIHRoaXMgKGFsc28sIHRoaXMgaXMgZHVwbGljYXRlZCBmcm9tIHRoZSBub3RpY2UpXG4gICAgICAgIGlmIChjb25maWcucHJpdmFjeVBvbGljeSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbmZpZy5wcml2YWN5UG9saWN5ID09PSAnc3RyaW5nJylcbiAgICAgICAgICAgICAgICBwcFVybCA9IGNvbmZpZy5wcml2YWN5UG9saWN5O1xuICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIGNvbmZpZy5wcml2YWN5UG9saWN5ID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICAgIHBwVXJsID1cbiAgICAgICAgICAgICAgICAgICAgY29uZmlnLnByaXZhY3lQb2xpY3lbbGFuZ10gfHwgY29uZmlnLnByaXZhY3lQb2xpY3kuZGVmYXVsdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIHRoaXMgaXMgdGhlIG1vZGVybiB3YXlcbiAgICAgICAgICAgIHBwVXJsID0gdChbJyEnLCAncHJpdmFjeVBvbGljeVVybCddLCB7IGxhbmc6IGxhbmcgfSk7XG4gICAgICAgICAgICBpZiAocHBVcmwgIT09IHVuZGVmaW5lZCkgcHBVcmwgPSBwcFVybC5qb2luKCcnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBwcExpbms7XG4gICAgICAgIGlmIChwcFVybCAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgcHBMaW5rID0gKFxuICAgICAgICAgICAgICAgIDxhIGtleT1cInBwTGlua1wiIGhyZWY9e3BwVXJsfSB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lclwiPlxuICAgICAgICAgICAgICAgICAgICB7dChbJ3ByaXZhY3lQb2xpY3knLCAnbmFtZSddKX1cbiAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICApO1xuXG4gICAgICAgIGxldCBzZXJ2aWNlc09yUHVycG9zZXM7XG5cbiAgICAgICAgaWYgKGdyb3VwQnlQdXJwb3NlKVxuICAgICAgICAgICAgc2VydmljZXNPclB1cnBvc2VzID0gKFxuICAgICAgICAgICAgICAgIDxQdXJwb3NlcyB0PXt0fSBjb25maWc9e2NvbmZpZ30gbWFuYWdlcj17bWFuYWdlcn0gbGFuZz17bGFuZ30gLz5cbiAgICAgICAgICAgICk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHNlcnZpY2VzT3JQdXJwb3NlcyA9IChcbiAgICAgICAgICAgICAgICA8U2VydmljZXMgdD17dH0gY29uZmlnPXtjb25maWd9IG1hbmFnZXI9e21hbmFnZXJ9IGxhbmc9e2xhbmd9IC8+XG4gICAgICAgICAgICApO1xuXG4gICAgICAgIGNvbnN0IGlubmVyTW9kYWwgPSAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNtLW1vZGFsIGNtLWtsYXJvXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjbS1oZWFkZXJcIj5cbiAgICAgICAgICAgICAgICAgICAge2Nsb3NlTGlua31cbiAgICAgICAgICAgICAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRpdGxlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpZz17Y29uZmlnfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ9e3QoWydjb25zZW50TW9kYWwnLCAndGl0bGUnXSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8L2gxPlxuICAgICAgICAgICAgICAgICAgICA8cD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxUZXh0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlnPXtjb25maWd9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dD17W3QoWydjb25zZW50TW9kYWwnLCAnZGVzY3JpcHRpb24nXSldLmNvbmNhdChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKHBwTGluayAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWycgJ10uY29uY2F0KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHQoWydwcml2YWN5UG9saWN5JywgJ3RleHQnXSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcml2YWN5UG9saWN5OiBwcExpbmssXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjbS1ib2R5XCI+e3NlcnZpY2VzT3JQdXJwb3Nlc308L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNtLWZvb3RlclwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNtLWZvb3Rlci1idXR0b25zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7ZGVjbGluZUJ1dHRvbn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHthY2NlcHRCdXR0b259XG4gICAgICAgICAgICAgICAgICAgICAgICB7YWNjZXB0QWxsQnV0dG9ufVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgeyFjb25maWcuZGlzYWJsZVBvd2VyZWRCeSAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJjbS1wb3dlcmVkLWJ5XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj17XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25maWcucG93ZXJlZEJ5IHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnaHR0cHM6Ly9raXByb3RlY3QuY29tL2tsYXJvJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbD1cIm5vb3BlbmVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0KFsncG93ZXJlZEJ5J10pfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuXG4gICAgICAgIGlmIChlbWJlZGRlZClcbiAgICAgICAgICAgIHJldHVybiA8ZGl2IGlkPVwiY29va2llU2NyZWVuXCIgY2xhc3NOYW1lPVwiY29va2llLW1vZGFsIGNtLWVtYmVkZGVkXCI+e2lubmVyTW9kYWx9PC9kaXY+O1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGlkPVwiY29va2llU2NyZWVuXCIgY2xhc3NOYW1lPVwiY29va2llLW1vZGFsXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjbS1iZ1wiIG9uQ2xpY2s9e2hpZGV9IC8+XG4gICAgICAgICAgICAgICAge2lubmVyTW9kYWx9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG4iLCJleHBvcnQgZnVuY3Rpb24gZ2V0UHVycG9zZXMoY29uZmlnKSB7XG4gICAgY29uc3QgcHVycG9zZXMgPSBuZXcgU2V0KFtdKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvbmZpZy5zZXJ2aWNlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBzZXJ2aWNlUHVycG9zZXMgPSBjb25maWcuc2VydmljZXNbaV0ucHVycG9zZXMgfHwgW107XG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgc2VydmljZVB1cnBvc2VzLmxlbmd0aDsgaisrKVxuICAgICAgICAgICAgcHVycG9zZXMuYWRkKHNlcnZpY2VQdXJwb3Nlc1tqXSk7XG4gICAgfVxuICAgIHJldHVybiBBcnJheS5mcm9tKHB1cnBvc2VzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZShlZCwgZCwgb3ZlcndyaXRlKSB7XG4gICAgaWYgKG92ZXJ3cml0ZSA9PT0gdW5kZWZpbmVkKSBvdmVyd3JpdGUgPSB0cnVlO1xuICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhkKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3Qga2V5ID0ga2V5c1tpXTtcbiAgICAgICAgY29uc3QgdmQgPSBkW2tleV07XG4gICAgICAgIGNvbnN0IHZlZCA9IGVkW2tleV07XG4gICAgICAgIGlmICh0eXBlb2YgdmQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBpZiAob3ZlcndyaXRlIHx8IHZlZCA9PT0gdW5kZWZpbmVkKSBlZFtrZXldID0gdmQ7XG4gICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHZkID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2ZWQgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgdXBkYXRlKHZlZCwgdmQsIG92ZXJ3cml0ZSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKG92ZXJ3cml0ZSB8fCB2ZWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIGVkW2tleV0gPSB2ZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZWQ7XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IENvbnNlbnRNb2RhbCBmcm9tICcuL2NvbnNlbnQtbW9kYWwnO1xuaW1wb3J0IHsgZ2V0UHVycG9zZXMgfSBmcm9tICcuLi91dGlscy9jb25maWcnO1xuaW1wb3J0IFRleHQgZnJvbSAnLi90ZXh0JztcbmltcG9ydCB7IGFzVGl0bGUgfSBmcm9tICcuLi91dGlscy9zdHJpbmdzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29uc2VudE5vdGljZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgbW9kYWw6IHByb3BzLm1vZGFsLFxuICAgICAgICAgICAgY29uZmlybWluZzogZmFsc2UsXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xuICAgICAgICBpZiAocHJldlByb3BzLm1vZGFsICE9PSB0aGlzLnByb3BzLm1vZGFsKVxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IG1vZGFsOiB0aGlzLnByb3BzLm1vZGFsIH0pO1xuXG4gICAgICAgIGlmICh0aGlzLm5vdGljZVJlZikge1xuICAgICAgICAgICAgdGhpcy5ub3RpY2VSZWYuZm9jdXMoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGV4ZWN1dGVCdXR0b25DbGlja2VkID0gKHNldENoYW5nZWRBbGwsIGNoYW5nZWRBbGxWYWx1ZSwgZXZlbnRUeXBlKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgbW9kYWwgfSA9IHRoaXMuc3RhdGU7XG5cbiAgICAgICAgbGV0IGNoYW5nZWRTZXJ2aWNlcyA9IDA7XG5cbiAgICAgICAgaWYgKHNldENoYW5nZWRBbGwpXG4gICAgICAgICAgICBjaGFuZ2VkU2VydmljZXMgPSB0aGlzLnByb3BzLm1hbmFnZXIuY2hhbmdlQWxsKGNoYW5nZWRBbGxWYWx1ZSk7XG5cbiAgICAgICAgY29uc3QgY29uZmlybWVkID0gdGhpcy5wcm9wcy5tYW5hZ2VyLmNvbmZpcm1lZDtcblxuICAgICAgICB0aGlzLnByb3BzLm1hbmFnZXIuc2F2ZUFuZEFwcGx5Q29uc2VudHMoZXZlbnRUeXBlKTtcblxuICAgICAgICBpZiAoXG4gICAgICAgICAgICBzZXRDaGFuZ2VkQWxsICYmXG4gICAgICAgICAgICAhY29uZmlybWVkICYmXG4gICAgICAgICAgICAobW9kYWwgfHwgdGhpcy5wcm9wcy5jb25maWcubXVzdENvbnNlbnQpXG4gICAgICAgICkge1xuICAgICAgICAgICAgY29uc3QgY2xvc2UgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGNvbmZpcm1pbmc6IGZhbHNlIH0pO1xuICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuaGlkZSgpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGNvbmZpcm1pbmc6IHRydWUgfSk7XG4gICAgICAgICAgICBpZiAoY2hhbmdlZFNlcnZpY2VzID09PSAwKSBjbG9zZSgpO1xuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChjbG9zZSwgODAwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucHJvcHMuaGlkZSgpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHNhdmVBbmRIaWRlID0gKCkgPT4ge1xuICAgICAgICB0aGlzLmV4ZWN1dGVCdXR0b25DbGlja2VkKGZhbHNlLCBmYWxzZSwgJ3NhdmUnKTtcbiAgICB9O1xuXG4gICAgYWNjZXB0QW5kSGlkZSA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5leGVjdXRlQnV0dG9uQ2xpY2tlZCh0cnVlLCB0cnVlLCAnYWNjZXB0Jyk7XG4gICAgfTtcblxuICAgIGRlY2xpbmVBbmRIaWRlID0gKCkgPT4ge1xuICAgICAgICB0aGlzLmV4ZWN1dGVCdXR0b25DbGlja2VkKHRydWUsIGZhbHNlLCAnZGVjbGluZScpO1xuICAgIH07XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgbGFuZywgY29uZmlnLCBzaG93LCBtYW5hZ2VyLCB0ZXN0aW5nLCB0IH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCB7IGNvbmZpcm1pbmcsIG1vZGFsIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICBjb25zdCB7IGVtYmVkZGVkLCBub3RpY2VBc01vZGFsLCBoaWRlTGVhcm5Nb3JlIH0gPSBjb25maWc7XG5cbiAgICAgICAgLy8gd2UgZXhjbHVkZSBmdW5jdGlvbmFsIHNlcnZpY2VzIGZyb20gdGhpcyBsaXN0LCBhcyB0aGV5IGFyZSBhbHdheXMgcmVxdWlyZWQgYW5kXG4gICAgICAgIC8vIHRoZSB1c2VyIGNhbm5vdCBkZWNsaW5lIHRoZWlyIHVzZS4uLlxuICAgICAgICBjb25zdCBwdXJwb3NlT3JkZXIgPSBjb25maWcucHVycG9zZU9yZGVyIHx8IFtdO1xuICAgICAgICBjb25zdCBwdXJwb3NlcyA9IGdldFB1cnBvc2VzKGNvbmZpZylcbiAgICAgICAgICAgIC5maWx0ZXIoKHB1cnBvc2UpID0+IHB1cnBvc2UgIT09ICdmdW5jdGlvbmFsJylcbiAgICAgICAgICAgIC5zb3J0KChhLCBiKSA9PiBwdXJwb3NlT3JkZXIuaW5kZXhPZihhKSAtIHB1cnBvc2VPcmRlci5pbmRleE9mKGIpKTtcbiAgICAgICAgY29uc3QgcHVycG9zZXNUcmFuc2xhdGlvbnMgPSBwdXJwb3Nlcy5tYXAoXG4gICAgICAgICAgICAocHVycG9zZSkgPT5cbiAgICAgICAgICAgICAgICB0KFsnIScsICdwdXJwb3NlcycsIHB1cnBvc2UsICd0aXRsZT8nXSkgfHwgYXNUaXRsZShwdXJwb3NlKVxuICAgICAgICApO1xuICAgICAgICBsZXQgcHVycG9zZXNUZXh0ID0gJyc7XG4gICAgICAgIGlmIChwdXJwb3Nlc1RyYW5zbGF0aW9ucy5sZW5ndGggPT09IDEpXG4gICAgICAgICAgICBwdXJwb3Nlc1RleHQgPSBwdXJwb3Nlc1RyYW5zbGF0aW9uc1swXTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgcHVycG9zZXNUZXh0ID0gW1xuICAgICAgICAgICAgICAgIC4uLnB1cnBvc2VzVHJhbnNsYXRpb25zLnNsaWNlKDAsIC0yKSxcbiAgICAgICAgICAgICAgICBwdXJwb3Nlc1RyYW5zbGF0aW9ucy5zbGljZSgtMikuam9pbignICYgJyksXG4gICAgICAgICAgICBdLmpvaW4oJywgJyk7XG4gICAgICAgIGxldCBwcFVybDtcbiAgICAgICAgLy8gdG8gZG86IGRlcHJlY2F0ZSBhbmQgcmVtb3ZlIHRoaXNcbiAgICAgICAgaWYgKGNvbmZpZy5wcml2YWN5UG9saWN5ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29uZmlnLnByaXZhY3lQb2xpY3kgPT09ICdzdHJpbmcnKVxuICAgICAgICAgICAgICAgIHBwVXJsID0gY29uZmlnLnByaXZhY3lQb2xpY3k7XG4gICAgICAgICAgICBlbHNlIGlmICh0eXBlb2YgY29uZmlnLnByaXZhY3lQb2xpY3kgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgcHBVcmwgPVxuICAgICAgICAgICAgICAgICAgICBjb25maWcucHJpdmFjeVBvbGljeVtsYW5nXSB8fCBjb25maWcucHJpdmFjeVBvbGljeS5kZWZhdWx0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gdGhpcyBpcyB0aGUgbW9kZXJuIHdheVxuICAgICAgICAgICAgcHBVcmwgPSB0KFsnIScsICdwcml2YWN5UG9saWN5VXJsJ10sIHsgbGFuZzogbGFuZyB9KTtcbiAgICAgICAgICAgIGlmIChwcFVybCAhPT0gdW5kZWZpbmVkKSBwcFVybCA9IHBwVXJsLmpvaW4oJycpO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3Qgc2hvd01vZGFsID0gKGUpID0+IHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBtb2RhbDogdHJ1ZSB9KTtcbiAgICAgICAgfTtcblxuICAgICAgICBjb25zdCBoaWRlTW9kYWwgPSAoKSA9PiB7XG4gICAgICAgICAgICBpZiAoY29uZmlnLm11c3RDb25zZW50ICYmICFjb25maWcuYWNjZXB0QWxsKSByZXR1cm47XG4gICAgICAgICAgICBpZiAobWFuYWdlci5jb25maXJtZWQgJiYgIXRlc3RpbmcpIHRoaXMucHJvcHMuaGlkZSgpO1xuICAgICAgICAgICAgZWxzZSB0aGlzLnNldFN0YXRlKHsgbW9kYWw6IGZhbHNlIH0pO1xuXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5ub3RpY2VSZWYpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ub3RpY2VSZWYuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCAxKTtcbiAgICAgICAgfTtcblxuICAgICAgICBsZXQgY2hhbmdlc1RleHQ7XG4gICAgICAgIGlmIChtYW5hZ2VyLmNoYW5nZWQpXG4gICAgICAgICAgICBjaGFuZ2VzVGV4dCA9IChcbiAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJjbi1jaGFuZ2VzXCI+XG4gICAgICAgICAgICAgICAgICAgIHt0KFsnY29uc2VudE5vdGljZScsICdjaGFuZ2VEZXNjcmlwdGlvbiddKX1cbiAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICApO1xuXG4gICAgICAgIC8vIHdlIG9ubHkgc2hvdyB0aGUgbm90aWNlIGlmIGl0J3MgZXhwbGljaXRseSBkZW1hbmRlZCAoc2hvdz1UcnVlKSwgaWZcbiAgICAgICAgLy8gdGVzdGluZyBtb2RlIGlzIGVuYWJsZWQgKHRlc3Rpbmc9dHJ1ZSkgb3IgaWYgdGhlcmUncyBhIGNvbmZpcm1hdGlvblxuICAgICAgICAvLyBwcm9jZXNzL2FuaW1hdGlvbiBnb2luZyBvbiAoY29uZmlybWluZz10cnVlKVxuICAgICAgICBpZiAoIXNob3cgJiYgIXRlc3RpbmcgJiYgIWNvbmZpcm1pbmcpIHJldHVybiA8ZGl2IC8+O1xuXG4gICAgICAgIGNvbnN0IG5vdGljZUlzVmlzaWJsZSA9XG4gICAgICAgICAgICAoIWNvbmZpZy5tdXN0Q29uc2VudCB8fCBub3RpY2VBc01vZGFsKSAmJlxuICAgICAgICAgICAgIW1hbmFnZXIuY29uZmlybWVkICYmXG4gICAgICAgICAgICAhY29uZmlnLm5vTm90aWNlO1xuXG4gICAgICAgIGNvbnN0IGRlY2xpbmVCdXR0b24gPSBjb25maWcuaGlkZURlY2xpbmVBbGwgPyAoXG4gICAgICAgICAgICAnJ1xuICAgICAgICApIDogKFxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNtLWJ0biBjbS1idG4tZGFuZ2VyIGNuLWRlY2xpbmVcIlxuICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMuZGVjbGluZUFuZEhpZGV9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3QoWydkZWNsaW5lJ10pfVxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICk7XG5cbiAgICAgICAgY29uc3QgYWNjZXB0QnV0dG9uID0gY29uZmlnLmFjY2VwdEFsbCA/IChcbiAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjbS1idG4gY20tYnRuLXN1Y2Nlc3NcIlxuICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMuYWNjZXB0QW5kSGlkZX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7dChbJ29rJ10pfVxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICkgOiAoXG4gICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY20tYnRuIGNtLWJ0bi1zdWNjZXNzXCJcbiAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLnNhdmVBbmRIaWRlfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHt0KFsnb2snXSl9XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgKTtcblxuICAgICAgICBjb25zdCBsZWFybk1vcmVMaW5rID0gKCkgPT5cbiAgICAgICAgICAgIG5vdGljZUFzTW9kYWwgPyAoXG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBrZXk9XCJsZWFybk1vcmVMaW5rXCJcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY20tYnRuIGNtLWJ0bi1sZXJuLW1vcmUgY20tYnRuLWluZm9cIlxuICAgICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17c2hvd01vZGFsfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAge3QoWydjb25zZW50Tm90aWNlJywgJ2xlYXJuTW9yZSddKX1cbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgPGFcbiAgICAgICAgICAgICAgICAgICAga2V5PVwibGVhcm5Nb3JlTGlua1wiXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNtLWxpbmsgY24tbGVhcm4tbW9yZVwiXG4gICAgICAgICAgICAgICAgICAgIGhyZWY9XCIjXCJcbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17c2hvd01vZGFsfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAge3QoWydjb25zZW50Tm90aWNlJywgJ2xlYXJuTW9yZSddKX1cbiAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICApO1xuXG4gICAgICAgIGxldCBwcExpbms7XG5cbiAgICAgICAgaWYgKHBwVXJsICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICBwcExpbmsgPSAoXG4gICAgICAgICAgICAgICAgPGEga2V5PVwicHBMaW5rXCIgaHJlZj17cHBVcmx9PlxuICAgICAgICAgICAgICAgICAgICB7dChbJ3ByaXZhY3lQb2xpY3knLCAnbmFtZSddKX1cbiAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICApO1xuXG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIG1vZGFsIHx8XG4gICAgICAgICAgICAobWFuYWdlci5jb25maXJtZWQgJiYgIXRlc3RpbmcpIHx8XG4gICAgICAgICAgICAoIW1hbmFnZXIuY29uZmlybWVkICYmIGNvbmZpZy5tdXN0Q29uc2VudClcbiAgICAgICAgKVxuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8Q29uc2VudE1vZGFsXG4gICAgICAgICAgICAgICAgICAgIHQ9e3R9XG4gICAgICAgICAgICAgICAgICAgIGxhbmc9e2xhbmd9XG4gICAgICAgICAgICAgICAgICAgIGNvbmZpZz17Y29uZmlnfVxuICAgICAgICAgICAgICAgICAgICBoaWRlPXtoaWRlTW9kYWx9XG4gICAgICAgICAgICAgICAgICAgIGNvbmZpcm1pbmc9e2NvbmZpcm1pbmd9XG4gICAgICAgICAgICAgICAgICAgIGRlY2xpbmVBbmRIaWRlPXt0aGlzLmRlY2xpbmVBbmRIaWRlfVxuICAgICAgICAgICAgICAgICAgICBzYXZlQW5kSGlkZT17dGhpcy5zYXZlQW5kSGlkZX1cbiAgICAgICAgICAgICAgICAgICAgYWNjZXB0QW5kSGlkZT17dGhpcy5hY2NlcHRBbmRIaWRlfVxuICAgICAgICAgICAgICAgICAgICBtYW5hZ2VyPXttYW5hZ2VyfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApO1xuXG4gICAgICAgIGNvbnN0IG5vdGljZSA9IChcbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICByb2xlPVwiZGlhbG9nXCJcbiAgICAgICAgICAgICAgICBhcmlhLWRlc2NyaWJlZGJ5PVwiaWQtY29va2llLW5vdGljZVwiXG4gICAgICAgICAgICAgICAgYXJpYS1sYWJlbGxlZGJ5PVwiaWQtY29va2llLXRpdGxlXCJcbiAgICAgICAgICAgICAgICBpZD1cImtsYXJvLWNvb2tpZS1ub3RpY2VcIlxuICAgICAgICAgICAgICAgIHRhYkluZGV4PVwiMFwiXG4gICAgICAgICAgICAgICAgYXV0b0ZvY3VzXG4gICAgICAgICAgICAgICAgcmVmPXsoZGl2KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubm90aWNlUmVmID0gZGl2O1xuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgY29va2llLW5vdGljZSAke1xuICAgICAgICAgICAgICAgICAgICAhbm90aWNlSXNWaXNpYmxlICYmICF0ZXN0aW5nID8gJ2Nvb2tpZS1ub3RpY2UtaGlkZGVuJyA6ICcnXG4gICAgICAgICAgICAgICAgfSAke25vdGljZUFzTW9kYWwgPyAnY29va2llLW1vZGFsLW5vdGljZScgOiAnJ30gJHtcbiAgICAgICAgICAgICAgICAgICAgZW1iZWRkZWQgPyAnY24tZW1iZWRkZWQnIDogJydcbiAgICAgICAgICAgICAgICB9YH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNuLWJvZHlcIj5cbiAgICAgICAgICAgICAgICAgICAge3QoWychJywgJ2NvbnNlbnROb3RpY2UnLCAndGl0bGUnXSkgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgPGgyIGlkPVwiaWQtY29va2llLXRpdGxlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3QoWydjb25zZW50Tm90aWNlJywgJ3RpdGxlJ10pfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9oMj5cbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgPHAgaWQ9XCJpZC1jb29raWUtbm90aWNlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpZz17Y29uZmlnfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ9e3QoWydjb25zZW50Tm90aWNlJywgJ2Rlc2NyaXB0aW9uJ10sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHVycG9zZXM6IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmcga2V5PVwic3Ryb25nXCI+e3B1cnBvc2VzVGV4dH08L3N0cm9uZz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpdmFjeVBvbGljeTogcHBMaW5rLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWFybk1vcmVMaW5rOiBsZWFybk1vcmVMaW5rKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgICAgIHt0ZXN0aW5nICYmIDxwPnt0KFsnY29uc2VudE5vdGljZScsICd0ZXN0aW5nJ10pfTwvcD59XG4gICAgICAgICAgICAgICAgICAgIHtjaGFuZ2VzVGV4dH1cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjbi1va1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgeyFoaWRlTGVhcm5Nb3JlICYmIGxlYXJuTW9yZUxpbmsoKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY24tYnV0dG9uc1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtkZWNsaW5lQnV0dG9ufVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHthY2NlcHRCdXR0b259XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcblxuICAgICAgICBpZiAoIW5vdGljZUFzTW9kYWwpIHJldHVybiBub3RpY2U7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgaWQ9XCJjb29raWVTY3JlZW5cIiBjbGFzc05hbWU9XCJjb29raWUtbW9kYWxcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNtLWJnXCIgLz5cbiAgICAgICAgICAgICAgICB7bm90aWNlfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBDb25zZW50Tm90aWNlIGZyb20gJy4vY29uc2VudC1ub3RpY2UnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBcHAgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgcHJvcHMubWFuYWdlci53YXRjaCh0aGlzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIHNob3c6IHByb3BzLnNob3cgPiAwIHx8ICFwcm9wcy5tYW5hZ2VyLmNvbmZpcm1lZCxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgICAgdGhpcy5wcm9wcy5tYW5hZ2VyLnVud2F0Y2godGhpcyk7XG4gICAgfVxuXG4gICAgdXBkYXRlKG9iaiwgdHlwZSkge1xuICAgICAgICBpZiAob2JqID09PSB0aGlzLnByb3BzLm1hbmFnZXIgJiYgdHlwZSA9PT0gJ2FwcGx5Q29uc2VudHMnKSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMucHJvcHMuY29uZmlnLmVtYmVkZGVkICYmIHRoaXMucHJvcHMubWFuYWdlci5jb25maXJtZWQpXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IHNob3c6IGZhbHNlIH0pO1xuICAgICAgICAgICAgZWxzZSB0aGlzLmZvcmNlVXBkYXRlKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBub3RpZnlBcGkoKSB7XG4gICAgICAgIGNvbnN0IHsgYXBpLCBtb2RhbCwgc2hvdywgY29uZmlnIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBpZiAoYXBpICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGlmIChtb2RhbCB8fCBzaG93ID4gMCkgcmV0dXJuO1xuICAgICAgICAgICAgaWYgKCF0aGlzLnByb3BzLm1hbmFnZXIuY29uZmlybWVkKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc2hvd25CZWZvcmUgPVxuICAgICAgICAgICAgICAgICAgICB0aGlzLnByb3BzLm1hbmFnZXIuYXV4aWxpYXJ5U3RvcmUuZ2V0V2l0aEtleShcbiAgICAgICAgICAgICAgICAgICAgICAgICdzaG93bi1iZWZvcmUnXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgaWYgKCFzaG93bkJlZm9yZSkge1xuICAgICAgICAgICAgICAgICAgICBhcGkudXBkYXRlKHRoaXMsICdzaG93Tm90aWNlJywgeyBjb25maWc6IGNvbmZpZyB9KTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9wcy5tYW5hZ2VyLmF1eGlsaWFyeVN0b3JlLnNldFdpdGhLZXkoXG4gICAgICAgICAgICAgICAgICAgICAgICAnc2hvd24tYmVmb3JlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRydWVcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgdGhpcy5ub3RpZnlBcGkoKTtcbiAgICB9XG5cbiAgICBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgICAgIC8vIHByb3BzLnNob3cgaXMgYSBudW1iZXIgdGhhdCBpcyBpbmNyZW1lbnRlZCAoc28gdGhhdCB3ZSBjYW4gZGV0ZWN0XG4gICAgICAgIC8vIHJlcGVhdGVkIGNhbGxzIHRvIHRoZSBcInNob3dcIiBmdW5jdGlvbilcbiAgICAgICAgaWYgKHByZXZQcm9wcy5zaG93ID09PSB0aGlzLnByb3BzLnNob3cpIHJldHVybjtcbiAgICAgICAgdGhpcy5ub3RpZnlBcGkoKTtcbiAgICAgICAgY29uc3Qgc2hvd1N0YXRlID0gdGhpcy5wcm9wcy5zaG93ID4gMCB8fCAhdGhpcy5wcm9wcy5tYW5hZ2VyLmNvbmZpcm1lZDtcbiAgICAgICAgaWYgKHNob3dTdGF0ZSAhPT0gdGhpcy5zdGF0ZS5zaG93KSB0aGlzLnNldFN0YXRlKHsgc2hvdzogc2hvd1N0YXRlIH0pO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyBjb25maWcsIHQsIGxhbmcsIHRlc3RpbmcsIG1hbmFnZXIsIG1vZGFsIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCB7IHNob3cgfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIGNvbnN0IHsgYWRkaXRpb25hbENsYXNzLCBlbWJlZGRlZCwgc3R5bGVQcmVmaXggfSA9IGNvbmZpZztcblxuICAgICAgICBjb25zdCBoaWRlID0gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKCFlbWJlZGRlZCkgdGhpcy5zZXRTdGF0ZSh7IHNob3c6IGZhbHNlIH0pO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgIGxhbmc9e2xhbmd9XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtcbiAgICAgICAgICAgICAgICAgICAgKHN0eWxlUHJlZml4IHx8ICdrbGFybycpICtcbiAgICAgICAgICAgICAgICAgICAgKGFkZGl0aW9uYWxDbGFzcyAhPT0gdW5kZWZpbmVkID8gJyAnICsgYWRkaXRpb25hbENsYXNzIDogJycpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxDb25zZW50Tm90aWNlXG4gICAgICAgICAgICAgICAgICAgIGtleT17J2FwcC0nICsgdGhpcy5wcm9wcy5zaG93fVxuICAgICAgICAgICAgICAgICAgICB0PXt0fVxuICAgICAgICAgICAgICAgICAgICB0ZXN0aW5nPXt0ZXN0aW5nfVxuICAgICAgICAgICAgICAgICAgICBzaG93PXtzaG93fVxuICAgICAgICAgICAgICAgICAgICBsYW5nPXtsYW5nfVxuICAgICAgICAgICAgICAgICAgICBtb2RhbD17bW9kYWx9XG4gICAgICAgICAgICAgICAgICAgIGhpZGU9e2hpZGV9XG4gICAgICAgICAgICAgICAgICAgIGNvbmZpZz17Y29uZmlnfVxuICAgICAgICAgICAgICAgICAgICBtYW5hZ2VyPXttYW5hZ2VyfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgYXNUaXRsZSB9IGZyb20gJy4uL3V0aWxzL3N0cmluZ3MnO1xuaW1wb3J0IHsgdCBhcyB0dCB9IGZyb20gJy4uL3V0aWxzL2kxOG4nO1xuaW1wb3J0IHsgc2hvdyBhcyBzaG93TW9kYWwgfSBmcm9tICcuLi9saWInXG5cbmNvbnN0IENvbnRleHR1YWxDb25zZW50Tm90aWNlID0gKHttYW5hZ2VyLCBzdHlsZSwgY29uZmlnLCB0LCBsYW5nLCBzZXJ2aWNlfSkgPT4ge1xuXG4gICAgY29uc3QgW3VwZGF0ZUNudCwgc2V0VXBkYXRlQ250XSA9IHVzZVN0YXRlKDApXG5cbiAgICBjb25zdCBkZWNsaW5lID0gKCkgPT4ge31cbiAgICBjb25zdCBhY2NlcHQgPSAoKSA9PiB7XG4gICAgICAgIG1hbmFnZXIudXBkYXRlQ29uc2VudChzZXJ2aWNlLm5hbWUsIHRydWUpXG4gICAgICAgIGlmIChtYW5hZ2VyLmNvbmZpcm1lZCl7IC8vIHdlIHBlcm1hbmVudGx5IHNhdmUgdGhlIGNvbnNlbnQgc3RhdGVcbiAgICAgICAgICAgIG1hbmFnZXIuc2F2ZUNvbnNlbnRzKCdjb250ZXh0dWFsLWFjY2VwdCcpXG4gICAgICAgICAgICBtYW5hZ2VyLmFwcGx5Q29uc2VudHMoZmFsc2UsIHRydWUsIHNlcnZpY2UubmFtZSlcbiAgICAgICAgfSBlbHNlIC8vIHdlIG9ubHkgdGVtcG9yYXJpbHkgYWNjZXB0IHRoaXNcbiAgICAgICAgICAgIG1hbmFnZXIuYXBwbHlDb25zZW50cyhmYWxzZSwgdHJ1ZSwgc2VydmljZS5uYW1lKVxuICAgIH1cbiAgICBjb25zdCBhY2NlcHRPbmNlID0gKCkgPT4ge1xuICAgICAgICBtYW5hZ2VyLnVwZGF0ZUNvbnNlbnQoc2VydmljZS5uYW1lLCB0cnVlKVxuICAgICAgICBtYW5hZ2VyLmFwcGx5Q29uc2VudHMoZmFsc2UsIHRydWUsIHNlcnZpY2UubmFtZSlcbiAgICAgICAgbWFuYWdlci51cGRhdGVDb25zZW50KHNlcnZpY2UubmFtZSwgZmFsc2UpXG4gICAgfVxuICAgIGNvbnN0IGhhbmRsZVNob3dNb2RhbCA9IChlKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICAvLyBmb3JjZSBvcGVuaW5nIGNvbnNlbnQgbWFuYWdlclxuICAgICAgICBzaG93TW9kYWwoY29uZmlnLCB0cnVlKVxuICAgIH07XG5cbiAgICBjb25zdCB7IGFkZGl0aW9uYWxDbGFzcywgZW1iZWRkZWQsIHN0eWxlUHJlZml4IH0gPSBjb25maWc7XG5cbiAgICAvLyB3ZSB3YXRjaCBmb3IgY2hhbmdlcyBpbiB0aGUgbWFuYWdlciwgdG8gZGlzcGxheSB0aGUgY29ycmVjdCBidXR0b25zXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgY29uc3Qgd2F0Y2hlciA9IHtcbiAgICAgICAgICAgIHVwZGF0ZTogKCkgPT4gc2V0VXBkYXRlQ250KHVwZGF0ZUNudCsxKSxcbiAgICAgICAgfVxuICAgICAgICBtYW5hZ2VyLndhdGNoKHdhdGNoZXIpXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBtYW5hZ2VyLnVud2F0Y2god2F0Y2hlcilcbiAgICAgICAgfVxuICAgIH0pXG5cbiAgICBjb25zdCB0aXRsZSA9IHR0KHNlcnZpY2UudHJhbnNsYXRpb25zIHx8IHt9LCBsYW5nLCAnenonLCBbJyEnLCAndGl0bGUnXSkgfHwgdChbJyEnLCBzZXJ2aWNlLm5hbWUsICd0aXRsZT8nXSkgfHwgYXNUaXRsZShzZXJ2aWNlLm5hbWUpXG4gICAgY29uc3QgbW9kYWxMaW5rID0gKCkgPT4gKFxuICAgICAgICA8YVxuICAgICAgICAgICAga2V5PVwibW9kYWxMaW5rXCJcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cImNjbi1tb2RhbC1saW5rXCJcbiAgICAgICAgICAgIGhyZWY9XCIjXCJcbiAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZVNob3dNb2RhbH1cbiAgICAgICAgPlxuICAgICAgICAgICAge3QoWydjb250ZXh0dWFsQ29uc2VudCcsICdtb2RhbExpbmtUZXh0J10pfVxuICAgICAgICA8L2E+XG4gICAgKVxuICAgIFxuICAgIHJldHVybiA8ZGl2XG4gICAgICAgICAgICAgICAgbGFuZz17bGFuZ31cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e1xuICAgICAgICAgICAgICAgICAgICAoc3R5bGVQcmVmaXggfHwgJ2tsYXJvJykgK1xuICAgICAgICAgICAgICAgICAgICAoYWRkaXRpb25hbENsYXNzICE9PSB1bmRlZmluZWQgPyAnICcgKyBhZGRpdGlvbmFsQ2xhc3MgOiAnJykgKyAnIGNtLWFzLWNvbnRleHQtbm90aWNlJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImNvbnRleHQtbm90aWNlXCIrKHN0eWxlICE9PSB1bmRlZmluZWQgPyBgIGNtLSR7c3R5bGV9YCA6IFwiXCIpfT5cbiAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICAgIHt0KFsnY29udGV4dHVhbENvbnNlbnQnLCdkZXNjcmlwdGlvbiddLCB7dGl0bGU6IHRpdGxlfSl9XG4gICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJjbS1idXR0b25zXCI+XG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjbS1idG4gY20tYnRuLXN1Y2Nlc3NcIlxuICAgICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17YWNjZXB0T25jZX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIHt0KFsnY29udGV4dHVhbENvbnNlbnQnLCAnYWNjZXB0T25jZSddKX1cbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICB7bWFuYWdlci5zdG9yZS5nZXQoKSAhPT0gbnVsbCA/IDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY20tYnRuIGNtLWJ0bi1zdWNjZXNzLXZhclwiXG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXthY2NlcHR9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICB7dChbJ2NvbnRleHR1YWxDb25zZW50JywgJ2FjY2VwdEFsd2F5cyddKX1cbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgOiAnJyB9XG4gICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICB7bWFuYWdlci5zdG9yZS5nZXQoKSA9PT0gbnVsbCAmJiBjb25maWcuc2hvd0Rlc2NyaXB0aW9uRW1wdHlTdG9yZSA/IDw+XG4gICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwiY2NuLWRlc2NyaXB0aW9uLWVtcHR5LXN0b3JlXCI+XG4gICAgICAgICAgICAgICAgICAgIHt0KFsnY29udGV4dHVhbENvbnNlbnQnLCdkZXNjcmlwdGlvbkVtcHR5U3RvcmUnXSwge3RpdGxlOiB0aXRsZSwgbGluazogbW9kYWxMaW5rKCl9KX1cbiAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICAgICA6ICcnIH1cbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG59XG5cbmV4cG9ydCBkZWZhdWx0IENvbnRleHR1YWxDb25zZW50Tm90aWNlXG4iLCJpbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSAnLi4vbGliJztcblxuZnVuY3Rpb24gZm9ybWF0UGFyYW1zKHBhcmFtcykge1xuICAgIHJldHVybiAoXG4gICAgICAgICc/JyArXG4gICAgICAgIE9iamVjdC5rZXlzKHBhcmFtcylcbiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBrZXkgKyAnPScgKyBlbmNvZGVVUklDb21wb25lbnQocGFyYW1zW2tleV0pO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5qb2luKCcmJylcbiAgICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBLbGFyb0FwaSB7XG4gICAgY29uc3RydWN0b3IodXJsLCBpZCwgb3B0cykge1xuICAgICAgICB0aGlzLnVybCA9IHVybDtcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgICAgICB0aGlzLm9wdHMgPSBPYmplY3QuYXNzaWduKHt9LCBvcHRzKTtcbiAgICB9XG5cbiAgICBnZXRMb2NhdGlvbkRhdGEoY29uZmlnKSB7XG4gICAgICAgIGNvbnN0IHJlY29yZHNDb25maWcgPSBjb25maWcucmVjb3JkcyB8fCB7fTtcbiAgICAgICAgY29uc3Qgc2F2ZVBhdGhuYW1lID1cbiAgICAgICAgICAgIHJlY29yZHNDb25maWcuc2F2ZVBhdGhuYW1lICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICA/IHJlY29yZHNDb25maWcuc2F2ZVBhdGhuYW1lXG4gICAgICAgICAgICAgICAgOiB0cnVlO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcGF0aG5hbWU6IHNhdmVQYXRobmFtZSA/IGxvY2F0aW9uLnBhdGhuYW1lIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgcG9ydDogbG9jYXRpb24ucG9ydCAhPT0gJycgPyBwYXJzZUludChsb2NhdGlvbi5wb3J0KSA6IDAsXG4gICAgICAgICAgICBob3N0bmFtZTogbG9jYXRpb24uaG9zdG5hbWUsXG4gICAgICAgICAgICBwcm90b2NvbDogbG9jYXRpb24ucHJvdG9jb2wuc2xpY2UoMCwgbG9jYXRpb24ucHJvdG9jb2wubGVuZ3RoIC0gMSksXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZ2V0VXNlckRhdGEoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjbGllbnRfdmVyc2lvbjogdmVyc2lvbigpLFxuICAgICAgICAgICAgY2xpZW50X25hbWU6ICdrbGFybzp3ZWInLFxuICAgICAgICB9O1xuICAgIH1cblxuICAgIGdldEJhc2VDb25zZW50RGF0YShjb25maWcpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGxvY2F0aW9uX2RhdGE6IHRoaXMuZ2V0TG9jYXRpb25EYXRhKGNvbmZpZyksXG4gICAgICAgICAgICB1c2VyX2RhdGE6IHRoaXMuZ2V0VXNlckRhdGEoY29uZmlnKSxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICB1cGRhdGUobm90aWZpZXIsIG5hbWUsIGRhdGEpIHtcbiAgICAgICAgaWYgKG5hbWUgPT09ICdzYXZlQ29uc2VudHMnKSB7XG4gICAgICAgICAgICBpZiAoZGF0YS50eXBlID09PSAnc2F2ZScgJiYgT2JqZWN0LmtleXMoZGF0YS5jaGFuZ2VzKS5sZW5ndGggPT09IDApXG4gICAgICAgICAgICAgICAgcmV0dXJuOyAvLyBzYXZlIGV2ZW50IHdpdGggbm8gY2hhbmdlc1xuICAgICAgICAgICAgY29uc3QgY29uc2VudERhdGEgPSB7XG4gICAgICAgICAgICAgICAgLi4udGhpcy5nZXRCYXNlQ29uc2VudERhdGEobm90aWZpZXIuY29uZmlnKSxcbiAgICAgICAgICAgICAgICBjb25zZW50X2RhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc2VudHM6IGRhdGEuY29uc2VudHMsXG4gICAgICAgICAgICAgICAgICAgIGNoYW5nZXM6IGRhdGEudHlwZSA9PT0gJ3NhdmUnID8gZGF0YS5jaGFuZ2VzIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBkYXRhLnR5cGUsXG4gICAgICAgICAgICAgICAgICAgIGNvbmZpZzogbm90aWZpZXIuY29uZmlnLmlkLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdGhpcy5zdWJtaXRDb25zZW50RGF0YShjb25zZW50RGF0YSk7XG4gICAgICAgIH0gZWxzZSBpZiAobmFtZSA9PT0gJ3Nob3dOb3RpY2UnKSB7XG4gICAgICAgICAgICBjb25zdCBjb25zZW50RGF0YSA9IHtcbiAgICAgICAgICAgICAgICAuLi50aGlzLmdldEJhc2VDb25zZW50RGF0YShkYXRhLmNvbmZpZyksXG4gICAgICAgICAgICAgICAgY29uc2VudF9kYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNlbnRzOiB7fSxcbiAgICAgICAgICAgICAgICAgICAgY2hhbmdlczoge30sXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzaG93JyxcbiAgICAgICAgICAgICAgICAgICAgY29uZmlnOiBkYXRhLmNvbmZpZy5pZCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRoaXMuc3VibWl0Q29uc2VudERhdGEoY29uc2VudERhdGEpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgYXBpUmVxdWVzdCh0eXBlLCBwYXRoLCBkYXRhLCBjb250ZW50VHlwZSkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5cbiAgICAgICAgICAgIHhoci5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBKU09OLnBhcnNlKHhoci5yZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgaWYgKHhoci5zdGF0dXMgPCAyMDAgfHwgeGhyLnN0YXR1cyA+PSAzMDApIHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YS5zdGF0dXMgPSB4aHIuc3RhdHVzO1xuICAgICAgICAgICAgICAgICAgICAvLyB0aGUgcmVxdWVzdCB3YXNuJ3Qgc3VjY2Vzc2Z1bFxuICAgICAgICAgICAgICAgICAgICByZWplY3QoZGF0YSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhlIHJlcXVlc3Qgd2FzIHN1Y2Nlc3NmdWxcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShkYXRhLCB4aHIuc3RhdHVzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgeGhyLmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIC8vIHNvbWV0aGluZyBlbHNlIHdlbnQgd3JvbmcgKGUuZy4gcmVxdWVzdCBnb3QgYmxvY2tlZClcbiAgICAgICAgICAgICAgICByZWplY3QoeyBzdGF0dXM6IDAsIHhocjogeGhyIH0pO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGxldCBib2R5O1xuXG4gICAgICAgICAgICBpZiAoZGF0YSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGUgPT09ICdHRVQnKSB7XG4gICAgICAgICAgICAgICAgICAgIHBhdGggKz0gJz8nICsgZm9ybWF0UGFyYW1zKGRhdGEpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGJvZHkgPSBKU09OLnN0cmluZ2lmeShkYXRhKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHhoci5vcGVuKHR5cGUsIHRoaXMudXJsICsgcGF0aCk7XG5cbiAgICAgICAgICAgIGlmIChib2R5ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAvLyB3ZSBtdXN0IGNhbGwgc2V0UmVxdWVzdEhlYWRlciBhZnRlciAnb3BlbidcbiAgICAgICAgICAgICAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcihcbiAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZScsXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnRUeXBlIHx8ICdhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9VVRGLTgnXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgeGhyLnNlbmQoYm9keSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHN1Ym1pdENvbnNlbnREYXRhKGNvbnNlbnREYXRhKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFwaVJlcXVlc3QoXG4gICAgICAgICAgICAnUE9TVCcsXG4gICAgICAgICAgICAnL3YxL3ByaXZhY3ktbWFuYWdlcnMvJyArIHRoaXMuaWQgKyAnL3N1Ym1pdCcsXG4gICAgICAgICAgICBjb25zZW50RGF0YSxcbiAgICAgICAgICAgICd0ZXh0L3BsYWluO2NoYXJzZXQ9VVRGLTgnXG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgLypcbiAgICBMb2FkIGEgc3BlY2lmaWMgS2xhcm8gY29uZmlnIGZyb20gdGhlIEFQSS5cbiAgICAqL1xuICAgIGxvYWRDb25maWcobmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5hcGlSZXF1ZXN0KFxuICAgICAgICAgICAgJ0dFVCcsXG4gICAgICAgICAgICAnL3YxL3ByaXZhY3ktbWFuYWdlcnMvJyArIHRoaXMuaWQgKyAnL2NvbmZpZy5qc29uP25hbWU9JyArIG5hbWUgKyAodGhpcy5vcHRzLnRlc3RpbmcgPyAnJnRlc3Rpbmc9dHJ1ZScgOiAnJylcbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICAvKlxuICAgIExvYWQgS2xhcm8gY29uZmlncyBmcm9tIHRoZSBBUEkuXG4gICAgKi9cbiAgICBsb2FkQ29uZmlncygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXBpUmVxdWVzdChcbiAgICAgICAgICAgICdHRVQnLFxuICAgICAgICAgICAgJy92MS9wcml2YWN5LW1hbmFnZXJzLycgKyB0aGlzLmlkICsgJy9jb25maWdzLmpzb24nICsgKHRoaXMub3B0cy50ZXN0aW5nID8gJyZ0ZXN0aW5nPXRydWUnIDogJycpXG4gICAgICAgICk7XG4gICAgfVxufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRUb01hcChkKSB7XG4gICAgY29uc3QgZG0gPSBuZXcgTWFwKFtdKTtcbiAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyhkKSkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IGRba2V5XTtcbiAgICAgICAgaWYgKCEodHlwZW9mIGtleSA9PT0gJ3N0cmluZycpKSBjb250aW51ZTtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgfHwgdmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgICAgIGRtLnNldChrZXksIHZhbHVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGRtLnNldChrZXksIGNvbnZlcnRUb01hcCh2YWx1ZSkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkbTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZShkLCBlZCwgb3ZlcndyaXRlLCBjbG9uZSkge1xuICAgIGNvbnN0IGFzc2lnbiA9IChkLCBrZXksIHZhbHVlKSA9PiB7XG4gICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIE1hcCkge1xuICAgICAgICAgICAgY29uc3QgbWFwID0gbmV3IE1hcChbXSk7XG4gICAgICAgICAgICAvL3dlIGRlZXAtY2xvbmUgdGhlIG1hcFxuICAgICAgICAgICAgdXBkYXRlKG1hcCwgdmFsdWUsIHRydWUsIGZhbHNlKTtcbiAgICAgICAgICAgIGQuc2V0KGtleSwgbWFwKTtcbiAgICAgICAgfSBlbHNlIGQuc2V0KGtleSwgdmFsdWUpO1xuICAgIH07XG5cbiAgICBpZiAoIShlZCBpbnN0YW5jZW9mIE1hcCkgfHwgIShkIGluc3RhbmNlb2YgTWFwKSlcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdQYXJhbWV0ZXJzIGFyZSBub3QgbWFwcyEnKTtcbiAgICBpZiAob3ZlcndyaXRlID09PSB1bmRlZmluZWQpIG92ZXJ3cml0ZSA9IHRydWU7XG4gICAgaWYgKGNsb25lID09PSB1bmRlZmluZWQpIGNsb25lID0gZmFsc2U7XG4gICAgaWYgKGNsb25lKSBkID0gbmV3IGQuY29uc3RydWN0b3IoZCk7XG4gICAgZm9yIChjb25zdCBrZXkgb2YgZWQua2V5cygpKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gZWQuZ2V0KGtleSk7XG4gICAgICAgIGNvbnN0IGR2YWx1ZSA9IGQuZ2V0KGtleSk7XG4gICAgICAgIGlmICghZC5oYXMoa2V5KSkge1xuICAgICAgICAgICAgYXNzaWduKGQsIGtleSwgdmFsdWUpO1xuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgTWFwICYmIGR2YWx1ZSBpbnN0YW5jZW9mIE1hcCkge1xuICAgICAgICAgICAgZC5zZXQoa2V5LCB1cGRhdGUoZHZhbHVlLCB2YWx1ZSwgb3ZlcndyaXRlLCBjbG9uZSkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKCFvdmVyd3JpdGUpIGNvbnRpbnVlO1xuICAgICAgICAgICAgYXNzaWduKGQsIGtleSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkO1xufVxuIiwiXG4vLyBLbGFybyB0aGVtZXMgdGhhdCBjYW4gYmUgbWl4ZWQgJiBtYXRjaGVkLiBTb21lIG9mIHRoZW0gY2hhbmdlIHRoZSBwb3NpdGlvbixcbi8vIG90aGVycyB0aGUgY29sb3Igc2NoZW1lLiBUaGUgYF9tZXRhYCBmaWVsZCBjb250YWlucyBkYXRhIHVzZWQgZS5nLiBieVxuLy8gdGhlIGNvbmZpZ3VyYXRpb24gSURFIHRvIHNlZSB3aGljaCB0aGVtZXMgYXJlIG11dHVhbGx5IGNvbXBhdGlibGUuXG5leHBvcnQgY29uc3QgdGhlbWVzID0ge1xuICAgIHRvcDoge1xuICAgICAgICBfbWV0YToge1xuICAgICAgICAgICAgaW5jb21wYXRpYmxlV2l0aDogWydib3R0b20nXVxuICAgICAgICB9LFxuICAgICAgICAnbm90aWNlLXRvcCc6ICcyMHB4JyxcbiAgICAgICAgJ25vdGljZS1ib3R0b20nOiAnYXV0bycsXG4gICAgfSxcbiAgICBib3R0b206IHtcbiAgICAgICAgX21ldGE6IHtcbiAgICAgICAgICAgIGluY29tcGF0aWJsZVdpdGg6IFsndG9wJ11cbiAgICAgICAgfSxcbiAgICAgICAgJ25vdGljZS1ib3R0b20nOiAnMjBweCcsXG4gICAgICAgICdub3RpY2UtdG9wJzogJ2F1dG8nLFxuICAgIH0sXG4gICAgbGVmdDoge1xuICAgICAgICBfbWV0YToge1xuICAgICAgICAgICAgaW5jb21wYXRpYmxlV2l0aDogWyd3aWRlJ11cbiAgICAgICAgfSxcbiAgICAgICAgJ25vdGljZS1sZWZ0JzogJzIwcHgnLFxuICAgICAgICAnbm90aWNlLXJpZ2h0JzogJ2F1dG8nLFxuICAgIH0sXG4gICAgcmlnaHQ6IHtcbiAgICAgICAgX21ldGE6IHtcbiAgICAgICAgICAgIGluY29tcGF0aWJsZVdpdGg6IFsnd2lkZSddXG4gICAgICAgIH0sXG4gICAgICAgICdub3RpY2UtcmlnaHQnOiAnMjBweCcsXG4gICAgICAgICdub3RpY2UtbGVmdCc6ICdhdXRvJyxcbiAgICB9LFxuICAgIHdpZGU6IHtcbiAgICAgICAgLy8gcG9zaXRpb24gdGhlIG5vdGljZSBvbiB0aGUgbGVmdCBzY3JlZW4gZWRnZVxuICAgICAgICAnbm90aWNlLWxlZnQnOiAnMjBweCcsXG4gICAgICAgICdub3RpY2UtcmlnaHQnOiAnYXV0bycsXG4gICAgICAgIC8vIG1ha2UgdGhlIG5vdGljZSBzcGFuIHRoZSBlbnRpcmUgc2NyZWVuXG4gICAgICAgICdub3RpY2UtbWF4LXdpZHRoJzogJ2NhbGMoMTAwdncgLSA2MHB4KScsXG4gICAgICAgICdub3RpY2UtcG9zaXRpb24nOiAnZml4ZWQnLFxuICAgIH0sXG4gICAgbGlnaHQ6IHtcbiAgICAgICAgJ2J1dHRvbi10ZXh0LWNvbG9yJzogJyNmZmYnLFxuICAgICAgICAnZGFyazEnOiAnI2ZhZmFmYScsXG4gICAgICAgICdkYXJrMic6ICcjNzc3JyxcbiAgICAgICAgJ2RhcmszJzogJyM1NTUnLFxuICAgICAgICAnbGlnaHQxJzogJyM0NDQnLFxuICAgICAgICAnbGlnaHQyJzogJyM2NjYnLFxuICAgICAgICAnbGlnaHQzJzogJyMxMTEnLFxuICAgICAgICAnZ3JlZW4zJzogJyNmMDAnLFxuICAgIH0sXG59XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1szXS51c2VbMl0hLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzNdLnVzZVszXSEuL2tsYXJvLnNjc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbM10udXNlWzJdIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1szXS51c2VbM10hLi9rbGFyby5zY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiLyogZ2xvYmFscyBtb2R1bGUsIHJlcXVpcmUsIFZFUlNJT04gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IEFwcCBmcm9tICcuL2NvbXBvbmVudHMvYXBwJ1xuaW1wb3J0IENvbnRleHR1YWxDb25zZW50Tm90aWNlIGZyb20gJy4vY29tcG9uZW50cy9jb250ZXh0dWFsLWNvbnNlbnQtbm90aWNlJ1xuaW1wb3J0IENvbnNlbnRNYW5hZ2VyIGZyb20gJy4vY29uc2VudC1tYW5hZ2VyJ1xuaW1wb3J0IEtsYXJvQXBpIGZyb20gJy4vdXRpbHMvYXBpJztcbmltcG9ydCB7aW5qZWN0U3R5bGVzfSBmcm9tICcuL3V0aWxzL3N0eWxpbmcnXG5pbXBvcnQge3JlbmRlciBhcyByZWFjdFJlbmRlcn0gZnJvbSAncmVhY3QtZG9tJ1xuaW1wb3J0IHtjb252ZXJ0VG9NYXAsIHVwZGF0ZX0gZnJvbSAnLi91dGlscy9tYXBzJ1xuaW1wb3J0IHt0LCBsYW5ndWFnZX0gZnJvbSAnLi91dGlscy9pMThuJ1xuaW1wb3J0IHt0aGVtZXN9IGZyb20gJy4vdGhlbWVzJ1xuaW1wb3J0IHtjdXJyZW50U2NyaXB0LCBkYXRhc2V0LCBhcHBseURhdGFzZXR9IGZyb20gJy4vdXRpbHMvY29tcGF0J1xuZXhwb3J0IHt1cGRhdGUgYXMgdXBkYXRlQ29uZmlnfSBmcm9tICcuL3V0aWxzL2NvbmZpZydcbmltcG9ydCAnLi9zY3NzL2tsYXJvLnNjc3MnXG5cbmxldCBkZWZhdWx0Q29uZmlnXG5jb25zdCBkZWZhdWx0VHJhbnNsYXRpb25zID0gbmV3IE1hcChbXSlcbmNvbnN0IGV2ZW50SGFuZGxlcnMgPSB7fVxuY29uc3QgZXZlbnRzID0ge31cblxuLy8gV2hlbiB3ZWJwYWNrJ3MgaG90IGxvYWRpbmcgaXMgZW5hYmxlZCwgZW5hYmxlIFByZWFjdCdzIHN1cHBvcnQgZm9yIHRoZVxuLy8gUmVhY3QgRGV2IFRvb2xzIGJyb3dzZXIgZXh0ZW5zaW9uLlxuaWYobW9kdWxlLmhvdClcbiAgICByZXF1aXJlKCdwcmVhY3QvZGVidWcnKVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RWxlbWVudElEKGNvbmZpZywgaWRlKXtcbiAgICByZXR1cm4gKGNvbmZpZy5lbGVtZW50SUQgfHwgJ2tsYXJvJykgKyAoaWRlID8gJy1pZGUnIDogJycpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRFbGVtZW50KGNvbmZpZywgaWRlKXtcbiAgICBjb25zdCBpZCA9IGdldEVsZW1lbnRJRChjb25maWcsIGlkZSlcbiAgICBsZXQgZWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKVxuICAgIGlmIChlbGVtZW50ID09PSBudWxsKXtcbiAgICAgICAgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICAgIGVsZW1lbnQuaWQgPSBpZFxuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGVsZW1lbnQpXG4gICAgfVxuICAgIHJldHVybiBlbGVtZW50XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgaGFuZGxlcil7XG4gICAgaWYgKGV2ZW50SGFuZGxlcnNbZXZlbnRUeXBlXSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICBldmVudEhhbmRsZXJzW2V2ZW50VHlwZV0gPSBbaGFuZGxlcl1cbiAgICBlbHNlXG4gICAgICAgIGV2ZW50SGFuZGxlcnNbZXZlbnRUeXBlXS5wdXNoKGhhbmRsZXIpXG4gICAgLy8gdGhpcyBldmVudCBkaWQgYWxyZWFkeSBmaXJlLCB3ZSBjYWxsIHRoZSBoYW5kbGVyXG4gICAgaWYgKGV2ZW50c1tldmVudFR5cGVdICE9PSB1bmRlZmluZWQpXG4gICAgICAgIGZvcihjb25zdCBldmVudCBvZiBldmVudHNbZXZlbnRUeXBlXSlcbiAgICAgICAgICAgIGlmIChoYW5kbGVyKC4uLmV2ZW50KSA9PT0gZmFsc2UpXG4gICAgICAgICAgICAgICAgYnJlYWtcbn1cblxuZnVuY3Rpb24gZXhlY3V0ZUV2ZW50SGFuZGxlcnMoZXZlbnRUeXBlLCAuLi5hcmdzKXtcbiAgICBjb25zdCBoYW5kbGVycyA9IGV2ZW50SGFuZGxlcnNbZXZlbnRUeXBlXVxuICAgIGlmIChldmVudHNbZXZlbnRUeXBlXSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICBldmVudHNbZXZlbnRUeXBlXSA9IFthcmdzXVxuICAgIGVsc2VcbiAgICAgICAgZXZlbnRzW2V2ZW50VHlwZV0ucHVzaChhcmdzKVxuICAgIGlmIChoYW5kbGVycyAhPT0gdW5kZWZpbmVkKVxuICAgICAgICBmb3IoY29uc3QgaGFuZGxlciBvZiBoYW5kbGVycyl7XG4gICAgICAgICAgICBpZiAoaGFuZGxlciguLi5hcmdzKSA9PT0gdHJ1ZSlcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRDb25maWdUcmFuc2xhdGlvbnMoY29uZmlnKXtcbiAgICBjb25zdCB0cmFucyA9IG5ldyBNYXAoW10pXG4gICAgdXBkYXRlKHRyYW5zLCBkZWZhdWx0VHJhbnNsYXRpb25zKVxuICAgIHVwZGF0ZSh0cmFucywgY29udmVydFRvTWFwKGNvbmZpZy50cmFuc2xhdGlvbnMgfHwge30pKVxuICAgIHJldHVybiB0cmFuc1xufVxuXG5sZXQgY250ID0gMVxuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihjb25maWcsIG9wdHMpe1xuICAgIGlmIChjb25maWcgPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuXG4gICAgb3B0cyA9IG9wdHMgfHwge31cblxuICAgIGNvbmZpZyA9IHZhbGlkYXRlQ29uZmlnKGNvbmZpZylcblxuICAgIGV4ZWN1dGVFdmVudEhhbmRsZXJzKFwicmVuZGVyXCIsIGNvbmZpZywgb3B0cylcblxuICAgIC8vIHdlIGFyZSB1c2luZyBhIGNvdW50IGhlcmUgc28gdGhhdCB3ZSdyZSBhYmxlIHRvIHJlcGVhdGVkbHkgb3BlbiB0aGUgbW9kYWwuLi5cbiAgICBsZXQgc2hvd0NudCA9IDBcbiAgICBpZiAob3B0cy5zaG93KVxuICAgICAgICBzaG93Q250ID0gY250KytcbiAgICBjb25zdCBlbGVtZW50ID0gZ2V0RWxlbWVudChjb25maWcpXG4gICAgY29uc3QgbWFuYWdlciA9IGdldE1hbmFnZXIoY29uZmlnKVxuXG4gICAgaWYgKG9wdHMuYXBpICE9PSB1bmRlZmluZWQpXG4gICAgICAgIG1hbmFnZXIud2F0Y2gob3B0cy5hcGkpXG5cbiAgICBpbmplY3RTdHlsZXMoY29uZmlnLCB0aGVtZXMsIGVsZW1lbnQpXG5cbiAgICBjb25zdCBsYW5nID0gbGFuZ3VhZ2UoY29uZmlnKVxuICAgIGNvbnN0IGNvbmZpZ1RyYW5zbGF0aW9ucyA9IGdldENvbmZpZ1RyYW5zbGF0aW9ucyhjb25maWcpXG4gICAgY29uc3QgdHQgPSAoLi4uYXJncykgPT4gdChjb25maWdUcmFuc2xhdGlvbnMsIGxhbmcsIGNvbmZpZy5mYWxsYmFja0xhbmcgfHwgJ3p6JywgLi4uYXJncylcbiAgICBjb25zdCBhcHAgPSByZWFjdFJlbmRlcig8QXBwIHQ9e3R0fVxuICAgICAgICBsYW5nPXtsYW5nfVxuICAgICAgICBtYW5hZ2VyPXttYW5hZ2VyfVxuICAgICAgICBjb25maWc9e2NvbmZpZ31cbiAgICAgICAgdGVzdGluZz17b3B0cy50ZXN0aW5nfVxuICAgICAgICBtb2RhbD17b3B0cy5tb2RhbH1cbiAgICAgICAgYXBpPXtvcHRzLmFwaX1cbiAgICAgICAgc2hvdz17c2hvd0NudH0gLz4sIGVsZW1lbnQpXG4gICAgcmVuZGVyQ29udGV4dHVhbENvbnNlbnROb3RpY2VzKG1hbmFnZXIsIHR0LCBsYW5nLCBjb25maWcsIG9wdHMpXG4gICAgcmV0dXJuIGFwcFxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVuZGVyQ29udGV4dHVhbENvbnNlbnROb3RpY2VzKG1hbmFnZXIsIHR0LCBsYW5nLCBjb25maWcsIG9wdHMpe1xuICAgIGNvbnN0IG5vdGljZXMgPSBbXVxuICAgIGZvcihjb25zdCBzZXJ2aWNlIG9mIGNvbmZpZy5zZXJ2aWNlcyl7XG4gICAgICAgIGNvbnN0IGNvbnNlbnQgPSBtYW5hZ2VyLmdldENvbnNlbnQoc2VydmljZS5uYW1lKSAmJiBtYW5hZ2VyLmNvbmZpcm1lZFxuICAgICAgICBjb25zdCBlbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1uYW1lPSdcIitzZXJ2aWNlLm5hbWUrXCInXVwiKVxuICAgICAgICBmb3IoY29uc3QgZWxlbWVudCBvZiBlbGVtZW50cyl7XG4gICAgICAgICAgICBjb25zdCBkcyA9IGRhdGFzZXQoZWxlbWVudClcbiAgICAgICAgICAgIGlmIChkcy50eXBlID09PSAncGxhY2Vob2xkZXInKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgICAgICBpZiAoZWxlbWVudC50YWdOYW1lID09PSAnSUZSQU1FJyB8fCBlbGVtZW50LnRhZ05hbWUgPT09ICdESVYnKXtcbiAgICAgICAgICAgICAgICBsZXQgcGxhY2Vob2xkZXJFbGVtZW50ID0gZWxlbWVudC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nXG4gICAgICAgICAgICAgICAgaWYgKHBsYWNlaG9sZGVyRWxlbWVudCAhPT0gbnVsbCl7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGRzID0gZGF0YXNldChwbGFjZWhvbGRlckVsZW1lbnQpXG4gICAgICAgICAgICAgICAgICAgIGlmIChkcy50eXBlICE9PSBcInBsYWNlaG9sZGVyXCIgfHwgZHMubmFtZSAhPT0gc2VydmljZS5uYW1lKVxuICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXJFbGVtZW50ID0gbnVsbFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAocGxhY2Vob2xkZXJFbGVtZW50ID09PSBudWxsKXtcbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXJFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIkRJVlwiKVxuICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlckVsZW1lbnQuc3R5bGUubWF4V2lkdGggPSBlbGVtZW50LndpZHRoK1wicHhcIlxuICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlckVsZW1lbnQuc3R5bGUuaGVpZ2h0ID0gZWxlbWVudC5oZWlnaHQrXCJweFwiXG4gICAgICAgICAgICAgICAgICAgIGFwcGx5RGF0YXNldCh7dHlwZTogJ3BsYWNlaG9sZGVyJywgbmFtZTogc2VydmljZS5uYW1lfSwgcGxhY2Vob2xkZXJFbGVtZW50KVxuICAgICAgICAgICAgICAgICAgICAvLyBpZiBjb25zZW50IGlzIGFscmVhZHkgZ2l2ZW4sIHdlIHN0aWxsIGluc2VydCBhbiBpbnZpc2JsZSBwbGFjZWhvbGRlciB0aGF0XG4gICAgICAgICAgICAgICAgICAgIC8vIG1pZ2h0IGJlIHJldmVhbGVkIGxhdGVyIGlmIHRoZSB1c2VyIGNoYW5nZXMgdGhlIGNvbnNlbnQgZGVjaXNpb25cbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbnNlbnQpXG4gICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlckVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJ1xuICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnBhcmVudEVsZW1lbnQuaW5zZXJ0QmVmb3JlKHBsYWNlaG9sZGVyRWxlbWVudCwgZWxlbWVudClcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgbm90aWNlID0gcmVhY3RSZW5kZXIoPENvbnRleHR1YWxDb25zZW50Tm90aWNlIHQ9e3R0fVxuICAgICAgICAgICAgICAgICAgICAgICAgbGFuZz17bGFuZ31cbiAgICAgICAgICAgICAgICAgICAgICAgIG1hbmFnZXI9e21hbmFnZXJ9XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25maWc9e2NvbmZpZ31cbiAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZpY2U9e3NlcnZpY2V9XG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17ZHMuc3R5bGV9XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXN0aW5nPXtvcHRzLnRlc3Rpbmd9XG4gICAgICAgICAgICAgICAgICAgICAgICBhcGk9e29wdHMuYXBpfSAvPiwgcGxhY2Vob2xkZXJFbGVtZW50KVxuICAgICAgICAgICAgICAgICAgICBub3RpY2VzLnB1c2gobm90aWNlKVxuXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LnRhZ05hbWUgPT09ICdJRlJBTUUnKXtcbiAgICAgICAgICAgICAgICAgICAgZHNbJ3NyYyddID0gZWxlbWVudC5zcmNcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGRzWydtb2RpZmllZC1ieS1rbGFybyddID09PSB1bmRlZmluZWQgJiYgZWxlbWVudC5zdHlsZS5kaXNwbGF5ID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgICAgIGRzWydvcmlnaW5hbC1kaXNwbGF5J10gPSBlbGVtZW50LnN0eWxlLmRpc3BsYXlcbiAgICAgICAgICAgICAgICBkc1snbW9kaWZpZWQtYnkta2xhcm8nXSA9ICd5ZXMnXG4gICAgICAgICAgICAgICAgYXBwbHlEYXRhc2V0KGRzLCBlbGVtZW50KVxuICAgICAgICAgICAgICAgIGlmICghY29uc2VudCl7XG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuc3JjID0gJydcbiAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBub3RpY2VzXG59XG5cbmZ1bmN0aW9uIHNob3dLbGFyb0lERShzY3JpcHQpIHtcbiAgICBjb25zdCBiYXNlTmFtZSA9IC9eKC4qKShcXC9bXi9dKykkLy5leGVjKHNjcmlwdC5zcmMpWzFdIHx8ICcnXG4gICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpXG4gICAgZWxlbWVudC5zcmMgPSBiYXNlTmFtZSAhPT0gJycgPyBiYXNlTmFtZSArICcvaWRlLmpzJyA6ICdpZGUuanMnXG4gICAgZWxlbWVudC50eXBlID0gXCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0XCJcbiAgICBmb3IoY29uc3QgYXR0cmlidXRlIG9mIGVsZW1lbnQuYXR0cmlidXRlcyl7XG4gICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZS5uYW1lLCBhdHRyaWJ1dGUudmFsdWUpXG4gICAgfVxuICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoZWxlbWVudClcbn1cblxuXG5mdW5jdGlvbiBkb09uY2VMb2FkZWQoaGFuZGxlcil7XG4gICAgaWYgKC9jb21wbGV0ZXxpbnRlcmFjdGl2ZXxsb2FkZWQvLnRlc3QoZG9jdW1lbnQucmVhZHlTdGF0ZSkpe1xuICAgICAgICBoYW5kbGVyKClcbiAgICB9IGVsc2Uge1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGhhbmRsZXIpXG4gICAgfVxufVxuXG5mdW5jdGlvbiBnZXRLbGFyb0lkKHNjcmlwdCl7XG4gICAgY29uc3Qga2xhcm9JZCA9IHNjcmlwdC5nZXRBdHRyaWJ1dGUoJ2RhdGEta2xhcm8taWQnKVxuICAgIGlmIChrbGFyb0lkICE9PSBudWxsKVxuICAgICAgICByZXR1cm4ga2xhcm9JZFxuICAgIGNvbnN0IHJlZ2V4TWF0Y2ggPSAvLipcXC9wcml2YWN5LW1hbmFnZXJzXFwvKFthLWYwLTldKylcXC9rbGFyby4qXFwuanMvLmV4ZWMoc2NyaXB0LnNyYylcbiAgICBpZiAocmVnZXhNYXRjaCAhPT0gbnVsbClcbiAgICAgICAgcmV0dXJuIHJlZ2V4TWF0Y2hbMV1cbiAgICByZXR1cm4gbnVsbFxufVxuXG5mdW5jdGlvbiBnZXRLbGFyb0FwaVVybChzY3JpcHQpe1xuICAgIGNvbnN0IGtsYXJvQXBpVXJsID0gc2NyaXB0LmdldEF0dHJpYnV0ZSgnZGF0YS1rbGFyby1hcGktdXJsJylcbiAgICBpZiAoa2xhcm9BcGlVcmwgIT09IG51bGwpXG4gICAgICAgIHJldHVybiBrbGFyb0FwaVVybFxuICAgIGNvbnN0IHJlZ2V4TWF0Y2ggPSAvKGh0dHAoPzpzKT86XFwvXFwvW14vXSspXFwvdjFcXC9wcml2YWN5LW1hbmFnZXJzXFwvKFthLWYwLTldKylcXC9rbGFyby4qXFwuanMvLmV4ZWMoc2NyaXB0LnNyYylcbiAgICBpZiAocmVnZXhNYXRjaCAhPT0gbnVsbClcbiAgICAgICAgcmV0dXJuIHJlZ2V4TWF0Y2hbMV1cbiAgICByZXR1cm4gbnVsbFxufVxuXG5mdW5jdGlvbiBnZXRLbGFyb0NvbmZpZ05hbWUoaGFzaFBhcmFtcywgc2NyaXB0KXtcbiAgICAvLyBoYXNoIHBhcmFtZXRlcnMgYWx3YXlzIHdpblxuICAgIGlmIChoYXNoUGFyYW1zLmhhcygna2xhcm8tY29uZmlnJykpe1xuICAgICAgICByZXR1cm4gaGFzaFBhcmFtcy5nZXQoJ2tsYXJvLWNvbmZpZycpXG4gICAgfVxuICAgIC8vIGFmdGVyd2FyZHMgd2UgY2hlY2sgdGhlIHNjcmlwdCB0YWdcbiAgICBjb25zdCBrbGFyb0NvbmZpZ05hbWUgPSBzY3JpcHQuZ2V0QXR0cmlidXRlKCdkYXRhLWtsYXJvLWNvbmZpZycpXG4gICAgaWYgKGtsYXJvQ29uZmlnTmFtZSAhPT0gbnVsbClcbiAgICAgICAgcmV0dXJuIGtsYXJvQ29uZmlnTmFtZVxuICAgIC8vIGlmIG5vdGhpbmcgd29ya3Mgd2UgcmV0dXJuIHRoZSBkZWZhdWx0IHZhbHVlXG4gICAgcmV0dXJuICdkZWZhdWx0J1xufVxuXG5mdW5jdGlvbiBnZXRIYXNoUGFyYW1zKCl7XG4gICAgcmV0dXJuIG5ldyBNYXAoZGVjb2RlVVJJKGxvY2F0aW9uLmhhc2guc2xpY2UoMSkpLnNwbGl0KFwiJlwiKS5tYXAoa3YgPT4ga3Yuc3BsaXQoXCI9XCIpKS5tYXAoa3YgPT4gKGt2Lmxlbmd0aCA9PT0gMSA/IFtrdlswXSwgdHJ1ZV0gOiBrdikpKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVDb25maWcoY29uZmlnKXtcbiAgICBjb25zdCB2YWxpZGF0ZWRDb25maWcgPSB7Li4uY29uZmlnfVxuICAgIGlmICh2YWxpZGF0ZWRDb25maWcudmVyc2lvbiA9PT0gMilcbiAgICAgICAgcmV0dXJuIHZhbGlkYXRlZENvbmZpZ1xuICAgIGlmICh2YWxpZGF0ZWRDb25maWcuYXBwcyAhPT0gdW5kZWZpbmVkICYmIHZhbGlkYXRlZENvbmZpZy5zZXJ2aWNlcyA9PT0gdW5kZWZpbmVkKXtcbiAgICAgICAgdmFsaWRhdGVkQ29uZmlnLnNlcnZpY2VzID0gdmFsaWRhdGVkQ29uZmlnLmFwcHNcbiAgICAgICAgY29uc29sZS53YXJuKFwiV2FybmluZywgeW91ciBjb25maWd1cmF0aW9uIGZpbGUgaXMgb3V0ZGF0ZWQuIFBsZWFzZSBjaGFuZ2UgYGFwcHNgIHRvIGBzZXJ2aWNlc2BcIilcbiAgICAgICAgZGVsZXRlIHZhbGlkYXRlZENvbmZpZy5hcHBzXG4gICAgfVxuICAgIGlmICh2YWxpZGF0ZWRDb25maWcudHJhbnNsYXRpb25zICE9PSB1bmRlZmluZWQpe1xuICAgICAgICBpZiAodmFsaWRhdGVkQ29uZmlnLnRyYW5zbGF0aW9ucy5hcHBzICE9PSB1bmRlZmluZWQgJiYgdmFsaWRhdGVkQ29uZmlnLnNlcnZpY2VzID09PSB1bmRlZmluZWQpe1xuICAgICAgICAgICAgdmFsaWRhdGVkQ29uZmlnLnRyYW5zbGF0aW9ucy5zZXJ2aWNlcyA9IHZhbGlkYXRlZENvbmZpZy50cmFuc2xhdGlvbnMuYXBwc1xuICAgICAgICAgICAgY29uc29sZS53YXJuKFwiV2FybmluZywgeW91ciBjb25maWd1cmF0aW9uIGZpbGUgaXMgb3V0ZGF0ZWQuIFBsZWFzZSBjaGFuZ2UgYGFwcHNgIHRvIGBzZXJ2aWNlc2AgaW4gdGhlIGB0cmFuc2xhdGlvbnNgIGtleVwiKVxuICAgICAgICAgICAgZGVsZXRlIHZhbGlkYXRlZENvbmZpZy50cmFuc2xhdGlvbnMuYXBwc1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB2YWxpZGF0ZWRDb25maWdcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldHVwKGNvbmZpZyl7XG4gICAgLy8gaWYgbm8gd2luZG93IG9iamVjdCBpcyBnaXZlbiB3ZSByZXR1cm4gaW1tZWRpYXRlbHlcbiAgICBpZiAod2luZG93ID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCBzY3JpcHQgPSBjdXJyZW50U2NyaXB0KFwia2xhcm9cIik7XG4gICAgY29uc3QgaGFzaFBhcmFtcyA9IGdldEhhc2hQYXJhbXMoKTtcbiAgICBjb25zdCB0ZXN0aW5nID0gaGFzaFBhcmFtcy5nZXQoJ2tsYXJvLXRlc3RpbmcnKTtcblxuICAgIGNvbnN0IGluaXRpYWxpemUgPSAob3B0cykgPT4ge1xuICAgICAgICBjb25zdCBmdWxsT3B0cyA9IHsuLi5vcHRzLCB0ZXN0aW5nOiB0ZXN0aW5nfVxuICAgICAgICBpZiAoIWRlZmF1bHRDb25maWcubm9BdXRvTG9hZCAmJiAoKCFkZWZhdWx0Q29uZmlnLnRlc3RpbmcpIHx8IGZ1bGxPcHRzLnRlc3RpbmcpKVxuICAgICAgICAgICAgcmVuZGVyKGRlZmF1bHRDb25maWcsIGZ1bGxPcHRzKVxuICAgIH1cblxuICAgIGlmIChjb25maWcgIT09IHVuZGVmaW5lZCl7XG4gICAgICAgIC8vIHdlIGluaXRpYWxpemUgZGlyZWN0bHkgd2l0aCBhIGNvbmZpZ1xuICAgICAgICBkZWZhdWx0Q29uZmlnID0gY29uZmlnO1xuICAgICAgICBkb09uY2VMb2FkZWQoKCkgPT4gaW5pdGlhbGl6ZSh7fSkpXG4gICAgfSBlbHNlIGlmIChzY3JpcHQgIT09IG51bGwpIHtcbiAgICAgICAgLy8gd2UgaW5pdGlhbGl6ZSB3aXRoIGEgc2NyaXB0IHRhZ1xuICAgICAgICBjb25zdCBrbGFyb0lkID0gZ2V0S2xhcm9JZChzY3JpcHQpXG4gICAgICAgIGNvbnN0IGtsYXJvQXBpVXJsID0gZ2V0S2xhcm9BcGlVcmwoc2NyaXB0KVxuICAgICAgICBjb25zdCBrbGFyb0NvbmZpZ05hbWUgPSBnZXRLbGFyb0NvbmZpZ05hbWUoaGFzaFBhcmFtcywgc2NyaXB0KTtcbiAgICAgICAgaWYgKGtsYXJvSWQgIT09IG51bGwpe1xuICAgICAgICAgICAgLy8gd2UgaW5pdGlhbGl6ZSB3aXRoIGFuIEFQSSBiYWNrZW5kXG4gICAgICAgICAgICBjb25zdCBhcGkgPSBuZXcgS2xhcm9BcGkoa2xhcm9BcGlVcmwsIGtsYXJvSWQsIHt0ZXN0aW5nOiB0ZXN0aW5nfSlcbiAgICAgICAgICAgIGlmICh3aW5kb3cua2xhcm9BcGlDb25maWdzICE9PSB1bmRlZmluZWQpe1xuICAgICAgICAgICAgICAgIC8vIHRoZSBjb25maWdzIHdlcmUgYWxyZWFkeSBzdXBwbGllZCB3aXRoIHRoZSBLbGFybyBiaW5hcnlcblxuICAgICAgICAgICAgICAgIGlmIChleGVjdXRlRXZlbnRIYW5kbGVycyhcImFwaUNvbmZpZ3NMb2FkZWRcIiwgd2luZG93LmtsYXJvQXBpQ29uZmlncywgYXBpKSA9PT0gdHJ1ZSl7XG4gICAgICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGNvbnN0IGNvbmZpZyA9IHdpbmRvdy5rbGFyb0FwaUNvbmZpZ3MuZmluZChjb25maWcgPT4gY29uZmlnLm5hbWUgPT09IGtsYXJvQ29uZmlnTmFtZSAmJiAoY29uZmlnLnN0YXR1cyA9PT0gJ2FjdGl2ZScgfHwgdGVzdGluZykpXG5cbiAgICAgICAgICAgICAgICBpZiAoY29uZmlnICE9PSB1bmRlZmluZWQpe1xuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0Q29uZmlnID0gY29uZmlnXG4gICAgICAgICAgICAgICAgICAgIGRvT25jZUxvYWRlZCgoKSA9PiBpbml0aWFsaXplKHthcGk6IGFwaX0pKVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGV4ZWN1dGVFdmVudEhhbmRsZXJzKFwiYXBpQ29uZmlnc0ZhaWxlZFwiLCB7fSlcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gd2UgbG9hZCB0aGUgY29uZmlncyBzZXBhcmF0ZWx5Li4uXG4gICAgICAgICAgICAgICAgYXBpLmxvYWRDb25maWcoa2xhcm9Db25maWdOYW1lKS50aGVuKChjb25maWcpID0+IHtcblxuICAgICAgICAgICAgICAgICAgICAvLyBhbiBldmVudCBoYW5kbGVyIGNhbiBpbnRlcnJ1cHQgdGhlIGluaXRpYWxpemF0aW9uLCBlLmcuIGlmIGl0IHdhbnRzIHRvIHBlcmZvcm1cbiAgICAgICAgICAgICAgICAgICAgLy8gaXRzIG93biBpbml0aWFsaXphdGlvbiBnaXZlbiB0aGUgQVBJIGNvbmZpZ3NcbiAgICAgICAgICAgICAgICAgICAgaWYgKGV4ZWN1dGVFdmVudEhhbmRsZXJzKFwiYXBpQ29uZmlnc0xvYWRlZFwiLCBbY29uZmlnXSwgYXBpKSA9PT0gdHJ1ZSl7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0Q29uZmlnID0gY29uZmlnXG4gICAgICAgICAgICAgICAgICAgIGRvT25jZUxvYWRlZCgoKSA9PiBpbml0aWFsaXplKHthcGk6IGFwaX0pKVxuXG4gICAgICAgICAgICAgICAgfSkuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVyciwgXCJjYW5ub3QgbG9hZCBLbGFybyBjb25maWdzXCIpXG4gICAgICAgICAgICAgICAgICAgIGV4ZWN1dGVFdmVudEhhbmRsZXJzKFwiYXBpQ29uZmlnc0ZhaWxlZFwiLCBlcnIpXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIHdlIGluaXRpYWxpemUgd2l0aCBhIGxvY2FsIGNvbmZpZyBpbnN0ZWFkXG4gICAgICAgICAgICBjb25zdCBjb25maWdOYW1lID0gc2NyaXB0LmdldEF0dHJpYnV0ZSgnZGF0YS1rbGFyby1jb25maWcnKSB8fCBcImtsYXJvQ29uZmlnXCJcbiAgICAgICAgICAgIGRlZmF1bHRDb25maWcgPSB3aW5kb3dbY29uZmlnTmFtZV07XG4gICAgICAgICAgICBpZiAoZGVmYXVsdENvbmZpZyAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgIGRvT25jZUxvYWRlZCgoKSA9PiBpbml0aWFsaXplKHt9KSlcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBJZiByZXF1ZXN0ZWQsIHdlIHNob3cgdGhlIEtsYXJvIElERVxuICAgIGlmIChoYXNoUGFyYW1zLmhhcygna2xhcm8taWRlJykpe1xuICAgICAgICBzaG93S2xhcm9JREUoc2NyaXB0KVxuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNob3coY29uZmlnLCBtb2RhbCwgYXBpKXtcbiAgICBjb25maWcgPSBjb25maWcgfHwgZGVmYXVsdENvbmZpZ1xuICAgIHJlbmRlcihjb25maWcsIHtzaG93OiB0cnVlLCBtb2RhbDogbW9kYWwsIGFwaTogYXBpfSlcbiAgICByZXR1cm4gZmFsc2Vcbn1cblxuLyogQ29uc2VudCBNYW5hZ2VycyAqL1xuXG5jb25zdCBtYW5hZ2VycyA9IHt9XG5cbmV4cG9ydCBmdW5jdGlvbiByZXNldE1hbmFnZXJzKCl7XG4gICAgZm9yKGNvbnN0IGtleSBpbiBPYmplY3Qua2V5cyhtYW5hZ2VycykpXG4gICAgICAgIGRlbGV0ZSBtYW5hZ2Vyc1trZXldXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRNYW5hZ2VyKGNvbmZpZyl7XG4gICAgY29uZmlnID0gY29uZmlnIHx8IGRlZmF1bHRDb25maWdcbiAgICBjb25zdCBuYW1lID0gY29uZmlnLnN0b3JhZ2VOYW1lIHx8IGNvbmZpZy5jb29raWVOYW1lIHx8ICdkZWZhdWx0JyAvLyBkZXByZWNhdGVkOiBjb29raWVOYW1lXG4gICAgaWYgKG1hbmFnZXJzW25hbWVdID09PSB1bmRlZmluZWQpXG4gICAgICAgIG1hbmFnZXJzW25hbWVdID0gbmV3IENvbnNlbnRNYW5hZ2VyKHZhbGlkYXRlQ29uZmlnKGNvbmZpZykpXG4gICAgcmV0dXJuIG1hbmFnZXJzW25hbWVdXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB2ZXJzaW9uKCl7XG4gICAgLy8gd2UgcmVtb3ZlIHRoZSAndidcbiAgICBpZiAoVkVSU0lPTlswXSA9PT0gJ3YnKVxuICAgICAgICByZXR1cm4gVkVSU0lPTi5zbGljZSgxKVxuICAgIHJldHVybiBWRVJTSU9OXG59XG5cbmV4cG9ydCB7bGFuZ3VhZ2UsIGRlZmF1bHRDb25maWcsIGRlZmF1bHRUcmFuc2xhdGlvbnN9XG4iLCJpbXBvcnQgeyByZXBsYWNlQ1NTVmFyaWFibGVzIH0gZnJvbSBcIi4vY29tcGF0XCJcblxuZXhwb3J0IGZ1bmN0aW9uIGluamVjdFN0eWxlcyhjb25maWcsIHRoZW1lcywgZWxlbWVudCl7XG5cbiAgICBpZiAoY29uZmlnLnN0eWxpbmcgPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuXG5cbiAgICBsZXQgc3R5bGluZyA9IE9iamVjdC5hc3NpZ24oe30sIGNvbmZpZy5zdHlsaW5nKVxuXG4gICAgaWYgKHN0eWxpbmcudGhlbWUgIT09IHVuZGVmaW5lZCl7XG4gICAgICAgIGxldCBzdHlsZVRoZW1lcyA9IHN0eWxpbmcudGhlbWVcbiAgICAgICAgaWYgKCEoc3R5bGVUaGVtZXMgaW5zdGFuY2VvZiBBcnJheSkpe1xuICAgICAgICAgICAgc3R5bGVUaGVtZXMgPSBbc3R5bGVUaGVtZXNdXG4gICAgICAgIH1cblxuICAgICAgICAvLyB3ZSByZXNldCB0aGUgc3R5bGluZ1xuICAgICAgICBzdHlsaW5nID0ge31cblxuICAgICAgICBmb3IoY29uc3QgdGhlbWVOYW1lIG9mIHN0eWxlVGhlbWVzKXtcbiAgICAgICAgICAgIGNvbnN0IHRoZW1lID0gdGhlbWVzW3RoZW1lTmFtZV1cbiAgICAgICAgICAgIGlmICh0aGVtZSAhPT0gdW5kZWZpbmVkKXtcbiAgICAgICAgICAgICAgICAvLyB3ZSB1c2UgdGhlIHRoZW1lIGFzIHRoZSBiYXNpYyBzdHlsaW5nXG4gICAgICAgICAgICAgICAgZm9yKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyh0aGVtZSkpe1xuICAgICAgICAgICAgICAgICAgICBpZiAoa2V5LnN0YXJ0c1dpdGgoJ18nKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlIC8vIHByaXZhdGUgYXR0cmlidXRlIGUuZy4gdXNlZCBmb3IgY29tcGF0aWJpbGl0eSBjaGVja2luZ1xuICAgICAgICAgICAgICAgICAgICBzdHlsaW5nW2tleV0gPSB2YWx1ZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHdlIGFsbG93IG92ZXJyaWRpbmcgb2Ygc3BlY2lmaWMgdGhlbWUgdmFyaWFibGVzXG4gICAgICAgIGZvcihjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoY29uZmlnLnN0eWxpbmcpKXtcbiAgICAgICAgICAgIGlmIChrZXkgPT09ICd0aGVtZScpXG4gICAgICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICAgIHN0eWxpbmdba2V5XSA9IHZhbHVlXG4gICAgICAgIH1cblxuICAgIH1cblxuICAgIGlmIChlbGVtZW50ID09PSB1bmRlZmluZWQpXG4gICAgICAgIGVsZW1lbnQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG5cbiAgICAvLyBpbiBtb2Rlcm4gYnJvd3NlcnMgd2UgY2FuIGp1c3Qgc2V0IHRoZSBDU1MgdmFyaWFibGVzXG4gICAgZm9yKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhzdHlsaW5nKSl7XG4gICAgICAgIGVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoJy0tJytrZXksIHZhbHVlKVxuICAgIH1cblxuICAgIGlmICh3aW5kb3cuZG9jdW1lbnQuZG9jdW1lbnRNb2RlICYmIGVsZW1lbnQgPT09IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkge1xuICAgICAgICAvLyB3ZSBkeW5hbWljYWxseSByZXBsYWNlIHRoZSBDU1MgdmFyaWFibGVzIGluIHRoZSBDU1MgZmlsZXMgYXMgSUVcbiAgICAgICAgLy8gY2Fubm90IGhhbmRsZSB0aGVtLi4uIFNpZ2guXG4gICAgICAgIHJlcGxhY2VDU1NWYXJpYWJsZXMoc3R5bGluZylcbiAgICB9XG5cbn1cbiIsIi8vIHRoaXMgbG9hZHMgS2xhcm8gd2l0aCB0aGUgZGVmYXVsdCB0cmFuc2xhdGlvbnNcblxuZXhwb3J0ICogZnJvbSAnLi9saWInXG5pbXBvcnQge3NldHVwLCBkZWZhdWx0VHJhbnNsYXRpb25zfSBmcm9tICcuL2xpYidcbmltcG9ydCB0cmFuc2xhdGlvbnMgZnJvbSAnLi90cmFuc2xhdGlvbnMvaW5kZXgnXG5pbXBvcnQge2NvbnZlcnRUb01hcCwgdXBkYXRlfSBmcm9tICcuL3V0aWxzL21hcHMnXG5cbmNvbnN0IGNvbnZlcnRlZFRyYW5zbGF0aW9ucyA9IGNvbnZlcnRUb01hcCh0cmFuc2xhdGlvbnMpXG4vLyB3ZSBhZGQgdGhlIGRlZmF1bHQgdHJhbnNsYXRpb25zXG51cGRhdGUoZGVmYXVsdFRyYW5zbGF0aW9ucywgY29udmVydGVkVHJhbnNsYXRpb25zKVxuXG4vLyB3ZSBzZXQgdXAgS2xhcm9cbnNldHVwKClcbiIsIi8vIFRvIGNyZWF0ZSBhIG5ldyB0cmFuc2xhdGlvbiwgYWRkIGEgWUFNTCBmaWxlIHdpdGggdGhlIHJlcXVpcmVkIGVudHJpZXMgYW5kXG4vLyBsaW5rIGl0IGhlcmUgdXNpbmcgdGhlIGFwcHJvcHJpYXRlIGxhbmd1YWdlIGNvZGUuXG5cbmltcG9ydCB6aCBmcm9tICcuL3poLnltbCc7XG5pbXBvcnQgcHQgZnJvbSAnLi9wdC55bWwnO1xuaW1wb3J0IGNhIGZyb20gJy4vY2EueW1sJztcbmltcG9ydCBjcyBmcm9tICcuL2NzLnltbCc7XG5pbXBvcnQgZGEgZnJvbSAnLi9kYS55bWwnO1xuaW1wb3J0IGRlIGZyb20gJy4vZGUueW1sJztcbmltcG9ydCBlbCBmcm9tICcuL2VsLnltbCc7XG5pbXBvcnQgZW4gZnJvbSAnLi9lbi55bWwnO1xuaW1wb3J0IGVzIGZyb20gJy4vZXMueW1sJztcbmltcG9ydCBmaSBmcm9tICcuL2ZpLnltbCc7XG5pbXBvcnQgZnIgZnJvbSAnLi9mci55bWwnO1xuaW1wb3J0IGdsIGZyb20gJy4vZ2wueW1sJztcbmltcG9ydCBodSBmcm9tICcuL2h1LnltbCc7XG5pbXBvcnQgaHIgZnJvbSAnLi9oci55bWwnO1xuaW1wb3J0IGl0IGZyb20gJy4vaXQueW1sJztcbmltcG9ydCBubCBmcm9tICcuL25sLnltbCc7XG5pbXBvcnQgbm8gZnJvbSAnLi9uby55bWwnO1xuaW1wb3J0IG9jIGZyb20gJy4vb2MueW1sJztcbmltcG9ydCBybyBmcm9tICcuL3JvLnltbCc7XG5pbXBvcnQgc3IgZnJvbSAnLi9zci55bWwnO1xuaW1wb3J0IHNyX2N5cmwgZnJvbSAnLi9zcl9jeXJsLnltbCc7XG5pbXBvcnQgc3YgZnJvbSAnLi9zdi55bWwnO1xuaW1wb3J0IHRyIGZyb20gJy4vdHIueW1sJztcbmltcG9ydCBwbCBmcm9tICcuL3BsLnltbCc7XG5pbXBvcnQgcnUgZnJvbSAnLi9ydS55bWwnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgY2EsXG4gICAgY3MsXG4gICAgZGEsXG4gICAgZGUsXG4gICAgZWwsXG4gICAgZW4sXG4gICAgemgsXG4gICAgcHQsXG4gICAgZXMsXG4gICAgZmksXG4gICAgZnIsXG4gICAgZ2wsXG4gICAgaHUsXG4gICAgaHIsXG4gICAgaXQsXG4gICAgbmwsXG4gICAgbm8sXG4gICAgb2MsXG4gICAgcm8sXG4gICAgc3IsXG4gICAgc3JfY3lybCxcbiAgICBzdixcbiAgICB0cixcbiAgICBwbCxcbiAgICBydSxcbn07XG4iLCJleHBvcnQgZGVmYXVsdCB7YWNjZXB0QWxsOidBY2NlcHRhLWxlcyB0b3RlcycsYWNjZXB0U2VsZWN0ZWQ6J0FjY2VwdGEgbGVzIGVzY29sbGlkZXMnLHNlcnZpY2U6e2Rpc2FibGVBbGw6e2Rlc2NyaXB0aW9uOidVc2V1IGFxdWVzdCBib3TDsyBwZXIgYSBoYWJpbGl0YXIgbyBkZXNoYWJpbGl0YXIgdG90ZXMgbGVzIGFwbGljYWNpb25zLicsdGl0bGU6J0hhYmlsaXRhL2Rlc2hhYmlsaXRhIHRvdGVzIGxlcyBhcGxpY2FjaW9ucyd9LG9wdE91dDp7ZGVzY3JpcHRpb246J0FxdWVzdGEgYXBsaWNhY2nDsyBlcyBjYXJyZWdhIHBlciBkZWZlY3RlLCBwZXLDsiBwb2RldSBkZXNhY3RpdmFyLWxhJyx0aXRsZTonKG9wdC1vdXQpJ30scHVycG9zZTonRmluYWxpdGF0JyxwdXJwb3NlczonRmluYWxpdGF0cycscmVxdWlyZWQ6e2Rlc2NyaXB0aW9uOidBcXVlc3RhIGFwbGljYWNpw7MgZXMgbmVjZXNzaXRhIHNlbXByZScsdGl0bGU6JyhuZWNlc3PDoHJpYSknfX0sY2xvc2U6J1RhbmNhJyxjb25zZW50TW9kYWw6e2Rlc2NyaXB0aW9uOidBcXXDrSBwb2RldSB2ZXVyZSBpIHBlcnNvbmFsaXR6YXIgbGEgaW5mb3JtYWNpw7MgcXVlIHJlY29waWxlbSBzb2JyZSB2w7NzLicscHJpdmFjeVBvbGljeTp7bmFtZToncG9sw610aWNhIGRlIHByaXZhZGVzYScsdGV4dDonUGVyIGEgbcOpcyBpbmZvcm1hY2nDsywgY29uc3VsdGV1IGxhIG5vc3RyYSB7cHJpdmFjeVBvbGljeX0uJ30sdGl0bGU6J0luZm9ybWFjacOzIHF1ZSByZWNvcGlsZW0nfSxjb25zZW50Tm90aWNlOntjaGFuZ2VEZXNjcmlwdGlvbjonSGkgaGEgaGFndXQgY2FudmlzIGRlcyBkZSBsYSB2b3N0cmEgZGFycmVyYSB2aXNpdGEuIEFjdHVhbGl0emV1IGVsIHZvc3RyZSBjb25zZW50aW1lbnQuJyxkZXNjcmlwdGlvbjonUmVjb3BpbGVtIGkgcHJvY2Vzc2VtIGxhIHZvc3RyYSBpbmZvcm1hY2nDsyBwZXJzb25hbCBhbWIgbGVzIHNlZ8O8ZW50cyBmaW5hbGl0YXRzOiB7cHVycG9zZXN9LicsaW1wcmludDp7bmFtZTonRW1wcmVtdGEnfSxsZWFybk1vcmU6J1NhYmVyLW5lIG3DqXMnLHByaXZhY3lQb2xpY3k6e25hbWU6J3BvbMOtdGljYSBkZSBwcml2YWRlc2EnfX0sZGVjbGluZTonUmVidXRqYScsb2s6J0FjY2VwdGEnLHBvd2VyZWRCeTonRnVuY2lvbmEgYW1iIEtsYXJvIScscHVycG9zZUl0ZW06e3NlcnZpY2U6J2FwbGljYWNpw7MnLHNlcnZpY2VzOidhcGxpY2FjaW9ucyd9LHNhdmU6J0Rlc2EnfTsiLCJleHBvcnQgZGVmYXVsdCB7cHJpdmFjeVBvbGljeTp7bmFtZTonesOhc2FkeSBvY2hyYW55IHNvdWtyb23DrScsdGV4dDonUHJvIGRhbMWhw60gaW5mb3JtYWNlIHNpIHDFmWXEjXRldGUgbmHFoWUgPHRyLWhpbnQgdj1cInByaXZhY3kgcG9saWN5XCI+e3ByaXZhY3lQb2xpY3l9PC90ci1oaW50Pi4nfSxjb25zZW50TW9kYWw6e3RpdGxlOidTbHXFvmJ5LCBrdGVyw6kgYnljaG9tIHLDoWRpIHZ5dcW+aWxpJyxkZXNjcmlwdGlvbjonWmRlIG3Fr8W+ZXRlIHBvc291ZGl0IGEgcMWZaXpwxa9zb2JpdCBzbHXFvmJ5LCBrdGVyw6kgYnljaG9tIHLDoWRpIG5hIHRvbXRvIHdlYnUgcG91xb7DrXZhbGkuIE3DoXRlIHRvIHBvZCBrb250cm9sb3UhIFBvdm9sdGUgbmVibyB6YWthxb50ZSBzbHXFvmJ5LCBqYWsgdXpuw6F0ZSB6YSB2aG9kbsOpLid9LGNvbnNlbnROb3RpY2U6e3Rlc3Rpbmc6J1Rlc3RpbmcgbW9kZSEnLGNoYW5nZURlc2NyaXB0aW9uOidPZCB2YcWhw60gcG9zbGVkbsOtIG7DoXbFoXTEm3Z5IGRvxaFsbyBrZSB6bcSbbsOhbSwgb2Jub3Z0ZSBwcm9zw61tIHN2xa9qIHNvdWhsYXMuJyxkZXNjcmlwdGlvbjon4oCeRG9icsO9IGRlbiEgTcWvxb5lbWUgcG92b2xpdCBuxJtrdGVyw6kgZGFsxaHDrSBzbHXFvmJ5IHBybyB7cHVycG9zZXN9PyBTdsWvaiBzb3VobGFzIG3Fr8W+ZXRlIGtkeWtvbGl2IHptxJtuaXQgbmVibyBvZHZvbGF0LuKAnCcsJ2xlYXJuTW9yZXxjYXBpdGFsaXplJzonVnliZXJ1IHNpJ30sJ8O6xI1lbHknOntmdW5jdGlvbmFsOnsndGl0bGV8Y2FwaXRhbGl6ZSc6J1Bvc2t5dG92w6Fuw60gc2x1xb5lYicsZGVzY3JpcHRpb246J1R5dG8gc2x1xb5ieSBqc291IG5lemJ5dG7DqSBwcm8gc3Byw6F2bsOpIGZ1bmdvdsOhbsOtIHRvaG90byB3ZWJ1LiBOZWx6ZSBqZSB6ZGUgZGVha3Rpdm92YXQsIHByb3Rvxb5lIHNsdcW+YmEgYnkgamluYWsgbmVmdW5nb3ZhbGEgc3Byw6F2bsSbLlxcbid9LHBlcmZvcm1hbmNlOnsndGl0bGV8Y2FwaXRhbGl6ZSc6J09wdGltYWxpemFjZSB2w71rb251JyxkZXNjcmlwdGlvbjonViByw6FtY2kgdMSbY2h0byBzbHXFvmViIGpzb3UgenByYWNvdsOhdsOhbnkgb3NvYm7DrSDDumRhamUgemEgw7rEjWVsZW0gb3B0aW1hbGl6YWNlIHNsdcW+ZWIsIGt0ZXLDqSBqc291IG5hIHRvbXRvIHdlYnUgcG9za3l0b3bDoW55Llxcbid9LG1hcmtldGluZzp7J3RpdGxlfGNhcGl0YWxpemUnOidNYXJrZXRpbmcnLGRlc2NyaXB0aW9uOidWIHLDoW1jaSB0xJtjaHRvIHNsdcW+ZWIganNvdSB6cHJhY292w6F2w6FueSBvc29ibsOtIMO6ZGFqZSwgYWJ5IHNlIHbDoW0gem9icmF6b3ZhbCByZWxldmFudG7DrSBvYnNhaCBvIHByb2R1a3RlY2gsIHNsdcW+YsOhY2ggbmVibyB0w6ltYXRlY2gsIGt0ZXLDqSBieSB2w6FzIG1vaGx5IHphasOtbWF0Lid9LGFkdmVydGlzaW5nOnsndGl0bGV8Y2FwaXRhbGl6ZSc6J1Jla2xhbWEnLGRlc2NyaXB0aW9uOidWIHLDoW1jaSB0xJtjaHRvIHNsdcW+ZWIganNvdSB6cHJhY292w6F2w6FueSBvc29ibsOtIMO6ZGFqZSwgYWJ5IHbDoW0gem9icmF6b3ZhbHkgcGVyc29uYWxpem92YW7DqSBuZWJvIHrDoWptb3bEmyBvcmllbnRvdmFuw6kgcmVrbGFteS4nfX0scHVycG9zZUl0ZW06e3NlcnZpY2U6J0plZG5vZHVjaMOhIHNsdcW+YmEgPHRyLXNuaXA+PC90ci1zbmlwPiAsIGt0ZXJvdSBuYWluc3RhbHVqaSBkbyBzdsOpaG8gcG/EjcOtdGHEjWUuJyxzZXJ2aWNlczonTsSba29saWsgamVkbm9kdWNow71jaCBzbHXFvmViIDx0ci1zbmlwPjwvdHItc25pcD4gLCBrdGVyw6kgbmFpbnN0YWx1amkgZG8gc3bDqWhvIHBvxI3DrXRhxI1lLid9LCdva3xjYXBpdGFsaXplJzonVG8gamUgdiBwb8WZw6Fka3UnLHNhdmU6J3Vsb8W+aXQnLCdkZWNsaW5lfGNhcGl0YWxpemUnOidOZXDFmWlqw61tw6FtJyxjbG9zZTonemF2xZnDrXQnLGFjY2VwdEFsbDoncMWZaWptb3V0IHbFoWUnLGFjY2VwdFNlbGVjdGVkOidwxZlpam1vdXQgdnlicmFuw6knLHNlcnZpY2U6e2Rpc2FibGVBbGw6e3RpdGxlOidwb3ZvbGl0IG5lYm8gemFrw6F6YXQgdsWhZWNobnkgc2x1xb5ieScsZGVzY3JpcHRpb246J1BvbW9jw60gdG9ob3RvIHDFmWVww61uYcSNZSBtxa/FvmV0ZSBwb3ZvbGl0IG5lYm8gemFrw6F6YXQgdsWhZWNobnkgc2x1xb5ieS4nfSxvcHRPdXQ6e3RpdGxlOicob3B0LW91dCknLGRlc2NyaXB0aW9uOidUYXRvIHNsdcW+YmEgc2UgbmHEjcOtdMOhIHZlIHbDvWNob3rDrW0gbmFzdGF2ZW7DrSAoYWxlIG3Fr8W+ZXRlIGppIHpydcWhaXQpJ30scmVxdWlyZWQ6e3RpdGxlOicodsW+ZHkgdnnFvmFkb3bDoW5vKScsZGVzY3JpcHRpb246J1RhdG8gc2x1xb5iYSBqZSB2xb5keSB2ecW+YWRvdsOhbmEnfSxwdXJwb3NlczonWnByYWNvdsOhbsOtICBwcm8gw7rEjWVseSA8dHItc25pcD48L3RyLXNuaXA+JyxwdXJwb3NlOidacHJhY292w6Fuw60gcHJvIMO6xI1lbHkgPHRyLXNuaXA+PC90ci1zbmlwPid9LHBvd2VyZWRCeTonUmVhbGl6b3bDoW5vIHBvbW9jw60gS2xhcm8hJyxjb250ZXh0dWFsQ29uc2VudDp7ZGVzY3JpcHRpb246J0NoY2V0ZSBuYcSNw61zdCBleHRlcm7DrSBvYnNhaCBkb2TDoXZhbsO9IHByb3N0xZllZG5pY3R2w61tIHt0aXRsZX0/JyxhY2NlcHRPbmNlOidBbm8nLGFjY2VwdEFsd2F5czonVsW+ZHknfX07IiwiZXhwb3J0IGRlZmF1bHQge2FjY2VwdEFsbDonVGlsbGFkIGFsbGUnLGFjY2VwdFNlbGVjdGVkOidUaWxsYWQgdWR2YWxndGUnLHNlcnZpY2U6e2Rpc2FibGVBbGw6e2Rlc2NyaXB0aW9uOidCcnVnIGRlbm5lIGtvbnRha3QgdGlsIGF0IGFrdGl2ZXJlL2RlYWt0aXZlcmUgYWxsZSBhcHBzLicsdGl0bGU6J0FrdGl2ZXIvZGVha3RpdmVyIGFsbGUgYXBwbGlrYXRpb25lJ30sb3B0T3V0OntkZXNjcmlwdGlvbjonRGVubmUgYXBwbGlrYXRpb24gaW5kbMOmc2VzIHNvbSBzdGFuZGFyZCAobWVuIGR1IGthbiBkZWFrdGl2ZXJlIGRlbiknLHRpdGxlOidPcHQtT3V0J30scHVycG9zZTonRm9ybcOlbCcscHVycG9zZXM6J0Zvcm3DpWwnLHJlcXVpcmVkOntkZXNjcmlwdGlvbjonRGVubmUgYXBwbGlrYXRpb24gZXIgYWx0aWQgbsO4ZHZlbmRpZycsdGl0bGU6JyhBbHRpZCBuw7hkdmVuZGlnKSd9fSxjbG9zZTonTHVrJyxjb25zZW50TW9kYWw6e2Rlc2NyaXB0aW9uOidIZXIga2FuIGR1IHNlIG9nIMOmbmRyZSwgaHZpbGtlIGluZm9ybWF0aW9uZXIgdmkgZ2VtbWVyIG9tIGRpZy4nLHByaXZhY3lQb2xpY3k6e25hbWU6J0ZsZXJlIGluZm9ybWF0aW9uZXIgZmluZGUgZHUgdW5kZXIge3ByaXZhY3lQb2xpY3l9Jyx0ZXh0OidkYXRhYmVza3l0dGVsc2VzZXJrbMOmcmluZy4nfSx0aXRsZTonSW5mb3JtYXRpb25lciwgc29tIHZpIGdlbW1lcid9LGNvbnNlbnROb3RpY2U6e2NoYW5nZURlc2NyaXB0aW9uOidEZXIgaGFyIHbDpnJldCDDpm5kcmluZ2VyIHNpZGVuIGRpdCBzaWRzdGUgYmVzw7hnLiBPcGRhdGVyIGRpdCB2YWxnLicsZGVzY3JpcHRpb246J1ZpIGdlbW1lciBvZyBiZWhhbmRsZXIgZGluZSBwZXJzb25saWdlIG9wbHlzbmluZ2VyIHRpbCBmw7hsZ2VuZGUgZm9ybcOlbDoge3B1cnBvc2VzfS4nLGltcHJpbnQ6e25hbWU6Jyd9LGxlYXJuTW9yZTonTMOmcyBtZXJlJyxwcml2YWN5UG9saWN5OntuYW1lOidEYXRlbnNjaHV0emVya2zDpHJ1bmcnfX0sZGVjbGluZTonQWZ2aXMnLG9rOidPaycscG93ZXJlZEJ5OidSZWFsaXNlcmV0IG1lZCBLbGFybyEnLHB1cnBvc2VJdGVtOntzZXJ2aWNlOicnLHNlcnZpY2VzOicnfSxzYXZlOidHZW0nfTsiLCJleHBvcnQgZGVmYXVsdCB7YWNjZXB0QWxsOidBbGxlIGFremVwdGllcmVuJyxhY2NlcHRTZWxlY3RlZDonQXVzZ2V3w6RobHRlIGFremVwdGllcmVuJyxjbG9zZTonU2NobGllw59lbicsY29uc2VudE1vZGFsOntkZXNjcmlwdGlvbjonSGllciBrw7ZubmVuIFNpZSBkaWUgRGllbnN0ZSwgZGllIHdpciBhdWYgZGllc2VyIFdlYnNpdGUgbnV0emVuIG3DtmNodGVuLCBiZXdlcnRlbiB1bmQgYW5wYXNzZW4uIFNpZSBoYWJlbiBkYXMgU2FnZW4hIEFrdGl2aWVyZW4gb2RlciBkZWFrdGl2aWVyZW4gU2llIGRpZSBEaWVuc3RlLCB3aWUgU2llIGVzIGbDvHIgcmljaHRpZyBoYWx0ZW4uJyxwcml2YWN5UG9saWN5OntuYW1lOidEYXRlbnNjaHV0emVya2zDpHJ1bmcnLHRleHQ6J1VtIG1laHIgenUgZXJmYWhyZW4sIGxlc2VuIFNpZSBiaXR0ZSB1bnNlcmUge3ByaXZhY3lQb2xpY3l9Lid9LHRpdGxlOidEaWVuc3RlLCBkaWUgd2lyIG51dHplbiBtw7ZjaHRlbid9LGNvbnNlbnROb3RpY2U6e2NoYW5nZURlc2NyaXB0aW9uOidTZWl0IElocmVtIGxldHp0ZW4gQmVzdWNoIGdhYiBlcyDDhG5kZXJ1bmdlbiwgYml0dGUgZXJuZXVlcm4gU2llIElocmUgWnVzdGltbXVuZy4nLHRpdGxlOidDb29raWUtRWluc3RlbGx1bmdlbicsZGVzY3JpcHRpb246J0hhbGxvISBLw7ZubnRlbiB3aXIgYml0dGUgZWluaWdlIHp1c8OkdHpsaWNoZSBEaWVuc3RlIGbDvHIge3B1cnBvc2VzfSBha3RpdmllcmVuPyBTaWUga8O2bm5lbiBJaHJlIFp1c3RpbW11bmcgc3DDpHRlciBqZWRlcnplaXQgw6RuZGVybiBvZGVyIHp1csO8Y2t6aWVoZW4uJyxpbXByaW50OntuYW1lOidJbXByZXNzdW0nfSxsZWFybk1vcmU6J0xhc3NlbiBTaWUgbWljaCB3w6RobGVuJyxwcml2YWN5UG9saWN5OntuYW1lOidEYXRlbnNjaHV0emVya2zDpHJ1bmcnfSx0ZXN0aW5nOidUZXN0bW9kdXMhJ30sY29udGV4dHVhbENvbnNlbnQ6e2FjY2VwdEFsd2F5czonSW1tZXInLGFjY2VwdE9uY2U6J0phJyxkZXNjcmlwdGlvbjonTcO2Y2h0ZW4gU2llIHZvbiB7dGl0bGV9IGJlcmVpdGdlc3RlbGx0ZSBleHRlcm5lIEluaGFsdGUgbGFkZW4/JyxkZXNjcmlwdGlvbkVtcHR5U3RvcmU6J1VtIGRpZXNlbSBEaWVuc3QgZGF1ZXJoYWZ0IHp1c3RpbW1lbiB6dSBrw7ZubmVuLCBtw7xzc2VuIFNpZSB7dGl0bGV9IGluIGRlbiB7bGlua30genVzdGltbWVuLicsbW9kYWxMaW5rVGV4dDonQ29va2llLUVpbnN0ZWxsdW5nZW4nfSxkZWNsaW5lOidJY2ggbGVobmUgYWInLG9rOidEYXMgaXN0IG9rJyxwb3dlcmVkQnk6J1JlYWxpc2llcnQgbWl0IEtsYXJvIScscHJpdmFjeVBvbGljeTp7bmFtZTonRGF0ZW5zY2h1dHplcmtsw6RydW5nJyx0ZXh0OidVbSBtZWhyIHp1IGVyZmFocmVuLCBsZXNlbiBTaWUgYml0dGUgdW5zZXJlIHtwcml2YWN5UG9saWN5fS4nfSxwdXJwb3NlSXRlbTp7c2VydmljZTonRGllbnN0JyxzZXJ2aWNlczonRGllbnN0ZSd9LHB1cnBvc2VzOnthZHZlcnRpc2luZzp7ZGVzY3JpcHRpb246J0RpZXNlIERpZW5zdGUgdmVyYXJiZWl0ZW4gcGVyc8O2bmxpY2hlIEluZm9ybWF0aW9uZW4sIHVtIElobmVuIHBlcnNvbmFsaXNpZXJ0ZSBvZGVyIGludGVyZXNzZW5iZXpvZ2VuZSBXZXJidW5nIHp1IHplaWdlbi4nLHRpdGxlOidXZXJidW5nJ30sZnVuY3Rpb25hbDp7ZGVzY3JpcHRpb246J0RpZXNlIERpZW5zdGUgc2luZCBmw7xyIGRpZSBrb3JyZWt0ZSBGdW5rdGlvbiBkaWVzZXIgV2Vic2l0ZSB1bmVybMOkc3NsaWNoLiBTaWUga8O2bm5lbiBzaWUgaGllciBuaWNodCBkZWFrdGl2aWVyZW4sIGRhIGRlciBEaWVuc3Qgc29uc3QgbmljaHQgcmljaHRpZyBmdW5rdGlvbmllcmVuIHfDvHJkZS5cXG4nLHRpdGxlOidEaWVuc3RiZXJlaXRzdGVsbHVuZyd9LG1hcmtldGluZzp7ZGVzY3JpcHRpb246J0RpZXNlIERpZW5zdGUgdmVyYXJiZWl0ZW4gcGVyc8O2bmxpY2hlIERhdGVuLCB1bSBJaG5lbiByZWxldmFudGUgSW5oYWx0ZSDDvGJlciBQcm9kdWt0ZSwgRGllbnN0bGVpc3R1bmdlbiBvZGVyIFRoZW1lbiB6dSB6ZWlnZW4sIGRpZSBTaWUgaW50ZXJlc3NpZXJlbiBrw7ZubnRlbi4nLHRpdGxlOidNYXJrZXRpbmcnfSxwZXJmb3JtYW5jZTp7ZGVzY3JpcHRpb246J0RpZXNlIERpZW5zdGUgdmVyYXJiZWl0ZW4gcGVyc29uZW5iZXpvZ2VuZSBEYXRlbiwgdW0gZGVuIHZvbiBkaWVzZXIgV2Vic2l0ZSBhbmdlYm90ZW5lbiBTZXJ2aWNlIHp1IG9wdGltaWVyZW4uXFxuJyx0aXRsZTonT3B0aW1pZXJ1bmcgZGVyIExlaXN0dW5nJ319LHNhdmU6J1NwZWljaGVybicsc2VydmljZTp7ZGlzYWJsZUFsbDp7ZGVzY3JpcHRpb246J01pdCBkaWVzZW0gU2NoYWx0ZXIga8O2bm5lbiBTaWUgYWxsZSBEaWVuc3RlIGFrdGl2aWVyZW4gb2RlciBkZWFrdGl2aWVyZW4uJyx0aXRsZTonQWxsZSBEaWVuc3RlIGFrdGl2aWVyZW4gb2RlciBkZWFrdGl2aWVyZW4nfSxvcHRPdXQ6e2Rlc2NyaXB0aW9uOidEaWVzZSBEaWVuc3RlIHdlcmRlbiBzdGFuZGFyZG3DpMOfaWcgZ2VsYWRlbiAoU2llIGvDtm5uZW4gc2ljaCBqZWRvY2ggYWJtZWxkZW4pJyx0aXRsZTonKE9wdC1vdXQpJ30scHVycG9zZTonWndlY2snLHB1cnBvc2VzOidad2Vja2UnLHJlcXVpcmVkOntkZXNjcmlwdGlvbjonRGllc2VyIFNlcnZpY2UgaXN0IGltbWVyIGVyZm9yZGVybGljaCcsdGl0bGU6JyhpbW1lciBlcmZvcmRlcmxpY2gpJ319fTsiLCJleHBvcnQgZGVmYXVsdCB7YWNjZXB0QWxsOicnLGFjY2VwdEFsbF9lbjonQWNjZXB0IGFsbCcsYWNjZXB0U2VsZWN0ZWQ6JycsYWNjZXB0U2VsZWN0ZWRfZW46J0FjY2VwdCBzZWxlY3RlZCcsc2VydmljZTp7ZGlzYWJsZUFsbDp7ZGVzY3JpcHRpb246J86nz4HOt8+DzrnOvM6/z4DOv86vzrfPg861IM6xz4XPhM+MIM+Ezr/OvSDOtM65zrHOus+Mz4DPhM63IM6zzrnOsSDOvc6xIM61zr3Otc+BzrPOv8+Azr/Ouc6uz4POtc65z4IvzrHPgM61zr3Otc+BzrPOv8+Azr/Ouc6uz4POtc65z4Igz4zOu861z4Igz4TOuc+CIM61z4bOsc+BzrzOv86zzq3Pgi4nLHRpdGxlOifOk865zrEgz4zOu861z4Igz4TOuc+CIM61z4bOsc+BzrzOv86zzq3Pgid9LG9wdE91dDp7ZGVzY3JpcHRpb246J86Vzq/Ovc6xzrkgz4DPgc6/zrrOsc64zr/Pgc65z4POvM6tzr3OvyDOvc6xIM+Gzr/Pgc+Ez47Ovc61z4TOsc65LCDOrM67zrvOsSDOvM+Azr/Pgc61zq8gzr3OsSDPgM6xz4HOsc67zrfPhs64zrXOrycsdGl0bGU6JyjOvM63IM6xz4DOsc65z4TOv8+NzrzOtc69zr8pJ30scHVycG9zZTonzqPOus6/z4DPjM+CJyxwdXJwb3NlczonzqPOus6/z4DOv86vJyxyZXF1aXJlZDp7ZGVzY3JpcHRpb246J86UzrXOvSDOs86vzr3Otc+EzrHOuSDOvc6xIM67zrXOuc+Ezr/Phc+BzrPOrs+DzrXOuSDPg8+Jz4PPhM6sIM63IM61z4bOsc+BzrzOv86zzq4gz4fPic+Bzq/PgiDOsc+Fz4TPjCcsdGl0bGU6JyjOsc+AzrHOuc+Ezr/Pjc68zrXOvc6/KSd9fSxjbG9zZTonzprOu861zq/Pg865zrzOvycsY29uc2VudE1vZGFsOntkZXNjcmlwdGlvbjonzpXOtM+OIM68z4DOv8+BzrXOr8+CIM69zrEgzrTOtc65z4IgzrrOsc65IM69zrEgz4HPhc64zrzOr8+DzrXOuc+CIM+EzrnPgiDPgM67zrfPgc6/z4bOv8+Bzq/Otc+CIM+Azr/PhSDPg8+FzrvOu86tzrPOv8+FzrzOtSDPg8+HzrXPhM65zrrOrCDOvM61IM61z4POrc69zrEuJyxwcml2YWN5UG9saWN5OntuYW1lOifOoM6/zrvOuc+EzrnOus6uIM6Rz4DOv8+Bz4HOrs+Ezr/PhScsdGV4dDonzpPOuc6xIM+AzrXPgc65z4PPg8+Mz4TOtc+BzrXPgiDPgM67zrfPgc6/z4bOv8+Bzq/Otc+CLCDPgM6xz4HOsc66zrHOu8+OIM60zrnOsc6yzqzPg8+EzrUgz4TOt869IHtwcml2YWN5UG9saWN5fS4nfSx0aXRsZTonzqDOu863z4HOv8+Gzr/Pgc6vzrXPgiDPgM6/z4Ugz4PPhc67zrvOrc6zzr/Phc68zrUnfSxjb25zZW50Tm90aWNlOntjaGFuZ2VEZXNjcmlwdGlvbjonzqDPgc6xzrPOvM6xz4TOv8+Azr/Ouc6uzrjOt866zrHOvSDOsc67zrvOsc6zzq3PgiDOvM61z4TOrCDPhM63zr0gz4TOtc67zrXPhc+EzrHOr86xIM+DzrHPgiDOtc+Azq/Pg866zrXPiM63IM+AzrHPgc6xzrrOsc67zr/Pjc68zrUgzrHOvc6xzr3Otc+Oz4PPhM61IM+EzrfOvSDPg8+FzrPOus6xz4TOrM64zrXPg863IM+DzrHPgi4nLGRlc2NyaXB0aW9uOifOo8+FzrPOus61zr3PhM+Bz47Ovc6/z4XOvM61IM66zrHOuSDOtc+AzrXOvs61z4HOs86xzrbPjM68zrHPg8+EzrUgz4TOsSDPgM+Bzr/Pg8+Jz4DOuc66zqwgzrTOtc60zr/OvM6tzr3OsSDPg86xz4IgzrPOuc6xIM+Ezr/Phc+CIM+AzrHPgc6xzrrOrM+Ez4kgzrvPjM6zzr/Phc+COiB7cHVycG9zZXN9LicsaW1wcmludDp7bmFtZTonJyxuYW1lX2VuOidpbXByaW50J30sbGVhcm5Nb3JlOifOoM61z4HOuc+Dz4PPjM+EzrXPgc6xJyxwcml2YWN5UG9saWN5OntuYW1lOifOoM6/zrvOuc+EzrnOus6uIM6Rz4DOv8+Bz4HOrs+Ezr/PhSd9fSxkZWNsaW5lOifOkc+Az4zPgc+BzrnPgM+Ez4knLG9rOidPSycscG93ZXJlZEJ5OifOpc+Azr/Pg8+EzrfPgc6vzrbOtc+EzrHOuSDOsc+Az4wgz4TOvyBLbGFybyEnLHB1cnBvc2VJdGVtOntzZXJ2aWNlOicnLHNlcnZpY2VzOicnfSxzYXZlOifOkc+Azr/OuM6uzrrOtc+Fz4POtyd9OyIsImV4cG9ydCBkZWZhdWx0IHthY2NlcHRBbGw6J0FjY2VwdCBhbGwnLGFjY2VwdFNlbGVjdGVkOidBY2NlcHQgc2VsZWN0ZWQnLGNsb3NlOidDbG9zZScsY29uc2VudE1vZGFsOntkZXNjcmlwdGlvbjonSGVyZSB5b3UgY2FuIGFzc2VzcyBhbmQgY3VzdG9taXplIHRoZSBzZXJ2aWNlcyB0aGF0IHdlXFwnZCBsaWtlIHRvIHVzZSBvbiB0aGlzIHdlYnNpdGUuIFlvdVxcJ3JlIGluIGNoYXJnZSEgRW5hYmxlIG9yIGRpc2FibGUgc2VydmljZXMgYXMgeW91IHNlZSBmaXQuJyx0aXRsZTonU2VydmljZXMgd2Ugd291bGQgbGlrZSB0byB1c2UnfSxjb25zZW50Tm90aWNlOntjaGFuZ2VEZXNjcmlwdGlvbjonVGhlcmUgd2VyZSBjaGFuZ2VzIHNpbmNlIHlvdXIgbGFzdCB2aXNpdCwgcGxlYXNlIHJlbmV3IHlvdXIgY29uc2VudC4nLHRpdGxlOidDb29raWUgQ29uc2VudCcsZGVzY3JpcHRpb246J0hpISBDb3VsZCB3ZSBwbGVhc2UgZW5hYmxlIHNvbWUgYWRkaXRpb25hbCBzZXJ2aWNlcyBmb3Ige3B1cnBvc2VzfT8gWW91IGNhbiBhbHdheXMgY2hhbmdlIG9yIHdpdGhkcmF3IHlvdXIgY29uc2VudCBsYXRlci4nLGxlYXJuTW9yZTonTGV0IG1lIGNob29zZScsdGVzdGluZzonVGVzdGluZyBtb2RlISd9LGNvbnRleHR1YWxDb25zZW50OnthY2NlcHRBbHdheXM6J0Fsd2F5cycsYWNjZXB0T25jZTonWWVzJyxkZXNjcmlwdGlvbjonRG8geW91IHdhbnQgdG8gbG9hZCBleHRlcm5hbCBjb250ZW50IHN1cHBsaWVkIGJ5IHt0aXRsZX0/JyxkZXNjcmlwdGlvbkVtcHR5U3RvcmU6J1RvIGFncmVlIHRvIHRoaXMgc2VydmljZSBwZXJtYW5lbnRseSwgeW91IG11c3QgYWNjZXB0IHt0aXRsZX0gaW4gdGhlIHtsaW5rfS4nLG1vZGFsTGlua1RleHQ6J0NvbnNlbnQgTWFuYWdlcid9LGRlY2xpbmU6J0kgZGVjbGluZScsb2s6J1RoYXRcXCdzIG9rJyxwb3dlcmVkQnk6J1JlYWxpemVkIHdpdGggS2xhcm8hJyxwcml2YWN5UG9saWN5OntuYW1lOidwcml2YWN5IHBvbGljeScsdGV4dDonVG8gbGVhcm4gbW9yZSwgcGxlYXNlIHJlYWQgb3VyIHtwcml2YWN5UG9saWN5fS4nfSxwdXJwb3NlSXRlbTp7c2VydmljZTonc2VydmljZScsc2VydmljZXM6J3NlcnZpY2VzJ30scHVycG9zZXM6e2FkdmVydGlzaW5nOntkZXNjcmlwdGlvbjonVGhlc2Ugc2VydmljZXMgcHJvY2VzcyBwZXJzb25hbCBpbmZvcm1hdGlvbiB0byBzaG93IHlvdSBwZXJzb25hbGl6ZWQgb3IgaW50ZXJlc3QtYmFzZWQgYWR2ZXJ0aXNlbWVudHMuJyx0aXRsZTonQWR2ZXJ0aXNpbmcnfSxmdW5jdGlvbmFsOntkZXNjcmlwdGlvbjonVGhlc2Ugc2VydmljZXMgYXJlIGVzc2VudGlhbCBmb3IgdGhlIGNvcnJlY3QgZnVuY3Rpb25pbmcgb2YgdGhpcyB3ZWJzaXRlLiBZb3UgY2Fubm90IGRpc2FibGUgdGhlbSBoZXJlIGFzIHRoZSBzZXJ2aWNlIHdvdWxkIG5vdCB3b3JrIGNvcnJlY3RseSBvdGhlcndpc2UuXFxuJyx0aXRsZTonU2VydmljZSBQcm92aXNpb24nfSxtYXJrZXRpbmc6e2Rlc2NyaXB0aW9uOidUaGVzZSBzZXJ2aWNlcyBwcm9jZXNzIHBlcnNvbmFsIGluZm9ybWF0aW9uIHRvIHNob3cgeW91IHJlbGV2YW50IGNvbnRlbnQgYWJvdXQgcHJvZHVjdHMsIHNlcnZpY2VzIG9yIHRvcGljcyB0aGF0IHlvdSBtaWdodCBiZSBpbnRlcmVzdGVkIGluLicsdGl0bGU6J01hcmtldGluZyd9LHBlcmZvcm1hbmNlOntkZXNjcmlwdGlvbjonVGhlc2Ugc2VydmljZXMgcHJvY2VzcyBwZXJzb25hbCBpbmZvcm1hdGlvbiB0byBvcHRpbWl6ZSB0aGUgc2VydmljZSB0aGF0IHRoaXMgd2Vic2l0ZSBvZmZlcnMuXFxuJyx0aXRsZTonUGVyZm9ybWFuY2UgT3B0aW1pemF0aW9uJ319LHNhdmU6J1NhdmUnLHNlcnZpY2U6e2Rpc2FibGVBbGw6e2Rlc2NyaXB0aW9uOidVc2UgdGhpcyBzd2l0Y2ggdG8gZW5hYmxlIG9yIGRpc2FibGUgYWxsIHNlcnZpY2VzLicsdGl0bGU6J0VuYWJsZSBvciBkaXNhYmxlIGFsbCBzZXJ2aWNlcyd9LG9wdE91dDp7ZGVzY3JpcHRpb246J1RoaXMgc2VydmljZXMgaXMgbG9hZGVkIGJ5IGRlZmF1bHQgKGJ1dCB5b3UgY2FuIG9wdCBvdXQpJyx0aXRsZTonKG9wdC1vdXQpJ30scHVycG9zZToncHVycG9zZScscHVycG9zZXM6J3B1cnBvc2VzJyxyZXF1aXJlZDp7ZGVzY3JpcHRpb246J1RoaXMgc2VydmljZXMgaXMgYWx3YXlzIHJlcXVpcmVkJyx0aXRsZTonKGFsd2F5cyByZXF1aXJlZCknfX19OyIsImV4cG9ydCBkZWZhdWx0IHthY2NlcHRBbGw6J+eFp+WNleWFqOaUticsYWNjZXB0U2VsZWN0ZWQ6J+aOpeWPl+mAieaLqScsY2xvc2U6J+WvhuWIhycsY29uc2VudE1vZGFsOntkZXNjcmlwdGlvbjon5Zyo6L+Z6YeM77yM5oKo5Y+v5Lul6K+E5Lyw5ZKM5a6a5Yi25oiR5Lus5biM5pyb5Zyo5pys572R56uZ5LiK5L2/55So55qE5pyN5Yqh44CC5oKo5piv6LSf6LSj5Lq677yB5oKo5Y+v5Lul5qC55o2u6Ieq5bex55qE6ZyA6KaB5ZCv55So5oiW56aB55So5pyN5Yqh44CC5ZCv55So5oiW56aB55So5oKo6K6k5Li65ZCI6YCC55qE5pyN5Yqh44CCJyxwcml2YWN5UG9saWN5OntuYW1lOifpmpDnp4HmlL/nrZYnLHRleHQ6J+imgeS6huino+abtOWkmu+8jOivt+mYheivu+aIkeS7rOeahHtwcml2YWN5UG9saWN5fSDjgIInfSx0aXRsZTon5oiR5Lus5oOz5L2/55So55qE5pyN5YqhJ30sY29uc2VudE5vdGljZTp7Y2hhbmdlRGVzY3JpcHRpb246J+iHquS4iuasoeiuv+mXruWQjuacieWPmOWMlu+8jOivt+abtOaWsOaCqOeahOWQjOaEj+OAgicsZGVzY3JpcHRpb246J+S9oOWlve+8geaIkeS7rOWPr+S7peS4untwdXJwb3Nlc30g5ZCv55So5LiA5Lqb6aKd5aSW55qE5pyN5Yqh5ZCX77yf5oKo5Y+v5Lul6ZqP5pe25pu05pS55oiW5pKk5Zue5oKo55qE5ZCM5oSP44CCJyxpbXByaW50OntuYW1lOifljbDorrAnfSxsZWFybk1vcmU6J+iuqeaIkeadpemAiScscHJpdmFjeVBvbGljeTp7bmFtZTon6ZqQ56eB5pS/562WJ30sdGVzdGluZzon5rWL6K+V5qih5byP77yBJ30sY29udGV4dHVhbENvbnNlbnQ6e2FjY2VwdEFsd2F5czon5oC75pivJyxhY2NlcHRPbmNlOifmmK/nmoTvvIzmmK/nmoQnLGRlc2NyaXB0aW9uOifkvaDmg7PliqDovb3nlLF7dGl0bGV9IOaPkOS+m+eahOWklumDqOWGheWuueWQl++8nyd9LGRlY2xpbmU6J+aIkeaLkue7nScsb2s6J+ayoeS6i+eahCcscG93ZXJlZEJ5OifkuI5LbGFyb+S4gOi1t+WunueOsCEnLHByaXZhY3lQb2xpY3k6e25hbWU6J+makOengeaUv+etlicsdGV4dDon6KaB5LqG6Kej5pu05aSa77yM6K+36ZiF6K+75oiR5Lus55qEe3ByaXZhY3lQb2xpY3l9IOOAgid9LHB1cnBvc2VJdGVtOntzZXJ2aWNlOifmnI3liqEnLHNlcnZpY2VzOifmnI3liqEnfSxwdXJwb3Nlczp7YWR2ZXJ0aXNpbmc6e2Rlc2NyaXB0aW9uOifov5nkupvmnI3liqHlpITnkIbkuKrkurrkv6Hmga/vvIzlkJHmgqjlsZXnpLrkuKrmgKfljJbmiJbln7rkuo7lhbTotqPnmoTlub/lkYrjgIInLHRpdGxlOiflub/lkYrlrqPkvKAnfSxmdW5jdGlvbmFsOntkZXNjcmlwdGlvbjon6L+Z5Lqb5pyN5Yqh5a+55LqO5pys572R56uZ55qE5q2j5bi46L+Q6KGM5piv5b+F5LiN5Y+v5bCR55qE44CC5oKo5LiN6IO95Zyo6L+Z6YeM56aB55So5a6D5Lus77yM5ZCm5YiZ5pyN5Yqh5bCG5peg5rOV5q2j5bi46L+Q6KGM44CCXFxuJyx0aXRsZTon5pyN5Yqh5o+Q5L6bJ30sbWFya2V0aW5nOntkZXNjcmlwdGlvbjon6L+Z5Lqb5pyN5Yqh5Lya5aSE55CG5Liq5Lq65L+h5oGv77yM5ZCR5oKo5bGV56S65oKo5Y+v6IO95oSf5YW06Laj55qE5Lqn5ZOB44CB5pyN5Yqh5oiW5Li76aKY55qE55u45YWz5YaF5a6544CCJyx0aXRsZTon5biC5Zy66JCl6ZSAJ30scGVyZm9ybWFuY2U6e2Rlc2NyaXB0aW9uOifov5nkupvmnI3liqHlpITnkIbkuKrkurrkv6Hmga/mmK/kuLrkuobkvJjljJbmnKznvZHnq5nmj5DkvpvnmoTmnI3liqHjgIJcXG4nLHRpdGxlOifmgKfog73kvJjljJYnfX0sc2F2ZTon5oy95pWRJyxzZXJ2aWNlOntkaXNhYmxlQWxsOntkZXNjcmlwdGlvbjon5L2/55So5q2k5byA5YWz5Y+v5ZCv55So5oiW56aB55So5omA5pyJ5pyN5Yqh44CCJyx0aXRsZTon5ZCv55So5oiW5YGc55So5omA5pyJ5pyN5YqhJ30sb3B0T3V0OntkZXNjcmlwdGlvbjon6L+Z5Liq5pyN5Yqh5piv6buY6K6k5Yqg6L2955qEKOS9huS9oOWPr+S7pemAieaLqemAgOWHuiknLHRpdGxlOico6YCJ5oup6YCA5Ye6KSd9LHB1cnBvc2U6J+ebrueahCcscHVycG9zZXM6J+ebrueahCcscmVxdWlyZWQ6e2Rlc2NyaXB0aW9uOifov5nnp43mnI3liqHmmK/lv4XpobvnmoQnLHRpdGxlOico5oC75piv6ZyA6KaBKSd9fX07IiwiZXhwb3J0IGRlZmF1bHQge2FjY2VwdEFsbDonQWNlaXRhciB0b2RvcycsYWNjZXB0U2VsZWN0ZWQ6J0FjZWl0YXIgc2VsZWNpb25hZG9zJyxjbG9zZTonRmVjaGFyJyxjb25zZW50TW9kYWw6e2Rlc2NyaXB0aW9uOidBcXVpIHZvY8OqIHBvZGUgYXZhbGlhciBlIHBlcnNvbmFsaXphciBvcyBzZXJ2acOnb3MgcXVlIGdvc3RhcsOtYW1vcyBkZSB1c2FyIG5lc3RlIHdlYnNpdGUuIFZvY8OqIGVzdMOhIG5vIGNvbWFuZG8hIEhhYmlsaXRlIG91IGRlc2FiaWxpdGUgb3Mgc2VydmnDp29zIGNvbW8ganVsZ2FyIGNvbnZlbmllbnRlLicscHJpdmFjeVBvbGljeTp7bmFtZToncG9sw610aWNhIGRlIHByaXZhY2lkYWRlJyx0ZXh0OidQYXJhIHNhYmVyIG1haXMsIHBvciBmYXZvciwgbGVpYSBub3NzYSB7cHJpdmFjeVBvbGljeX0uJ30sdGl0bGU6J1NlcnZpw6dvcyBxdWUgZ29zdGFyw61hbW9zIGRlIHV0aWxpemFyJ30sY29uc2VudE5vdGljZTp7Y2hhbmdlRGVzY3JpcHRpb246J0hvdXZlIG11ZGFuw6dhcyBkZXNkZSBzdWEgw7psdGltYSB2aXNpdGEsIHF1ZWlyYSByZW5vdmFyIHNldSBjb25zZW50aW1lbnRvLicsZGVzY3JpcHRpb246J09sw6EhIFBvZGVyw61hbW9zLCBwb3IgZmF2b3IsIGhhYmlsaXRhciBhbGd1bnMgc2VydmnDp29zIGFkaWNpb25haXMgcGFyYSB7cHVycG9zZXN9PyBWb2PDqiBwb2RlIHNlbXByZSBtdWRhciBvdSByZXRpcmFyIHNldSBjb25zZW50aW1lbnRvIG1haXMgdGFyZGUuJyxpbXByaW50OntuYW1lOidpbXByaW1pcid9LGxlYXJuTW9yZTonRGVpeGUtbWUgZXNjb2xoZXInLHByaXZhY3lQb2xpY3k6e25hbWU6J3BvbMOtdGljYSBkZSBwcml2YWNpZGFkZSd9LHRlc3Rpbmc6J01vZG8gZGUgdGVzdGUhJ30sY29udGV4dHVhbENvbnNlbnQ6e2FjY2VwdEFsd2F5czonU2VtcHJlJyxhY2NlcHRPbmNlOidTaW0nLGRlc2NyaXB0aW9uOidWb2PDqiBkZXNlamEgY2FycmVnYXIgY29udGXDumRvIGV4dGVybm8gZm9ybmVjaWRvIHBvciB7dGl0bGV9Pyd9LGRlY2xpbmU6J1JlY3VzYXInLG9rOidBY2VpdG8uJyxwb3dlcmVkQnk6J1JlYWxpemFkbyBjb20gS2xhcm8hJyxwcml2YWN5UG9saWN5OntuYW1lOidwb2zDrXRpY2EgZGUgcHJpdmFjaWRhZGUnLHRleHQ6J1BhcmEgc2FiZXIgbWFpcywgcG9yIGZhdm9yLCBsZWlhIG5vc3NhIHtwcml2YWN5UG9saWN5fS4nfSxwdXJwb3NlSXRlbTp7c2VydmljZTonc2VydmnDp28nLHNlcnZpY2VzOidzZXJ2acOnb3MnfSxwdXJwb3Nlczp7YWR2ZXJ0aXNpbmc6e2Rlc2NyaXB0aW9uOidFc3NlcyBzZXJ2acOnb3MgcHJvY2Vzc2FtIGluZm9ybWHDp8O1ZXMgcGVzc29haXMgcGFyYSBtb3N0cmFyIGEgdm9jw6ogYW7Dum5jaW9zIHBlcnNvbmFsaXphZG9zIG91IGJhc2VhZG9zIGVtIGludGVyZXNzZXMuJyx0aXRsZTonUHVibGljaWRhZGUnfSxmdW5jdGlvbmFsOntkZXNjcmlwdGlvbjonRXNzZXMgc2VydmnDp29zIHPDo28gZXNzZW5jaWFpcyBwYXJhIG8gY29ycmV0byBmdW5jaW9uYW1lbnRvIGRlc3RlIHdlYnNpdGUuIFZvY8OqIG7Do28gcG9kZSBkZXNhdGl2w6EtbG9zIGFxdWksIHBvaXMgZGUgb3V0cmEgZm9ybWEgbyBzZXJ2acOnbyBuw6NvIGZ1bmNpb25hcmlhIGNvcnJldGFtZW50ZS5cXG4nLHRpdGxlOidQcmVzdGHDp8OjbyBkZSBzZXJ2acOnb3MnfSxtYXJrZXRpbmc6e2Rlc2NyaXB0aW9uOidFc3NlcyBzZXJ2acOnb3MgcHJvY2Vzc2FtIGluZm9ybWHDp8O1ZXMgcGVzc29haXMgcGFyYSBtb3N0cmFyIGEgdm9jw6ogY29udGXDumRvIHJlbGV2YW50ZSBzb2JyZSBwcm9kdXRvcywgc2VydmnDp29zIG91IHTDs3BpY29zIHF1ZSBwb3NzYW0gc2VyIGRvIHNldSBpbnRlcmVzc2UuJyx0aXRsZTonTWFya2V0aW5nJ30scGVyZm9ybWFuY2U6e2Rlc2NyaXB0aW9uOidFc3NlcyBzZXJ2acOnb3MgcHJvY2Vzc2FtIGluZm9ybWHDp8O1ZXMgcGVzc29haXMgcGFyYSBvdGltaXphciBvIHNlcnZpw6dvIHF1ZSBlc3RlIHdlYnNpdGUgb2ZlcmVjZS5cXG4nLHRpdGxlOidPdGltaXphw6fDo28gZG8gZGVzZW1wZW5obyd9fSxzYXZlOidTYWx2YXInLHNlcnZpY2U6e2Rpc2FibGVBbGw6e2Rlc2NyaXB0aW9uOidVc2UgZXNzYSBjaGF2ZSBwYXJhIGhhYmlsaXRhciBvdSBkZXNhYmlsaXRhciB0b2RvcyBvcyBzZXJ2acOnb3MuJyx0aXRsZTonSGFiaWxpdGFyIG91IGRlc2FiaWxpdGFyIHRvZG9zIG9zIHNlcnZpw6dvcyd9LG9wdE91dDp7ZGVzY3JpcHRpb246J0VzdGVzIHNlcnZpw6dvcyBzw6NvIGNhcnJlZ2Fkb3MgcG9yIHBhZHLDo28gKG1hcyBvIHZvY8OqIHBvZGUgb3B0YXIgcG9yIG7Do28gcGFydGljaXBhcikuJyx0aXRsZTonKG9wdC1vdXQpJ30scHVycG9zZTonT2JqZXRpdm8nLHB1cnBvc2VzOidPYmpldGl2b3MnLHJlcXVpcmVkOntkZXNjcmlwdGlvbjonRXNzZXMgc2VydmnDp29zIHPDo28gc2VtcHJlIG5lY2Vzc8OhcmlvcycsdGl0bGU6JyhzZW1wcmUgbmVjZXNzw6FyaW8pJ319fTsiLCJleHBvcnQgZGVmYXVsdCB7YWNjZXB0QWxsOidBY2VwdGFyIHRvZGFzJyxhY2NlcHRTZWxlY3RlZDonQWNlcHRhciBzZWxlY2Npb25hZGFzJyxjbG9zZTonQ2VycmFyJyxjb25zZW50TW9kYWw6e2Rlc2NyaXB0aW9uOidBcXXDrSBwdWVkZSBldmFsdWFyIHkgcGVyc29uYWxpemFyIGxvcyBzZXJ2aWNpb3MgcXVlIG5vcyBndXN0YXLDrWEgdXRpbGl6YXIgZW4gZXN0ZSBzaXRpbyB3ZWIuIMKhVXN0ZWQgZGVjaWRlISBIYWJpbGl0ZSBvIGRlc2hhYmlsaXRlIGxvcyBzZXJ2aWNpb3MgY29tbyBjb25zaWRlcmUgb3BvcnR1bm8uJyxwcml2YWN5UG9saWN5OntuYW1lOidwb2zDrXRpY2EgZGUgcHJpdmFjaWRhZCcsdGV4dDonUGFyYSBzYWJlciBtw6FzLCBwb3IgZmF2b3IgbGVhIG51ZXN0cmEge3ByaXZhY3lQb2xpY3l9Lid9LHRpdGxlOidTZXJ2aWNpb3MgcXVlIG5vcyBndXN0YXLDrWEgdXRpbGl6YXInfSxjb25zZW50Tm90aWNlOntjaGFuZ2VEZXNjcmlwdGlvbjonSGEgaGFiaWRvIGNhbWJpb3MgZW4gbGFzIGNvb2tpZXMgZGVzZGUgc3Ugw7psdGltYSB2aXNpdGEuIERlYmUgcmVub3ZhciBzdSBjb25zZW50aW1pZW50by4nLGRlc2NyaXB0aW9uOifCoUhvbGEhIMK/UG9kcsOtYW1vcyBoYWJpbGl0YXIgYWxndW5vcyBzZXJ2aWNpb3MgYWRpY2lvbmFsZXMgcGFyYSB7cHVycG9zZXN9PyBTaWVtcHJlIHBvZHLDoSBjYW1iaWFyIG8gcmV0aXJhciBzdSBjb25zZW50aW1pZW50byBtw6FzIHRhcmRlLicsaW1wcmludDp7bmFtZTonSW1wcmltaXInfSxsZWFybk1vcmU6J1F1aWVybyBlbGVnaXInLHByaXZhY3lQb2xpY3k6e25hbWU6J3BvbMOtdGljYSBkZSBwcml2YWNpZGFkJ30sdGVzdGluZzonwqFNb2RvIGRlIHBydWViYSEnfSxjb250ZXh0dWFsQ29uc2VudDp7YWNjZXB0QWx3YXlzOidTaWVtcHJlJyxhY2NlcHRPbmNlOidTw60nLGRlc2NyaXB0aW9uOifCv1F1aWVyZXMgY2FyZ2FyIGVsIGNvbnRlbmlkbyBleHRlcm5vIHN1bWluaXN0cmFkbyBwb3Ige3RpdGxlfT8nfSxkZWNsaW5lOidEZXNjYXJ0YXIgdG9kYXMnLG9rOidEZSBhY3VlcmRvJyxwb3dlcmVkQnk6J8KhUmVhbGl6YWRvIGNvbiBLbGFybyEnLHByaXZhY3lQb2xpY3k6e25hbWU6J3BvbMOtdGljYSBkZSBwcml2YWNpZGFkJyx0ZXh0OidQYXJhIHNhYmVyIG3DoXMsIHBvciBmYXZvciBsZWEgbnVlc3RyYSB7cHJpdmFjeVBvbGljeX0uJ30scHVycG9zZUl0ZW06e3NlcnZpY2U6J3NlcnZpY2lvJyxzZXJ2aWNlczonc2VydmljaW9zJ30scHVycG9zZXM6e2FkdmVydGlzaW5nOntkZXNjcmlwdGlvbjonRXN0b3Mgc2VydmljaW9zIHByb2Nlc2FuIGluZm9ybWFjacOzbiBwZXJzb25hbCBwYXJhIG1vc3RyYXJsZSBhbnVuY2lvcyBwZXJzb25hbGl6YWRvcyBvIGJhc2Fkb3MgZW4gaW50ZXJlc2VzLicsdGl0bGU6J1B1YmxpY2lkYWQnfSxmdW5jdGlvbmFsOntkZXNjcmlwdGlvbjonRXN0b3Mgc2VydmljaW9zIHNvbiBlc2VuY2lhbGVzIHBhcmEgZWwgY29ycmVjdG8gZnVuY2lvbmFtaWVudG8gZGUgZXN0ZSBzaXRpbyB3ZWIuIE5vIHB1ZWRlIGRlc2FjdGl2YXJsb3MgeWEgcXVlIGxhIHDDoWdpbmEgbm8gZnVuY2lvbmFyw61hIGNvcnJlY3RhbWVudGUuJyx0aXRsZTonUHJlc3RhY2nDs24gZGUgc2VydmljaW9zJ30sbWFya2V0aW5nOntkZXNjcmlwdGlvbjonRXN0b3Mgc2VydmljaW9zIHByb2Nlc2FuIGluZm9ybWFjacOzbiBwZXJzb25hbCBwYXJhIG1vc3RyYXJsZSBjb250ZW5pZG8gcmVsZXZhbnRlIHNvYnJlIHByb2R1Y3Rvcywgc2VydmljaW9zIG8gdGVtYXMgcXVlIHB1ZWRhbiBpbnRlcmVzYXJsZS4nLHRpdGxlOidNYXJrZXRpbmcnfSxwZXJmb3JtYW5jZTp7ZGVzY3JpcHRpb246J0VzdG9zIHNlcnZpY2lvcyBwcm9jZXNhbiBpbmZvcm1hY2nDs24gcGVyc29uYWwgcGFyYSBvcHRpbWl6YXIgZWwgc2VydmljaW8gcXVlIG9mcmVjZSBlc3RlIHNpdGlvLicsdGl0bGU6J09wdGltaXphY2nDs24gZGVsIHJlbmRpbWllbnRvJ319LHNhdmU6J0d1YXJkYXInLHNlcnZpY2U6e2Rpc2FibGVBbGw6e2Rlc2NyaXB0aW9uOidVdGlsaWNlIGVzdGUgaW50ZXJydXB0b3IgcGFyYSBhY3RpdmFyIG8gZGVzYWN0aXZhciB0b2RvcyBsb3Mgc2VydmljaW9zLicsdGl0bGU6J0FjdGl2YXIgbyBkZXNhY3RpdmFyIHRvZG9zIGxvcyBzZXJ2aWNpb3MnfSxvcHRPdXQ6e2Rlc2NyaXB0aW9uOidFc3RlIHNlcnZpY2lvIGVzdMOhIGhhYmlsaXRhZG8gcG9yIGRlZmVjdG8gKHBlcm8gcHVlZGUgb3B0YXIgcG9yIGxvIGNvbnRyYXJpbyknLHRpdGxlOicoZGVzYWN0aXZhciknfSxwdXJwb3NlOidGaW5hbGlkYWQnLHB1cnBvc2VzOidGaW5hbGlkYWRlcycscmVxdWlyZWQ6e2Rlc2NyaXB0aW9uOidFc3RlIHNlcnZpY2lvIGVzIG5lY2VzYXJpbyBzaWVtcHJlJyx0aXRsZTonKHNpZW1wcmUgcmVxdWVyaWRvKSd9fX07IiwiZXhwb3J0IGRlZmF1bHQge2FjY2VwdEFsbDonJyxhY2NlcHRBbGxfZW46J0FjY2VwdCBhbGwnLGFjY2VwdFNlbGVjdGVkOicnLGFjY2VwdFNlbGVjdGVkX2VuOidBY2NlcHQgc2VsZWN0ZWQnLHNlcnZpY2U6e2Rpc2FibGVBbGw6e2Rlc2NyaXB0aW9uOidBa3Rpdm9pIGthaWtraSBww6TDpGxsZS9wb2lzLicsdGl0bGU6J1ZhbGl0c2Uga2Fpa2tpJ30sb3B0T3V0OntkZXNjcmlwdGlvbjonTGFkYXRhYW4gb2xldHVrc2VuYSAobXV0dGEgdm9pdCBvdHRhYSBzZW4gcG9pcyBww6TDpGx0w6QpJyx0aXRsZTonKGxhZGF0YWFuIG9sZXR1a3NlbmEpJ30scHVycG9zZTonS8OkeXR0w7Z0YXJrb2l0dXMnLHB1cnBvc2VzOidLw6R5dHTDtnRhcmtvaXR1a3NldCcscmVxdWlyZWQ6e2Rlc2NyaXB0aW9uOidTaXZ1c3RvIHZhYXRpaSB0w6Rtw6RuIGFpbmEnLHRpdGxlOicodmFhZGl0YWFuKSd9fSxjbG9zZTonU3VsamUnLGNvbnNlbnRNb2RhbDp7ZGVzY3JpcHRpb246J1ZvaXQgdGFya2FzdGVsbGEgamEgbXVva2F0YSBzaW51c3RhIGtlcsOkw6RtacOkbW1lIHRpZXRvamEuJyxwcml2YWN5UG9saWN5OntuYW1lOid0aWV0b3N1b2phc2l2dWx0YW1tZScsdGV4dDonVm9pdCBsdWtlYSBsaXPDpHRpZXRvamEge3ByaXZhY3lQb2xpY3l9Lid9LHRpdGxlOidLZXLDpMOkbcOkbW1lIHRpZWRvdCd9LGNvbnNlbnROb3RpY2U6e2NoYW5nZURlc2NyaXB0aW9uOidPbGVtbWUgdGVobmVldCBtdXV0b2tzaWEgZWh0b2loaW4gdmlpbWUgdmllcmFpbHVzaSBqw6Rsa2VlbiwgdGFya2lzdGEgZWhkb3QuJyxkZXNjcmlwdGlvbjonS2Vyw6TDpG1tZSBqYSBrw6RzaXR0ZWxlbW1lIGhlbmtpbMO2dGlldG9qYSBzZXVyYWF2aWluIHRhcmtvaXR1a3NpaW46IHtwdXJwb3Nlc30uJyxpbXByaW50OntuYW1lOicnLG5hbWVfZW46J2ltcHJpbnQnfSxsZWFybk1vcmU6J0x1ZSBsaXPDpMOkJyxwcml2YWN5UG9saWN5OntuYW1lOid0aWV0b3N1b2phc2l2dWx0YW1tZSd9fSxkZWNsaW5lOidIeWxrw6TDpCcsb2s6J0h5dsOka3N5Jyxwb3dlcmVkQnk6J1BhbHZlbHVuIHRhcmpvYWEgS2xhcm8hJyxwdXJwb3NlSXRlbTp7c2VydmljZTonJyxzZXJ2aWNlczonJ30sc2F2ZTonVGFsbGVubmEnfTsiLCJleHBvcnQgZGVmYXVsdCB7YWNjZXB0QWxsOidBY2NlcHRlciB0b3V0JyxhY2NlcHRTZWxlY3RlZDonQWNjZXB0ZXIgc8OpbGVjdGlvbm7DqScsY2xvc2U6J0Zlcm1lcicsY29uc2VudE1vZGFsOntkZXNjcmlwdGlvbjonVm91cyBwb3V2ZXogaWNpIMOpdmFsdWVyIGV0IHBlcnNvbm5hbGlzZXIgbGVzIHNlcnZpY2VzIHF1ZSBub3VzIGFpbWVyaW9ucyB1dGlsaXNlciBzdXIgY2Ugc2l0ZS4gQ1xcJ2VzdCB2b3VzIHF1aSBkw6ljaWRleiAhIEFjdGl2ZXogb3UgZMOpc2FjdGl2ZXogbGVzIHNlcnZpY2VzIGNvbW1lIGJvbiB2b3VzIHNlbWJsZS4nLHByaXZhY3lQb2xpY3k6e25hbWU6J3BvbGl0aXF1ZSBkZSBjb25maWRlbnRpYWxpdMOpJyx0ZXh0OidQb3VyIGVuIHNhdm9pciBwbHVzLCB2ZXVpbGxleiBsaXJlIG5vdHJlIHtwcml2YWN5UG9saWN5fS4nfSx0aXRsZTonU2VydmljZXMgcXVlIG5vdXMgc291aGFpdG9ucyB1dGlsaXNlcid9LGNvbnNlbnROb3RpY2U6e2NoYW5nZURlc2NyaXB0aW9uOidJbCB5IGEgZXUgZGVzIGNoYW5nZW1lbnRzIGRlcHVpcyB2b3RyZSBkZXJuacOocmUgdmlzaXRlLCB2ZXVpbGxleiByZW5vdXZlbGVyIHZvdHJlIGNvbnNlbnRlbWVudC4nLGRlc2NyaXB0aW9uOidCb25qb3VyICEgUG91cnJpb25zLW5vdXMgYWN0aXZlciBkZXMgc2VydmljZXMgc3VwcGzDqW1lbnRhaXJlcyBwb3VyIHtwdXJwb3Nlc30/IFZvdXMgcG91dmV6IHRvdWpvdXJzIG1vZGlmaWVyIG91IHJldGlyZXIgdm90cmUgY29uc2VudGVtZW50IHBsdXMgdGFyZC4nLGltcHJpbnQ6e25hbWU6J21lbnRpb25zIGzDqWdhbGVzJ30sbGVhcm5Nb3JlOidMYWlzc2V6LW1vaSBjaG9pc2lyJyxwcml2YWN5UG9saWN5OntuYW1lOidwb2xpdGlxdWUgZGUgY29uZmlkZW50aWFsaXTDqSd9LHRlc3Rpbmc6J01vZGUgdGVzdCAhJ30sY29udGV4dHVhbENvbnNlbnQ6e2FjY2VwdEFsd2F5czonVG91am91cnMnLGFjY2VwdE9uY2U6J091aScsZGVzY3JpcHRpb246J1ZvdXMgc291aGFpdGV6IGNoYXJnZXIgdW4gY29udGVudSBleHRlcm5lIGZvdXJuaSBwYXIge3RpdGxlfT8nfSxkZWNsaW5lOidKZSByZWZ1c2UnLG9rOidDXFwnZXN0IGJvbi4nLHBvd2VyZWRCeTonUsOpYWxpc8OpIGF2ZWMgS2xhcm8gIScscHJpdmFjeVBvbGljeTp7bmFtZToncG9saXRpcXVlIGRlIGNvbmZpZGVudGlhbGl0w6knLHRleHQ6J1BvdXIgZW4gc2F2b2lyIHBsdXMsIHZldWlsbGV6IGxpcmUgbm90cmUge3ByaXZhY3lQb2xpY3l9Lid9LHB1cnBvc2VJdGVtOntzZXJ2aWNlOidzZXJ2aWNlJyxzZXJ2aWNlczonc2VydmljZXMnfSxwdXJwb3Nlczp7YWR2ZXJ0aXNpbmc6e2Rlc2NyaXB0aW9uOidDZXMgc2VydmljZXMgdHJhaXRlbnQgbGVzIGluZm9ybWF0aW9ucyBwZXJzb25uZWxsZXMgcG91ciB2b3VzIHByw6lzZW50ZXIgZGVzIHB1YmxpY2l0w6lzIHBlcnNvbm5hbGlzw6llcyBvdSBiYXPDqWVzIHN1ciBkZXMgaW50w6lyw6p0cy4nLHRpdGxlOidQdWJsaWNpdMOpJ30sZnVuY3Rpb25hbDp7ZGVzY3JpcHRpb246J0NlcyBzZXJ2aWNlcyBzb250IGVzc2VudGllbHMgYXUgYm9uIGZvbmN0aW9ubmVtZW50IGRlIGNlIHNpdGUuIFZvdXMgbmUgcG91dmV6IHBhcyBsZXMgZMOpc2FjdGl2ZXIgaWNpIGNhciBsZSBzZXJ2aWNlIG5lIGZvbmN0aW9ubmVyYWl0IHBhcyBjb3JyZWN0ZW1lbnQgYXV0cmVtZW50LlxcbicsdGl0bGU6J1ByZXN0YXRpb24gZGUgc2VydmljZXMnfSxtYXJrZXRpbmc6e2Rlc2NyaXB0aW9uOidDZXMgc2VydmljZXMgdHJhaXRlbnQgbGVzIGluZm9ybWF0aW9ucyBwZXJzb25uZWxsZXMgYWZpbiBkZSB2b3VzIHByw6lzZW50ZXIgdW4gY29udGVudSBwZXJ0aW5lbnQgc3VyIGxlcyBwcm9kdWl0cywgbGVzIHNlcnZpY2VzIG91IGxlcyBzdWpldHMgcXVpIHBvdXJyYWllbnQgdm91cyBpbnTDqXJlc3Nlci4nLHRpdGxlOidNYXJrZXRpbmcnfSxwZXJmb3JtYW5jZTp7ZGVzY3JpcHRpb246J0NlcyBzZXJ2aWNlcyB0cmFpdGVudCBsZXMgaW5mb3JtYXRpb25zIHBlcnNvbm5lbGxlcyBhZmluIGRcXCdvcHRpbWlzZXIgbGUgc2VydmljZSBxdWUgY2Ugc2l0ZSBXZWIgb2ZmcmUuXFxuJyx0aXRsZTonT3B0aW1pc2F0aW9uIGRlIGxhIHBlcmZvcm1hbmNlJ319LHNhdmU6J0VucmVnaXN0cmVyJyxzZXJ2aWNlOntkaXNhYmxlQWxsOntkZXNjcmlwdGlvbjonVXRpbGlzZXogY2UgY29tbXV0YXRldXIgcG91ciBhY3RpdmVyIG91IGTDqXNhY3RpdmVyIHRvdXMgbGVzIHNlcnZpY2VzLicsdGl0bGU6J0FjdGl2ZXIgb3UgZMOpc2FjdGl2ZXIgdG91cyBsZXMgc2VydmljZXMnfSxvcHRPdXQ6e2Rlc2NyaXB0aW9uOidDZSBzZXJ2aWNlIGVzdCBjaGFyZ8OpIHBhciBkw6lmYXV0IChtYWlzIHZvdXMgcG91dmV6IGxlIGTDqXNhY3RpdmVyKScsdGl0bGU6JyhvcHQtb3V0KSd9LHB1cnBvc2U6J09iamV0JyxwdXJwb3NlczonRmlucycscmVxdWlyZWQ6e2Rlc2NyaXB0aW9uOidDZSBzZXJ2aWNlIGVzdCB0b3Vqb3VycyBuw6ljZXNzYWlyZScsdGl0bGU6Jyh0b3Vqb3VycyByZXF1aXMpJ319fTsiLCJleHBvcnQgZGVmYXVsdCB7YWNjZXB0QWxsOidBY2VwdGFyIHRvZGFzJyxhY2NlcHRTZWxlY3RlZDonQWNlcHRhciBzZWxlY2Npb25hZGFzJyxjbG9zZTonUGVjaGFyJyxjb25zZW50TW9kYWw6e2Rlc2NyaXB0aW9uOidBcXXDrSBwb2RlIGF2YWxpYXIgZSBwZXJzb25hbGl6YXIgb3Mgc2Vydml6b3MgcXVlIG5vcyBndXN0YXLDrWEgdXRpbGl6YXIgbmVzdGUgc2l0aW8gd2ViLiDCoVZvc3RlZGUgZGVjaWRlISBIYWJpbGl0ZSBvdSBkZXNoYWJpbGl0ZSBvcyBzZXJ2aWNpb3MgY29tbyBsbGUgY29udmXDsWEuJyxwcml2YWN5UG9saWN5OntuYW1lOidwb2zDrXRpY2EgZGUgcHJpdmFjaWRhZGUnLHRleHQ6J1BhcmEgc2FiZXIgbcOhaXMsIHBvciBmYXZvciBsZWEgYSBub3NhIHtwcml2YWN5UG9saWN5fS4nfSx0aXRsZTonU2Vydml6b3MgcXVlIG5vcyBndXN0YXLDrWEgdXRpbGl6YXInfSxjb25zZW50Tm90aWNlOntjaGFuZ2VEZXNjcmlwdGlvbjonSG91Ym8gY2FtYmlvcyBuYXMgY29va2llcyBkZW5kZSBhIHPDumEgw7psdGltYSB2aXNpdGEuIERlYmUgcmVub3ZhciBvIHNldSBjb25zZW50aW1lbnRvLicsZGVzY3JpcHRpb246J8KhT2xhISDCv1BvZGVyw61hbW9zIGhhYmlsaXRhciBhbGfDum5zIHNlcnZpem9zIGFkaWNpb25haXMgcGFyYSB7cHVycG9zZXN9PyBTZW1wcmUgcG9kZXLDoSBjYW1iaWFyIG91IHJldGlyYXIgbyBzw6l1IGNvbnNlbnRpbWVudG8gbcOhaXMgdGFyZGUuJyxpbXByaW50OntuYW1lOidJbXByaW1pcid9LGxlYXJuTW9yZTonUXVlcm8gZWxpeGlyJyxwcml2YWN5UG9saWN5OntuYW1lOidwb2zDrXRpY2EgZGUgcHJpdmFjaWRhZGUnfSx0ZXN0aW5nOifCoU1vZG8gZGUgcHJvYmEhJ30sZGVjbGluZTonRGVzY2FydGFyIHRvZGFzJyxvazonRGUgYWNvcmRvJyxwb3dlcmVkQnk6J8KhUmVhbGl6YWRvIGNvbiBLbGFybyEnLHByaXZhY3lQb2xpY3k6e25hbWU6J3BvbMOtdGljYSBkZSBwcml2YWNpZGFkZScsdGV4dDonUGFyYSBzYWJlciBtw6FpcywgcG9yIGZhdm9yIGxlYSBhIG5vc2Ege3ByaXZhY3lQb2xpY3l9Lid9LHB1cnBvc2VJdGVtOntzZXJ2aWNlOidzZXJ2aXpvJyxzZXJ2aWNlczonc2Vydml6b3MnfSxwdXJwb3Nlczp7YWR2ZXJ0aXNpbmc6e2Rlc2NyaXB0aW9uOidFc3RlcyBzZXJ2aXpvcyBwcm9jZXNhbiBpbmZvcm1hY2nDs24gcGVyc29hbCBwYXJhIG1vc3RyYXJsbGUgYW51bmNpb3MgcGVyc29uYWxpemFkb3Mgb3UgYmFzYWRvcyBlbiBpbnRlcmVzZXMuJyx0aXRsZTonUHVibGljaWRhZGUnfSxmdW5jdGlvbmFsOntkZXNjcmlwdGlvbjonRXN0ZXMgc2Vydml6b3Mgc29uIGVzZW5jaWFpcyBwYXJhIG8gY29ycmVjdG8gZnVuY2lvbmFtaWVudG8gZGVzdGUgc2l0aW8gd2ViLiBOb24gcG9kZSBkZXNhY3RpdmFsb3MgeGEgcXVlIGEgcMOheGluYSBub24gZnVuY2lvbmFyw61hIGNvcnJlY3RhbWVudGUuJyx0aXRsZTonUHJlc3RhY2nDs24gZGUgc2Vydml6b3MnfSxtYXJrZXRpbmc6e2Rlc2NyaXB0aW9uOidFc3RlcyBzZXJ2aXpvcyBwcm9jZXNhbiBpbmZvcm1hY2nDs24gcGVyc29hbCBwYXJhIG1vc3RyYXJsbGUgY29udGlkbyByZWxldmFudGUgc29icmUgcHJvZHV0b3MsIHNlcnZpem9zIG91IHRlbWFzIHF1ZSBwb2lkYW4gaW50ZXJlc2FybGxlLicsdGl0bGU6J01hcmtldGluZyd9LHBlcmZvcm1hbmNlOntkZXNjcmlwdGlvbjonRXN0ZXMgc2Vydml6b3MgcHJvY2VzYW4gaW5mb3JtYWNpw7NuIHBlcnNvYWwgcGFyYSBvcHRpbWl6YXIgbyBzZXJ2aXpvIHF1ZSBvZnJlY2UgZXN0ZSBzaXRpby4nLHRpdGxlOidPcHRpbWl6YWNpw7NuIGRvIHJlbmRpbWVudG8nfX0sc2F2ZTonR2FyZGFyJyxzZXJ2aWNlOntkaXNhYmxlQWxsOntkZXNjcmlwdGlvbjonVXRpbGljZSBlc3RlIGludGVycnVwdG9yIHBhcmEgYWN0aXZhciBvdSBkZXNhY3RpdmFyIHRvZG9zIG9zIHNlcnZpem9zLicsdGl0bGU6J0FjdGl2YXIgb3UgZGVzYWN0aXZhciB0b2RvcyBvcyBzZXJ2aXpvcyd9LG9wdE91dDp7ZGVzY3JpcHRpb246J0VzdGUgc2Vydml6byBlc3TDoSBoYWJpbGl0YWRvIHBvciBkZWZlY3RvIChwZXJvIHBvZGUgb3B0YXIgcG9sbyBjb250cmFyaW8pJyx0aXRsZTonKGRlc2FjdGl2YXIpJ30scHVycG9zZTonRmluYWxpZGFkZScscHVycG9zZXM6J0ZpbmFsaWRhZGVzJyxyZXF1aXJlZDp7ZGVzY3JpcHRpb246J0VzdGUgc2Vydml6byDDqSBuZWNlc2FyaW8gc2VtcHJlJyx0aXRsZTonKHNlbXByZSByZXF1aXJpZG8pJ319fTsiLCJleHBvcnQgZGVmYXVsdCB7YWNjZXB0QWxsOidNaW5kIGVsZm9nYWQnLGFjY2VwdEFsbF9lbjonQWNjZXB0IGFsbCcsYWNjZXB0U2VsZWN0ZWQ6J0tpdsOhbGFzenRvdHRhdCBlbGZvZ2FkJyxhY2NlcHRTZWxlY3RlZF9lbjonQWNjZXB0IHNlbGVjdGVkJyxzZXJ2aWNlOntkaXNhYmxlQWxsOntkZXNjcmlwdGlvbjonSGFzem7DoWxqYSBlenQgYSBrYXBjc29sw7N0IGF6IMO2c3N6ZXMgYWxrYWxtYXrDoXMgZW5nZWTDqWx5ZXrDqXPDqWhlei9sZXRpbHTDoXPDoWhvei4nLHRpdGxlOifDlnNzemVzIGFwcCDDoXRrYXBjc29sw6FzYSd9LG9wdE91dDp7ZGVzY3JpcHRpb246J0V6IGF6IGFsa2FsbWF6w6FzIGFsYXDDqXJ0ZWxtZXrDqXMgc3plcmludCBiZXTDtmx0w7Z0dCAoZGUga2kgbGVoZXQga2FwY3NvbG5pKScsdGl0bGU6JyhsZWlyYXRrb3rDoXMpJ30scHVycG9zZTonQ8OpbCcscHVycG9zZXM6J0PDqWxvaycscmVxdWlyZWQ6e2Rlc2NyaXB0aW9uOidFeiBheiBhbGthbG1hesOhcyBtaW5kaWcgc3rDvGtzw6lnZXMnLHRpdGxlOicobWluZGlnIHN6w7xrc8OpZ2VzKSd9fSxjbG9zZTonRWx2ZXQnLGNvbnNlbnRNb2RhbDp7ZGVzY3JpcHRpb246J0l0dCBsw6F0aGF0amEgw6lzIHRlc3RyZXN6YWJoYXRqYSBheiDDtm5yxZFsIGd5xbFqdMO2dHQgaW5mb3Jtw6FjacOza2F0LicscHJpdmFjeVBvbGljeTp7bmFtZTonYWRhdHbDqWRlbG1pIGlyw6FueWVsdmVpbmtldCcsdGV4dDonVG92w6FiYmkgaW5mb3Jtw6FjacOzw6lydCBrw6lyasO8aywgb2x2YXNzYSBlbCBheiB7cHJpdmFjeVBvbGljeX0uJ30sdGl0bGU6J0luZm9ybcOhY2nDs2ssIGFtaWtldCBnecWxanTDvG5rJ30sY29uc2VudE5vdGljZTp7Y2hhbmdlRGVzY3JpcHRpb246J0F6IHV0b2xzw7MgbMOhdG9nYXTDoXMgw7N0YSB2w6FsdG96w6Fzb2sgdMO2cnTDqW50ZWssIGvDqXJqw7xrLCBmcmlzc8OtdHNlIGEgaG96esOhasOhcnVsw6Fzw6F0LicsZGVzY3JpcHRpb246J1N6ZW3DqWx5ZXMgYWRhdGFpdCDDtnNzemVnecWxanRqw7xrIMOpcyBmZWxkb2xnb3p6dWsgYXogYWzDoWJiaSBjw6lsb2tyYToge3B1cnBvc2VzfS4nLGltcHJpbnQ6e25hbWU6J2ltcHJlc3N6dW0nLG5hbWVfZW46J2ltcHJpbnQnfSxsZWFybk1vcmU6J1R1ZGpvbiBtZWcgdMO2YmJldCcscHJpdmFjeVBvbGljeTp7bmFtZTonYWRhdHbDqWRlbG1pIGlyw6FueWVsdmVpbmtldCd9fSxjb250ZXh0dWFsQ29uc2VudDp7YWNjZXB0QWx3YXlzOidNaW5kaWcnLGFjY2VwdE9uY2U6J0lnZW4nLGRlc2NyaXB0aW9uOidCZSBha2Fyb2QgdMO2bHRlbmkgYSB7dGl0bGV9IMOhbHRhbCBzem9sZ8OhbHRhdG90dCBrw7xsc8WRIHRhcnRhbG1ha2F0Pyd9LGRlY2xpbmU6J0VsdXRhc8OtdCcsb2s6J0VsZm9nYWQnLHBvd2VyZWRCeTonUG93ZXJlZCBieSBLbGFybyEnLHB1cnBvc2VJdGVtOntzZXJ2aWNlOicnLHNlcnZpY2VzOicnfSxzYXZlOidNZW50w6lzJ307IiwiZXhwb3J0IGRlZmF1bHQge2FjY2VwdEFsbDonJyxhY2NlcHRBbGxfZW46J1ByaWh2YXRpIHN2ZScsYWNjZXB0U2VsZWN0ZWQ6JycsYWNjZXB0U2VsZWN0ZWRfZW46J1ByaWh2YXRpIG9kYWJyYW5lJyxzZXJ2aWNlOntkaXNhYmxlQWxsOntkZXNjcmlwdGlvbjonS29yaXN0aXRlIG92YWogcHJla2lkYcSNIGRhIG9tb2d1xIdpdGUvb25lbW9ndcSHaXRlIHN2ZSBhcGxpa2FjaWplIG9kamVkbm9tLicsdGl0bGU6J0l6bWVpamVuaSBzdmUnfSxvcHRPdXQ6e2Rlc2NyaXB0aW9uOidPdmEgYXBsaWthY2lqYSBqZSB1xI1pdGFuYSBhdXRvbWF0c2tpIChhbGkgamUgbW/FvmV0ZSBvbmVtb2d1xIdpdGkpJyx0aXRsZTonKG9uZW1vZ3XEh2l0ZSknfSxwdXJwb3NlOidTdnJoYScscHVycG9zZXM6J1N2cmhlJyxyZXF1aXJlZDp7ZGVzY3JpcHRpb246J092YSBhcGxpa2FjaWphIGplIHV2aWplayBvYmF2ZXpuYScsdGl0bGU6JyhvYmF2ZXpuYSknfX0sY2xvc2U6J1phdHZvcmknLGNvbnNlbnRNb2RhbDp7ZGVzY3JpcHRpb246J092ZGplIG1vxb5ldGUgdmlkamV0aSBpIHBvZGVzaXRpIGluZm9ybWFjaWplIGtvamUgcHJpa3VwbGphbW8gbyBWYW1hLicscHJpdmFjeVBvbGljeTp7bmFtZToncHJhdmlsYSBwcml2YXRub3N0aScsdGV4dDonWmEgdmnFoWUgaW5mb3JtYWNpamUgcHJvxI1pdGFqdGUgbmHFoWEge3ByaXZhY3lQb2xpY3l9Lid9LHRpdGxlOidJbmZvcm1hY2lqZSBrb2plIHByaWt1cGxqYW1vJ30sY29uc2VudE5vdGljZTp7Y2hhbmdlRGVzY3JpcHRpb246J0RvxaFsbyBqZSBkbyBwcm9tamVuYSBvZCBWYcWhZSBwb3NsamVkbmplZyBwb3NqZcSHaXZhbmphIHdlYiBzdHJhbmljZSwgbW9saW1vIFZhcyBkYSBhxb51cmlyYXRlIHN2b2phIG9kb2JyZW5qYS4nLGRlc2NyaXB0aW9uOidNaSBwcmlrdXBsamFtbyBpIHByb2Nlc2lyYW1vIFZhxaFlIG9zb2JuZSBwb2RhdGtlIHJhZGkgc2xpamVkZcSHZWc6IHtwdXJwb3Nlc30uJyxpbXByaW50OntuYW1lOicnLG5hbWVfZW46J2ltcHJpbnQnfSxsZWFybk1vcmU6J1Nhem5hanRlIHZpxaFlJyxwcml2YWN5UG9saWN5OntuYW1lOidwcmF2aWxhIHByaXZhdG5vc3RpJ319LGRlY2xpbmU6J09kYmlqJyxvazonVSByZWR1Jyxwb3dlcmVkQnk6J1Bva3JlxIdlIEtsYXJvIScscHVycG9zZUl0ZW06e3NlcnZpY2U6Jycsc2VydmljZXM6Jyd9LHNhdmU6J1NwcmVtaSd9OyIsImV4cG9ydCBkZWZhdWx0IHthY2NlcHRBbGw6J0FjY2V0dGFyZSB0dXR0aScsYWNjZXB0U2VsZWN0ZWQ6J0FjY2V0dGFyZSBzZWxlemlvbmF0bycsY2xvc2U6J0NoaXVkaScsY29uc2VudE1vZGFsOntkZXNjcmlwdGlvbjonUXVpIHB1w7IgdmFsdXRhcmUgZSBwZXJzb25hbGl6emFyZSBpIHNlcnZpemkgY2hlIHZvcnJlbW1vIHV0aWxpenphcmUgc3UgcXVlc3RvIHNpdG8gd2ViLiDDiCBsZWkgaWwgcmVzcG9uc2FiaWxlISBBYmlsaXRhcmUgbyBkaXNhYmlsaXRhcmUgaSBzZXJ2aXppIGNvbWUgbWVnbGlvIGNyZWRlLicscHJpdmFjeVBvbGljeTp7bmFtZTonaW5mb3JtYXRpdmEgc3VsbGEgcHJpdmFjeScsdGV4dDonUGVyIHNhcGVybmUgZGkgcGnDuSwgbGVnZ2EgbGEgbm9zdHJhIHtwcml2YWN5UG9saWN5fS4nfSx0aXRsZTonU2Vydml6aSBjaGUgZGVzaWRlcmlhbW8gdXRpbGl6emFyZSd9LGNvbnNlbnROb3RpY2U6e2NoYW5nZURlc2NyaXB0aW9uOidDaSBzb25vIHN0YXRpIGRlaSBjYW1iaWFtZW50aSByaXNwZXR0byBhbGxhIHN1YSB1bHRpbWEgdmlzaXRhLCBsYSBwcmVnaGlhbW8gZGkgcmlubm92YXJlIGlsIHN1byBjb25zZW5zby4nLGRlc2NyaXB0aW9uOidTYWx2ZSwgcG9zc2lhbW8gYXR0aXZhcmUgYWxjdW5pIHNlcnZpemkgYWdnaXVudGl2aSBwZXIge3B1cnBvc2VzfT8gUHXDsiBzZW1wcmUgbW9kaWZpY2FyZSBvIHJpdGlyYXJlIGlsIHN1byBjb25zZW5zbyBpbiB1biBzZWNvbmRvIG1vbWVudG8uJyxpbXByaW50OntuYW1lOidpbXByb250YSd9LGxlYXJuTW9yZTonTGFzY2lhdGVtaSBzY2VnbGllcmUnLHByaXZhY3lQb2xpY3k6e25hbWU6J2luZm9ybWF0aXZhIHN1bGxhIHByaXZhY3knfSx0ZXN0aW5nOidNb2RhbGl0w6AgZGkgdGVzdCEnfSxjb250ZXh0dWFsQ29uc2VudDp7YWNjZXB0QWx3YXlzOidTZW1wcmUnLGFjY2VwdE9uY2U6J1PDrCcsZGVzY3JpcHRpb246J1Z1b2xlIGNhcmljYXJlIGNvbnRlbnV0aSBlc3Rlcm5pIGZvcm5pdGkgZGEge3RpdGxlfT8nfSxkZWNsaW5lOidSaWZpdXRvJyxvazonVmEgYmVuZSBjb3PDrCcscG93ZXJlZEJ5OidSZWFsaXp6YXRvIGNvbiBLbGFybyEnLHByaXZhY3lQb2xpY3k6e25hbWU6J2luZm9ybWF0aXZhIHN1bGxhIHByaXZhY3knLHRleHQ6J1BlciBzYXBlcm5lIGRpIHBpw7ksIGxlZ2dhIGxhIG5vc3RyYSB7cHJpdmFjeVBvbGljeX0uJ30scHVycG9zZUl0ZW06e3NlcnZpY2U6J3NlcnZpemlvJyxzZXJ2aWNlczonc2Vydml6aSd9LHB1cnBvc2VzOnthZHZlcnRpc2luZzp7ZGVzY3JpcHRpb246J1F1ZXN0aSBzZXJ2aXppIGVsYWJvcmFubyBsZSBpbmZvcm1hemlvbmkgcGVyc29uYWxpIHBlciBtb3N0cmFybGUgYW5udW5jaSBwdWJibGljaXRhcmkgcGVyc29uYWxpenphdGkgbyBiYXNhdGkgc3UgaW50ZXJlc3NpLicsdGl0bGU6J1B1YmJsaWNpdMOgJ30sZnVuY3Rpb25hbDp7ZGVzY3JpcHRpb246J1F1ZXN0aSBzZXJ2aXppIHNvbm8gZXNzZW56aWFsaSBwZXIgaWwgY29ycmV0dG8gZnVuemlvbmFtZW50byBkaSBxdWVzdG8gc2l0byB3ZWIuIE5vbiBwdcOyIGRpc2F0dGl2YXJsaSBxdWkgcGVyY2jDqSBhbHRyaW1lbnRpIGlsIHNlcnZpemlvIG5vbiBmdW56aW9uZXJlYmJlIGNvcnJldHRhbWVudGUuXFxuJyx0aXRsZTonRm9ybml0dXJhIGRpIHNlcnZpemknfSxtYXJrZXRpbmc6e2Rlc2NyaXB0aW9uOidRdWVzdGkgc2Vydml6aSBlbGFib3Jhbm8gbGUgaW5mb3JtYXppb25pIHBlcnNvbmFsaSBwZXIgbW9zdHJhcmxlIGNvbnRlbnV0aSByaWxldmFudGkgc3UgcHJvZG90dGksIHNlcnZpemkgbyBhcmdvbWVudGkgY2hlIHBvdHJlYmJlcm8gaW50ZXJlc3NhcmxhLicsdGl0bGU6J01hcmtldGluZyd9LHBlcmZvcm1hbmNlOntkZXNjcmlwdGlvbjonUXVlc3RpIHNlcnZpemkgZWxhYm9yYW5vIGxlIGluZm9ybWF6aW9uaSBwZXJzb25hbGkgcGVyIG90dGltaXp6YXJlIGlsIHNlcnZpemlvIG9mZmVydG8gZGEgcXVlc3RvIHNpdG8gd2ViLlxcbicsdGl0bGU6J090dGltaXp6YXppb25lIGRlbGxlIHByZXN0YXppb25pJ319LHNhdmU6J1NhbHZhJyxzZXJ2aWNlOntkaXNhYmxlQWxsOntkZXNjcmlwdGlvbjonVXRpbGl6emkgcXVlc3RvIGludGVycnV0dG9yZSBwZXIgYXR0aXZhcmUgbyBkaXNhdHRpdmFyZSB0dXR0aSBpIHNlcnZpemkuJyx0aXRsZTonQXR0aXZhcmUgbyBkaXNhdHRpdmFyZSB0dXR0aSBpIHNlcnZpemknfSxvcHRPdXQ6e2Rlc2NyaXB0aW9uOidRdWVzdG8gc2Vydml6aW8gw6ggY2FyaWNhdG8gZGkgZGVmYXVsdCAobWEgw6ggcG9zc2liaWxlIHNjZWdsaWVyZSBkaSBub24gdXN1ZnJ1aXJuZSknLHRpdGxlOicob3B0LW91dCknfSxwdXJwb3NlOidTY29wbyBkZWxsJyxwdXJwb3NlczonRmluYWxpdMOgJyxyZXF1aXJlZDp7ZGVzY3JpcHRpb246J1F1ZXN0byBzZXJ2aXppbyDDqCBzZW1wcmUgcmljaGllc3RvJyx0aXRsZTonKHNlbXByZSByaWNoaWVzdG8pJ319fTsiLCJleHBvcnQgZGVmYXVsdCB7YWNjZXB0QWxsOidBY2NlcHRlZXIgYWxsZScsYWNjZXB0U2VsZWN0ZWQ6J0dlc2VsZWN0ZWVyZGUnLGNsb3NlOidTbHVpdCcsY29uc2VudE1vZGFsOntkZXNjcmlwdGlvbjonSGllciBrdW50IHUgZGUgZGllbnN0ZW4gZGllIHdpaiBvcCBkZXplIHdlYnNpdGUgd2lsbGVuIGdlYnJ1aWtlbiBiZW9vcmRlbGVuIGVuIGFhbnBhc3Nlbi4gVSBoZWVmdCBkZSBsZWlkaW5nISBTY2hha2VsIGRlIGRpZW5zdGVuIG5hYXIgZWlnZW4gaW56aWNodCBpbiBvZiB1aXQuJyxwcml2YWN5UG9saWN5OntuYW1lOidwcml2YWN5YmVsZWlkJyx0ZXh0OidWb29yIG1lZXIgaW5mb3JtYXRpZSBrdW50IHUgb25zIHtwcml2YWN5UG9saWN5fSBsZXplbi4nfSx0aXRsZTonRGllbnN0ZW4gZGllIHdlIGdyYWFnIHdpbGxlbiBnZWJydWlrZW4nfSxjb25zZW50Tm90aWNlOntjaGFuZ2VEZXNjcmlwdGlvbjonRXIgd2FyZW4gdmVyYW5kZXJpbmdlbiBzaW5kcyB1dyBsYWF0c3RlIGJlem9laywgZ2VsaWV2ZSB1dyB0b2VzdGVtbWluZyB0ZSBoZXJuaWV1d2VuLicsZGVzY3JpcHRpb246J0hhbGxvLCBrdW5uZW4gd2lqIHUgZWVuIGFhbnRhbCBleHRyYSBkaWVuc3RlbiBhYW5iaWVkZW4gdm9vciB7cHVycG9zZXN9PyBVIGt1bnQgdXcgdG9lc3RlbW1pbmcgbGF0ZXIgYWx0aWpkIG5vZyB3aWp6aWdlbiBvZiBpbnRyZWtrZW4uJyxpbXByaW50OntuYW1lOidpbXByZXNzdW0nfSxsZWFybk1vcmU6J0xhYXQgbWUga2llemVuJyxwcml2YWN5UG9saWN5OntuYW1lOidwcml2YWN5YmVsZWlkJ30sdGVzdGluZzonVGVzdG1vZHVzISd9LGNvbnRleHR1YWxDb25zZW50OnthY2NlcHRBbHdheXM6J0FsdGlqZCcsYWNjZXB0T25jZTonSmEnLGRlc2NyaXB0aW9uOidXaWx0IHUgZXh0ZXJuZSBjb250ZW50IGxhZGVuIGRpZSBkb29yIHt0aXRsZX0gd29yZHQgYWFuZ2VsZXZlcmQgPyd9LGRlY2xpbmU6J0lrIHdlaWdlcicsb2s6J0RhdCBpcyBva8OpJyxwb3dlcmVkQnk6J0dlcmVhbGlzZWVyZCBtZXQgS2xhcm8hJyxwcml2YWN5UG9saWN5OntuYW1lOidwcml2YWN5YmVsZWlkJyx0ZXh0OidWb29yIG1lZXIgaW5mb3JtYXRpZSBrdW50IHUgb25zIHtwcml2YWN5UG9saWN5fSBsZXplbi4nfSxwdXJwb3NlSXRlbTp7c2VydmljZTonc2VydmljZScsc2VydmljZXM6J2RpZW5zdGVuJ30scHVycG9zZXM6e2FkdmVydGlzaW5nOntkZXNjcmlwdGlvbjonRGV6ZSBkaWVuc3RlbiB2ZXJ3ZXJrZW4gcGVyc29vbmxpamtlIGluZm9ybWF0aWUgb20gdSBnZXBlcnNvbmFsaXNlZXJkZSBvZiBvcCBpbnRlcmVzc2UgZ2ViYXNlZXJkZSBhZHZlcnRlbnRpZXMgdGUgdG9uZW4uJyx0aXRsZTonUmVjbGFtZSd9LGZ1bmN0aW9uYWw6e2Rlc2NyaXB0aW9uOidEZXplIGRpZW5zdGVuIHppam4gZXNzZW50aWVlbCB2b29yIGhldCBjb3JyZWN0IGZ1bmN0aW9uZXJlbiB2YW4gZGV6ZSB3ZWJzaXRlLiBVIGt1bnQgemUgaGllciBuaWV0IHVpdHNjaGFrZWxlbiBvbWRhdCBkZSBkaWVuc3QgYW5kZXJzIG5pZXQgY29ycmVjdCB6b3Ugd2Vya2VuLlxcbicsdGl0bGU6J0RpZW5zdHZlcmxlbmluZyd9LG1hcmtldGluZzp7ZGVzY3JpcHRpb246J0RlemUgZGllbnN0ZW4gdmVyd2Vya2VuIHBlcnNvb25saWprZSBpbmZvcm1hdGllIG9tIHUgcmVsZXZhbnRlIGluaG91ZCB0ZSB0b25lbiBvdmVyIHByb2R1Y3RlbiwgZGllbnN0ZW4gb2Ygb25kZXJ3ZXJwZW4gd2FhcmluIHUgZ2XDr250ZXJlc3NlZXJkIHpvdSBrdW5uZW4gemlqbi4nLHRpdGxlOidNYXJrZXRpbmcnfSxwZXJmb3JtYW5jZTp7ZGVzY3JpcHRpb246J0RlemUgZGllbnN0ZW4gdmVyd2Vya2VuIHBlcnNvb25saWprZSBpbmZvcm1hdGllIG9tIGRlIHNlcnZpY2UgZGllIGRlemUgd2Vic2l0ZSBiaWVkdCB0ZSBvcHRpbWFsaXNlcmVuLlxcbicsdGl0bGU6J09wdGltYWxpc2F0aWUgdmFuIGRlIHByZXN0YXRpZXMnfX0sc2F2ZTonT3BzbGFhbicsc2VydmljZTp7ZGlzYWJsZUFsbDp7ZGVzY3JpcHRpb246J0dlYnJ1aWsgZGV6ZSBzY2hha2VsYWFyIG9tIGFsbGUgZGllbnN0ZW4gaW4gb2YgdWl0IHRlIHNjaGFrZWxlbi4nLHRpdGxlOidBbGxlIGRpZW5zdGVuIGluLSBvZiB1aXRzY2hha2VsZW4nfSxvcHRPdXQ6e2Rlc2NyaXB0aW9uOidEZXplIGRpZW5zdGVuIHdvcmRlbiBzdGFuZGFhcmQgZ2VsYWRlbiAobWFhciB1IGt1bnQgemljaCBhZm1lbGRlbiknLHRpdGxlOicob3B0LW91dCknfSxwdXJwb3NlOidWZXJ3ZXJraW5nc2RvZWwnLHB1cnBvc2VzOidWZXJ3ZXJraW5nc2RvZWxlaW5kZW4nLHJlcXVpcmVkOntkZXNjcmlwdGlvbjonRGV6ZSBkaWVuc3RlbiB6aWpuIGFsdGlqZCBub2RpZycsdGl0bGU6JyhhbHRpamQgbm9kaWcpJ319fTsiLCJleHBvcnQgZGVmYXVsdCB7YWNjZXB0QWxsOidHb2R0YXIgYWxsZScsYWNjZXB0U2VsZWN0ZWQ6J0dvZHRhciB2YWxndCcsc2VydmljZTp7ZGlzYWJsZUFsbDp7ZGVzY3JpcHRpb246J0JydWsgZGVubmUgZm9yIMOlIHNrcnUgYXYvcMOlIGFsbGUgYXBwZXIuJyx0aXRsZTonQnl0dCBhbGxlIGFwcGVyJ30sb3B0T3V0OntkZXNjcmlwdGlvbjonRGVubmUgYXBwZW4gZXIgbGFzdGV0IHNvbSBzdGFuZGFyZCAobWVuIGR1IGthbiBza3J1IGRldCBhdiknLHRpdGxlOicob3B0LW91dCknfSxwdXJwb3NlOifDhXJzYWsnLHB1cnBvc2VzOifDhXJzYWtlcicscmVxdWlyZWQ6e2Rlc2NyaXB0aW9uOidEZW5uZSBhcHBsaWthc2pvbmVuIGVyIGFsbHRpZCBww6VrcmV2ZCcsdGl0bGU6JyhhbGx0aWQgcMOla3JldmQpJ319LGNsb3NlOicnLGNsb3NlX2VuOidDbG9zZScsY29uc2VudE1vZGFsOntkZXNjcmlwdGlvbjonSGVyIGthbiBkdSBzZSBvZyB2ZWxnZSBodmlsa2VuIGluZm9ybWFzam9uIHZpIHNhbWxlciBpbm4gb20gZGVnLicscHJpdmFjeVBvbGljeTp7bmFtZToncGVyc29udmVybmVya2zDpnJpbmcnLHRleHQ6J0ZvciDDpSBsw6ZyZSBtZXIsIHZlbm5saWdzdCBsZXMgdsOlciB7cHJpdmFjeVBvbGljeX0uJ30sdGl0bGU6J0luZm9ybWFzam9uIHZpIHNhbWxlciBpbm4nfSxjb25zZW50Tm90aWNlOntjaGFuZ2VEZXNjcmlwdGlvbjonRGV0IGhhciBza2plZGQgZW5kcmluZ2VyIHNpZGVuIGRpdHQgc2lzdGUgYmVzw7hrLCB2ZW5ubGlnc3Qgb3BwZGF0ZXIgZGl0dCBzYW10eWtrZS4nLGRlc2NyaXB0aW9uOidWaSBzYW1sZXIgaW5uIG9nIHByb3Nlc3NlcmVyIGRpbiBwZXJzb25saWdlIGluZm9ybWFzam9uIGF2IGbDuGxnZW5kZSDDpXJzYWtlcjoge3B1cnBvc2VzfS4nLGltcHJpbnQ6e25hbWU6JycsbmFtZV9lbjonaW1wcmludCd9LGxlYXJuTW9yZTonTMOmciBtZXInLHByaXZhY3lQb2xpY3k6e25hbWU6J3BlcnNvbnZlcm5lcmtsw6ZyaW5nJ319LGRlY2xpbmU6J0F2c2zDpScsb2s6J09LJyxwb3dlcmVkQnk6J0xhZ2V0IG1lZCBLbGFybyEnLHB1cnBvc2VJdGVtOntzZXJ2aWNlOicnLHNlcnZpY2VzOicnfSxzYXZlOidPcHNsYWFuJ307IiwiZXhwb3J0IGRlZmF1bHQge2FjY2VwdEFsbDonVG90IGFjY2VwdGFyJyxhY2NlcHRTZWxlY3RlZDonQWNjZXB0YXIgw6fDsiBzZWxlY2Npb25hdCcsY2xvc2U6J1RhbXBhcicsY29uc2VudE1vZGFsOntkZXNjcmlwdGlvbjonQXF1w60gcG9kw6h0eiBtZXN1cmFyIGUgcGVyc29uYWxpemFyIGxvcyBzZXJ2aWNpcyBxdWUgdm9scmlhbSB1dGlsaXphciBzdXMgYXF1ZXN0ZSBzaXRlIHdlYi4gQXbDqHR6IGxvIGRhcnJpw6hyIG1vdCAhIEFjdGl2YXR6IG8gZGVzYWN0aXZhdHogc2Vnb24gdsOyc3RyYSBjYXVzaWRhLicsdGl0bGU6J1NlcnZpY2lzIHF1ZSB2b2xyaWFtIHV0aWxpemFyJ30sY29uc2VudE5vdGljZTp7Y2hhbmdlRGVzY3JpcHRpb246J0kgYWd1w6h0IGRlIG1vZGlmaWNhY2lvbnMgZGVtcHXDqGkgdsOyc3RyYSBkYXJyacOocmEgdmlzaXRhLCBtZXJjw6lzIGRlIHJlcGFzc2FyIHbDsnN0cmUgY29uc2VudGltZW50LicsZGVzY3JpcHRpb246J0FkaWV1XFx1MjAyZiEgUG9pcmlhbSBhY3RpdmFyIG1haSBkZSBzZXJ2aWNpIHBlciB7cHVycG9zZXN9XFx1MjAyZj8gUG9kw6h0eiB0b3Rqb3JuIG1vZGlmaWNhciBvIHRpcmFyIHbDsnN0cmUgY29uc2VudGltZW50IG1haSB0YXJkLicsbGVhcm5Nb3JlOidNZSBkYWlzc2FyIGNhdXNpcicsdGVzdGluZzonTcOyZGUgdMOoc3QgISd9LGNvbnRleHR1YWxDb25zZW50OnthY2NlcHRBbHdheXM6J1RvdGpvcm4nLGFjY2VwdE9uY2U6J8OSYycsZGVzY3JpcHRpb246J1ZvbMOodHogY2FyZ2FyIGRlIGNvbnRlbmd1dHMgZXh0w6hybiBwcm92ZXNpdHMgcGVyIHt0aXRsZX1cXHUyMDJmPyd9LGRlY2xpbmU6J1JlZnVzaScsb2s6J0VzIGJvbicscG93ZXJlZEJ5OidSZWFsaXphdCBhbWIgS2xhcm8gIScscHJpdmFjeVBvbGljeTp7bmFtZToncG9saXRpY2EgZGUgY29uZmlkZW5jaWFsaXRhdCcsdGV4dDonUGVyIG5lIHNhYmVyIG1haSwgdmVqYXR6IG7DsnN0cmEge3ByaXZhY3lQb2xpY3l9Lid9LHB1cnBvc2VJdGVtOntzZXJ2aWNlOidzZXJ2aWNpJyxzZXJ2aWNlczonc2VydmljaXMnfSxwdXJwb3Nlczp7YWR2ZXJ0aXNpbmc6e2Rlc2NyaXB0aW9uOidBcXVlc3RlcyBzZXJ2aWNpcyB0cmFjdGFuIGTigJlpbmZvcm1hY2lvbnMgcGVyc29uYWxhcyBwZXIgdm9zIG1vc3RyYXIgZGUgcmVjbGFtYXMgcGVyc29uYWxpemFkYXMgbyBiYXNhZGFzIHN1bHMgaW50ZXLDqHNzZXMuJyx0aXRsZTonUmVjbGFtYSd9LGZ1bmN0aW9uYWw6e2Rlc2NyaXB0aW9uOidBcXVlc3RlcyBzZXJ2aWNpcyBzb24gZXNzZW5jaWFscyBwZWwgZm9uY2lvbmFtZW50IGNvcnLDqGN0IGTigJlhcXVlc3RlIHNpdGUgd2ViLiBMb3MgcG9kw6h0eiBwYXMgZGVzYWN0aXZhciBhcXXDrSBwcuKAmWFtb3IgcXVlIGxvIHNlcnZpY2kgZm9uY2lvbmFyacOhIHBhcyBjb21hIGNhbCBhdXRyYW1lbnQuXFxuJyx0aXRsZTonU2VydmljaSBkZSBwcm92aXNpb24nfSxtYXJrZXRpbmc6e2Rlc2NyaXB0aW9uOidBcXVlc3RlcyBzZXJ2aWNpcyB0cmFjdGFuIGTigJlpbmZvcm1hY2lvbnMgcGVyc29uYWxhcyBwZXIgdm9zIG1vc3RyYXIgZGUgY29udGVuZ3V0cyBhIHByZXBhdXMgZGUgcHJvZHVpdHMsIGRlIHNlcnZpY2lzIG8gdMOobWFzIHF1ZSBwb2lyacOhbiB2b3MgaW50ZXJlc3Nhci4nLHRpdGxlOidNYXJrZXRpbmcnfSxwZXJmb3JtYW5jZTp7ZGVzY3JpcHRpb246J0FxdWVzdGVzIHNlcnZpY2lzIHRyYWN0YW4gZOKAmWluZm9ybWFjaW9ucyBwZXIgb3B0aW1pemFyIGxvIHNlcnZpY2kgcXXigJlhcXVlc3RlIHNpdGUgd2ViIHByZXBhdXNhLlxcbicsdGl0bGU6J09wdGltaXphY2lvbiBkZSBsYXMgcGVyZm9ybWFuw6dhcyd9fSxzYXZlOidTYWx2YXInLHNlcnZpY2U6e2Rpc2FibGVBbGw6e2Rlc2NyaXB0aW9uOidVdGlsaXphdHogYXF1ZXN0ZSBhbHRlcm5hdG9yIHBlciBhY3RpdmFyIG8gZGVzYWN0aXZhciB0b3RlcyBsb3Mgc2VydmljaXMuJyx0aXRsZTonQWN0aXZhciBvIGRlc2FjdGl2YXIgdG90ZXMgbG9zIHNlcnZpY2lzJ30sb3B0T3V0OntkZXNjcmlwdGlvbjonQXF1ZXN0ZSBzZXJ2aWNpIGVzIGNhcmdhciBwZXIgZGVmYXV0IChtYXMgbG8gcG9kw6h0eiBkZXNhY3RpdmFyKScsdGl0bGU6JyhvcHQtb3V0KSd9LHB1cnBvc2U6J2ZpbmFsaXRhdCcscHVycG9zZXM6J2ZpbmFsaXRhdCcscmVxdWlyZWQ6e2Rlc2NyaXB0aW9uOidBcXVlc3RlIHNlcnZpY2kgZXMgdG90am9ybiByZXF1ZXNpdCcsdGl0bGU6Jyh0b3Rqb3JuIHJlcXVlc2l0KSd9fX07IiwiZXhwb3J0IGRlZmF1bHQge2FjY2VwdEFsbDonJyxhY2NlcHRBbGxfZW46J0FjY2VwdCBhbGwnLGFjY2VwdFNlbGVjdGVkOicnLGFjY2VwdFNlbGVjdGVkX2VuOidBY2NlcHQgc2VsZWN0ZWQnLHNlcnZpY2U6e2Rpc2FibGVBbGw6e2Rlc2NyaXB0aW9uOidVdGlsaXphyJtpIGFjZXN0IHN3aXRjaCBwZW50cnUgYSBhY3RpdmEvZGV6YWN0aXZhIHRvYXRlIGFwbGljYcibaWlsZS4nLHRpdGxlOidDb211dGHIm2kgw65udHJlIHRvYXRlIGFwbGljYcibaWlsZSd9LG9wdE91dDp7ZGVzY3JpcHRpb246J0FjZWFzdMSDIGFwbGljYcibaWUgZXN0ZSDDrm5jxINyY2F0xIMgw65uIG1vZCBpbXBsaWNpdCAoZGFyIHB1dGXIm2kgcmVudW7Im2EpJyx0aXRsZTonKG9wdC1vdXQpJ30scHVycG9zZTonU2NvcCcscHVycG9zZXM6J1Njb3B1cmknLHJlcXVpcmVkOntkZXNjcmlwdGlvbjonQWNlYXN0xIMgYXBsaWNhyJtpZSBlc3RlIMOubnRvdGRlYXVuYSBuZWNlc2FyxIMnLHRpdGxlOicow65udG90ZGVhdW5hIG5lY2VzYXIpJ319LGNsb3NlOicnLGNsb3NlX2VuOidDbG9zZScsY29uc2VudE1vZGFsOntkZXNjcmlwdGlvbjonQWljaSBwdXRlyJtpIHZlZGVhIMiZaSBwZXJzb25hbGl6YSBpbmZvcm1hyJtpaWxlIHBlIGNhcmUgbGUgY29sZWN0xINtIGRlc3ByZSBkdnMuJyxwcml2YWN5UG9saWN5OntuYW1lOidwb2xpdGljYSBwcml2YWN5Jyx0ZXh0OidQZW50cnUgYSBhZmxhIG1haSBtdWx0ZSwgdsSDIHJ1Z8SDbSBzxIMgY2l0acibaSB7cHJpdmFjeVBvbGljeX0uJ30sdGl0bGU6J0luZm9ybWHIm2lpbGUgcGUgY2FyZSBsZSBjb2xlY3TEg20nfSxjb25zZW50Tm90aWNlOntjaGFuZ2VEZXNjcmlwdGlvbjonQXUgZXhpc3RhdCBtb2RpZmljxINyaSBkZSBsYSB1bHRpbWEgdml6aXTEgywgdsSDIHJ1Z8SDbSBzxIMgYWN0dWFsaXphyJtpIGNvbnNpbcibxINtw6JudHVsLicsZGVzY3JpcHRpb246J0NvbGVjdMSDbSDImWkgcHJvY2VzxINtIGluZm9ybWHIm2lpbGUgZHZzLiBwZXJzb25hbGUgw65uIHVybcSDdG9hcmVsZSBzY29wdXJpOiB7cHVycG9zZXN9LicsaW1wcmludDp7bmFtZTonJyxuYW1lX2VuOidpbXByaW50J30sbGVhcm5Nb3JlOidBZmzEgyBtYWkgbXVsdGUnLHByaXZhY3lQb2xpY3k6e25hbWU6J3BvbGl0aWNhIHByaXZhY3knfX0sZGVjbGluZTonUmVudW7Im8SDJyxvazonT0snLHBvd2VyZWRCeTonUmVhbGl6YXQgZGUgS2xhcm8hJyxwdXJwb3NlSXRlbTp7c2VydmljZTonJyxzZXJ2aWNlczonJ30sc2F2ZTonU2FsdmVhesSDJ307IiwiZXhwb3J0IGRlZmF1bHQge2FjY2VwdEFsbDonJyxhY2NlcHRBbGxfZW46J0FjY2VwdCBhbGwnLGFjY2VwdFNlbGVjdGVkOicnLGFjY2VwdFNlbGVjdGVkX2VuOidBY2NlcHQgc2VsZWN0ZWQnLHNlcnZpY2U6e2Rpc2FibGVBbGw6e2Rlc2NyaXB0aW9uOidLb3Jpc3RpdGUgb3ZhaiBwcmVraWRhxI0gZGEgb21vZ3XEh2l0ZS9vbmVzcG9zb2JpdGUgc3ZlIGFwbGlrYWNpamUgb2RqZWRub20uJyx0aXRsZTonSXptZW5pIHN2ZSd9LG9wdE91dDp7ZGVzY3JpcHRpb246J092YSBhcGxpa2FjaWphIGplIHXEjWl0YW5hIGF1dG9tYXRza2kgKGFsaSBqZSBtb8W+ZXRlIG9uZXNwb3NvYml0aSknLHRpdGxlOicob25lc3Bvc29iaXRlKSd9LHB1cnBvc2U6J1N2cmhhJyxwdXJwb3NlczonU3ZyaGUnLHJlcXVpcmVkOntkZXNjcmlwdGlvbjonT3ZhIGFwbGlrYWNpamEgamUgdXZlayBuZW9waG9kbmEnLHRpdGxlOicobmVvcGhvZG5hKSd9fSxjbG9zZTonWmF0dm9yaScsY29uc2VudE1vZGFsOntkZXNjcmlwdGlvbjonT3ZkZSBtb8W+ZXRlIHZpZGV0aSBpIHBvZGVzaXRpIGluZm9ybWFjaWplIGtvamUgcHJpa3VwbGphbW8gbyBWYW1hLicscHJpdmFjeVBvbGljeTp7bmFtZToncG9saXRpa3UgcHJpdmF0bm9zdGknLHRleHQ6J1phIHZpxaFlIGluZm9ybWFjaWplIHByb8SNaXRhanRlIG5hxaF1IHtwcml2YWN5UG9saWN5fS4nfSx0aXRsZTonSW5mb3JtYWNpamUga29qZSBwcmlrdXBsamFtbyd9LGNvbnNlbnROb3RpY2U6e2NoYW5nZURlc2NyaXB0aW9uOidEb8WhbG8gamUgZG8gcHJvbWVuYSBvZCBWYcWhZSBwb3NsZWRuamUgcG9zZXRlLCBtb2xpbW8gVmFzIGRhIGHFvnVyaXJhdGUgc3ZvamEgb2RvYnJlbmphLicsZGVzY3JpcHRpb246J01pIHByaWt1cGxqYW1vIGkgcHJvY2VzaXJhbW8gVmHFoWUgbGnEjW5lIHBvZGF0a2UgcmFkaSBzbGVkZcSHZWc6IHtwdXJwb3Nlc30uJyxpbXByaW50OntuYW1lOicnLG5hbWVfZW46J2ltcHJpbnQnfSxsZWFybk1vcmU6J1Nhem5hanRlIHZpxaFlJyxwcml2YWN5UG9saWN5OntuYW1lOidwb2xpdGlrdSBwcml2YXRub3N0aSd9fSxkZWNsaW5lOidPZGJpaicsb2s6J1UgcmVkdScscG93ZXJlZEJ5OidQb2tyZcSHZSBLbGFybyEnLHB1cnBvc2VJdGVtOntzZXJ2aWNlOicnLHNlcnZpY2VzOicnfSxzYXZlOidTYcSNdXZhaid9OyIsImV4cG9ydCBkZWZhdWx0IHtjb25zZW50TW9kYWw6e3RpdGxlOifQmNC90YTQvtGA0LzQsNGG0LjRmNC1INC60L7RmNC1INC/0YDQuNC60YPQv9GZ0LDQvNC+JyxkZXNjcmlwdGlvbjon0J7QstC00LUg0LzQvtC20LXRgtC1INCy0LjQtNC10YIg0Lgg0L/QvtC00LXRgdC40YLQuCDQuNC90YTQvtGA0LzQsNGG0LjRmNC1INC60L7RmNC1INC/0YDQuNC60YPQv9GZ0LDQvNC+INC+INCS0LDQvNCwLlxcbicscHJpdmFjeVBvbGljeTp7bmFtZTon0L/QvtC70LjRgtC40LrRgyDQv9GA0LjQstCw0YLQvdC+0YHRgtC4Jyx0ZXh0OifQl9CwINCy0LjRiNC1INC40L3RhNC+0YDQvNCw0YbQuNGY0LAg0L/RgNC+0YfQuNGC0LDRmNGC0LUg0L3QsNGI0YMge3ByaXZhY3lQb2xpY3l9Llxcbid9fSxjb25zZW50Tm90aWNlOntjaGFuZ2VEZXNjcmlwdGlvbjon0JTQvtGI0LvQviDRmNC1INC00L4g0L/RgNC+0LzQtdC90LAg0L7QtCDQktCw0YjQtSDQv9C+0YHQu9C10LTQvdGY0LUg0L/QvtGB0LXRgtC1LCDQvNC+0LvQuNC80L4g0JLQsNGBINC00LAg0LDQttGD0YDQuNGA0LDRgtC1INGB0LLQvtGY0LAg0L7QtNC+0LHRgNC10ZrQsC4nLGRlc2NyaXB0aW9uOifQnNC4INC/0YDQuNC60YPQv9GZ0LDQvNC+INC4INC/0YDQvtGG0LXRgdC40YDQsNC80L4g0JLQsNGI0LUg0LvQuNGH0L3QtSDQv9C+0LTQsNGC0LrQtSDRgNCw0LTQuCDRgdC70LXQtNC10ZvQtdCzOiB7cHVycG9zZXN9LlxcbicsbGVhcm5Nb3JlOifQodCw0LfQvdCw0ZjRgtC1INCy0LjRiNC1Jyxwcml2YWN5UG9saWN5OntuYW1lOifQv9C+0LvQuNGC0LjQutGDINC/0YDQuNCy0LDRgtC90L7RgdGC0LgnfX0sb2s6J9CjINGA0LXQtNGDJyxzYXZlOifQodCw0YfRg9Cy0LDRmCcsZGVjbGluZTon0J7QtNCx0LjRmCcsY2xvc2U6J9CX0LDRgtCy0L7RgNC4JyxzZXJ2aWNlOntkaXNhYmxlQWxsOnt0aXRsZTon0JjQt9C80LXQvdC4INGB0LLQtScsZGVzY3JpcHRpb246J9Ca0L7RgNC40YHRgtC40YLQtSDQvtCy0LDRmCDQv9GA0LXQutC40LTQsNGHINC00LAg0L7QvNC+0LPRg9Gb0LjRgtC1L9C+0L3QtdGB0L/QvtGB0L7QsdC40YLQtSDRgdCy0LUg0LDQv9C70LjQutCw0YbQuNGY0LUg0L7QtNGY0LXQtNC90L7QvC4nfSxvcHRPdXQ6e3RpdGxlOico0L7QvdC10YHQv9C+0YHQvtCx0LjRgtC1KScsZGVzY3JpcHRpb246J9Ce0LLQsCDQsNC/0LvQuNC60LDRhtC40ZjQsCDRmNC1INGD0YfQuNGC0LDQvdCwINCw0YPRgtC+0LzQsNGC0YHQutC4ICjQsNC70Lgg0ZjQtSDQvNC+0LbQtdGC0LUg0L7QvdC10YHQv9C+0YHQvtCx0LjRgtC4KSd9LHJlcXVpcmVkOnt0aXRsZTonKNC90LXQvtC/0YXQvtC00L3QsCknLGRlc2NyaXB0aW9uOifQntCy0LAg0LDQv9C70LjQutCw0YbQuNGY0LAg0ZjQtSDRg9Cy0LXQuiDQvdC10L7Qv9GF0L7QtNC90LAuJ30scHVycG9zZXM6J9Ch0LLRgNGF0LUnLHB1cnBvc2U6J9Ch0LLRgNGF0LAnfSxwb3dlcmVkQnk6J9Cf0L7QutGA0LXRm9C1INCa0LvQsNGA0L4hJ307IiwiZXhwb3J0IGRlZmF1bHQge2FjY2VwdEFsbDonQWNjZXB0ZXJhIGFsbGEnLGFjY2VwdFNlbGVjdGVkOidBY2NlcHRlcmEgbWFya2VyYXQnLHNlcnZpY2U6e2Rpc2FibGVBbGw6e2Rlc2NyaXB0aW9uOidBbnbDpG5kIGRldHRhIHJlZ2xhZ2UgZsO2ciBhdHQgYWt0aXZlcmEvYXZha3RpdmVyYSBzYW10bGlnYSBhcHBhci4nLHRpdGxlOifDhG5kcmEgZsO2ciBhbGxhIGFwcGFyJ30sb3B0T3V0OntkZXNjcmlwdGlvbjonRGVuIGjDpHIgYXBwZW4gbGFkZGFzIHNvbSBzdGFuZGFyZGluc3TDpGxsbmluZyAobWVuIGR1IGthbiBhdmFrdGl2ZXJhIGRlbiknLHRpdGxlOicoQXZha3RpdmVyYSknfSxwdXJwb3NlOidTeWZ0ZScscHVycG9zZXM6J1N5ZnRlbicscmVxdWlyZWQ6e2Rlc2NyaXB0aW9uOidEZW4gaMOkciBhcHBsaWthdGlvbmVuIGtyw6R2cyBhbGx0aWQnLHRpdGxlOicoS3LDpHZzIGFsbHRpZCknfX0sY2xvc2U6J1N0w6RuZycsY29uc2VudE1vZGFsOntkZXNjcmlwdGlvbjonSMOkciBrYW4gZHUgc2Ugb2NoIGFucGFzc2Egdmlsa2VuIGluZm9ybWF0aW9uIHZpIHNhbWxhciBvbSBkaWcuJyxwcml2YWN5UG9saWN5OntuYW1lOidJbnRlZ3JpdGV0c3BvbGljeScsdGV4dDonRsO2ciBhdHQgdmV0YSBtZXIsIGzDpHMgdsOlciB7cHJpdmFjeVBvbGljeX0uJ30sdGl0bGU6J0luZm9ybWF0aW9uIHNvbSB2aSBzYW1sYXInfSxjb25zZW50Tm90aWNlOntjaGFuZ2VEZXNjcmlwdGlvbjonRGV0IGhhciBza2V0dCBmw7Zyw6RuZHJpbmdhciBzZWRhbiBkaXR0IHNlbmFzdGUgYmVzw7ZrLCB2YXIgZ29kIHVwcGRhdGVyYSBkaXR0IG1lZGdpdmFuZGUuJyxkZXNjcmlwdGlvbjonVmkgc2FtbGFyIG9jaCBiZWFyYmV0YXIgZGluIHBlcnNvbmxpZ2EgZGF0YSBpIGbDtmxqYW5kZSBzeWZ0ZW46IHtwdXJwb3Nlc30uJyxpbXByaW50OntuYW1lOicnLG5hbWVfZW46J2ltcHJpbnQnfSxsZWFybk1vcmU6J0zDpHMgbWVyJyxwcml2YWN5UG9saWN5OntuYW1lOidJbnRlZ3JpdGV0c3BvbGljeSd9fSxkZWNsaW5lOidBdmLDtmonLG9rOidPSycscG93ZXJlZEJ5OidLw7ZycyBww6UgS2xhcm8hJyxwdXJwb3NlSXRlbTp7c2VydmljZTonJyxzZXJ2aWNlczonJ30sc2F2ZTonU3BhcmEnfTsiLCJleHBvcnQgZGVmYXVsdCB7YWNjZXB0QWxsOicnLGFjY2VwdEFsbF9lbjonQWNjZXB0IGFsbCcsYWNjZXB0U2VsZWN0ZWQ6JycsYWNjZXB0U2VsZWN0ZWRfZW46J0FjY2VwdCBzZWxlY3RlZCcsc2VydmljZTp7ZGlzYWJsZUFsbDp7ZGVzY3JpcHRpb246J1RvcGx1IGHDp21hL2thcGFtYSBpw6dpbiBidSBkw7zEn21leWkga3VsbGFuYWJpbGlyc2luLicsdGl0bGU6J1TDvG0gdXlndWxhbWFsYXLEsSBhw6cva2FwYXQnfSxvcHRPdXQ6e2Rlc2NyaXB0aW9uOidCdSB1eWd1bGFtYSB2YXJzYXnEsWxhbmRhIHnDvGtsZW5kaSAoYW5jYWsgaXB0YWwgZWRlYmlsaXJzaW4pJyx0aXRsZTonKGlzdGXEn2UgYmHEn2zEsSknfSxwdXJwb3NlOidBbWHDpycscHVycG9zZXM6J0FtYcOnbGFyJyxyZXF1aXJlZDp7ZGVzY3JpcHRpb246J0J1IHV5Z3VsYW1hIGhlciB6YW1hbiBnZXJla2xpJyx0aXRsZTonKGhlciB6YW1hbiBnZXJla2xpKSd9fSxjbG9zZTonS2FwYXQnLGNvbnNlbnRNb2RhbDp7ZGVzY3JpcHRpb246J0hha2vEsW7EsXpkYSB0b3BsYWTEscSfxLFtxLF6IGJpbGdpbGVyaSBidXJhZGEgZ8O2cmViaWxpciB2ZSDDtnplbGxlxZ90aXJlYmlsaXJzaW5pei4nLHByaXZhY3lQb2xpY3k6e25hbWU6J0dpemxpbGlrIFBvbGl0aWthc8SxJyx0ZXh0OidEYWhhIGZhemxhc8SxIGnDp2luIGzDvHRmZW4ge3ByaXZhY3lQb2xpY3l9IHNheWZhbcSxesSxIG9rdXl1bi4nfSx0aXRsZTonU2FrbGFkxLHEn8SxbcSxeiBiaWxnaWxlcid9LGNvbnNlbnROb3RpY2U6e2NoYW5nZURlc2NyaXB0aW9uOidTb24geml5YXJldGluaXpkZW4gYnUgeWFuYSBkZcSfacWfaWtsaWtsZXIgb2xkdSwgbMO8dGZlbiBzZcOnaW1pbml6aSBnw7xuY2VsbGV5aW4uJyxkZXNjcmlwdGlvbjonS2nFn2lzZWwgYmlsZ2lsZXJpbml6aSBhxZ9hxJ/EsWRha2kgYW1hw6dsYXJsYSBzYWtsxLF5b3IgdmUgacWfbGl5b3J1ejoge3B1cnBvc2VzfS4nLGltcHJpbnQ6e25hbWU6JycsbmFtZV9lbjonaW1wcmludCd9LGxlYXJuTW9yZTonRGFoYSBmYXpsYSBiaWxnaScscHJpdmFjeVBvbGljeTp7bmFtZTonR2l6bGlsaWsgUG9saXRpa2FzxLEnfX0sZGVjbGluZTonUmVkZGV0JyxvazonVGFtYW0nLHBvd2VyZWRCeTonS2xhcm8gdGFyYWbEsW5kYW4gZ2VsacWfdGlyaWxkaSEnLHB1cnBvc2VJdGVtOntzZXJ2aWNlOicnLHNlcnZpY2VzOicnfSxzYXZlOidLYXlkZXQnfTsiLCJleHBvcnQgZGVmYXVsdCB7YWNjZXB0QWxsOidaYWFrY2VwdHVqIHdzenlzdGtpZScsYWNjZXB0U2VsZWN0ZWQ6J1phYWtjZXB0dWogd3licmFuZScsY2xvc2U6J1phbWtuaWonLGNvbnNlbnRNb2RhbDp7ZGVzY3JpcHRpb246J1R1dGFqIG1vZ8SFIFBhxYRzdHdvIG9jZW5pxIcgaSBkb3N0b3Nvd2HEhyB1c8WCdWdpLCBrdMOzcmUgY2hjaWVsaWJ5xZtteSB3eWtvcnp5c3RhxIcgbmEgdGVqIHN0cm9uaWUuIFfFgsSFY3phaiBsdWIgd3nFgsSFY3phaiB1c8WCdWdpIHdlZMWCdWcgd8WCYXNuZWdvIHV6bmFuaWEuJyxwcml2YWN5UG9saWN5OntuYW1lOidwb2xpdHlrxIUgcHJ5d2F0bm/Fm2NpJyx0ZXh0OidBYnkgZG93aWVkemllxIcgc2nEmSB3acSZY2VqLCBwcm9zaW15IG8gemFwb3puYW5pZSBzacSZIHogbmFzesSFIHtwcml2YWN5UG9saWN5fS4nfSx0aXRsZTonVXPFgnVnaSwgeiBrdMOzcnljaCBjaGNpZWxpYnnFm215IHNrb3J6eXN0YcSHJ30sY29uc2VudE5vdGljZTp7Y2hhbmdlRGVzY3JpcHRpb246J09kIFR3b2plaiBvc3RhdG5pZWogd2l6eXR5IG5hc3TEhXBpxYJ5IHptaWFueSwgcHJvc2lteSBvIG9kbm93aWVuaWUgemdvZHkuJyxkZXNjcmlwdGlvbjonQ3p5IG1vxbxlbXkgd8WCxIVjennEhyBkb2RhdGtvd2UgdXPFgnVnaSBkbGEge3B1cnBvc2VzfT8gVyBrYcW8ZGVqIGNod2lsaSBtb2fEhSBQYcWEc3R3byBww7PFum5pZWogem1pZW5pxIcgbHViIHd5Y29mYcSHIHN3b2rEhSB6Z29kxJkuJyxpbXByaW50OntuYW1lOidJbXByaW50J30sbGVhcm5Nb3JlOidQb3p3w7NsIG1pIHd5YnJhxIcnLHByaXZhY3lQb2xpY3k6e25hbWU6J3BvbGl0eWthIHByeXdhdG5vxZtjaSd9LHRlc3Rpbmc6J1RyeWIgdGVzdG93eSEnfSxjb250ZXh0dWFsQ29uc2VudDp7YWNjZXB0QWx3YXlzOidaYXdzemUnLGFjY2VwdE9uY2U6J1RhaycsZGVzY3JpcHRpb246J0N6eSBjaGPEhSBQYcWEc3R3byB6YcWCYWRvd2HEhyB0cmXFm2NpIHpld27EmXRyem5lIGRvc3RhcmN6YW5lIHByemV6IHt0aXRsZX0/J30sZGVjbGluZTonT2RtYXdpYW0nLG9rOidPaycscG93ZXJlZEJ5OidUZWNobm9sb2dpYSBkb3N0YXJjem9uYSBwcnpleiBLbGFybycscHJpdmFjeVBvbGljeTp7bmFtZToncG9saXR5a2EgcHJ5d2F0bm/Fm2NpJyx0ZXh0OidBYnkgZG93aWVkemllxIcgc2nEmSB3acSZY2VqLCBwcm9zaW15IG8gemFwb3puYW5pZSBzacSZIHogbmFzesSFIHtwcml2YWN5UG9saWN5fS4nfSxwdXJwb3NlSXRlbTp7c2VydmljZTondXPFgnVnYScsc2VydmljZXM6J3VzxYJ1Z2knfSxwdXJwb3Nlczp7YWR2ZXJ0aXNpbmc6e2Rlc2NyaXB0aW9uOidVc8WCdWdpIHRlIHByemV0d2FyemFqxIUgZGFuZSBvc29ib3dlIHcgY2VsdSBwb2themFuaWEgUGHFhHN0d3Ugc3BlcnNvbmFsaXpvd2FueWNoIGx1YiBvcGFydHljaCBuYSB6YWludGVyZXNvd2FuaWFjaCByZWtsYW0uJyx0aXRsZTonUmVrbGFtYSd9LGZ1bmN0aW9uYWw6e2Rlc2NyaXB0aW9uOidVc8WCdWdpIHRlIHPEhSBuaWV6YsSZZG5lIGRvIHByYXdpZMWCb3dlZ28gZnVua2Nqb25vd2FuaWEgbmluaWVqc3plaiBzdHJvbnkgaW50ZXJuZXRvd2VqLiBOaWUgbW9nxIUgUGHFhHN0d28gaWNoIHR1dGFqIHd5xYLEhWN6ecSHLCBwb25pZXdhxbwgdyBwcnplY2l3bnltIHJhemllIHN0cm9uYSBuaWUgZHppYcWCYcWCYWJ5IHByYXdpZMWCb3dvLlxcbicsdGl0bGU6J8Wad2lhZGN6ZW5pZSB1c8WCdWcnfSxtYXJrZXRpbmc6e2Rlc2NyaXB0aW9uOidVc8WCdWdpIHRlIHByemV0d2FyemFqxIUgZGFuZSBvc29ib3dlIHcgY2VsdSBwb2themFuaWEgUGHFhHN0d3UgaXN0b3RueWNoIHRyZcWbY2kgZG90eWN6xIVjeWNoIHByb2R1a3TDs3csIHVzxYJ1ZyBsdWIgdGVtYXTDs3csIGt0w7NyeW1pIG1vZ8SFIGJ5xIcgUGHFhHN0d28gemFpbnRlcmVzb3dhbmkuJyx0aXRsZTonTWFya2V0aW5nJ30scGVyZm9ybWFuY2U6e2Rlc2NyaXB0aW9uOidVc8WCdWdpIHRlIHByemV0d2FyemFqxIUgZGFuZSBvc29ib3dlIHcgY2VsdSBvcHR5bWFsaXphY2ppIHVzxYJ1ZyBvZmVyb3dhbnljaCBwcnpleiB0xJkgc3Ryb27EmS5cXG4nLHRpdGxlOidPcHR5bWFsaXphY2phIHd5ZGFqbm/Fm2NpJ319LHNhdmU6J1phcGlzeicsc2VydmljZTp7ZGlzYWJsZUFsbDp7ZGVzY3JpcHRpb246J1phIHBvbW9jxIUgdGVnbyBwcnplxYLEhWN6bmlrYSBtb8W8bmEgd8WCxIVjemHEhyBsdWIgd3nFgsSFY3phxIcgd3N6eXN0a2llIHVzxYJ1Z2kuJyx0aXRsZTonV8WCxIVjeiBsdWIgd3nFgsSFY3ogd3N6eXN0a2llIHVzxYJ1Z2knfSxvcHRPdXQ6e2Rlc2NyaXB0aW9uOidUYSB1c8WCdWdhIGplc3QgZG9tecWbbG5pZSB6YcWCYWRvd2FuYSAoYWxlIG1vZ8SFIFBhxYRzdHdvIHogbmllaiB6cmV6eWdub3dhxIcpJyx0aXRsZTonKG9wdC1vdXQpJ30scHVycG9zZTonQ2VsJyxwdXJwb3NlczonQ2VsZScscmVxdWlyZWQ6e2Rlc2NyaXB0aW9uOidVc8WCdWdpIHRlIHPEhSB6YXdzemUgd3ltYWdhbmUnLHRpdGxlOicoemF3c3plIHd5bWFnYW5lKSd9fX07IiwiZXhwb3J0IGRlZmF1bHQge2FjY2VwdEFsbDon0J/RgNC40L3Rj9GC0Ywg0LLRgdGRJyxhY2NlcHRTZWxlY3RlZDon0J/RgNC40L3Rj9GC0Ywg0LLRi9Cx0YDQsNC90L3Ri9C1JyxzZXJ2aWNlOntkaXNhYmxlQWxsOntkZXNjcmlwdGlvbjon0JjRgdC/0L7Qu9GM0LfRg9C50YLQtSDRjdGC0L7RgiDQv9C10YDQtdC60LvRjtGH0LDRgtC10LvRjCwg0YfRgtC+0LHRiyDQstC60LvRjtGH0LjRgtGML9C+0YLQutC70Y7Rh9C40YLRjCDQstGB0LUg0L/RgNC40LvQvtC20LXQvdC40Y8uJyx0aXRsZTon0J/QtdGA0LXQutC70Y7Rh9C40YLRjCDQstGB0LUg0L/RgNC40LvQvtC20LXQvdC40Y8nfSxvcHRPdXQ6e2Rlc2NyaXB0aW9uOifQrdGC0L4g0L/RgNC40LvQvtC20LXQvdC40LUg0LLQutC70Y7Rh9C10L3QviDQv9C+INGD0LzQvtC70YfQsNC90LjRjiAo0L3QviDQstGLINC80L7QttC10YLQtSDQvtGC0LrQsNC30LDRgtGM0YHRjyknLHRpdGxlOico0L7RgtC60LDQt9Cw0YLRjNGB0Y8pJ30scHVycG9zZTon0J3QsNC80LXRgNC10L3QuNC1JyxwdXJwb3Nlczon0J3QsNC80LXRgNC10L3QuNGPJyxyZXF1aXJlZDp7ZGVzY3JpcHRpb246J9Ct0YLQviDQvtCx0Y/Qt9Cw0YLQtdC70YzQvdC+0LUg0L/RgNC40LvQvtC20LXQvdC40LUnLHRpdGxlOico0LLRgdC10LPQtNCwINC+0LHRj9C30LDRgtC10LvRjNC90YvQuSknfX0sY2xvc2U6J9CX0LDQutGA0YvRgtGMJyxjb25zZW50TW9kYWw6e2Rlc2NyaXB0aW9uOifQl9C00LXRgdGMINCy0Ysg0LzQvtC20LXRgtC1INC/0YDQvtGB0LzQvtGC0YDQtdGC0Ywg0Lgg0L3QsNGB0YLRgNC+0LjRgtGMLCDQutCw0LrRg9GOINC40L3RhNC+0YDQvNCw0YbQuNGOINC+INCy0LDRgSDQvNGLINGF0YDQsNC90LjQvC4nLHByaXZhY3lQb2xpY3k6e25hbWU6J9Ch0L7Qs9C70LDRiNC10L3QuNC1Jyx0ZXh0OifQp9GC0L7QsdGLINGD0LfQvdCw0YLRjCDQsdC+0LvRjNGI0LUsINC/0L7QttCw0LvRg9C50YHRgtCwLCDQv9GA0L7Rh9C40YLQsNC50YLQtSDQvdCw0YjQtSB7cHJpdmFjeVBvbGljeX0uJ30sdGl0bGU6J9CY0L3RhNC+0YDQvNCw0YbQuNGPLCDQutC+0YLQvtGA0YPRjiDQvNGLINGB0L7RhdGA0LDQvdGP0LXQvCd9LGNvbnNlbnROb3RpY2U6e2NoYW5nZURlc2NyaXB0aW9uOifQodC+INCy0YDQtdC80LXQvdC4INCy0LDRiNC10LPQviDQv9C+0YHQu9C10LTQvdC10LPQviDQstC40LfQuNGC0LAg0L/RgNC+0LjQt9C+0YjQu9C4INC40LfQvNC10L3QtdC90LjRjywg0L7QsdC90L7QstC40YLQtSDRgdCy0L7RkSDRgdC+0LPQu9Cw0YHQuNC1LicsZGVzY3JpcHRpb246J9Cc0Ysg0YHQvtCx0LjRgNCw0LXQvCDQuCDQvtCx0YDQsNCx0LDRgtGL0LLQsNC10Lwg0LLQsNGI0YMg0LvQuNGH0L3Rg9GOINC40L3RhNC+0YDQvNCw0YbQuNGOINC00LvRjyDRgdC70LXQtNGD0Y7RidC40YUg0YbQtdC70LXQuToge3B1cnBvc2VzfS4nLGltcHJpbnQ6e25hbWU6JycsbmFtZV9lbjonaW1wcmludCd9LGxlYXJuTW9yZTon0J3QsNGB0YLRgNC+0LjRgtGMJyxwcml2YWN5UG9saWN5OntuYW1lOifQv9C+0LvQuNGC0LjQutCwINC60L7QvdGE0LjQtNC10L3RhtC40LDQu9GM0L3QvtGB0YLQuCd9fSxkZWNsaW5lOifQntGC0LrQu9C+0L3QuNGC0YwnLG9rOifQn9GA0LjQvdGP0YLRjCcscG93ZXJlZEJ5OifQoNCw0LHQvtGC0LDQtdGCINC90LAg0JrQu9Cw0YDQviEnLHB1cnBvc2VJdGVtOntzZXJ2aWNlOicnLHNlcnZpY2VzOicnfSxzYXZlOifQodC+0YXRgNCw0L3QuNGC0YwnfTsiXSwibmFtZXMiOlsicm9vdCIsImZhY3RvcnkiLCJleHBvcnRzIiwibW9kdWxlIiwiZGVmaW5lIiwiYW1kIiwic2VsZiIsImdldENvb2tpZXMiLCJjb29raWVTdHJpbmdzIiwiZG9jdW1lbnQiLCJjb29raWUiLCJzcGxpdCIsImNvb2tpZXMiLCJyZWdleCIsIlJlZ0V4cCIsImkiLCJsZW5ndGgiLCJjb29raWVTdHIiLCJtYXRjaCIsImV4ZWMiLCJwdXNoIiwibmFtZSIsInZhbHVlIiwiZGVsZXRlQ29va2llIiwicGF0aCIsImRvbWFpbiIsInN0ciIsInVuZGVmaW5lZCIsIlRlc3RTdG9yZSIsIl9jbGFzc0NhbGxDaGVjayIsInRoaXMiLCJfY3JlYXRlQ2xhc3MiLCJrZXkiLCJDb29raWVTdG9yZSIsIm1hbmFnZXIiLCJjb29raWVOYW1lIiwic3RvcmFnZU5hbWUiLCJjb29raWVEb21haW4iLCJjb29raWVQYXRoIiwiY29va2llRXhwaXJlc0FmdGVyRGF5cyIsImdldENvb2tpZSIsImRheXMiLCJleHBpcmVzIiwiZGF0ZSIsIkRhdGUiLCJzZXRUaW1lIiwiZ2V0VGltZSIsInRvVVRDU3RyaW5nIiwic2V0Q29va2llIiwiU3RvcmFnZVN0b3JlIiwiaGFuZGxlIiwiZ2V0SXRlbSIsInNldEl0ZW0iLCJyZW1vdmVJdGVtIiwiTG9jYWxTdG9yYWdlU3RvcmUiLCJfU3RvcmFnZVN0b3JlIiwiX2NhbGxTdXBlciIsImxvY2FsU3RvcmFnZSIsIl9pbmhlcml0cyIsIlNlc3Npb25TdG9yYWdlU3RvcmUiLCJfU3RvcmFnZVN0b3JlMiIsInNlc3Npb25TdG9yYWdlIiwiQ29uc2VudE1hbmFnZXIiLCJjb25maWciLCJzdG9yZSIsImF1eGlsaWFyeVN0b3JlIiwic3RvcmVzIiwic3RvcmFnZU1ldGhvZCIsImNvbnNlbnRzIiwiZGVmYXVsdENvbnNlbnRzIiwiY29uZmlybWVkIiwiY2hhbmdlZCIsInN0YXRlcyIsImluaXRpYWxpemVkIiwiZXhlY3V0ZWRPbmNlIiwid2F0Y2hlcnMiLCJTZXQiLCJsb2FkQ29uc2VudHMiLCJhcHBseUNvbnNlbnRzIiwic2F2ZWRDb25zZW50cyIsIl9vYmplY3RTcHJlYWQiLCJnZXQiLCJzZXJ2aWNlcyIsInNlcnZpY2UiLCJnZXREZWZhdWx0Q29uc2VudCIsIndhdGNoZXIiLCJoYXMiLCJhZGQiLCJkZWxldGUiLCJkYXRhIiwiX3RoaXMiLCJmb3JFYWNoIiwidXBkYXRlIiwibWF0Y2hpbmdTZXJ2aWNlcyIsImZpbHRlciIsImNvbnNlbnQiLCJkZWZhdWx0IiwicmVxdWlyZWQiLCJfdGhpczIiLCJjaGFuZ2VkU2VydmljZXMiLCJjb250ZXh0dWFsQ29uc2VudE9ubHkiLCJtYXAiLCJ1cGRhdGVDb25zZW50Iiwibm90aWZ5IiwiY29uc2VudERhdGEiLCJKU09OIiwicGFyc2UiLCJkZWNvZGVVUklDb21wb25lbnQiLCJfY2hlY2tDb25zZW50cyIsImV2ZW50VHlwZSIsInNhdmVDb25zZW50cyIsImNjIiwiX2kiLCJfT2JqZWN0JGVudHJpZXMiLCJPYmplY3QiLCJlbnRyaWVzIiwiX09iamVjdCRlbnRyaWVzJF9pIiwiX3NsaWNlZFRvQXJyYXkiLCJrIiwidiIsImVuY29kZVVSSUNvbXBvbmVudCIsInN0cmluZ2lmeSIsInNldCIsImNoYW5nZXMiLCJjaGFuZ2VkQ29uc2VudHMiLCJ0eXBlIiwiZHJ5UnVuIiwiaW50ZXJhY3RpdmUiLCJzZXJ2aWNlTmFtZSIsImV4ZWN1dGVIYW5kbGVyIiwiaGFuZGxlciIsIm9wdHMiLCJGdW5jdGlvbiIsInZhcnMiLCJoYW5kbGVyT3B0cyIsIm9uSW5pdCIsInN0YXRlIiwib3B0T3V0IiwiZ2V0Q29uc2VudCIsIm9uQWNjZXB0Iiwib25EZWNsaW5lIiwidXBkYXRlU2VydmljZUVsZW1lbnRzIiwidXBkYXRlU2VydmljZVN0b3JhZ2UiLCJjYWxsYmFjayIsIm9ubHlPbmNlIiwiZWxlbWVudHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZWxlbWVudCIsInBhcmVudCIsInBhcmVudEVsZW1lbnQiLCJkcyIsImRhdGFzZXQiLCJzcmMiLCJocmVmIiwiYXR0cnMiLCJ0YWdOYW1lIiwiY29uc29sZSIsImRlYnVnIiwiY29uY2F0IiwiX3N0ZXAiLCJuZXdFbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsIl9pdGVyYXRvciIsIl9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIiwiYXR0cmlidXRlcyIsInMiLCJuIiwiZG9uZSIsImF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZSIsImVyciIsImUiLCJmIiwiaW5uZXJUZXh0IiwidGV4dCIsInN0eWxlIiwiZGlzcGxheSIsImluc2VydEJlZm9yZSIsInJlbW92ZUNoaWxkIiwiX3N0ZXAyIiwiX2l0ZXJhdG9yMiIsIl9zdGVwMyIsIl9pdGVyYXRvcjMiLCJhdHRyIiwiYXR0clZhbHVlIiwidGl0bGUiLCJyZW1vdmVQcm9wZXJ0eSIsInJlbW92ZUF0dHJpYnV0ZSIsIl9zdGVwNCIsIl9pdGVyYXRvcjQiLCJhcHBseURhdGFzZXQiLCJjb29raWVQYXR0ZXJuIiwiQXJyYXkiLCJfY29va2llUGF0dGVybjIiLCJjcCIsInBhdHRlcm4iLCJzdGFydHNXaXRoIiwicmVwbGFjZSIsImoiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhvc3RuYW1lIiwiY29tcGxldGUiLCJrZXlzIiwiX2kzIiwiX09iamVjdCRrZXlzIiwiX3N0ZXA1IiwiX2l0ZXJhdG9yNSIsImN1cnJlbnRTY3JpcHQiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJzY3JpcHQiLCJpbmNsdWRlcyIsInNsaWNlIiwicmVwbGFjZUNTU1ZhcmlhYmxlcyIsInZhcmlhYmxlcyIsImNzcyIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiX2xvb3AiLCJfIiwiYXBwZW5kQ2hpbGQiLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsImlkIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiam9pbiIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwic291cmNlTWFwcGluZyIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsImVtcHR5RnVuY3Rpb25XaXRoUmVzZXQiLCJyZXNldFdhcm5pbmdDYWNoZSIsInNoaW0iLCJwcm9wcyIsInByb3BOYW1lIiwiY29tcG9uZW50TmFtZSIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsIkVycm9yIiwiZ2V0U2hpbSIsImlzUmVxdWlyZWQiLCJSZWFjdFByb3BUeXBlcyIsImFycmF5IiwiYmlnaW50IiwiYm9vbCIsImZ1bmMiLCJudW1iZXIiLCJvYmplY3QiLCJzdHJpbmciLCJzeW1ib2wiLCJhbnkiLCJhcnJheU9mIiwiZWxlbWVudFR5cGUiLCJpbnN0YW5jZU9mIiwibm9kZSIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsInF1ZXJ5U2VsZWN0b3IiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJnZXRUYXJnZXQiLCJzZXRBdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZVN0eWxlRWxlbWVudCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsImlzQ2FsbGFibGUiLCJ0cnlUb1N0cmluZyIsIiRUeXBlRXJyb3IiLCJUeXBlRXJyb3IiLCJhcmd1bWVudCIsImlzQ29uc3RydWN0b3IiLCJpc1Bvc3NpYmxlUHJvdG90eXBlIiwiJFN0cmluZyIsIlN0cmluZyIsIndlbGxLbm93blN5bWJvbCIsImNyZWF0ZSIsImRlZmluZVByb3BlcnR5IiwiVU5TQ09QQUJMRVMiLCJBcnJheVByb3RvdHlwZSIsInByb3RvdHlwZSIsImNvbmZpZ3VyYWJsZSIsImNoYXJBdCIsIlMiLCJ1bmljb2RlIiwiaXNQcm90b3R5cGVPZiIsIml0IiwiUHJvdG90eXBlIiwiaXNPYmplY3QiLCJmYWlscyIsIkFycmF5QnVmZmVyIiwiYnVmZmVyIiwiaXNFeHRlbnNpYmxlIiwiJGZvckVhY2giLCJTVFJJQ1RfTUVUSE9EIiwiYXJyYXlNZXRob2RJc1N0cmljdCIsImNhbGxiYWNrZm4iLCJhcmd1bWVudHMiLCJiaW5kIiwiY2FsbCIsInRvT2JqZWN0IiwiY2FsbFdpdGhTYWZlSXRlcmF0aW9uQ2xvc2luZyIsImlzQXJyYXlJdGVyYXRvck1ldGhvZCIsImxlbmd0aE9mQXJyYXlMaWtlIiwiY3JlYXRlUHJvcGVydHkiLCJnZXRJdGVyYXRvciIsImdldEl0ZXJhdG9yTWV0aG9kIiwiJEFycmF5IiwiYXJyYXlMaWtlIiwiTyIsIklTX0NPTlNUUlVDVE9SIiwiYXJndW1lbnRzTGVuZ3RoIiwibWFwZm4iLCJtYXBwaW5nIiwic3RlcCIsIml0ZXJhdG9yIiwibmV4dCIsIml0ZXJhdG9yTWV0aG9kIiwidG9JbmRleGVkT2JqZWN0IiwidG9BYnNvbHV0ZUluZGV4IiwiY3JlYXRlTWV0aG9kIiwiSVNfSU5DTFVERVMiLCIkdGhpcyIsImVsIiwiZnJvbUluZGV4IiwiaW5kZXhPZiIsInVuY3VycnlUaGlzIiwiSW5kZXhlZE9iamVjdCIsImFycmF5U3BlY2llc0NyZWF0ZSIsIlRZUEUiLCJJU19NQVAiLCJJU19GSUxURVIiLCJJU19TT01FIiwiSVNfRVZFUlkiLCJJU19GSU5EX0lOREVYIiwiSVNfRklMVEVSX1JFSkVDVCIsIk5PX0hPTEVTIiwidGhhdCIsInNwZWNpZmljQ3JlYXRlIiwiYm91bmRGdW5jdGlvbiIsInNvbWUiLCJldmVyeSIsImZpbmQiLCJmaW5kSW5kZXgiLCJmaWx0ZXJSZWplY3QiLCJWOF9WRVJTSU9OIiwiU1BFQ0lFUyIsIk1FVEhPRF9OQU1FIiwiY29uc3RydWN0b3IiLCJmb28iLCJCb29sZWFuIiwibWV0aG9kIiwiYXJyYXlTbGljZSIsImZsb29yIiwiTWF0aCIsInNvcnQiLCJjb21wYXJlZm4iLCJtaWRkbGUiLCJsZWZ0IiwicmlnaHQiLCJsbGVuZ3RoIiwicmxlbmd0aCIsImxpbmRleCIsInJpbmRleCIsImlzQXJyYXkiLCJvcmlnaW5hbEFycmF5IiwiQyIsImFycmF5U3BlY2llc0NvbnN0cnVjdG9yIiwiYW5PYmplY3QiLCJpdGVyYXRvckNsb3NlIiwiZm4iLCJFTlRSSUVTIiwiZXJyb3IiLCJJVEVSQVRPUiIsIlNBRkVfQ0xPU0lORyIsImNhbGxlZCIsIml0ZXJhdG9yV2l0aFJldHVybiIsImZyb20iLCJTS0lQX0NMT1NJTkciLCJJVEVSQVRJT05fU1VQUE9SVCIsInN0cmluZ1NsaWNlIiwiVE9fU1RSSU5HX1RBR19TVVBQT1JUIiwiY2xhc3NvZlJhdyIsIlRPX1NUUklOR19UQUciLCIkT2JqZWN0IiwiQ09SUkVDVF9BUkdVTUVOVFMiLCJ0YWciLCJ0cnlHZXQiLCJjYWxsZWUiLCJkZWZpbmVCdWlsdEluQWNjZXNzb3IiLCJkZWZpbmVCdWlsdElucyIsImFuSW5zdGFuY2UiLCJpc051bGxPclVuZGVmaW5lZCIsIml0ZXJhdGUiLCJkZWZpbmVJdGVyYXRvciIsImNyZWF0ZUl0ZXJSZXN1bHRPYmplY3QiLCJzZXRTcGVjaWVzIiwiREVTQ1JJUFRPUlMiLCJmYXN0S2V5IiwiSW50ZXJuYWxTdGF0ZU1vZHVsZSIsInNldEludGVybmFsU3RhdGUiLCJpbnRlcm5hbFN0YXRlR2V0dGVyRm9yIiwiZ2V0dGVyRm9yIiwiZ2V0Q29uc3RydWN0b3IiLCJ3cmFwcGVyIiwiQ09OU1RSVUNUT1JfTkFNRSIsIkFEREVSIiwiQ29uc3RydWN0b3IiLCJpdGVyYWJsZSIsImZpcnN0IiwibGFzdCIsInNpemUiLCJBU19FTlRSSUVTIiwiZ2V0SW50ZXJuYWxTdGF0ZSIsInByZXZpb3VzIiwiZW50cnkiLCJnZXRFbnRyeSIsInJlbW92ZWQiLCJjbGVhciIsInByZXYiLCJzZXRTdHJvbmciLCJJVEVSQVRPUl9OQU1FIiwiZ2V0SW50ZXJuYWxDb2xsZWN0aW9uU3RhdGUiLCJnZXRJbnRlcm5hbEl0ZXJhdG9yU3RhdGUiLCJpdGVyYXRlZCIsImtpbmQiLCIkIiwiZ2xvYmFsIiwiaXNGb3JjZWQiLCJkZWZpbmVCdWlsdEluIiwiSW50ZXJuYWxNZXRhZGF0YU1vZHVsZSIsImNoZWNrQ29ycmVjdG5lc3NPZkl0ZXJhdGlvbiIsInNldFRvU3RyaW5nVGFnIiwiaW5oZXJpdElmUmVxdWlyZWQiLCJjb21tb24iLCJJU19XRUFLIiwiTmF0aXZlQ29uc3RydWN0b3IiLCJOYXRpdmVQcm90b3R5cGUiLCJleHBvcnRlZCIsImZpeE1ldGhvZCIsIktFWSIsInVuY3VycmllZE5hdGl2ZU1ldGhvZCIsImVuYWJsZSIsImluc3RhbmNlIiwiSEFTTlRfQ0hBSU5JTkciLCJUSFJPV1NfT05fUFJJTUlUSVZFUyIsIkFDQ0VQVF9JVEVSQUJMRVMiLCJCVUdHWV9aRVJPIiwiJGluc3RhbmNlIiwiZHVtbXkiLCJmb3JjZWQiLCJoYXNPd24iLCJvd25LZXlzIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yTW9kdWxlIiwiZGVmaW5lUHJvcGVydHlNb2R1bGUiLCJzb3VyY2UiLCJleGNlcHRpb25zIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiTUFUQ0giLCJyZWdleHAiLCJlcnJvcjEiLCJlcnJvcjIiLCJGIiwiZ2V0UHJvdG90eXBlT2YiLCJjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IiLCJiaXRtYXAiLCJlbnVtZXJhYmxlIiwid3JpdGFibGUiLCJvcmRpbmFyeVRvUHJpbWl0aXZlIiwiaGludCIsIm1ha2VCdWlsdEluIiwiZGVzY3JpcHRvciIsImdldHRlciIsInNldHRlciIsImRlZmluZUdsb2JhbFByb3BlcnR5Iiwic2ltcGxlIiwidW5zYWZlIiwibm9uQ29uZmlndXJhYmxlIiwibm9uV3JpdGFibGUiLCJQIiwiRVhJU1RTIiwiQ1NTUnVsZUxpc3QiLCJDU1NTdHlsZURlY2xhcmF0aW9uIiwiQ1NTVmFsdWVMaXN0IiwiQ2xpZW50UmVjdExpc3QiLCJET01SZWN0TGlzdCIsIkRPTVN0cmluZ0xpc3QiLCJET01Ub2tlbkxpc3QiLCJEYXRhVHJhbnNmZXJJdGVtTGlzdCIsIkZpbGVMaXN0IiwiSFRNTEFsbENvbGxlY3Rpb24iLCJIVE1MQ29sbGVjdGlvbiIsIkhUTUxGb3JtRWxlbWVudCIsIkhUTUxTZWxlY3RFbGVtZW50IiwiTWVkaWFMaXN0IiwiTWltZVR5cGVBcnJheSIsIk5hbWVkTm9kZU1hcCIsIk5vZGVMaXN0IiwiUGFpbnRSZXF1ZXN0TGlzdCIsIlBsdWdpbiIsIlBsdWdpbkFycmF5IiwiU1ZHTGVuZ3RoTGlzdCIsIlNWR051bWJlckxpc3QiLCJTVkdQYXRoU2VnTGlzdCIsIlNWR1BvaW50TGlzdCIsIlNWR1N0cmluZ0xpc3QiLCJTVkdUcmFuc2Zvcm1MaXN0IiwiU291cmNlQnVmZmVyTGlzdCIsIlN0eWxlU2hlZXRMaXN0IiwiVGV4dFRyYWNrQ3VlTGlzdCIsIlRleHRUcmFja0xpc3QiLCJUb3VjaExpc3QiLCJjbGFzc0xpc3QiLCJkb2N1bWVudENyZWF0ZUVsZW1lbnQiLCJET01Ub2tlbkxpc3RQcm90b3R5cGUiLCJmaXJlZm94IiwiSVNfREVOTyIsIklTX05PREUiLCJCdW4iLCJ2ZXJzaW9uIiwiRGVubyIsIlVBIiwidGVzdCIsInVzZXJBZ2VudCIsIlBlYmJsZSIsImNsYXNzb2YiLCJwcm9jZXNzIiwibmF2aWdhdG9yIiwidmVyc2lvbnMiLCJ2OCIsIndlYmtpdCIsImNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eSIsImNvcHlDb25zdHJ1Y3RvclByb3BlcnRpZXMiLCJ0YXJnZXRQcm9wZXJ0eSIsInNvdXJjZVByb3BlcnR5IiwiVEFSR0VUIiwiR0xPQkFMIiwiU1RBVElDIiwic3RhdCIsImRvbnRDYWxsR2V0U2V0Iiwic2hhbSIsInJlZ2V4cEV4ZWMiLCJSZWdFeHBQcm90b3R5cGUiLCJGT1JDRUQiLCJTSEFNIiwiU1lNQk9MIiwiREVMRUdBVEVTX1RPX1NZTUJPTCIsIkRFTEVHQVRFU19UT19FWEVDIiwiZXhlY0NhbGxlZCIsInJlIiwiZmxhZ3MiLCJuYXRpdmVSZWdFeHBNZXRob2QiLCJtZXRob2RzIiwibmF0aXZlTWV0aG9kIiwiYXJnMiIsImZvcmNlU3RyaW5nTWV0aG9kIiwiJGV4ZWMiLCJwcmV2ZW50RXh0ZW5zaW9ucyIsIk5BVElWRV9CSU5EIiwiRnVuY3Rpb25Qcm90b3R5cGUiLCJSZWZsZWN0IiwiYUNhbGxhYmxlIiwiaGFzT3duUHJvcGVydHkiLCIkRnVuY3Rpb24iLCJmYWN0b3JpZXMiLCJwYXJ0QXJncyIsImFyZ3MiLCJhcmdzTGVuZ3RoIiwiY29uc3RydWN0IiwiZ2V0RGVzY3JpcHRvciIsIlBST1BFUiIsIkNPTkZJR1VSQUJMRSIsInVuY3VycnlUaGlzV2l0aEJpbmQiLCJuYW1lc3BhY2UiLCJnZXRNZXRob2QiLCJJdGVyYXRvcnMiLCJ1c2luZ0l0ZXJhdG9yIiwicmVwbGFjZXIiLCJyYXdMZW5ndGgiLCJrZXlzTGVuZ3RoIiwiViIsIlNVQlNUSVRVVElPTl9TWU1CT0xTIiwiU1VCU1RJVFVUSU9OX1NZTUJPTFNfTk9fTkFNRUQiLCJtYXRjaGVkIiwicG9zaXRpb24iLCJjYXB0dXJlcyIsIm5hbWVkQ2FwdHVyZXMiLCJyZXBsYWNlbWVudCIsInRhaWxQb3MiLCJtIiwic3ltYm9scyIsImNoIiwiY2FwdHVyZSIsImNoZWNrIiwiZ2xvYmFsVGhpcyIsImciLCJhIiwiYiIsImdldEJ1aWx0SW4iLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInNldFByb3RvdHlwZU9mIiwiV3JhcHBlciIsIk5ld1RhcmdldCIsIk5ld1RhcmdldFByb3RvdHlwZSIsImZ1bmN0aW9uVG9TdHJpbmciLCJpbnNwZWN0U291cmNlIiwiaGlkZGVuS2V5cyIsImdldE93blByb3BlcnR5TmFtZXNNb2R1bGUiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzRXh0ZXJuYWxNb2R1bGUiLCJ1aWQiLCJGUkVFWklORyIsIlJFUVVJUkVEIiwiTUVUQURBVEEiLCJzZXRNZXRhZGF0YSIsIm9iamVjdElEIiwid2Vha0RhdGEiLCJtZXRhIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImdldFdlYWtEYXRhIiwib25GcmVlemUiLCJOQVRJVkVfV0VBS19NQVAiLCJzaGFyZWQiLCJzaGFyZWRLZXkiLCJPQkpFQ1RfQUxSRUFEWV9JTklUSUFMSVpFRCIsIldlYWtNYXAiLCJtZXRhZGF0YSIsImZhY2FkZSIsIlNUQVRFIiwiZW5mb3JjZSIsImRvY3VtZW50QWxsIiwiYWxsIiwibm9vcCIsImNvbnN0cnVjdG9yUmVnRXhwIiwiSU5DT1JSRUNUX1RPX1NUUklORyIsImlzQ29uc3RydWN0b3JNb2Rlcm4iLCJpc0NvbnN0cnVjdG9yTGVnYWN5IiwiZmVhdHVyZSIsImRldGVjdGlvbiIsIm5vcm1hbGl6ZSIsIlBPTFlGSUxMIiwiTkFUSVZFIiwidG9Mb3dlckNhc2UiLCJpc1JlZ0V4cCIsIlVTRV9TWU1CT0xfQVNfVUlEIiwiJFN5bWJvbCIsIlJlc3VsdCIsInN0b3BwZWQiLCJSZXN1bHRQcm90b3R5cGUiLCJ1bmJvdW5kRnVuY3Rpb24iLCJpdGVyRm4iLCJJU19SRUNPUkQiLCJJU19JVEVSQVRPUiIsIklOVEVSUlVQVEVEIiwic3RvcCIsImNvbmRpdGlvbiIsImNhbGxGbiIsImlubmVyUmVzdWx0IiwiaW5uZXJFcnJvciIsIkl0ZXJhdG9yUHJvdG90eXBlIiwicmV0dXJuVGhpcyIsIkl0ZXJhdG9yQ29uc3RydWN0b3IiLCJOQU1FIiwiRU5VTUVSQUJMRV9ORVhUIiwiSVNfUFVSRSIsIkZ1bmN0aW9uTmFtZSIsImNyZWF0ZUl0ZXJhdG9yQ29uc3RydWN0b3IiLCJJdGVyYXRvcnNDb3JlIiwiUFJPUEVSX0ZVTkNUSU9OX05BTUUiLCJDT05GSUdVUkFCTEVfRlVOQ1RJT05fTkFNRSIsIkJVR0dZX1NBRkFSSV9JVEVSQVRPUlMiLCJLRVlTIiwiVkFMVUVTIiwiSXRlcmFibGUiLCJERUZBVUxUIiwiSVNfU0VUIiwiQ3VycmVudEl0ZXJhdG9yUHJvdG90eXBlIiwiZ2V0SXRlcmF0aW9uTWV0aG9kIiwiS0lORCIsImRlZmF1bHRJdGVyYXRvciIsIkl0ZXJhYmxlUHJvdG90eXBlIiwiSU5DT1JSRUNUX1ZBTFVFU19OQU1FIiwibmF0aXZlSXRlcmF0b3IiLCJhbnlOYXRpdmVJdGVyYXRvciIsInZhbHVlcyIsInByb3RvIiwiUHJvdG90eXBlT2ZBcnJheUl0ZXJhdG9yUHJvdG90eXBlIiwiYXJyYXlJdGVyYXRvciIsInRvTGVuZ3RoIiwiZW5mb3JjZUludGVybmFsU3RhdGUiLCJDT05GSUdVUkFCTEVfTEVOR1RIIiwiVEVNUExBVEUiLCJhcml0eSIsImNlaWwiLCJ0cnVuYyIsIngiLCJ0b2dnbGUiLCJwcm9taXNlIiwidGhlbiIsInNhZmVHZXRCdWlsdEluIiwibWFjcm90YXNrIiwiUXVldWUiLCJJU19JT1MiLCJJU19JT1NfUEVCQkxFIiwiSVNfV0VCT1NfV0VCS0lUIiwiTXV0YXRpb25PYnNlcnZlciIsIldlYktpdE11dGF0aW9uT2JzZXJ2ZXIiLCJQcm9taXNlIiwibWljcm90YXNrIiwicXVldWUiLCJmbHVzaCIsImV4aXQiLCJlbnRlciIsInJlc29sdmUiLCJuZXh0VGljayIsIm9ic2VydmUiLCJjaGFyYWN0ZXJEYXRhIiwiUHJvbWlzZUNhcGFiaWxpdHkiLCJyZWplY3QiLCIkJHJlc29sdmUiLCIkJHJlamVjdCIsIm9iamVjdEtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHNNb2R1bGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZU1vZHVsZSIsIiRhc3NpZ24iLCJhc3NpZ24iLCJBIiwiQiIsIlN5bWJvbCIsImFscGhhYmV0IiwiY2hyIiwiVCIsImdldE93blByb3BlcnR5U3ltYm9scyIsImFjdGl2ZVhEb2N1bWVudCIsImRlZmluZVByb3BlcnRpZXNNb2R1bGUiLCJlbnVtQnVnS2V5cyIsImh0bWwiLCJQUk9UT1RZUEUiLCJTQ1JJUFQiLCJJRV9QUk9UTyIsIkVtcHR5Q29uc3RydWN0b3IiLCJzY3JpcHRUYWciLCJMVCIsIk51bGxQcm90b09iamVjdFZpYUFjdGl2ZVgiLCJ3cml0ZSIsImNsb3NlIiwidGVtcCIsInBhcmVudFdpbmRvdyIsIk51bGxQcm90b09iamVjdCIsIkFjdGl2ZVhPYmplY3QiLCJpZnJhbWVEb2N1bWVudCIsImlmcmFtZSIsIkpTIiwiY29udGVudFdpbmRvdyIsIm9wZW4iLCJQcm9wZXJ0aWVzIiwiVjhfUFJPVE9UWVBFX0RFRklORV9CVUciLCJkZWZpbmVQcm9wZXJ0aWVzIiwiSUU4X0RPTV9ERUZJTkUiLCJ0b1Byb3BlcnR5S2V5IiwiJGRlZmluZVByb3BlcnR5IiwiJGdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIkVOVU1FUkFCTEUiLCJXUklUQUJMRSIsIkF0dHJpYnV0ZXMiLCJjdXJyZW50IiwiJGdldE93blByb3BlcnR5TmFtZXMiLCJ3aW5kb3dOYW1lcyIsImdldFdpbmRvd05hbWVzIiwiaW50ZXJuYWxPYmplY3RLZXlzIiwiQ09SUkVDVF9QUk9UT1RZUEVfR0VUVEVSIiwiT2JqZWN0UHJvdG90eXBlIiwiQVJSQVlfQlVGRkVSX05PTl9FWFRFTlNJQkxFIiwiJGlzRXh0ZW5zaWJsZSIsIkZBSUxTX09OX1BSSU1JVElWRVMiLCJuYW1lcyIsIiRwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIk5BU0hPUk5fQlVHIiwidW5jdXJyeVRoaXNBY2Nlc3NvciIsImFQb3NzaWJsZVByb3RvdHlwZSIsIkNPUlJFQ1RfU0VUVEVSIiwiX19wcm90b19fIiwib2JqZWN0R2V0UHJvdG90eXBlT2YiLCJJRV9CVUciLCJUT19FTlRSSUVTIiwiSUVfV09SS0FST1VORCIsImlucHV0IiwicHJlZiIsInZhbCIsInZhbHVlT2YiLCJOYXRpdmVQcm9taXNlQ29uc3RydWN0b3IiLCJJU19CUk9XU0VSIiwiTmF0aXZlUHJvbWlzZVByb3RvdHlwZSIsIlNVQkNMQVNTSU5HIiwiTkFUSVZFX1BST01JU0VfUkVKRUNUSU9OX0VWRU5UIiwiUHJvbWlzZVJlamVjdGlvbkV2ZW50IiwiRk9SQ0VEX1BST01JU0VfQ09OU1RSVUNUT1IiLCJQUk9NSVNFX0NPTlNUUlVDVE9SX1NPVVJDRSIsIkdMT0JBTF9DT1JFX0pTX1BST01JU0UiLCJGYWtlUHJvbWlzZSIsIkNPTlNUUlVDVE9SIiwiUkVKRUNUSU9OX0VWRU5UIiwibmV3UHJvbWlzZUNhcGFiaWxpdHkiLCJwcm9taXNlQ2FwYWJpbGl0eSIsIlRhcmdldCIsIlNvdXJjZSIsInRhaWwiLCJSIiwicmUxIiwicmUyIiwicmVnZXhwRmxhZ3MiLCJzdGlja3lIZWxwZXJzIiwiVU5TVVBQT1JURURfRE9UX0FMTCIsIlVOU1VQUE9SVEVEX05DRyIsIm5hdGl2ZVJlcGxhY2UiLCJuYXRpdmVFeGVjIiwicGF0Y2hlZEV4ZWMiLCJVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkciLCJsYXN0SW5kZXgiLCJVTlNVUFBPUlRFRF9ZIiwiQlJPS0VOX0NBUkVUIiwiTlBDR19JTkNMVURFRCIsInJlQ29weSIsImdyb3VwIiwicmF3IiwiZ3JvdXBzIiwic3RpY2t5IiwiY2hhcnNBZGRlZCIsInN0ckNvcHkiLCJtdWx0aWxpbmUiLCJoYXNJbmRpY2VzIiwiaWdub3JlQ2FzZSIsImRvdEFsbCIsInVuaWNvZGVTZXRzIiwicmVnRXhwRmxhZ3MiLCIkUmVnRXhwIiwiTUlTU0VEX1NUSUNLWSIsIkVOR0lORV9JU19CVU4iLCJVU0VSX0FHRU5UIiwidmFsaWRhdGVBcmd1bWVudHNMZW5ndGgiLCJXUkFQIiwic2NoZWR1bGVyIiwiaGFzVGltZUFyZyIsImZpcnN0UGFyYW1JbmRleCIsInRpbWVvdXQiLCJib3VuZEFyZ3MiLCJwYXJhbXMiLCJUQUciLCJTSEFSRUQiLCJtb2RlIiwiY29weXJpZ2h0IiwibGljZW5zZSIsImFDb25zdHJ1Y3RvciIsImRlZmF1bHRDb25zdHJ1Y3RvciIsInRvSW50ZWdlck9ySW5maW5pdHkiLCJyZXF1aXJlT2JqZWN0Q29lcmNpYmxlIiwiY2hhckNvZGVBdCIsIkNPTlZFUlRfVE9fU1RSSU5HIiwicG9zIiwic2Vjb25kIiwiY29kZUF0Iiwid2hpdGVzcGFjZXMiLCJsdHJpbSIsInJ0cmltIiwic3RhcnQiLCJlbmQiLCJ0cmltIiwiU3ltYm9sUHJvdG90eXBlIiwiVE9fUFJJTUlUSVZFIiwiTkFUSVZFX1NZTUJPTCIsImtleUZvciIsIiRsb2NhdGlvbiIsImRlZmVyIiwiY2hhbm5lbCIsInBvcnQiLCJzZXRJbW1lZGlhdGUiLCJjbGVhckltbWVkaWF0ZSIsIkRpc3BhdGNoIiwiTWVzc2FnZUNoYW5uZWwiLCJjb3VudGVyIiwiT05SRUFEWVNUQVRFQ0hBTkdFIiwicnVuIiwicnVubmVyIiwiZXZlbnRMaXN0ZW5lciIsImV2ZW50IiwiZ2xvYmFsUG9zdE1lc3NhZ2VEZWZlciIsInBvc3RNZXNzYWdlIiwicHJvdG9jb2wiLCJob3N0Iiwibm93IiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJpbXBvcnRTY3JpcHRzIiwic2V0VGltZW91dCIsIm1heCIsIm1pbiIsImludGVnZXIiLCJsZW4iLCJpc1N5bWJvbCIsImV4b3RpY1RvUHJpbSIsInRvUHJpbWl0aXZlIiwicG9zdGZpeCIsInJhbmRvbSIsInBhc3NlZCIsIndyYXBwZWRXZWxsS25vd25TeW1ib2xNb2R1bGUiLCJXZWxsS25vd25TeW1ib2xzU3RvcmUiLCJjcmVhdGVXZWxsS25vd25TeW1ib2wiLCJ3aXRob3V0U2V0dGVyIiwiZG9lc05vdEV4Y2VlZFNhZmVJbnRlZ2VyIiwiYXJyYXlNZXRob2RIYXNTcGVjaWVzU3VwcG9ydCIsIklTX0NPTkNBVF9TUFJFQURBQkxFIiwiSVNfQ09OQ0FUX1NQUkVBREFCTEVfU1VQUE9SVCIsImlzQ29uY2F0U3ByZWFkYWJsZSIsInNwcmVhZGFibGUiLCJhcmciLCJFIiwiJGZpbHRlciIsIiRmaW5kIiwiYWRkVG9VbnNjb3BhYmxlcyIsIkZJTkQiLCJTS0lQU19IT0xFUyIsIiRpbmNsdWRlcyIsIkFSUkFZX0lURVJBVE9SIiwiQXJndW1lbnRzIiwibmF0aXZlSm9pbiIsInNlcGFyYXRvciIsIiRtYXAiLCJuYXRpdmVTbGljZSIsIkhBU19TUEVDSUVTX1NVUFBPUlQiLCJmaW4iLCJkZWxldGVQcm9wZXJ0eU9yVGhyb3ciLCJpbnRlcm5hbFNvcnQiLCJGRiIsIklFX09SX0VER0UiLCJWOCIsIldFQktJVCIsIm5hdGl2ZVNvcnQiLCJGQUlMU19PTl9VTkRFRklORUQiLCJGQUlMU19PTl9OVUxMIiwiU1RBQkxFX1NPUlQiLCJjb2RlIiwiZnJvbUNoYXJDb2RlIiwiaXRlbXNMZW5ndGgiLCJpdGVtcyIsImFycmF5TGVuZ3RoIiwieSIsImdldFNvcnRDb21wYXJlIiwiZGF0ZVRvUHJpbWl0aXZlIiwiRGF0ZVByb3RvdHlwZSIsIkZVTkNUSU9OX05BTUVfRVhJU1RTIiwibmFtZVJFIiwicmVnRXhwRXhlYyIsImdldFJlcGxhY2VyRnVuY3Rpb24iLCIkc3RyaW5naWZ5IiwibnVtYmVyVG9TdHJpbmciLCJ0ZXN0ZXIiLCJsb3ciLCJoaSIsIldST05HX1NZTUJPTFNfQ09OVkVSU0lPTiIsIklMTF9GT1JNRURfVU5JQ09ERSIsInN0cmluZ2lmeVdpdGhTeW1ib2xzRml4IiwiJHJlcGxhY2VyIiwiZml4SWxsRm9ybWVkIiwib2Zmc2V0Iiwic3BhY2UiLCJjb2xsZWN0aW9uIiwiaW5pdCIsInRoaXNOdW1iZXJWYWx1ZSIsIk5VTUJFUiIsIk5hdGl2ZU51bWJlciIsIlB1cmVOdW1iZXJOYW1lc3BhY2UiLCJOdW1iZXJQcm90b3R5cGUiLCJOdW1iZXJXcmFwcGVyIiwicHJpbVZhbHVlIiwidGhpcmQiLCJyYWRpeCIsIm1heENvZGUiLCJkaWdpdHMiLCJOYU4iLCJwYXJzZUludCIsInRvTnVtYmVyIiwidG9OdW1lcmljIiwid3JhcCIsIk51bWJlciIsIiRlbnRyaWVzIiwibmF0aXZlR2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsIiRnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJuYXRpdmVHZXRQcm90b3R5cGVPZiIsIm5hdGl2ZUtleXMiLCJuZXdQcm9taXNlQ2FwYWJpbGl0eU1vZHVsZSIsInBlcmZvcm0iLCJjYXBhYmlsaXR5IiwiJHByb21pc2VSZXNvbHZlIiwicmVtYWluaW5nIiwiYWxyZWFkeUNhbGxlZCIsInJlYWwiLCJvblJlamVjdGVkIiwiSW50ZXJuYWwiLCJPd25Qcm9taXNlQ2FwYWJpbGl0eSIsIm5hdGl2ZVRoZW4iLCJzcGVjaWVzQ29uc3RydWN0b3IiLCJ0YXNrIiwiaG9zdFJlcG9ydEVycm9ycyIsIlByb21pc2VDb25zdHJ1Y3RvckRldGVjdGlvbiIsIlBST01JU0UiLCJOQVRJVkVfUFJPTUlTRV9TVUJDTEFTU0lORyIsImdldEludGVybmFsUHJvbWlzZVN0YXRlIiwiUHJvbWlzZUNvbnN0cnVjdG9yIiwiUHJvbWlzZVByb3RvdHlwZSIsIm5ld0dlbmVyaWNQcm9taXNlQ2FwYWJpbGl0eSIsIkRJU1BBVENIX0VWRU5UIiwiY3JlYXRlRXZlbnQiLCJkaXNwYXRjaEV2ZW50IiwiVU5IQU5ETEVEX1JFSkVDVElPTiIsImlzVGhlbmFibGUiLCJjYWxsUmVhY3Rpb24iLCJyZWFjdGlvbiIsImV4aXRlZCIsIm9rIiwiZmFpbCIsInJlamVjdGlvbiIsIm9uSGFuZGxlVW5oYW5kbGVkIiwiaXNSZWplY3QiLCJub3RpZmllZCIsInJlYWN0aW9ucyIsIm9uVW5oYW5kbGVkIiwicmVhc29uIiwiaW5pdEV2ZW50IiwiaXNVbmhhbmRsZWQiLCJlbWl0IiwidW53cmFwIiwiaW50ZXJuYWxSZWplY3QiLCJpbnRlcm5hbFJlc29sdmUiLCJleGVjdXRvciIsIm9uRnVsZmlsbGVkIiwiUHJvbWlzZVdyYXBwZXIiLCJyYWNlIiwiciIsImNhcGFiaWxpdHlSZWplY3QiLCJwcm9taXNlUmVzb2x2ZSIsIlByb21pc2VDb25zdHJ1Y3RvcldyYXBwZXIiLCJDSEVDS19XUkFQUEVSIiwibmF0aXZlQ29uc3RydWN0IiwiTkVXX1RBUkdFVF9CVUciLCJBUkdTX0JVRyIsIm5ld1RhcmdldCIsIiRhcmdzIiwiZ2V0UmVnRXhwRmxhZ3MiLCJwcm94eUFjY2Vzc29yIiwiTmF0aXZlUmVnRXhwIiwiU3ludGF4RXJyb3IiLCJzdHJpbmdJbmRleE9mIiwiSVNfTkNHIiwiQ09SUkVDVF9ORVciLCJSZWdFeHBXcmFwcGVyIiwicmF3RmxhZ3MiLCJoYW5kbGVkIiwidGhpc0lzUmVnRXhwIiwicGF0dGVybklzUmVnRXhwIiwiZmxhZ3NBcmVVbmRlZmluZWQiLCJyYXdQYXR0ZXJuIiwibmFtZWQiLCJicmFja2V0cyIsIm5jZyIsImdyb3VwaWQiLCJncm91cG5hbWUiLCJoYW5kbGVOQ0ciLCJoYW5kbGVEb3RBbGwiLCIkdG9TdHJpbmciLCJUT19TVFJJTkciLCJuYXRpdmVUb1N0cmluZyIsIk5PVF9HRU5FUklDIiwiSU5DT1JSRUNUX05BTUUiLCJub3RBUmVnRXhwIiwiY29ycmVjdElzUmVnRXhwTG9naWMiLCJDT1JSRUNUX0lTX1JFR0VYUF9MT0dJQyIsImVuZHNXaXRoIiwic2VhcmNoU3RyaW5nIiwiZW5kUG9zaXRpb24iLCJzZWFyY2giLCJTVFJJTkdfSVRFUkFUT1IiLCJwb2ludCIsImZpeFJlZ0V4cFdlbGxLbm93blN5bWJvbExvZ2ljIiwiYWR2YW5jZVN0cmluZ0luZGV4IiwibmF0aXZlTWF0Y2giLCJtYXliZUNhbGxOYXRpdmUiLCJtYXRjaGVyIiwicngiLCJyZXMiLCJmdWxsVW5pY29kZSIsIm1hdGNoU3RyIiwiZ2V0U3Vic3RpdHV0aW9uIiwiUkVQTEFDRSIsIlJFUExBQ0VfS0VFUFNfJDAiLCJSRUdFWFBfUkVQTEFDRV9TVUJTVElUVVRFU19VTkRFRklORURfQ0FQVFVSRSIsIlVOU0FGRV9TVUJTVElUVVRFIiwic2VhcmNoVmFsdWUiLCJyZXBsYWNlVmFsdWUiLCJmdW5jdGlvbmFsUmVwbGFjZSIsInJlc3VsdHMiLCJhY2N1bXVsYXRlZFJlc3VsdCIsIm5leHRTb3VyY2VQb3NpdGlvbiIsInJlcGxhY2VyQXJncyIsIm5hdGl2ZU9iamVjdENyZWF0ZSIsImdldE93blByb3BlcnR5TmFtZXNFeHRlcm5hbCIsImRlZmluZVdlbGxLbm93blN5bWJvbCIsImRlZmluZVN5bWJvbFRvUHJpbWl0aXZlIiwiSElEREVOIiwiUmFuZ2VFcnJvciIsIlFPYmplY3QiLCJuYXRpdmVEZWZpbmVQcm9wZXJ0eSIsIm5hdGl2ZUdldE93blByb3BlcnR5TmFtZXMiLCJuYXRpdmVQcm9wZXJ0eUlzRW51bWVyYWJsZSIsIkFsbFN5bWJvbHMiLCJPYmplY3RQcm90b3R5cGVTeW1ib2xzIiwiVVNFX1NFVFRFUiIsImZpbmRDaGlsZCIsImZhbGxiYWNrRGVmaW5lUHJvcGVydHkiLCJPYmplY3RQcm90b3R5cGVEZXNjcmlwdG9yIiwic2V0U3ltYm9sRGVzY3JpcHRvciIsImRlc2NyaXB0aW9uIiwiJGRlZmluZVByb3BlcnRpZXMiLCJwcm9wZXJ0aWVzIiwiSVNfT0JKRUNUX1BST1RPVFlQRSIsInVzZVNldHRlciIsInVzZVNpbXBsZSIsIk5hdGl2ZVN5bWJvbCIsIkVtcHR5U3RyaW5nRGVzY3JpcHRpb25TdG9yZSIsIlN5bWJvbFdyYXBwZXIiLCJ0aGlzU3ltYm9sVmFsdWUiLCJzeW1ib2xEZXNjcmlwdGl2ZVN0cmluZyIsImRlc2MiLCJOQVRJVkVfU1lNQk9MX1JFR0lTVFJZIiwiU3RyaW5nVG9TeW1ib2xSZWdpc3RyeSIsIlN5bWJvbFRvU3RyaW5nUmVnaXN0cnkiLCJzeW0iLCJET01JdGVyYWJsZXMiLCJoYW5kbGVQcm90b3R5cGUiLCJDb2xsZWN0aW9uUHJvdG90eXBlIiwiQ09MTEVDVElPTl9OQU1FIiwiQXJyYXlJdGVyYXRvck1ldGhvZHMiLCJBcnJheVZhbHVlcyIsInNldEludGVydmFsIiwic2NoZWR1bGVyc0ZpeCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJfX2VzTW9kdWxlIiwiZCIsImRlZmluaXRpb24iLCJvIiwicHJvcCIsInRvU3RyaW5nVGFnIiwibmMiLCJsIiwidSIsImMiLCJoIiwicCIsInQiLCJjaGlsZHJlbiIsImRlZmF1bHRQcm9wcyIsInJlZiIsIl9fayIsIl9fIiwiX19iIiwiX19lIiwiX19kIiwiX19jIiwiX192IiwiX19pIiwiX191Iiwidm5vZGUiLCJjb250ZXh0IiwidyIsIl9fUCIsIk0iLCJfX24iLCJvd25lclNWR0VsZW1lbnQiLCJfX3IiLCJkZWJvdW5jZVJlbmRlcmluZyIsInNoaWZ0IiwiTiIsIm5leHRTaWJsaW5nIiwiSSIsIm5vZGVUeXBlIiwiSCIsInNldFByb3BlcnR5IiwiTCIsIkQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY29udGV4dFR5cGUiLCJfX0UiLCJyZW5kZXIiLCJxIiwic3ViIiwiX19oIiwiX3NiIiwiX19zIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsImdldENoaWxkQ29udGV4dCIsImdldFNuYXBzaG90QmVmb3JlVXBkYXRlIiwieiIsImRpZmZlZCIsImxvY2FsTmFtZSIsImNyZWF0ZUVsZW1lbnROUyIsImlzIiwiY2hpbGROb2RlcyIsIl9faHRtbCIsImlubmVySFRNTCIsInVubW91bnQiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsInNldFN0YXRlIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJmb3JjZVVwZGF0ZSIsIl9fSCIsIl9fViIsIl9fTiIsIl9fbSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNsZWFyVGltZW91dCIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJfX2YiLCJmb3IiLCJvbmx5IiwidG9BcnJheSIsIlUiLCJfX2EiLCJfX1IiLCJfX08iLCJwb3AiLCJmYWxsYmFjayIsInJldmVhbE9yZGVyIiwiVyIsIk1hcCIsInJldmVyc2UiLCJaIiwiWSIsInRleHRDb250ZW50IiwiaXNSZWFjdENvbXBvbmVudCIsIkoiLCJLIiwiUSIsImNhbmNlbEJ1YmJsZSIsIlgiLCJkZWZhdWx0UHJldmVudGVkIiwicGVyc2lzdCIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNEZWZhdWx0UHJldmVudGVkIiwibmF0aXZlRXZlbnQiLCJubiIsInRuIiwiY2xhc3MiLCJlbiIsIm11bHRpcGxlIiwic2VsZWN0ZWQiLCJkZWZhdWx0VmFsdWUiLCJjbGFzc05hbWUiLCIkJHR5cGVvZiIsInJuIiwidW4iLCJvbiIsIlJlYWN0Q3VycmVudERpc3BhdGNoZXIiLCJyZWFkQ29udGV4dCIsInluIiwiRW4iLCJ3biIsInVzZVN0YXRlIiwidXNlSWQiLCJ1c2VSZWR1Y2VyIiwidXNlRWZmZWN0IiwidXNlTGF5b3V0RWZmZWN0IiwidXNlSW5zZXJ0aW9uRWZmZWN0IiwidXNlVHJhbnNpdGlvbiIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VTeW5jRXh0ZXJuYWxTdG9yZSIsInN0YXJ0VHJhbnNpdGlvbiIsInVzZVJlZiIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VNZW1vIiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlRGVidWdWYWx1ZSIsIkNoaWxkcmVuIiwiaHlkcmF0ZSIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJjcmVhdGVQb3J0YWwiLCJjb250YWluZXJJbmZvIiwiY3JlYXRlQ29udGV4dCIsIkNvbnN1bWVyIiwiUHJvdmlkZXIiLCJjcmVhdGVGYWN0b3J5IiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlUmVmIiwiRnJhZ21lbnQiLCJpc1ZhbGlkRWxlbWVudCIsImlzRWxlbWVudCIsImlzRnJhZ21lbnQiLCJmaW5kRE9NTm9kZSIsIkNvbXBvbmVudCIsIlB1cmVDb21wb25lbnQiLCJkaXNwbGF5TmFtZSIsImZvcndhcmRSZWYiLCJmbHVzaFN5bmMiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsIlN1c3BlbnNlTGlzdCIsImxhenkiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsIkNsb3NlIiwiX3JlZiIsIlJlYWN0Iiwicm9sZSIsIndpZHRoIiwiaGVpZ2h0IiwieG1sbnMiLCJ4MSIsInkxIiwieDIiLCJ5MiIsInN0cm9rZVdpZHRoIiwiYXNUaXRsZSIsInRvVXBwZXJDYXNlIiwicHJvcFR5cGVzIiwiZm9ybWF0IiwiX2xlbiIsInJlc3QiLCJfa2V5IiwiX3R5cGVvZiIsInNwbGl0cyIsInN1YnN0ciIsImxhbmd1YWdlIiwibGFuZyIsImRvY3VtZW50RWxlbWVudCIsImxhbmd1YWdlcyIsImhnZXQiLCJrbCIsImN2IiwiY3ZuIiwia2xlIiwidHJhbnMiLCJmYWxsYmFja0xhbmciLCJyZXR1cm5VbmRlZmluZWQiLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJfbGVuMiIsIl9rZXkyIiwiaHRtbFRleHRzIiwid3JhcHBlZCIsInRleHRFbGVtZW50IiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJTZXJ2aWNlSXRlbSIsIl9SZWFjdCRDb21wb25lbnQiLCJwdXJwb3Nlc0NvbnRlbnQiLCJfdGhpcyRwcm9wcyIsImNoZWNrZWQiLCJvbmx5UmVxdWlyZWRFbmFibGVkIiwib25Ub2dnbGUiLCJ0cmFuc2xhdGlvbnMiLCJ2aXNpYmxlIiwicHVycG9zZXMiLCJ0aXRsZWlkIiwicHVycG9zZXNUZXh0IiwicHVycG9zZSIsIm9wdE91dFRleHQiLCJyZXF1aXJlZFRleHQiLCJkZXNjcmlwdGlvblRleHQiLCJ0dCIsImRpc2FibGVkIiwidGFiSW5kZXgiLCJvbkNoYW5nZSIsIl9leHRlbmRzIiwiaHRtbEZvciIsIlRleHQiLCJTZXJ2aWNlSXRlbXMiLCJTZXJ2aWNlcyIsIndhdGNoIiwiX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsInVud2F0Y2giLCJzZXJ2aWNlSXRlbXMiLCJ0b2dnbGFibGVTZXJ2aWNlcyIsIm5FbmFibGVkIiwiblJlcXVpcmVkIiwiYWxsRW5hYmxlZCIsImhpZGVUb2dnbGVBbGwiLCJQdXJwb3NlSXRlbSIsInNlcnZpY2VzVmlzaWJsZSIsImFsbERpc2FibGVkIiwidG9nZ2xlU2VydmljZXNWaXNpYmxlIiwicHJldmVudERlZmF1bHQiLCJnZXRDdXJyZW50RXhwYW5kZWRTdGF0dXMiLCJjdXJyZW50VGFyZ2V0IiwiZ2V0QXR0cmlidXRlIiwib25DbGljayIsIm9uS2V5RG93biIsImtleUNvZGUiLCJQdXJwb3NlcyIsInB1cnBvc2VLZXlzIiwiY2hlY2tTZXJ2aWNlcyIsInN0YXR1cyIsImFsbFJlcXVpcmVkIiwicHVycG9zZU9yZGVyIiwicHVycG9zZUl0ZW1zIiwidG9nZ2xhYmxlUHVycG9zZXMiLCJDb25zZW50TW9kYWwiLCJjb25zZW50TW9kYWxSZWYiLCJmb2N1cyIsImNsb3NlTGluayIsImRlY2xpbmVCdXR0b24iLCJhY2NlcHRBbGxCdXR0b24iLCJoaWRlIiwiY29uZmlybWluZyIsInNhdmVBbmRIaWRlIiwiYWNjZXB0QW5kSGlkZSIsImRlY2xpbmVBbmRIaWRlIiwiZW1iZWRkZWQiLCJncm91cEJ5UHVycG9zZSIsIm11c3RDb25zZW50IiwiZGl2IiwiaGlkZURlY2xpbmVBbGwiLCJwcFVybCIsInBwTGluayIsInNlcnZpY2VzT3JQdXJwb3NlcyIsImFjY2VwdEJ1dHRvbiIsImFjY2VwdEFsbCIsInByaXZhY3lQb2xpY3kiLCJyZWwiLCJpbm5lck1vZGFsIiwiZGlzYWJsZVBvd2VyZWRCeSIsInBvd2VyZWRCeSIsImVkIiwib3ZlcndyaXRlIiwidmQiLCJ2ZWQiLCJDb25zZW50Tm90aWNlIiwiX2RlZmluZVByb3BlcnR5Iiwic2V0Q2hhbmdlZEFsbCIsImNoYW5nZWRBbGxWYWx1ZSIsIm1vZGFsIiwiY2hhbmdlQWxsIiwic2F2ZUFuZEFwcGx5Q29uc2VudHMiLCJleGVjdXRlQnV0dG9uQ2xpY2tlZCIsInByZXZQcm9wcyIsIm5vdGljZVJlZiIsInNob3ciLCJ0ZXN0aW5nIiwiX3RoaXMkc3RhdGUiLCJub3RpY2VBc01vZGFsIiwiaGlkZUxlYXJuTW9yZSIsInNlcnZpY2VQdXJwb3NlcyIsImdldFB1cnBvc2VzIiwicHVycG9zZXNUcmFuc2xhdGlvbnMiLCJjaGFuZ2VzVGV4dCIsInNob3dNb2RhbCIsIm5vdGljZUlzVmlzaWJsZSIsIm5vTm90aWNlIiwibGVhcm5Nb3JlTGluayIsIm5vdGljZSIsImF1dG9Gb2N1cyIsIkFwcCIsImdldFdpdGhLZXkiLCJzZXRXaXRoS2V5Iiwibm90aWZ5QXBpIiwic2hvd1N0YXRlIiwiX3RoaXMkcHJvcHMyIiwiYWRkaXRpb25hbENsYXNzIiwic3R5bGVQcmVmaXgiLCJfdXNlU3RhdGUyIiwidXBkYXRlQ250Iiwic2V0VXBkYXRlQ250Iiwic2hvd0Rlc2NyaXB0aW9uRW1wdHlTdG9yZSIsImxpbmsiLCJLbGFyb0FwaSIsInVybCIsInJlY29yZHNDb25maWciLCJyZWNvcmRzIiwicGF0aG5hbWUiLCJzYXZlUGF0aG5hbWUiLCJjbGllbnRfdmVyc2lvbiIsImNsaWVudF9uYW1lIiwibG9jYXRpb25fZGF0YSIsImdldExvY2F0aW9uRGF0YSIsInVzZXJfZGF0YSIsImdldFVzZXJEYXRhIiwibm90aWZpZXIiLCJnZXRCYXNlQ29uc2VudERhdGEiLCJjb25zZW50X2RhdGEiLCJzdWJtaXRDb25zZW50RGF0YSIsImNvbnRlbnRUeXBlIiwiYm9keSIsInhociIsIlhNTEh0dHBSZXF1ZXN0IiwicmVzcG9uc2UiLCJzZXRSZXF1ZXN0SGVhZGVyIiwic2VuZCIsImFwaVJlcXVlc3QiLCJjb252ZXJ0VG9NYXAiLCJkbSIsImNsb25lIiwiZHZhbHVlIiwidGhlbWVzIiwidG9wIiwiX21ldGEiLCJpbmNvbXBhdGlibGVXaXRoIiwiYm90dG9tIiwid2lkZSIsImxpZ2h0IiwibG9jYWxzIiwiZGVmYXVsdENvbmZpZyIsImRlZmF1bHRUcmFuc2xhdGlvbnMiLCJldmVudEhhbmRsZXJzIiwiZXZlbnRzIiwiZ2V0RWxlbWVudElEIiwiaWRlIiwiZWxlbWVudElEIiwiZ2V0RWxlbWVudCIsImdldEVsZW1lbnRCeUlkIiwiZXhlY3V0ZUV2ZW50SGFuZGxlcnMiLCJoYW5kbGVycyIsImdldENvbmZpZ1RyYW5zbGF0aW9ucyIsImNudCIsInZhbGlkYXRlQ29uZmlnIiwic2hvd0NudCIsImdldE1hbmFnZXIiLCJzdHlsaW5nIiwidGhlbWUiLCJzdHlsZVRoZW1lcyIsIl9pMiIsIl9PYmplY3QkZW50cmllczIiLCJfT2JqZWN0JGVudHJpZXMyJF9pIiwiX09iamVjdCRlbnRyaWVzMyIsIl9PYmplY3QkZW50cmllczMkX2kiLCJkb2N1bWVudE1vZGUiLCJpbmplY3RTdHlsZXMiLCJjb25maWdUcmFuc2xhdGlvbnMiLCJhcHAiLCJyZWFjdFJlbmRlciIsInJlbmRlckNvbnRleHR1YWxDb25zZW50Tm90aWNlcyIsIm5vdGljZXMiLCJwbGFjZWhvbGRlckVsZW1lbnQiLCJwcmV2aW91c0VsZW1lbnRTaWJsaW5nIiwibWF4V2lkdGgiLCJDb250ZXh0dWFsQ29uc2VudE5vdGljZSIsImRvT25jZUxvYWRlZCIsInJlYWR5U3RhdGUiLCJ2YWxpZGF0ZWRDb25maWciLCJhcHBzIiwid2FybiIsInNldHVwIiwiaGFzaFBhcmFtcyIsImRlY29kZVVSSSIsImhhc2giLCJrdiIsImluaXRpYWxpemUiLCJmdWxsT3B0cyIsIm5vQXV0b0xvYWQiLCJrbGFyb0lkIiwicmVnZXhNYXRjaCIsImdldEtsYXJvSWQiLCJrbGFyb0FwaVVybCIsImdldEtsYXJvQXBpVXJsIiwia2xhcm9Db25maWdOYW1lIiwiZ2V0S2xhcm9Db25maWdOYW1lIiwia2xhcm9BcGlDb25maWdzIiwibG9hZENvbmZpZyIsImNhdGNoIiwiY29uZmlnTmFtZSIsImJhc2VOYW1lIiwic2hvd0tsYXJvSURFIiwibWFuYWdlcnMiLCJyZXNldE1hbmFnZXJzIiwiVkVSU0lPTiIsImNvbnZlcnRlZFRyYW5zbGF0aW9ucyIsImNhIiwiYWNjZXB0U2VsZWN0ZWQiLCJkaXNhYmxlQWxsIiwiY29uc2VudE1vZGFsIiwiY29uc2VudE5vdGljZSIsImNoYW5nZURlc2NyaXB0aW9uIiwiaW1wcmludCIsImxlYXJuTW9yZSIsImRlY2xpbmUiLCJwdXJwb3NlSXRlbSIsInNhdmUiLCJjcyIsImZ1bmN0aW9uYWwiLCJwZXJmb3JtYW5jZSIsIm1hcmtldGluZyIsImFkdmVydGlzaW5nIiwiY29udGV4dHVhbENvbnNlbnQiLCJhY2NlcHRPbmNlIiwiYWNjZXB0QWx3YXlzIiwiZGEiLCJkZSIsImRlc2NyaXB0aW9uRW1wdHlTdG9yZSIsIm1vZGFsTGlua1RleHQiLCJhY2NlcHRBbGxfZW4iLCJhY2NlcHRTZWxlY3RlZF9lbiIsIm5hbWVfZW4iLCJ6aCIsInB0IiwiZXMiLCJmaSIsImZyIiwiZ2wiLCJodSIsImhyIiwibmwiLCJubyIsImNsb3NlX2VuIiwib2MiLCJybyIsInNyIiwic3JfY3lybCIsInN2IiwidHIiLCJwbCIsInJ1Il0sInNvdXJjZVJvb3QiOiIifQ==