!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["klaro-no-translations"]=t():e["klaro-no-translations"]=t()}(self,(()=>(()=>{var e={2690:(e,t,n)=>{"use strict";function r(){for(var e=document.cookie.split(";"),t=[],n=new RegExp("^\\s*([^=]+)\\s*=\\s*(.*?)$"),r=0;r<e.length;r++){var o=e[r],i=n.exec(o);null!==i&&t.push({name:i[1],value:i[2]})}return t}function o(e,t,n){var r=e+"=; Max-Age=-99999999;";document.cookie=r,r+=" path="+(t||"/")+";",document.cookie=r,void 0!==n&&(r+=" domain="+n+";",document.cookie=r)}n.d(t,{default:()=>z}),n(9305),n(2733),n(4701),n(1678),n(4776),n(4382),n(9892),n(4962),n(6584),n(9336),n(4754),n(1908),n(94),n(7132),n(6457),n(8908),n(3810),n(8557),n(646),n(5021),n(3687),n(2745),n(3994),n(3062),n(4062),n(3630),n(2367);var i=n(5482);function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function c(e,t,n){return t=l(t),function(e,t){if(t&&("object"===a(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,s()?Reflect.construct(t,n||[],l(e).constructor):t.apply(e,n))}function s(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(s=function(){return!!e})()}function l(e){return l=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},l(e)}function u(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&p(e,t)}function p(e,t){return p=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},p(e,t)}function d(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,v(r.key),r)}}function m(e,t,n){return t&&f(e.prototype,t),n&&f(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function v(e){var t=function(e,t){if("object"!=a(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=a(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==a(t)?t:String(t)}n(6437),n(2697),n(1359);var y=function(){function e(){d(this,e),this.value=null}return m(e,[{key:"get",value:function(){return this.value}},{key:"set",value:function(e){this.value=e}},{key:"delete",value:function(){this.value=null}}]),e}(),h=function(){function e(t){d(this,e),this.cookieName=t.storageName,this.cookieDomain=t.cookieDomain,this.cookiePath=t.cookiePath,this.cookieExpiresAfterDays=t.cookieExpiresAfterDays}return m(e,[{key:"get",value:function(){var e=function(e){for(var t=r(),n=0;n<t.length;n++)if(t[n].name===e)return t[n];return null}(this.cookieName);return e?e.value:null}},{key:"set",value:function(e){return function(e,t,n,r,o){var i="";if(n){var a=new Date;a.setTime(a.getTime()+24*n*60*60*1e3),i="; expires="+a.toUTCString()}void 0!==r&&(i+="; domain="+r),i+=void 0!==o?"; path="+o:"; path=/",document.cookie=e+"="+(t||"")+i+"; SameSite=Lax"}(this.cookieName,e,this.cookieExpiresAfterDays,this.cookieDomain,this.cookiePath)}},{key:"delete",value:function(){return o(this.cookieName)}}]),e}(),A=function(){function e(t,n){d(this,e),this.key=t.storageName,this.handle=n}return m(e,[{key:"get",value:function(){return this.handle.getItem(this.key)}},{key:"getWithKey",value:function(e){return this.handle.getItem(e)}},{key:"set",value:function(e){return this.handle.setItem(this.key,e)}},{key:"setWithKey",value:function(e,t){return this.handle.setItem(e,t)}},{key:"delete",value:function(){return this.handle.removeItem(this.key)}},{key:"deleteWithKey",value:function(e){return this.handle.removeItem(e)}}]),e}(),b=function(e){function t(e){return d(this,t),c(this,t,[e,localStorage])}return u(t,e),m(t)}(A),g=function(e){function t(e){return d(this,t),c(this,t,[e,sessionStorage])}return u(t,e),m(t)}(A);const k={cookie:h,test:y,localStorage:b,sessionStorage:g};function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function C(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=x(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,c=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){c=!0,i=e},f:function(){try{a||null==n.return||n.return()}finally{if(c)throw i}}}}function w(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i,a,c=[],s=!0,l=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=i.call(n)).done)&&(c.push(r.value),c.length!==t);s=!0);}catch(e){l=!0,o=e}finally{try{if(!s&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return c}}(e,t)||x(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function x(e,t){if(e){if("string"==typeof e)return S(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?S(e,t):void 0}}function S(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function j(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function O(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?j(Object(n),!0).forEach((function(t){var r,o,i;r=e,o=t,i=n[t],(o=P(o))in r?Object.defineProperty(r,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):r[o]=i})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):j(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,P(r.key),r)}}function P(e){var t=function(e,t){if("object"!=_(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=_(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==_(t)?t:String(t)}var z=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.config=t,this.store=void 0!==n?n:new k[this.storageMethod](this),void 0===this.store&&(this.store=k.cookie),this.auxiliaryStore=void 0!==r?r:new g(this),this.consents=this.defaultConsents,this.confirmed=!1,this.changed=!1,this.states={},this.initialized={},this.executedOnce={},this.watchers=new Set([]),this.loadConsents(),this.applyConsents(),this.savedConsents=O({},this.consents)}var t,n;return t=e,(n=[{key:"storageMethod",get:function(){return this.config.storageMethod||"cookie"}},{key:"storageName",get:function(){return this.config.storageName||this.config.cookieName||"klaro"}},{key:"cookieDomain",get:function(){return this.config.cookieDomain||void 0}},{key:"cookiePath",get:function(){return this.config.cookiePath||void 0}},{key:"cookieExpiresAfterDays",get:function(){return this.config.cookieExpiresAfterDays||120}},{key:"defaultConsents",get:function(){for(var e={},t=0;t<this.config.services.length;t++){var n=this.config.services[t];e[n.name]=this.getDefaultConsent(n)}return e}},{key:"watch",value:function(e){this.watchers.has(e)||this.watchers.add(e)}},{key:"unwatch",value:function(e){this.watchers.has(e)&&this.watchers.delete(e)}},{key:"notify",value:function(e,t){var n=this;this.watchers.forEach((function(r){r.update(n,e,t)}))}},{key:"getService",value:function(e){var t=this.config.services.filter((function(t){return t.name===e}));if(t.length>0)return t[0]}},{key:"getDefaultConsent",value:function(e){var t=e.default||e.required;return void 0===t&&(t=this.config.default),void 0===t&&(t=!1),t}},{key:"changeAll",value:function(e){var t=this,n=0;return this.config.services.filter((function(e){return!e.contextualConsentOnly})).map((function(r){r.required||t.config.required||e?t.updateConsent(r.name,!0)&&n++:t.updateConsent(r.name,!1)&&n++})),n}},{key:"updateConsent",value:function(e,t){var n=(this.consents[e]||!1)!==t;return this.consents[e]=t,this.notify("consents",this.consents),n}},{key:"resetConsents",value:function(){this.consents=this.defaultConsents,this.states={},this.confirmed=!1,this.applyConsents(),this.savedConsents=O({},this.consents),this.store.delete(),this.notify("consents",this.consents)}},{key:"getConsent",value:function(e){return this.consents[e]||!1}},{key:"loadConsents",value:function(){var e=this.store.get();return null!==e&&(this.consents=JSON.parse(decodeURIComponent(e)),this._checkConsents(),this.notify("consents",this.consents)),this.consents}},{key:"saveAndApplyConsents",value:function(e){this.saveConsents(e),this.applyConsents()}},{key:"changedConsents",value:function(){for(var e={},t=0,n=Object.entries(this.consents);t<n.length;t++){var r=w(n[t],2),o=r[0],i=r[1];this.savedConsents[o]!==i&&(e[o]=i)}return e}},{key:"saveConsents",value:function(e){var t=encodeURIComponent(JSON.stringify(this.consents));this.store.set(t),this.confirmed=!0,this.changed=!1;var n=this.changedConsents();this.savedConsents=O({},this.consents),this.notify("saveConsents",{changes:n,consents:this.consents,type:e||"script"})}},{key:"applyConsents",value:function(e,t,n){function r(e,t){if(void 0!==e)return("function"==typeof e?e:new Function("opts",e))(t)}for(var o=0,i=0;i<this.config.services.length;i++){var a=this.config.services[i];if(void 0===n||n===a.name){var c=a.vars||{},s={service:a,config:this.config,vars:c};this.initialized[a.name]||(this.initialized[a.name]=!0,r(a.onInit,s))}}for(var l=0;l<this.config.services.length;l++){var u=this.config.services[l];if(void 0===n||n===u.name){var p=this.states[u.name],d=u.vars||{},f=void 0!==u.optOut?u.optOut:this.config.optOut||!1,m=void 0!==u.required?u.required:this.config.required||!1,v=this.confirmed||f||e||t,y=this.getConsent(u.name)&&v||m,h={service:u,config:this.config,vars:d,consents:this.consents,confirmed:this.confirmed};p!==y&&o++,e||(r(y?u.onAccept:u.onDecline,h),this.updateServiceElements(u,y),this.updateServiceStorage(u,y),void 0!==u.callback&&u.callback(y,u),void 0!==this.config.callback&&this.config.callback(y,u),this.states[u.name]=y)}}return this.notify("applyConsents",o,n),o}},{key:"updateServiceElements",value:function(e,t){if(t){if(e.onlyOnce&&this.executedOnce[e.name])return;this.executedOnce[e.name]=!0}for(var n=document.querySelectorAll("[data-name='"+e.name+"']"),r=0;r<n.length;r++){var o=n[r],a=o.parentElement,c=(0,i.RT)(o),s=c.type,l=c.src,u=c.href,p=["href","src","type"];if("placeholder"!==s)if("IFRAME"===o.tagName){if(t&&o.src===l){console.debug("Skipping ".concat(o.tagName," for service ").concat(e.name,", as it already has the correct type..."));continue}var d,f=document.createElement(o.tagName),m=C(o.attributes);try{for(m.s();!(d=m.n()).done;){var v=d.value;f.setAttribute(v.name,v.value)}}catch(e){m.e(e)}finally{m.f()}f.innerText=o.innerText,f.text=o.text,t?(void 0!==c["original-display"]&&(f.style.display=c["original-display"]),void 0!==c.src&&(f.src=c.src)):(f.src="",void 0!==c["modified-by-klaro"]&&void 0!==c["original-display"]?f.setAttribute("data-original-display",c["original-display"]):(void 0!==o.style.display&&f.setAttribute("data-original-display",o.style.display),f.setAttribute("data-modified-by-klaro","yes")),f.style.display="none"),a.insertBefore(f,o),a.removeChild(o)}else if("SCRIPT"===o.tagName||"LINK"===o.tagName){if(t&&o.type===(s||"")&&o.src===l){console.debug("Skipping ".concat(o.tagName," for service ").concat(e.name,", as it already has the correct type or src..."));continue}var y,h=document.createElement(o.tagName),A=C(o.attributes);try{for(A.s();!(y=A.n()).done;){var b=y.value;h.setAttribute(b.name,b.value)}}catch(e){A.e(e)}finally{A.f()}h.innerText=o.innerText,h.text=o.text,t?(h.type=s||"",void 0!==l&&(h.src=l),void 0!==u&&(h.href=u)):h.type="text/plain",a.insertBefore(h,o),a.removeChild(o)}else{if(t){var g,k=C(p);try{for(k.s();!(g=k.n()).done;){var _=g.value,w=c[_];void 0!==w&&(void 0===c["original-"+_]&&(c["original-"+_]=o[_]),o[_]=w)}}catch(e){k.e(e)}finally{k.f()}void 0!==c.title&&(o.title=c.title),void 0!==c["original-display"]?o.style.display=c["original-display"]:o.style.removeProperty("display")}else{void 0!==c.title&&o.removeAttribute("title"),void 0===c["original-display"]&&void 0!==o.style.display&&(c["original-display"]=o.style.display),o.style.display="none";var x,S=C(p);try{for(S.s();!(x=S.n()).done;){var j=x.value;void 0!==c[j]&&(void 0!==c["original-"+j]?o[j]=c["original-"+j]:o.removeAttribute(j))}}catch(e){S.e(e)}finally{S.f()}}(0,i.X7)(c,o)}else t?(o.style.display="none",c["original-display"]=o.style.display):o.style.display=c["original-display"]||"block"}}},{key:"updateServiceStorage",value:function(e,t){if(!t&&void 0!==e.cookies&&e.cookies.length>0)for(var n=r(),i=0;i<e.cookies.length;i++){var a=e.cookies[i],c=void 0,s=void 0;if(a instanceof Array){var l=w(a,3);a=l[0],c=l[1],s=l[2]}else if(a instanceof Object&&!(a instanceof RegExp)){var u=a;a=u.pattern,c=u.path,s=u.domain}if(void 0!==a){a instanceof RegExp||(a=a.startsWith("^")?new RegExp(a):new RegExp("^"+a.replace(/[-[\]/{}()*+?.\\^$|]/g,"\\$&")+"$"));for(var p=0;p<n.length;p++){var d=n[p];null!==a.exec(d.name)&&(console.debug("Deleting cookie:",d.name,"Matched pattern:",a,"Path:",c,"Domain:",s),o(d.name,c,s),void 0===s&&o(d.name,c,"."+window.location.hostname))}}}}},{key:"_checkConsents",value:function(){for(var e=!0,t=new Set(this.config.services.map((function(e){return e.name}))),n=new Set(Object.keys(this.consents)),r=0,o=Object.keys(this.consents);r<o.length;r++){var i=o[r];t.has(i)||delete this.consents[i]}var a,c=C(this.config.services);try{for(c.s();!(a=c.n()).done;){var s=a.value;n.has(s.name)||(this.consents[s.name]=this.getDefaultConsent(s),e=!1)}}catch(e){c.e(e)}finally{c.f()}this.confirmed=e,e||(this.changed=!0)}}])&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}()},5482:(e,t,n)=>{"use strict";function r(e,t){if(e){if("string"==typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?o(e,t):void 0}}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function i(e){if(null!==document.currentScript&&void 0!==document.currentScript)return document.currentScript;for(var t=document.getElementsByTagName("script"),n=0;n<t.length;n++){var r=t[n];if(r.src.includes(e))return r}return null}function a(e){for(var t={},n=0;n<e.attributes.length;n++){var r=e.attributes[n];r.name.startsWith("data-")&&(t[r.name.slice(5)]=r.value)}return t}function c(e,t){for(var n=Object.keys(e),r=0;r<n.length;r++){var o=n[r],i=e[o];t[o]!==i&&t.setAttribute("data-"+o,i)}}function s(e){var t,n=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=r(e))){n&&(e=n);var o=0,i=function(){};return{s:i,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,c=!0,s=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return c=e.done,e},e:function(e){s=!0,a=e},f:function(){try{c||null==n.return||n.return()}finally{if(s)throw a}}}}(document.querySelectorAll("style[data-context=klaro-styles]"));try{for(n.s();!(t=n.n()).done;){var o=t.value,i=o.innerText;void 0!==o.styleSheet&&(i=o.styleSheet.cssText);for(var a=function(){var e,t,n=(e=s[c],t=2,function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i,a,c=[],s=!0,l=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=i.call(n)).done)&&(c.push(r.value),c.length!==t);s=!0);}catch(e){l=!0,o=e}finally{try{if(!s&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return c}}(e,t)||r(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=n[0],a=n[1],l=new RegExp("([a-z0-9-]+):[^;]+;[\\s\\n]*\\1:\\s*var\\(--"+o+",\\s*[^\\)]+\\)","g");i=i.replace(l,(function(e,t){return"".concat(t,": ").concat(a,"; ").concat(t,": var(--").concat(o,", ").concat(a,")")}))},c=0,s=Object.entries(e);c<s.length;c++)a();var l=document.createElement("style");l.setAttribute("type","text/css"),l.setAttribute("data-context","klaro-styles"),void 0!==l.styleSheet?l.styleSheet.cssText=i:l.innerText=i,o.parentElement.appendChild(l),o.parentElement.removeChild(o)}}catch(e){n.e(e)}finally{n.f()}}n.d(t,{N3:()=>s,RT:()=>a,X7:()=>c,XZ:()=>i}),n(9305),n(2733),n(4701),n(4776),n(9892),n(6281),n(4962),n(9336),n(1908),n(7132),n(3810),n(8557),n(646),n(5021),n(3687),n(9425),n(3994),n(3062),n(4062),n(2367)},679:(e,t,n)=>{"use strict";n.d(t,{A:()=>c});var r=n(4942),o=n.n(r),i=n(278),a=n.n(i)()(o());a.push([e.id,'.klaro{font-family:inherit;font-family:var(--font-family, inherit);font-size:14px;font-size:var(--font-size, 14px)}.klaro button{font-family:inherit;font-family:var(--font-family, inherit);font-size:14px;font-size:var(--font-size, 14px)}.klaro.cm-as-context-notice{height:100%;padding-bottom:12px;padding-top:12px}.klaro .cookie-modal .cm-switch-container,.klaro .context-notice .cm-switch-container,.klaro .cookie-notice .cm-switch-container{border-bottom-style:solid;border-bottom-style:var(--border-style, solid);border-bottom-width:1px;border-bottom-width:var(--border-width, 1px);border-bottom-color:#c8c8c8;border-bottom-color:var(--light2, #c8c8c8);display:block;position:relative;padding:10px;padding-left:66px;line-height:20px;vertical-align:middle;min-height:40px}.klaro .cookie-modal .cm-switch-container:last-child,.klaro .context-notice .cm-switch-container:last-child,.klaro .cookie-notice .cm-switch-container:last-child{border-bottom:0}.klaro .cookie-modal .cm-switch-container:first-child,.klaro .context-notice .cm-switch-container:first-child,.klaro .cookie-notice .cm-switch-container:first-child{margin-top:0}.klaro .cookie-modal .cm-switch-container p,.klaro .context-notice .cm-switch-container p,.klaro .cookie-notice .cm-switch-container p{margin-top:0}.klaro .cookie-modal .cm-switch,.klaro .context-notice .cm-switch,.klaro .cookie-notice .cm-switch{position:relative;display:inline-block;width:50px;height:30px}.klaro .cookie-modal .cm-list-input:checked+.cm-list-label .slider,.klaro .context-notice .cm-list-input:checked+.cm-list-label .slider,.klaro .cookie-notice .cm-list-input:checked+.cm-list-label .slider{background-color:#1a936f;background-color:var(--green1, #1a936f)}.klaro .cookie-modal .cm-list-input.half-checked:checked+.cm-list-label .slider,.klaro .context-notice .cm-list-input.half-checked:checked+.cm-list-label .slider,.klaro .cookie-notice .cm-list-input.half-checked:checked+.cm-list-label .slider{background-color:#1a936f;background-color:var(--green1, #1a936f);opacity:.6}.klaro .cookie-modal .cm-list-input.half-checked:checked+.cm-list-label .slider::before,.klaro .context-notice .cm-list-input.half-checked:checked+.cm-list-label .slider::before,.klaro .cookie-notice .cm-list-input.half-checked:checked+.cm-list-label .slider::before{-ms-transform:translateX(10px);transform:translateX(10px)}.klaro .cookie-modal .cm-list-input.only-required+.cm-list-label .slider,.klaro .context-notice .cm-list-input.only-required+.cm-list-label .slider,.klaro .cookie-notice .cm-list-input.only-required+.cm-list-label .slider{background-color:#24cc9a;background-color:var(--green2, #24cc9a);opacity:.8}.klaro .cookie-modal .cm-list-input.only-required+.cm-list-label .slider::before,.klaro .context-notice .cm-list-input.only-required+.cm-list-label .slider::before,.klaro .cookie-notice .cm-list-input.only-required+.cm-list-label .slider::before{-ms-transform:translateX(10px);transform:translateX(10px)}.klaro .cookie-modal .cm-list-input.required:checked+.cm-list-label .slider,.klaro .context-notice .cm-list-input.required:checked+.cm-list-label .slider,.klaro .cookie-notice .cm-list-input.required:checked+.cm-list-label .slider{background-color:#24cc9a;background-color:var(--green2, #24cc9a);opacity:.8;cursor:not-allowed}.klaro .cookie-modal .slider,.klaro .context-notice .slider,.klaro .cookie-notice .slider{box-shadow:0 4px 6px 0 rgba(0,0,0,.2),5px 5px 10px 0 rgba(0,0,0,.19)}.klaro .cookie-modal .cm-list-input,.klaro .context-notice .cm-list-input,.klaro .cookie-notice .cm-list-input{position:absolute;top:0;left:0;opacity:0;width:50px;height:30px}.klaro .cookie-modal .cm-list-title,.klaro .context-notice .cm-list-title,.klaro .cookie-notice .cm-list-title{font-size:.9em;font-weight:600}.klaro .cookie-modal .cm-list-description,.klaro .context-notice .cm-list-description,.klaro .cookie-notice .cm-list-description{color:#7c7c7c;color:var(--dark3, #7c7c7c);font-size:.9em;padding-top:4px}.klaro .cookie-modal .cm-list-label .cm-switch,.klaro .context-notice .cm-list-label .cm-switch,.klaro .cookie-notice .cm-list-label .cm-switch{position:absolute;left:0}.klaro .cookie-modal .cm-list-label .slider,.klaro .context-notice .cm-list-label .slider,.klaro .cookie-notice .cm-list-label .slider{background-color:#f2f2f2;background-color:var(--white2, #f2f2f2);position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;transition:.4s;width:50px;display:inline-block}.klaro .cookie-modal .cm-list-label .slider::before,.klaro .context-notice .cm-list-label .slider::before,.klaro .cookie-notice .cm-list-label .slider::before{background-color:#e6e6e6;background-color:var(--white3, #e6e6e6);position:absolute;content:"";height:20px;width:20px;left:5px;bottom:5px;transition:.4s}.klaro .cookie-modal .cm-list-label .slider.round,.klaro .context-notice .cm-list-label .slider.round,.klaro .cookie-notice .cm-list-label .slider.round{border-radius:30px}.klaro .cookie-modal .cm-list-label .slider.round::before,.klaro .context-notice .cm-list-label .slider.round::before,.klaro .cookie-notice .cm-list-label .slider.round::before{border-radius:50%}.klaro .cookie-modal .cm-list-label input:focus+.slider,.klaro .context-notice .cm-list-label input:focus+.slider,.klaro .cookie-notice .cm-list-label input:focus+.slider{box-shadow-color:#48dfb2;box-shadow-color:var(--green3, #48dfb2);box-shadow:0 0 1px var(--box-shadow-color, green3)}.klaro .cookie-modal .cm-list-label input:checked+.slider::before,.klaro .context-notice .cm-list-label input:checked+.slider::before,.klaro .cookie-notice .cm-list-label input:checked+.slider::before{-ms-transform:translateX(20px);transform:translateX(20px)}.klaro .cookie-modal .cm-list-input:focus+.cm-list-label .slider,.klaro .context-notice .cm-list-input:focus+.cm-list-label .slider,.klaro .cookie-notice .cm-list-input:focus+.cm-list-label .slider{box-shadow:0 4px 6px 0 rgba(125,125,125,.2),5px 5px 10px 0 rgba(125,125,125,.19)}.klaro .cookie-modal .cm-list-input:checked+.cm-list-label .slider::before,.klaro .context-notice .cm-list-input:checked+.cm-list-label .slider::before,.klaro .cookie-notice .cm-list-input:checked+.cm-list-label .slider::before{-ms-transform:translateX(20px);transform:translateX(20px)}.klaro .cookie-modal .slider,.klaro .context-notice .slider,.klaro .cookie-notice .slider{box-shadow:0 4px 6px 0 rgba(0,0,0,.2),5px 5px 10px 0 rgba(0,0,0,.19)}.klaro .cookie-modal a,.klaro .context-notice a,.klaro .cookie-notice a{color:#1a936f;color:var(--green1, #1a936f);text-decoration:none}.klaro .cookie-modal p,.klaro .cookie-modal strong,.klaro .cookie-modal h1,.klaro .cookie-modal h2,.klaro .cookie-modal ul,.klaro .cookie-modal li,.klaro .context-notice p,.klaro .context-notice strong,.klaro .context-notice h1,.klaro .context-notice h2,.klaro .context-notice ul,.klaro .context-notice li,.klaro .cookie-notice p,.klaro .cookie-notice strong,.klaro .cookie-notice h1,.klaro .cookie-notice h2,.klaro .cookie-notice ul,.klaro .cookie-notice li{color:#fafafa;color:var(--light1, #fafafa)}.klaro .cookie-modal p,.klaro .cookie-modal h1,.klaro .cookie-modal h2,.klaro .cookie-modal ul,.klaro .cookie-modal li,.klaro .context-notice p,.klaro .context-notice h1,.klaro .context-notice h2,.klaro .context-notice ul,.klaro .context-notice li,.klaro .cookie-notice p,.klaro .cookie-notice h1,.klaro .cookie-notice h2,.klaro .cookie-notice ul,.klaro .cookie-notice li{display:block;text-align:left;margin:0;padding:0;margin-top:.7em}.klaro .cookie-modal h1,.klaro .cookie-modal h2,.klaro .cookie-modal h3,.klaro .cookie-modal h4,.klaro .cookie-modal h5,.klaro .cookie-modal h6,.klaro .context-notice h1,.klaro .context-notice h2,.klaro .context-notice h3,.klaro .context-notice h4,.klaro .context-notice h5,.klaro .context-notice h6,.klaro .cookie-notice h1,.klaro .cookie-notice h2,.klaro .cookie-notice h3,.klaro .cookie-notice h4,.klaro .cookie-notice h5,.klaro .cookie-notice h6{font-family:inherit;font-family:var(--title-font-family, inherit)}.klaro .cookie-modal .cm-link,.klaro .context-notice .cm-link,.klaro .cookie-notice .cm-link{margin-right:.5em;vertical-align:middle}.klaro .cookie-modal .cm-btn,.klaro .context-notice .cm-btn,.klaro .cookie-notice .cm-btn{color:#fff;color:var(--button-text-color, #fff);background-color:#5c5c5c;background-color:var(--dark2, #5c5c5c);border-radius:4px;border-radius:var(--border-radius, 4px);padding:6px 10px;margin-right:.5em;border-style:none;padding:.4em;font-size:1em;cursor:pointer}.klaro .cookie-modal .cm-btn:disabled,.klaro .context-notice .cm-btn:disabled,.klaro .cookie-notice .cm-btn:disabled{opacity:.5}.klaro .cookie-modal .cm-btn.cm-btn-close,.klaro .context-notice .cm-btn.cm-btn-close,.klaro .cookie-notice .cm-btn.cm-btn-close{background-color:#c8c8c8;background-color:var(--light2, #c8c8c8)}.klaro .cookie-modal .cm-btn.cm-btn-success,.klaro .context-notice .cm-btn.cm-btn-success,.klaro .cookie-notice .cm-btn.cm-btn-success{background-color:#1a936f;background-color:var(--green1, #1a936f)}.klaro .cookie-modal .cm-btn.cm-btn-success-var,.klaro .context-notice .cm-btn.cm-btn-success-var,.klaro .cookie-notice .cm-btn.cm-btn-success-var{background-color:#24cc9a;background-color:var(--green2, #24cc9a)}.klaro .cookie-modal .cm-btn.cm-btn-info,.klaro .context-notice .cm-btn.cm-btn-info,.klaro .cookie-notice .cm-btn.cm-btn-info{background-color:#2581c4;background-color:var(--blue1, #2581c4)}.klaro .context-notice{border-radius:4px;border-radius:var(--border-radius, 4px);border-style:solid;border-style:var(--border-style, solid);border-width:1px;border-width:var(--border-width, 1px);border-color:#c8c8c8;border-color:var(--light2, #c8c8c8);background-color:#fafafa;background-color:var(--light1, #fafafa);display:flex;flex-direction:column;flex-wrap:wrap;align-items:center;justify-content:center;padding:12px;height:100%}.klaro .context-notice.cm-dark{background-color:#333;background-color:var(--dark1, #333);border-color:#5c5c5c;border-color:var(--dark2, #5c5c5c)}.klaro .context-notice.cm-dark p{color:#fafafa;color:var(--light1, #fafafa)}.klaro .context-notice.cm-dark p a{color:#459cdc;color:var(--blue2, #459cdc)}.klaro .context-notice p{color:#333;color:var(--dark1, #333);flex-grow:0;text-align:center;padding-top:0;margin-top:0}.klaro .context-notice p a{color:#24cc9a;color:var(--green2, #24cc9a)}.klaro .context-notice p.cm-buttons{margin-top:12px}.klaro .context-notice p.ccn-description-empty-store{margin-top:24px;font-size:14px;font-size:var(--font-size, 14px)}.klaro .cookie-modal{width:100%;height:100%;position:fixed;overflow:hidden;left:0;top:0;z-index:1000}.klaro .cookie-modal.cm-embedded{position:relative;height:inherit;width:inherit;left:inherit;right:inherit;z-index:0}.klaro .cookie-modal.cm-embedded .cm-modal.cm-klaro{position:relative;-ms-transform:none;transform:none}.klaro .cookie-modal .cm-bg{background:rgba(0,0,0,.5);height:100%;width:100%;position:fixed;top:0;left:0}.klaro .cookie-modal .cm-modal.cm-klaro{background-color:#333;background-color:var(--dark1, #333);color:#fafafa;color:var(--light1, #fafafa);z-index:1001;box-shadow:0 4px 6px 0 rgba(0,0,0,.2),5px 5px 10px 0 rgba(0,0,0,.19);width:100%;max-height:98%;top:50%;-ms-transform:translateY(-50%);transform:translateY(-50%);position:fixed;overflow:auto}@media(min-width: 660px){.klaro .cookie-modal .cm-modal.cm-klaro{border-radius:4px;border-radius:var(--border-radius, 4px);position:relative;margin:0 auto;max-width:640px;height:auto;width:auto}}.klaro .cookie-modal .cm-modal .hide{border-style:none;background:none;cursor:pointer;position:absolute;top:20px;right:20px;z-index:1}.klaro .cookie-modal .cm-modal .hide svg{stroke:#fafafa;stroke:var(--light1, #fafafa)}.klaro .cookie-modal .cm-modal .cm-footer{border-top-color:#5c5c5c;border-top-color:var(--dark2, #5c5c5c);border-top-width:1px;border-top-width:var(--border-width, 1px);border-top-style:solid;border-top-style:var(--border-style, solid);padding:1em}.klaro .cookie-modal .cm-modal .cm-footer-buttons{display:flex;flex-flow:row;justify-content:space-between}.klaro .cookie-modal .cm-modal .cm-footer .cm-powered-by{font-size:.8em;padding-top:4px;text-align:right;padding-right:8px}.klaro .cookie-modal .cm-modal .cm-footer .cm-powered-by a{color:#5c5c5c;color:var(--dark2, #5c5c5c)}.klaro .cookie-modal .cm-modal .cm-header{border-bottom-width:1px;border-bottom-width:var(--border-width, 1px);border-bottom-style:solid;border-bottom-style:var(--border-style, solid);border-bottom-color:#5c5c5c;border-bottom-color:var(--dark2, #5c5c5c);padding:1em;padding-right:24px}.klaro .cookie-modal .cm-modal .cm-header h1{margin:0;font-size:2em;display:block}.klaro .cookie-modal .cm-modal .cm-header h1.title{padding-right:20px}.klaro .cookie-modal .cm-modal .cm-body{padding:1em}.klaro .cookie-modal .cm-modal .cm-body ul{display:block}.klaro .cookie-modal .cm-modal .cm-body span{display:inline-block;width:auto}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes{padding:0;margin:0}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose .cm-services .cm-caret,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose .cm-services .cm-caret{color:#a0a0a0;color:var(--light3, #a0a0a0)}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose .cm-services .cm-content,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose .cm-services .cm-content{margin-left:-40px;display:none}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose .cm-services .cm-content.expanded,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose .cm-services .cm-content.expanded{margin-top:10px;display:block}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-service,.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-service,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose{position:relative;line-height:20px;vertical-align:middle;padding-left:60px;min-height:40px}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-service:first-child,.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose:first-child,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-service:first-child,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose:first-child{margin-top:0}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-service p,.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose p,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-service p,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose p{margin-top:0}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-service p.purposes,.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose p.purposes,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-service p.purposes,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose p.purposes{color:#a0a0a0;color:var(--light3, #a0a0a0);font-size:.8em}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-service.cm-toggle-all,.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose.cm-toggle-all,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-service.cm-toggle-all,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose.cm-toggle-all{border-top-width:1px;border-top-width:var(--border-width, 1px);border-top-style:solid;border-top-style:var(--border-style, solid);border-top-color:#5c5c5c;border-top-color:var(--dark2, #5c5c5c);padding-top:1em}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-service span.cm-list-title,.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose span.cm-list-title,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-service span.cm-list-title,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose span.cm-list-title{font-weight:600}.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-service span.cm-opt-out,.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-service span.cm-required,.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose span.cm-opt-out,.klaro .cookie-modal .cm-modal .cm-body ul.cm-services li.cm-purpose span.cm-required,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-service span.cm-opt-out,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-service span.cm-required,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose span.cm-opt-out,.klaro .cookie-modal .cm-modal .cm-body ul.cm-purposes li.cm-purpose span.cm-required{color:#5c5c5c;color:var(--dark2, #5c5c5c);padding-left:.2em;font-size:.8em}.klaro .cookie-notice:not(.cookie-modal-notice){background-color:#333;background-color:var(--dark1, #333);z-index:999;position:fixed;width:100%;bottom:0;right:0}@media(min-width: 1024px){.klaro .cookie-notice:not(.cookie-modal-notice){border-radius:4px;border-radius:var(--border-radius, 4px);position:fixed;position:var(--notice-position, fixed);right:20px;right:var(--notice-right, 20px);left:auto;left:var(--notice-left, auto);bottom:20px;bottom:var(--notice-bottom, 20px);top:auto;top:var(--notice-top, auto);max-width:400px;max-width:var(--notice-max-width, 400px);box-shadow:0 4px 6px 0 rgba(0,0,0,.2),5px 5px 10px 0 rgba(0,0,0,.19)}}@media(max-width: 1023px){.klaro .cookie-notice:not(.cookie-modal-notice){border-style:none;border-radius:0}}.klaro .cookie-notice:not(.cookie-modal-notice).cn-embedded{position:relative;height:inherit;width:inherit;left:inherit;right:inherit;bottom:inherit;z-index:0}.klaro .cookie-notice:not(.cookie-modal-notice).cn-embedded .cn-body{padding-top:.5em}.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body{margin-bottom:0;margin-right:0;bottom:0;padding:1em;padding-top:0}.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body p{margin-bottom:.5em}.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body p.cn-changes{text-decoration:underline}.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body .cn-learn-more{display:inline-block;flex-grow:1}.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body .cn-buttons{display:inline-block;margin-top:-0.5em}@media(max-width: 384px){.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body .cn-buttons{width:100%}}.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body .cn-buttons button.cm-btn{margin-top:.5em}@media(max-width: 384px){.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body .cn-buttons button.cm-btn{width:calc(50% - 0.5em)}}.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body .cn-ok{margin-top:-0.5em;display:flex;flex-flow:row;flex-wrap:wrap;justify-content:right;align-items:baseline}.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body .cn-ok a,.klaro .cookie-notice:not(.cookie-modal-notice) .cn-body .cn-ok div{margin-top:.5em}.klaro .cookie-modal-notice{background-color:#333;background-color:var(--dark1, #333);color:#fafafa;color:var(--light1, #fafafa);z-index:1001;box-shadow:0 4px 6px 0 rgba(0,0,0,.2),5px 5px 10px 0 rgba(0,0,0,.19);width:100%;max-height:98%;top:50%;-ms-transform:translateY(-50%);transform:translateY(-50%);position:fixed;overflow:auto;padding:1em;padding-top:.2em}@media(min-width: 400px){.klaro .cookie-modal-notice{border-radius:4px;border-radius:var(--border-radius, 4px);position:relative;margin:0 auto;max-width:400px;height:auto;width:auto}}.klaro .cookie-modal-notice .cn-ok{display:flex;flex-flow:row;justify-content:space-between;align-items:center;margin-top:1em}.klaro .cookie-notice-hidden{display:none !important}',"",{version:3,sources:["webpack://./scss/klaro.scss","webpack://./scss/vars.scss","webpack://./scss/switch.scss","webpack://./scss/modal.scss"],names:[],mappings:"AAIA,OCyHI,mBAAA,CACA,uCAAA,CADA,cAAA,CACA,gCAAA,CDlHA,cCiHA,mBAAA,CACA,uCAAA,CADA,cAAA,CACA,gCAAA,CD7GA,4BACI,WAAA,CACA,mBAAA,CACA,gBAAA,CElBR,iID2HI,yBAAA,CACA,8CAAA,CADA,uBAAA,CACA,4CAAA,CADA,2BAAA,CACA,0CAAA,CCvHA,aAAA,CACA,iBAAA,CACA,YAAA,CACA,iBAAA,CACA,gBAAA,CACA,qBAAA,CACA,eAAA,CAEA,kKACI,eAAA,CAGJ,qKACI,YAAA,CAGJ,uIACI,YAAA,CAIR,mGACI,iBAAA,CACA,oBAAA,CACA,UAAA,CACA,WAAA,CAGJ,4MD0FI,wBAAA,CACA,uCAAA,CCvFJ,mPDsFI,wBAAA,CACA,uCAAA,CCrFA,UAAA,CAEA,2QAEI,8BAAA,CACA,0BAAA,CAIR,8ND2EI,wBAAA,CACA,uCAAA,CC1EA,UAAA,CAEA,sPAEI,8BAAA,CACA,0BAAA,CAIR,uODgEI,wBAAA,CACA,uCAAA,CC/DA,UAAA,CACA,kBAAA,CAGJ,0FACI,oED5DoB,CC+DxB,+GACI,iBAAA,CACA,KAAA,CACA,MAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CAGJ,+GACI,cAAA,CACA,eAAA,CAGJ,iIDwCI,aAAA,CACA,2BAAA,CCvCA,cAAA,CACA,eAAA,CAMA,gJACI,iBAAA,CACA,MAAA,CAGJ,uID0BA,wBAAA,CACA,uCAAA,CCvBI,iBAAA,CACA,cAAA,CACA,KAAA,CACA,MAAA,CACA,OAAA,CACA,QAAA,CAEA,cAAA,CACA,UAAA,CACA,oBAAA,CAGJ,+JDUA,wBAAA,CACA,uCAAA,CCPI,iBAAA,CACA,UAAA,CACA,WAAA,CACA,UAAA,CACA,QAAA,CACA,UAAA,CAEA,cAAA,CAIJ,yJACI,kBAAA,CAGJ,iLACI,iBAAA,CAGJ,2KDbA,wBAAA,CACA,uCAAA,CCcI,kDAAA,CAGJ,yMAEI,8BAAA,CACA,0BAAA,CAIR,sMACI,gFAAA,CAIJ,oOAEI,8BAAA,CACA,0BAAA,CFlII,0FACI,oECrBY,CDwBhB,wEC6FJ,aAAA,CACA,4BAAA,CD5FQ,oBAAA,CAGJ,2cCwFJ,aAAA,CACA,4BAAA,CDhFI,oXAKI,aAAA,CACA,eAAA,CACA,QAAA,CACA,SAAA,CACA,eAAA,CAGJ,kcCmEJ,mBAAA,CACA,6CAAA,CD3DI,6FACI,iBAAA,CACA,qBAAA,CAGJ,0FCqDJ,UAAA,CACA,oCAAA,CADA,wBAAA,CACA,sCAAA,CADA,iBAAA,CACA,uCAAA,CDjDQ,gBAAA,CACA,iBAxEW,CAyEX,iBAAA,CACA,YAAA,CACA,aAAA,CACA,cAAA,CAEA,qHACI,UAAA,CAGJ,iICqCR,wBAAA,CACA,uCAAA,CDlCQ,uICiCR,wBAAA,CACA,uCAAA,CD9BQ,mJC6BR,wBAAA,CACA,uCAAA,CD1BQ,8HCyBR,wBAAA,CACA,sCAAA,CDpBA,uBCmBA,iBAAA,CACA,uCAAA,CADA,kBAAA,CACA,uCAAA,CADA,gBAAA,CACA,qCAAA,CADA,oBAAA,CACA,mCAAA,CADA,wBAAA,CACA,uCAAA,CDbI,YAAA,CACA,qBAAA,CACA,cAAA,CACA,kBAAA,CACA,sBAAA,CACA,YAAA,CACA,WAAA,CAEA,+BCIJ,qBAAA,CACA,mCAAA,CADA,oBAAA,CACA,kCAAA,CDDQ,iCAAA,aAAA,CCCR,4BAAA,CDEY,mCCHZ,aAAA,CACA,2BAAA,CDQI,yBCTJ,UAAA,CACA,wBAAA,CDWQ,WAAA,CACA,iBAAA,CACA,aAAA,CACA,YAAA,CAEA,2BCjBR,aAAA,CACA,4BAAA,CDqBI,oCACI,eAAA,CAIJ,qDACI,eAAA,CC5BR,cAAA,CACA,gCAAA,CDgCA,qBACI,UAAA,CACA,WAAA,CACA,cAAA,CACA,eAAA,CACA,MAAA,CACA,KAAA,CACA,YAAA,CAEA,iCACI,iBAAA,CACA,cAAA,CACA,aAAA,CACA,YAAA,CACA,aAAA,CACA,SAAA,CAEA,oDACI,iBAAA,CACA,kBAAA,CAAA,cAAA,CAIR,4BACI,yBAAA,CACA,WAAA,CACA,UAAA,CACA,cAAA,CACA,KAAA,CACA,MAAA,CAIA,wCClER,qBAAA,CACA,mCAAA,CADA,aAAA,CACA,4BAAA,CEzHA,YAAA,CACA,oEFEoB,CAAA,UAAA,CECpB,cAAA,CAEA,OAAA,CACA,8BAAA,CAAA,0BAAA,CAEA,cAAA,CACA,aAAA,CAEA,yBH8KQ,wCClER,iBAAA,CACA,uCAAA,CE3GI,iBAAA,CACA,aAAA,CACA,eH2K8B,CG1K9B,WAAA,CACA,UAAA,CAAA,CH4KI,qCACI,iBAAA,CACA,eAAA,CACA,cAAA,CACA,iBAAA,CACA,QAAA,CACA,UAAA,CACA,SAAA,CAEA,yCC/EZ,cAAA,CACA,6BAAA,CDmFQ,0CCpFR,wBAAA,CACA,sCAAA,CADA,oBAAA,CACA,yCAAA,CADA,sBAAA,CACA,2CAAA,CDwFY,WAAA,CAEA,kDACI,YAAA,CACA,aAAA,CACA,6BAAA,CAGJ,yDACI,cAAA,CACA,eAAA,CACA,gBAAA,CACA,iBAAA,CAEA,2DCvGhB,aAAA,CACA,2BAAA,CD4GQ,0CC7GR,uBAAA,CACA,4CAAA,CADA,yBAAA,CACA,8CAAA,CADA,2BAAA,CACA,yCAAA,CDiHY,WAAA,CACA,kBAAA,CAEA,6CACI,QAAA,CACA,aAAA,CACA,aAAA,CAEA,mDACI,kBAAA,CAKZ,wCACI,WAAA,CAEA,2CACI,aAAA,CAGJ,6CACI,oBAAA,CACA,UAAA,CAGJ,8GAEI,SAAA,CACA,QAAA,CAIQ,wLCnJxB,aAAA,CACA,4BAAA,CDsJwB,4LACI,iBAAA,CACA,YAAA,CAEA,8MACI,eAAA,CACA,aAAA,CAMhB,oRAEI,iBAAA,CACA,gBAAA,CACA,qBAAA,CACA,iBAAA,CACA,eAAA,CAEA,oUACI,YAAA,CAGJ,4RACI,YAAA,CAGJ,gUCnLpB,aAAA,CACA,4BAAA,CDoLwB,cAAA,CAGJ,4UCxLpB,oBAAA,CACA,yCAAA,CADA,sBAAA,CACA,2CAAA,CADA,wBAAA,CACA,sCAAA,CD6LwB,eAAA,CAGJ,gWACI,eAAA,CAGJ,4qBCrMpB,aAAA,CACA,2BAAA,CDuMwB,iBAAA,CACA,cAAA,CAQxB,gDCjNA,qBAAA,CACA,mCAAA,CDkNI,WAAA,CAEA,cAAA,CACA,UAAA,CACA,QAAA,CACA,OAAA,CAEA,0BATJ,gDCjNA,iBAAA,CACA,uCAAA,CADA,cAAA,CACA,sCAAA,CADA,UAAA,CACA,+BAAA,CADA,SAAA,CACA,6BAAA,CADA,WAAA,CACA,iCAAA,CADA,QAAA,CACA,2BAAA,CADA,eAAA,CACA,wCAAA,CDiOQ,oECvVY,CAAA,CD0VhB,0BApBJ,gDAqBQ,iBAAA,CACA,eAAA,CAAA,CAGJ,4DACI,iBAAA,CACA,cAAA,CACA,aAAA,CACA,YAAA,CACA,aAAA,CACA,cAAA,CACA,SAAA,CAEA,qEACI,gBAAA,CAIR,yDACI,eAAA,CACA,cAAA,CACA,QAAA,CAEA,WAAA,CACA,aAAA,CAEA,2DACI,kBAAA,CAGJ,sEACI,yBAAA,CAGJ,wEACI,oBAAA,CACA,WAAA,CAGJ,qEACI,oBAAA,CACA,iBAAA,CAEA,yBAJJ,qEAKQ,UAAA,CAAA,CAGJ,mFACI,eAAA,CAEA,yBAHJ,mFAIQ,uBAAA,CAAA,CAKZ,gEAGI,iBAAA,CACA,YAAA,CACA,aAAA,CACA,cAAA,CACA,qBAAA,CACA,oBAAA,CAEA,sIAEI,eAAA,CAMhB,4BChTA,qBAAA,CACA,mCAAA,CADA,aAAA,CACA,4BAAA,CEzHA,YAAA,CACA,oEFEoB,CAAA,UAAA,CECpB,cAAA,CAEA,OAAA,CACA,8BAAA,CAAA,0BAAA,CAEA,cAAA,CACA,aAAA,CHiaI,WAAA,CACA,gBAAA,CGhaJ,yBH4ZA,4BChTA,iBAAA,CACA,uCAAA,CE3GI,iBAAA,CACA,aAAA,CACA,eHyZsB,CGxZtB,WAAA,CACA,UAAA,CAAA,CH4ZA,mCACI,YAAA,CACA,aAAA,CACA,6BAAA,CACA,kBAAA,CAEA,cAAA,CAIR,6BACI,uBAAA",sourcesContent:["@use \"sass:map\";\n@import './modal';\n@import './vars';\n\n.klaro {\n\n    $btn-margin-right: 0.5em;\n\n    @include var(font-family, font-family);\n    @include var(font-size, font-size);\n\n    // buttons use their own font-family setting so we need to override it explicitly...\n    button {\n        @include var(font-family, font-family);\n        @include var(font-size, font-size);\n    }\n\n    &.cm-as-context-notice {\n        height: 100%;\n        padding-bottom: map.get($cm-space, md);\n        padding-top: map.get($cm-space, md);\n    }\n\n    .cookie-modal,\n    .context-notice,\n    .cookie-notice {\n        @import 'switch';\n\n        .slider {\n            box-shadow: $cm-box-shadow-dark-md;\n        }\n\n        a {\n            @include var(color, green1);\n            text-decoration: none;\n        }\n\n        p,\n        strong,\n        h1,\n        h2,\n        ul,\n        li {\n            @include var(color, light1);\n        }\n\n        p,\n        h1,\n        h2,\n        ul,\n        li {\n            display: block;\n            text-align: left;\n            margin: 0;\n            padding: 0;\n            margin-top: 0.7em;\n        }\n\n        h1,\n        h2,\n        h3,\n        h4,\n        h5,\n        h6 {\n            @include var(font-family, title-font-family);\n        }\n\n        .cm-link {\n            margin-right: 0.5em;\n            vertical-align: middle;\n        }\n\n        .cm-btn {\n\n            @include var(color, button-text-color);\n            @include var(background-color, dark2);\n            @include var(border-radius, border-radius);\n            padding: 6px 10px;\n            margin-right: $btn-margin-right;\n            border-style: none;\n            padding: 0.4em;\n            font-size: 1em;\n            cursor: pointer;\n\n            &:disabled {\n                opacity: 0.5;\n            }\n\n            &.cm-btn-close {\n                @include var(background-color, light2);\n            }\n\n            &.cm-btn-success {\n                @include var(background-color, green1);\n            }\n\n            &.cm-btn-success-var {\n                @include var(background-color, green2);\n            }\n\n            &.cm-btn-info {\n                @include var(background-color, blue1);\n            }\n        }\n    }\n\n    .context-notice {\n        @include var(border-radius, border-radius);\n        @include var(border-style, border-style);\n        @include var(border-width, border-width);\n        @include var(border-color, light2);\n        @include var(background-color, light1);\n\n        display: flex;\n        flex-direction: column;\n        flex-wrap: wrap;\n        align-items: center;\n        justify-content: center;\n        padding: map.get($cm-space, md);\n        height: 100%;\n\n        &.cm-dark {\n            @include var(background-color, dark1);\n            @include var(border-color, dark2);\n\n            p {\n                @include var(color, light1);\n\n                a {\n                    @include var(color, blue2);\n                }\n            }\n        }\n\n        p {\n            @include var(color, dark1);\n\n            flex-grow: 0;\n            text-align: center;\n            padding-top: 0;\n            margin-top: 0;\n\n            a {\n                @include var(color, green2);\n            }\n        }\n\n        p.cm-buttons {\n            margin-top: map.get($cm-space, md);\n        }\n\n        // contextual consent notice\n        p.ccn-description-empty-store {\n            margin-top: map.get($cm-space, lg);            \n            @include var(font-size, font-size);\n        }\n    }\n\n    .cookie-modal {\n        width: 100%;\n        height: 100%;\n        position: fixed;\n        overflow: hidden;\n        left: 0;\n        top: 0;\n        z-index: 1000;\n\n        &.cm-embedded {\n            position: relative;\n            height: inherit;\n            width: inherit;\n            left: inherit;\n            right: inherit;\n            z-index: 0;\n\n            .cm-modal.cm-klaro {\n                position: relative;\n                transform: none;\n            }\n        }\n\n        .cm-bg {\n            background: rgba(0, 0, 0, 0.5);\n            height: 100%;\n            width: 100%;\n            position: fixed;\n            top: 0;\n            left: 0;\n        }\n\n        .cm-modal {\n            &.cm-klaro {\n                @include modal(660px, 640px);\n            }\n\n            .hide {\n                border-style: none;\n                background: none;\n                cursor: pointer;\n                position: absolute;\n                top: 20px;\n                right: 20px;\n                z-index: 1;\n\n                svg {\n                    @include var(stroke, light1);\n                }\n            }\n\n            .cm-footer {\n                @include var(border-top-color, dark2);\n                @include var(border-top-width, border-width);\n                @include var(border-top-style, border-style);\n\n                padding: 1em;\n\n                &-buttons {\n                    display: flex;\n                    flex-flow: row;\n                    justify-content: space-between;\n                }\n\n                .cm-powered-by {\n                    font-size: 0.8em;\n                    padding-top: 4px;\n                    text-align: right;\n                    padding-right: 8px;\n\n                    a {\n                        @include var(color, dark2);\n                    }\n                }\n            }\n\n            .cm-header {\n                @include var(border-bottom-width, border-width);\n                @include var(border-bottom-style, border-style);\n                @include var(border-bottom-color, dark2);\n\n                padding: 1em;\n                padding-right: 24px;\n\n                h1 {\n                    margin: 0;\n                    font-size: 2em;\n                    display: block;\n\n                    &.title {\n                        padding-right: 20px;\n                    }\n                }\n            }\n\n            .cm-body {\n                padding: 1em;\n\n                ul {\n                    display: block;\n                }\n\n                span {\n                    display: inline-block;\n                    width: auto;\n                }\n\n                ul.cm-services,\n                ul.cm-purposes {\n                    padding: 0;\n                    margin: 0;\n\n                    li.cm-purpose {\n                        .cm-services {\n                            .cm-caret {\n                                @include var(color, light3);\n                            }\n\n                            .cm-content {\n                                margin-left: -40px;\n                                display: none;\n\n                                &.expanded {\n                                    margin-top: 10px;\n                                    display: block;\n                                }\n                            }\n                        }\n                    }\n\n                    li.cm-service,\n                    li.cm-purpose {\n                        position: relative;\n                        line-height: 20px;\n                        vertical-align: middle;\n                        padding-left: 60px;\n                        min-height: 40px;\n\n                        &:first-child {\n                            margin-top: 0;\n                        }\n\n                        p {\n                            margin-top: 0;\n                        }\n\n                        p.purposes {\n                            @include var(color, light3);\n                            font-size: 0.8em;\n                        }\n\n                        &.cm-toggle-all {\n\n                            @include var(border-top-width, border-width);\n                            @include var(border-top-style, border-style);\n                            @include var(border-top-color, dark2);\n\n                            padding-top: 1em;\n                        }\n\n                        span.cm-list-title {\n                            font-weight: 600;\n                        }\n\n                        span.cm-opt-out,\n                        span.cm-required {\n                            @include var(color, dark2);\n                            padding-left: 0.2em;\n                            font-size: 0.8em;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    .cookie-notice:not(.cookie-modal-notice) {\n        @include var(background-color, dark1);\n        z-index: 999;\n\n        position: fixed;\n        width: 100%;\n        bottom: 0;\n        right: 0;\n\n        @media (min-width: $cm-desktop) {\n            @include var(border-radius, border-radius);\n            @include var(position, notice-position);\n            @include var(right, notice-right);\n            @include var(left, notice-left);\n            @include var(bottom, notice-bottom);\n            @include var(top, notice-top);\n            @include var(max-width, notice-max-width);\n            box-shadow: $cm-box-shadow-dark-md;\n        }\n\n        @media (max-width: ($cm-desktop - 1)) {\n            border-style: none;\n            border-radius: 0;\n        }\n\n        &.cn-embedded {\n            position: relative;\n            height: inherit;\n            width: inherit;\n            left: inherit;\n            right: inherit;\n            bottom: inherit;\n            z-index: 0;\n\n            .cn-body {\n                padding-top: 0.5em;\n            }\n        }\n\n        .cn-body {\n            margin-bottom: 0;\n            margin-right: 0;\n            bottom: 0;\n\n            padding: 1em;\n            padding-top: 0;\n\n            p {\n                margin-bottom: 0.5em;\n            }\n\n            p.cn-changes {\n                text-decoration: underline;\n            }\n\n            .cn-learn-more {\n                display: inline-block;\n                flex-grow: 1;\n            }\n\n            .cn-buttons {\n                display: inline-block;\n                margin-top: -0.5em;\n\n                @media (max-width: $cm-mobile) {\n                    width: 100%;\n                }\n\n                button.cm-btn {\n                    margin-top: 0.5em;\n\n                    @media (max-width: $cm-mobile) {\n                        width: calc(50% - #{$btn-margin-right});\n                    }\n                }\n            }\n\n            .cn-ok {\n                // we add a margin that cancels out unless the items are wrapped\n                // in which case it will add some spacing between them\n                margin-top: -0.5em;\n                display: flex;\n                flex-flow: row;\n                flex-wrap: wrap;\n                justify-content: right;\n                align-items: baseline;\n\n                a,\n                div {\n                    margin-top: 0.5em;\n                }\n            }\n        }\n    }\n\n    .cookie-modal-notice {\n        @include modal(400px, 400px);\n\n        padding: 1em;\n        padding-top: 0.2em;\n\n        .cn-ok {\n            display: flex;\n            flex-flow: row;\n            justify-content: space-between;\n            align-items: center;\n\n            margin-top: 1em;\n        }\n    }\n\n    .cookie-notice-hidden {\n        display: none !important;\n    }\n}\n","@use \"sass:map\";\n@use 'sass:color';\n\n/*\nWe declare all variables here as default so that they are easy to override...\n*/\n\n/* Border, shadows, ... */\n$cm-box-shadow-dark-md: 0 4px 6px 0 rgba(0, 0, 0, 0.2), 5px 5px 10px 0 rgba(0, 0, 0, 0.19) !default;\n$cm-box-shadow-light-sm: 0 2px 5px 0 rgba(0, 0, 0, 0.11) !default;\n$cm-box-shadow-dark-sm: 0 2px 5px 0 rgba(0, 0, 0, 0.33) !default;\n\n/*\nVariables that begin with $var- should NEVER be used directly in CSS rules.\nthey should only be included via the \"@include var(property, var-name)\"\nmechanism.\n*/\n\n/* Border styles */\n$var-border-radius: 4px !default;\n$var-border-style: solid !default;\n$var-border-width: 1px !default;\n\n/* Cookie notice positioning */\n$var-notice-right: 20px !default;\n$var-notice-left: auto !default;\n$var-notice-top: auto !default;\n$var-notice-bottom: 20px !default;\n$var-notice-max-width: 400px !default;\n$var-notice-position: fixed !default;\n\n/* Text colors */\n$var-button-text-color: #fff !default;\n\n/* Font Families */\n$var-font-family: inherit !default;\n$var-title-font-family: inherit !default;\n$var-font-size: 14px !default;\n\n/* White */\n$var-white1: #fff !default;\n$var-white2: color.scale($var-white1, $lightness: -5%) !default;\n$var-white3: color.scale($var-white2, $lightness: -5%) !default;\n\n/* Differently shaded colors */\n\n// light gray\n$var-light1: #fafafa !default;\n$var-light2: color.scale($var-light1, $lightness: -20%) !default;\n$var-light3: color.scale($var-light2, $lightness: -20%) !default;\n\n// dark gray\n$var-dark1: #333 !default;\n$var-dark2: color.scale($var-dark1, $lightness: 20%) !default;\n$var-dark3: color.scale($var-dark2, $lightness: 20%) !default;\n\n// blue\n$var-blue1: #2581c4 !default;\n$var-blue2: color.scale($var-blue1, $lightness: 20%) !default;\n$var-blue3: color.scale($var-blue2, $lightness: 20%) !default;\n\n// green\n$var-green1: #1a936f !default;\n$var-green2: color.scale($var-green1, $lightness: 20%) !default;\n$var-green3: color.scale($var-green2, $lightness: 20%) !default;\n\n// red\n$var-red1: #da2c43 !default;\n$var-red2: color.scale($var-red1, $lightness: 20%) !default;\n$var-red3: color.scale($var-red2, $lightness: 20%) !default;\n\n// all these variables can be tweaked at runtime by specifying them via the\n// 'styling' config parameter.\n$vars: (\n    button-text-color: $var-button-text-color,\n\n    font-size: $var-font-size,\n    font-family: $var-font-family,\n    title-font-family: $var-title-font-family,\n\n    green1: $var-green1,\n    green2: $var-green2,\n    green3: $var-green3,\n\n    blue1: $var-blue1,\n    blue2: $var-blue2,\n    blue3: $var-blue3,\n\n    red1: $var-red1,\n    red2: $var-red2,\n    red3: $var-red3,\n\n    light1: $var-light1,\n    light2: $var-light2,\n    light3: $var-light3,\n\n    dark1: $var-dark1,\n    dark2: $var-dark2,\n    dark3: $var-dark3,\n\n    white1: $var-white1,\n    white2: $var-white2,\n    white3: $var-white3,\n\n    // non-color options\n\n    border-radius: $var-border-radius,\n    border-style: $var-border-style,\n    border-width: $var-border-width,\n    notice-left: $var-notice-left,\n    notice-right: $var-notice-right,\n    notice-top: $var-notice-top,\n    notice-bottom: $var-notice-bottom,\n    notice-max-width: $var-notice-max-width,\n    notice-position: $var-notice-position,\n);\n\n/*\nUse @include var(property, varname) to include a variable, e.g.\n\n    @include var(background-color, white1);\n\nto create a white background.\n*/\n@mixin var($property, $varName) {\n    #{$property}: map.get($vars, $varName);\n    #{$property}: var(--#{$varName}, map.get($vars, $varName));\n}\n\n/* Spacing */\n$cm-space: (\n    xs: 4px,\n    sm: 8px,\n    md: 12px,\n    lg: 24px,\n    xl: 48px,\n    xxl: 96px\n) !default;\n\n/* Breakpoints */\n$cm-desktop: 1024px !default;\n$cm-mobile: 384px !default;\n$cm-tablet: 768px !default;\n","/* The switch - the box around the slider */\n\n.cm-switch-container {\n    @include var(border-bottom-style, border-style);\n    @include var(border-bottom-width, border-width);\n    @include var(border-bottom-color, light2);\n\n    display: block;\n    position: relative;\n    padding: 10px;\n    padding-left: 66px;\n    line-height: 20px;\n    vertical-align: middle;\n    min-height: 40px;\n\n    &:last-child {\n        border-bottom: 0;\n    }\n\n    &:first-child {\n        margin-top: 0;\n    }\n\n    p {\n        margin-top: 0;\n    }\n}\n\n.cm-switch {\n    position: relative;\n    display: inline-block;\n    width: 50px;\n    height: 30px;\n}\n\n.cm-list-input:checked + .cm-list-label .slider {\n    @include var(background-color, green1);\n}\n\n.cm-list-input.half-checked:checked + .cm-list-label .slider {\n    @include var(background-color, green1);\n    opacity: 0.6;\n\n    &::before {\n        -webkit-transform: translateX(10px);\n        -ms-transform: translateX(10px);\n        transform: translateX(10px);\n    }\n}\n\n.cm-list-input.only-required + .cm-list-label .slider {\n    @include var(background-color, green2);\n    opacity: 0.8;\n\n    &::before {\n        -webkit-transform: translateX(10px);\n        -ms-transform: translateX(10px);\n        transform: translateX(10px);\n    }\n}\n\n.cm-list-input.required:checked + .cm-list-label .slider {\n    @include var(background-color, green2);\n    opacity: 0.8;\n    cursor: not-allowed;\n}\n\n.slider {\n    box-shadow: $cm-box-shadow-dark-md;\n}\n\n.cm-list-input {\n    position: absolute;\n    top: 0;\n    left: 0;\n    opacity: 0;\n    width: 50px;\n    height: 30px;\n}\n\n.cm-list-title {\n    font-size: 0.9em;\n    font-weight: 600;\n}\n\n.cm-list-description {\n    @include var(color, dark3);\n    font-size: 0.9em;\n    padding-top: 4px;\n}\n\n.cm-list-label {\n    /* The slider */\n\n    .cm-switch {\n        position: absolute;\n        left: 0;\n    }\n\n    .slider {\n\n        @include var(background-color, white2);\n\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n        width: 50px;\n        display: inline-block;\n    }\n\n    .slider::before {\n\n        @include var(background-color, white3);\n\n        position: absolute;\n        content: '';\n        height: 20px;\n        width: 20px;\n        left: 5px;\n        bottom: 5px;\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n    }\n\n    /* Rounded sliders */\n    .slider.round {\n        border-radius: 30px;\n    }\n\n    .slider.round::before {\n        border-radius: 50%;\n    }\n\n    input:focus + .slider {\n        @include var(box-shadow-color, green3);\n        box-shadow: 0 0 1px var(--box-shadow-color, green3);\n    }\n\n    input:checked + .slider::before {\n        -webkit-transform: translateX(20px);\n        -ms-transform: translateX(20px);\n        transform: translateX(20px);\n    }\n}\n\n.cm-list-input:focus + .cm-list-label .slider {\n    box-shadow: 0 4px 6px 0 rgba(125, 125, 125, 0.2),\n        5px 5px 10px 0 rgba(125, 125, 125, 0.19);\n}\n\n.cm-list-input:checked + .cm-list-label .slider::before {\n    -webkit-transform: translateX(20px);\n    -ms-transform: translateX(20px);\n    transform: translateX(20px);\n}\n","@mixin modal($centerWidth, $windowWidth) {\n\n    @include var(background-color, dark1);\n    @include var(color, light1);\n\n    z-index: 1001;\n    box-shadow: $cm-box-shadow-dark-md;\n\n    width: 100%;\n    max-height: 98%;\n\n    top: 50%;\n    transform: translateY(-50%);\n\n    position: fixed;\n    overflow: auto;\n\n    @media (min-width: $centerWidth) {\n        @include var(border-radius, border-radius);\n        position: relative;\n        margin: 0 auto;\n        max-width: $windowWidth;\n        height: auto;\n        width: auto;\n    }\n}\n"],sourceRoot:""}]);const c=a},278:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);r&&a[u[0]]||(void 0!==i&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=i),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),t.push(u))}},t}},4942:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},362:(e,t,n)=>{"use strict";var r=n(6441);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var c=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw c.name="Invariant Violation",c}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},2688:(e,t,n)=>{e.exports=n(362)()},6441:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},5292:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},a=[],c=0;c<e.length;c++){var s=e[c],l=r.base?s[0]+r.base:s[0],u=i[l]||0,p="".concat(l," ").concat(u);i[l]=u+1;var d=n(p),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)t[d].references++,t[d].updater(f);else{var m=o(f,r);r.byIndex=c,t.splice(c,0,{identifier:p,updater:m,references:1})}a.push(p)}return a}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var c=n(i[a]);t[c].references--}for(var s=r(e,o),l=0;l<i.length;l++){var u=n(i[l]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}i=s}}},9383:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},9088:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},6884:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},9893:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},7997:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},8120:(e,t,n)=>{"use strict";var r=n(1483),o=n(8761),i=TypeError;e.exports=function(e){if(r(e))return e;throw new i(o(e)+" is not a function")}},2374:(e,t,n)=>{"use strict";var r=n(943),o=n(8761),i=TypeError;e.exports=function(e){if(r(e))return e;throw new i(o(e)+" is not a constructor")}},3852:(e,t,n)=>{"use strict";var r=n(735),o=String,i=TypeError;e.exports=function(e){if(r(e))return e;throw new i("Can't set "+o(e)+" as a prototype")}},7095:(e,t,n)=>{"use strict";var r=n(1),o=n(5290),i=n(5835).f,a=r("unscopables"),c=Array.prototype;void 0===c[a]&&i(c,a,{configurable:!0,value:o(null)}),e.exports=function(e){c[a][e]=!0}},4419:(e,t,n)=>{"use strict";var r=n(9105).charAt;e.exports=function(e,t,n){return t+(n?r(e,t).length:1)}},6021:(e,t,n)=>{"use strict";var r=n(4815),o=TypeError;e.exports=function(e,t){if(r(t,e))return e;throw new o("Incorrect invocation")}},2293:(e,t,n)=>{"use strict";var r=n(1704),o=String,i=TypeError;e.exports=function(e){if(r(e))return e;throw new i(o(e)+" is not an object")}},9214:(e,t,n)=>{"use strict";var r=n(8473);e.exports=r((function(){if("function"==typeof ArrayBuffer){var e=new ArrayBuffer(8);Object.isExtensible(e)&&Object.defineProperty(e,"a",{value:8})}}))},4793:(e,t,n)=>{"use strict";var r=n(2867).forEach,o=n(3152)("forEach");e.exports=o?[].forEach:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}},6142:(e,t,n)=>{"use strict";var r=n(2914),o=n(1807),i=n(2347),a=n(8901),c=n(5299),s=n(943),l=n(6960),u=n(670),p=n(4887),d=n(6665),f=Array;e.exports=function(e){var t=i(e),n=s(this),m=arguments.length,v=m>1?arguments[1]:void 0,y=void 0!==v;y&&(v=r(v,m>2?arguments[2]:void 0));var h,A,b,g,k,_,C=d(t),w=0;if(!C||this===f&&c(C))for(h=l(t),A=n?new this(h):f(h);h>w;w++)_=y?v(t[w],w):t[w],u(A,w,_);else for(k=(g=p(t,C)).next,A=n?new this:[];!(b=o(k,g)).done;w++)_=y?a(g,v,[b.value,w],!0):b.value,u(A,w,_);return A.length=w,A}},6651:(e,t,n)=>{"use strict";var r=n(5599),o=n(3392),i=n(6960),a=function(e){return function(t,n,a){var c=r(t),s=i(c);if(0===s)return!e&&-1;var l,u=o(a,s);if(e&&n!=n){for(;s>u;)if((l=c[u++])!=l)return!0}else for(;s>u;u++)if((e||u in c)&&c[u]===n)return e||u||0;return!e&&-1}};e.exports={includes:a(!0),indexOf:a(!1)}},2867:(e,t,n)=>{"use strict";var r=n(2914),o=n(4762),i=n(2121),a=n(2347),c=n(6960),s=n(4551),l=o([].push),u=function(e){var t=1===e,n=2===e,o=3===e,u=4===e,p=6===e,d=7===e,f=5===e||p;return function(m,v,y,h){for(var A,b,g=a(m),k=i(g),_=c(k),C=r(v,y),w=0,x=h||s,S=t?x(m,_):n||d?x(m,0):void 0;_>w;w++)if((f||w in k)&&(b=C(A=k[w],w,g),e))if(t)S[w]=b;else if(b)switch(e){case 3:return!0;case 5:return A;case 6:return w;case 2:l(S,A)}else switch(e){case 4:return!1;case 7:l(S,A)}return p?-1:o||u?u:S}};e.exports={forEach:u(0),map:u(1),filter:u(2),some:u(3),every:u(4),find:u(5),findIndex:u(6),filterReject:u(7)}},4595:(e,t,n)=>{"use strict";var r=n(8473),o=n(1),i=n(6170),a=o("species");e.exports=function(e){return i>=51||!r((function(){var t=[];return(t.constructor={})[a]=function(){return{foo:1}},1!==t[e](Boolean).foo}))}},3152:(e,t,n)=>{"use strict";var r=n(8473);e.exports=function(e,t){var n=[][e];return!!n&&r((function(){n.call(null,t||function(){return 1},1)}))}},1698:(e,t,n)=>{"use strict";var r=n(4762);e.exports=r([].slice)},7354:(e,t,n)=>{"use strict";var r=n(1698),o=Math.floor,i=function(e,t){var n=e.length;if(n<8)for(var a,c,s=1;s<n;){for(c=s,a=e[s];c&&t(e[c-1],a)>0;)e[c]=e[--c];c!==s++&&(e[c]=a)}else for(var l=o(n/2),u=i(r(e,0,l),t),p=i(r(e,l),t),d=u.length,f=p.length,m=0,v=0;m<d||v<f;)e[m+v]=m<d&&v<f?t(u[m],p[v])<=0?u[m++]:p[v++]:m<d?u[m++]:p[v++];return e};e.exports=i},9703:(e,t,n)=>{"use strict";var r=n(4914),o=n(943),i=n(1704),a=n(1)("species"),c=Array;e.exports=function(e){var t;return r(e)&&(t=e.constructor,(o(t)&&(t===c||r(t.prototype))||i(t)&&null===(t=t[a]))&&(t=void 0)),void 0===t?c:t}},4551:(e,t,n)=>{"use strict";var r=n(9703);e.exports=function(e,t){return new(r(e))(0===t?0:t)}},8901:(e,t,n)=>{"use strict";var r=n(2293),o=n(6721);e.exports=function(e,t,n,i){try{return i?t(r(n)[0],n[1]):t(n)}catch(t){o(e,"throw",t)}}},1554:(e,t,n)=>{"use strict";var r=n(1)("iterator"),o=!1;try{var i=0,a={next:function(){return{done:!!i++}},return:function(){o=!0}};a[r]=function(){return this},Array.from(a,(function(){throw 2}))}catch(e){}e.exports=function(e,t){try{if(!t&&!o)return!1}catch(e){return!1}var n=!1;try{var i={};i[r]=function(){return{next:function(){return{done:n=!0}}}},e(i)}catch(e){}return n}},1278:(e,t,n)=>{"use strict";var r=n(4762),o=r({}.toString),i=r("".slice);e.exports=function(e){return i(o(e),8,-1)}},6145:(e,t,n)=>{"use strict";var r=n(4338),o=n(1483),i=n(1278),a=n(1)("toStringTag"),c=Object,s="Arguments"===i(function(){return arguments}());e.exports=r?i:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=c(e),a))?n:s?i(t):"Object"===(r=i(t))&&o(t.callee)?"Arguments":r}},4092:(e,t,n)=>{"use strict";var r=n(5290),o=n(3864),i=n(2313),a=n(2914),c=n(6021),s=n(5983),l=n(1506),u=n(5662),p=n(5247),d=n(240),f=n(382),m=n(8041).fastKey,v=n(4483),y=v.set,h=v.getterFor;e.exports={getConstructor:function(e,t,n,u){var p=e((function(e,o){c(e,d),y(e,{type:t,index:r(null),first:void 0,last:void 0,size:0}),f||(e.size=0),s(o)||l(o,e[u],{that:e,AS_ENTRIES:n})})),d=p.prototype,v=h(t),A=function(e,t,n){var r,o,i=v(e),a=b(e,t);return a?a.value=n:(i.last=a={index:o=m(t,!0),key:t,value:n,previous:r=i.last,next:void 0,removed:!1},i.first||(i.first=a),r&&(r.next=a),f?i.size++:e.size++,"F"!==o&&(i.index[o]=a)),e},b=function(e,t){var n,r=v(e),o=m(t);if("F"!==o)return r.index[o];for(n=r.first;n;n=n.next)if(n.key===t)return n};return i(d,{clear:function(){for(var e=v(this),t=e.first;t;)t.removed=!0,t.previous&&(t.previous=t.previous.next=void 0),t=t.next;e.first=e.last=void 0,e.index=r(null),f?e.size=0:this.size=0},delete:function(e){var t=this,n=v(t),r=b(t,e);if(r){var o=r.next,i=r.previous;delete n.index[r.index],r.removed=!0,i&&(i.next=o),o&&(o.previous=i),n.first===r&&(n.first=o),n.last===r&&(n.last=i),f?n.size--:t.size--}return!!r},forEach:function(e){for(var t,n=v(this),r=a(e,arguments.length>1?arguments[1]:void 0);t=t?t.next:n.first;)for(r(t.value,t.key,this);t&&t.removed;)t=t.previous},has:function(e){return!!b(this,e)}}),i(d,n?{get:function(e){var t=b(this,e);return t&&t.value},set:function(e,t){return A(this,0===e?0:e,t)}}:{add:function(e){return A(this,e=0===e?0:e,e)}}),f&&o(d,"size",{configurable:!0,get:function(){return v(this).size}}),p},setStrong:function(e,t,n){var r=t+" Iterator",o=h(t),i=h(r);u(e,t,(function(e,t){y(this,{type:r,target:e,state:o(e),kind:t,last:void 0})}),(function(){for(var e=i(this),t=e.kind,n=e.last;n&&n.removed;)n=n.previous;return e.target&&(e.last=n=n?n.next:e.state.first)?p("keys"===t?n.key:"values"===t?n.value:[n.key,n.value],!1):(e.target=void 0,p(void 0,!0))}),n?"entries":"values",!n,!0),d(t)}}},7446:(e,t,n)=>{"use strict";var r=n(8612),o=n(8389),i=n(4762),a=n(8730),c=n(7914),s=n(8041),l=n(1506),u=n(6021),p=n(1483),d=n(5983),f=n(1704),m=n(8473),v=n(1554),y=n(2277),h=n(2429);e.exports=function(e,t,n){var A=-1!==e.indexOf("Map"),b=-1!==e.indexOf("Weak"),g=A?"set":"add",k=o[e],_=k&&k.prototype,C=k,w={},x=function(e){var t=i(_[e]);c(_,e,"add"===e?function(e){return t(this,0===e?0:e),this}:"delete"===e?function(e){return!(b&&!f(e))&&t(this,0===e?0:e)}:"get"===e?function(e){return b&&!f(e)?void 0:t(this,0===e?0:e)}:"has"===e?function(e){return!(b&&!f(e))&&t(this,0===e?0:e)}:function(e,n){return t(this,0===e?0:e,n),this})};if(a(e,!p(k)||!(b||_.forEach&&!m((function(){(new k).entries().next()})))))C=n.getConstructor(t,e,A,g),s.enable();else if(a(e,!0)){var S=new C,j=S[g](b?{}:-0,1)!==S,O=m((function(){S.has(1)})),E=v((function(e){new k(e)})),P=!b&&m((function(){for(var e=new k,t=5;t--;)e[g](t,t);return!e.has(-0)}));E||((C=t((function(e,t){u(e,_);var n=h(new k,e,C);return d(t)||l(t,n[g],{that:n,AS_ENTRIES:A}),n}))).prototype=_,_.constructor=C),(O||P)&&(x("delete"),x("has"),A&&x("get")),(P||j)&&x(g),b&&_.clear&&delete _.clear}return w[e]=C,r({global:!0,constructor:!0,forced:C!==k},w),y(C,e),b||n.setStrong(C,e,A),C}},6726:(e,t,n)=>{"use strict";var r=n(5755),o=n(9497),i=n(4961),a=n(5835);e.exports=function(e,t,n){for(var c=o(t),s=a.f,l=i.f,u=0;u<c.length;u++){var p=c[u];r(e,p)||n&&r(n,p)||s(e,p,l(t,p))}}},4522:(e,t,n)=>{"use strict";var r=n(1)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[r]=!1,"/./"[e](t)}catch(e){}}return!1}},9441:(e,t,n)=>{"use strict";var r=n(8473);e.exports=!r((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},5247:e=>{"use strict";e.exports=function(e,t){return{value:e,done:t}}},9037:(e,t,n)=>{"use strict";var r=n(382),o=n(5835),i=n(7738);e.exports=r?function(e,t,n){return o.f(e,t,i(1,n))}:function(e,t,n){return e[t]=n,e}},7738:e=>{"use strict";e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},670:(e,t,n)=>{"use strict";var r=n(382),o=n(5835),i=n(7738);e.exports=function(e,t,n){r?o.f(e,t,i(0,n)):e[t]=n}},6446:(e,t,n)=>{"use strict";var r=n(2293),o=n(348),i=TypeError;e.exports=function(e){if(r(this),"string"===e||"default"===e)e="string";else if("number"!==e)throw new i("Incorrect hint");return o(this,e)}},3864:(e,t,n)=>{"use strict";var r=n(169),o=n(5835);e.exports=function(e,t,n){return n.get&&r(n.get,t,{getter:!0}),n.set&&r(n.set,t,{setter:!0}),o.f(e,t,n)}},7914:(e,t,n)=>{"use strict";var r=n(1483),o=n(5835),i=n(169),a=n(2095);e.exports=function(e,t,n,c){c||(c={});var s=c.enumerable,l=void 0!==c.name?c.name:t;if(r(n)&&i(n,l,c),c.global)s?e[t]=n:a(t,n);else{try{c.unsafe?e[t]&&(s=!0):delete e[t]}catch(e){}s?e[t]=n:o.f(e,t,{value:n,enumerable:!1,configurable:!c.nonConfigurable,writable:!c.nonWritable})}return e}},2313:(e,t,n)=>{"use strict";var r=n(7914);e.exports=function(e,t,n){for(var o in t)r(e,o,t[o],n);return e}},2095:(e,t,n)=>{"use strict";var r=n(8389),o=Object.defineProperty;e.exports=function(e,t){try{o(r,e,{value:t,configurable:!0,writable:!0})}catch(n){r[e]=t}return t}},6060:(e,t,n)=>{"use strict";var r=n(8761),o=TypeError;e.exports=function(e,t){if(!delete e[t])throw new o("Cannot delete property "+r(t)+" of "+r(e))}},382:(e,t,n)=>{"use strict";var r=n(8473);e.exports=!r((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},3145:(e,t,n)=>{"use strict";var r=n(8389),o=n(1704),i=r.document,a=o(i)&&o(i.createElement);e.exports=function(e){return a?i.createElement(e):{}}},1091:e=>{"use strict";var t=TypeError;e.exports=function(e){if(e>9007199254740991)throw t("Maximum allowed index exceeded");return e}},4842:e=>{"use strict";e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},1902:(e,t,n)=>{"use strict";var r=n(3145)("span").classList,o=r&&r.constructor&&r.constructor.prototype;e.exports=o===Object.prototype?void 0:o},7332:(e,t,n)=>{"use strict";var r=n(9966).match(/firefox\/(\d+)/i);e.exports=!!r&&+r[1]},6956:(e,t,n)=>{"use strict";var r=n(938),o=n(4334);e.exports=!r&&!o&&"object"==typeof window&&"object"==typeof document},5413:e=>{"use strict";e.exports="function"==typeof Bun&&Bun&&"string"==typeof Bun.version},938:e=>{"use strict";e.exports="object"==typeof Deno&&Deno&&"object"==typeof Deno.version},8996:(e,t,n)=>{"use strict";var r=n(9966);e.exports=/MSIE|Trident/.test(r)},4466:(e,t,n)=>{"use strict";var r=n(9966);e.exports=/ipad|iphone|ipod/i.test(r)&&"undefined"!=typeof Pebble},8417:(e,t,n)=>{"use strict";var r=n(9966);e.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(r)},4334:(e,t,n)=>{"use strict";var r=n(8389),o=n(1278);e.exports="process"===o(r.process)},6639:(e,t,n)=>{"use strict";var r=n(9966);e.exports=/web0s(?!.*chrome)/i.test(r)},9966:e=>{"use strict";e.exports="undefined"!=typeof navigator&&String(navigator.userAgent)||""},6170:(e,t,n)=>{"use strict";var r,o,i=n(8389),a=n(9966),c=i.process,s=i.Deno,l=c&&c.versions||s&&s.version,u=l&&l.v8;u&&(o=(r=u.split("."))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!o&&a&&(!(r=a.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=a.match(/Chrome\/(\d+)/))&&(o=+r[1]),e.exports=o},5158:(e,t,n)=>{"use strict";var r=n(9966).match(/AppleWebKit\/(\d+)\./);e.exports=!!r&&+r[1]},4741:e=>{"use strict";e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},8612:(e,t,n)=>{"use strict";var r=n(8389),o=n(4961).f,i=n(9037),a=n(7914),c=n(2095),s=n(6726),l=n(8730);e.exports=function(e,t){var n,u,p,d,f,m=e.target,v=e.global,y=e.stat;if(n=v?r:y?r[m]||c(m,{}):r[m]&&r[m].prototype)for(u in t){if(d=t[u],p=e.dontCallGetSet?(f=o(n,u))&&f.value:n[u],!l(v?u:m+(y?".":"#")+u,e.forced)&&void 0!==p){if(typeof d==typeof p)continue;s(d,p)}(e.sham||p&&p.sham)&&i(d,"sham",!0),a(n,u,d,e)}}},8473:e=>{"use strict";e.exports=function(e){try{return!!e()}catch(e){return!0}}},3358:(e,t,n)=>{"use strict";n(5021);var r=n(1807),o=n(7914),i=n(8865),a=n(8473),c=n(1),s=n(9037),l=c("species"),u=RegExp.prototype;e.exports=function(e,t,n,p){var d=c(e),f=!a((function(){var t={};return t[d]=function(){return 7},7!==""[e](t)})),m=f&&!a((function(){var t=!1,n=/a/;return"split"===e&&((n={}).constructor={},n.constructor[l]=function(){return n},n.flags="",n[d]=/./[d]),n.exec=function(){return t=!0,null},n[d](""),!t}));if(!f||!m||n){var v=/./[d],y=t(d,""[e],(function(e,t,n,o,a){var c=t.exec;return c===i||c===u.exec?f&&!a?{done:!0,value:r(v,t,n,o)}:{done:!0,value:r(e,n,t,o)}:{done:!1}}));o(String.prototype,e,y[0]),o(u,d,y[1])}p&&s(u[d],"sham",!0)}},6530:(e,t,n)=>{"use strict";var r=n(8473);e.exports=!r((function(){return Object.isExtensible(Object.preventExtensions({}))}))},3067:(e,t,n)=>{"use strict";var r=n(274),o=Function.prototype,i=o.apply,a=o.call;e.exports="object"==typeof Reflect&&Reflect.apply||(r?a.bind(i):function(){return a.apply(i,arguments)})},2914:(e,t,n)=>{"use strict";var r=n(3786),o=n(8120),i=n(274),a=r(r.bind);e.exports=function(e,t){return o(e),void 0===t?e:i?a(e,t):function(){return e.apply(t,arguments)}}},274:(e,t,n)=>{"use strict";var r=n(8473);e.exports=!r((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},2164:(e,t,n)=>{"use strict";var r=n(4762),o=n(8120),i=n(1704),a=n(5755),c=n(1698),s=n(274),l=Function,u=r([].concat),p=r([].join),d={};e.exports=s?l.bind:function(e){var t=o(this),n=t.prototype,r=c(arguments,1),s=function(){var n=u(r,c(arguments));return this instanceof s?function(e,t,n){if(!a(d,t)){for(var r=[],o=0;o<t;o++)r[o]="a["+o+"]";d[t]=l("C,a","return new C("+p(r,",")+")")}return d[t](e,n)}(t,n.length,n):t.apply(e,n)};return i(n)&&(s.prototype=n),s}},1807:(e,t,n)=>{"use strict";var r=n(274),o=Function.prototype.call;e.exports=r?o.bind(o):function(){return o.apply(o,arguments)}},2048:(e,t,n)=>{"use strict";var r=n(382),o=n(5755),i=Function.prototype,a=r&&Object.getOwnPropertyDescriptor,c=o(i,"name"),s=c&&"something"===function(){}.name,l=c&&(!r||r&&a(i,"name").configurable);e.exports={EXISTS:c,PROPER:s,CONFIGURABLE:l}},680:(e,t,n)=>{"use strict";var r=n(4762),o=n(8120);e.exports=function(e,t,n){try{return r(o(Object.getOwnPropertyDescriptor(e,t)[n]))}catch(e){}}},3786:(e,t,n)=>{"use strict";var r=n(1278),o=n(4762);e.exports=function(e){if("Function"===r(e))return o(e)}},4762:(e,t,n)=>{"use strict";var r=n(274),o=Function.prototype,i=o.call,a=r&&o.bind.bind(i,i);e.exports=r?a:function(e){return function(){return i.apply(e,arguments)}}},1409:(e,t,n)=>{"use strict";var r=n(8389),o=n(1483);e.exports=function(e,t){return arguments.length<2?(n=r[e],o(n)?n:void 0):r[e]&&r[e][t];var n}},6665:(e,t,n)=>{"use strict";var r=n(6145),o=n(2564),i=n(5983),a=n(6775),c=n(1)("iterator");e.exports=function(e){if(!i(e))return o(e,c)||o(e,"@@iterator")||a[r(e)]}},4887:(e,t,n)=>{"use strict";var r=n(1807),o=n(8120),i=n(2293),a=n(8761),c=n(6665),s=TypeError;e.exports=function(e,t){var n=arguments.length<2?c(e):t;if(o(n))return i(r(n,e));throw new s(a(e)+" is not iterable")}},5215:(e,t,n)=>{"use strict";var r=n(4762),o=n(4914),i=n(1483),a=n(1278),c=n(6261),s=r([].push);e.exports=function(e){if(i(e))return e;if(o(e)){for(var t=e.length,n=[],r=0;r<t;r++){var l=e[r];"string"==typeof l?s(n,l):"number"!=typeof l&&"Number"!==a(l)&&"String"!==a(l)||s(n,c(l))}var u=n.length,p=!0;return function(e,t){if(p)return p=!1,t;if(o(this))return t;for(var r=0;r<u;r++)if(n[r]===e)return t}}}},2564:(e,t,n)=>{"use strict";var r=n(8120),o=n(5983);e.exports=function(e,t){var n=e[t];return o(n)?void 0:r(n)}},708:(e,t,n)=>{"use strict";var r=n(4762),o=n(2347),i=Math.floor,a=r("".charAt),c=r("".replace),s=r("".slice),l=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,u=/\$([$&'`]|\d{1,2})/g;e.exports=function(e,t,n,r,p,d){var f=n+e.length,m=r.length,v=u;return void 0!==p&&(p=o(p),v=l),c(d,v,(function(o,c){var l;switch(a(c,0)){case"$":return"$";case"&":return e;case"`":return s(t,0,n);case"'":return s(t,f);case"<":l=p[s(c,1,-1)];break;default:var u=+c;if(0===u)return o;if(u>m){var d=i(u/10);return 0===d?o:d<=m?void 0===r[d-1]?a(c,1):r[d-1]+a(c,1):o}l=r[u-1]}return void 0===l?"":l}))}},8389:function(e,t,n){"use strict";var r=function(e){return e&&e.Math===Math&&e};e.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof n.g&&n.g)||r("object"==typeof this&&this)||function(){return this}()||Function("return this")()},5755:(e,t,n)=>{"use strict";var r=n(4762),o=n(2347),i=r({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,t){return i(o(e),t)}},1507:e=>{"use strict";e.exports={}},1339:e=>{"use strict";e.exports=function(e,t){try{1===arguments.length?console.error(e):console.error(e,t)}catch(e){}}},2811:(e,t,n)=>{"use strict";var r=n(1409);e.exports=r("document","documentElement")},1799:(e,t,n)=>{"use strict";var r=n(382),o=n(8473),i=n(3145);e.exports=!r&&!o((function(){return 7!==Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},2121:(e,t,n)=>{"use strict";var r=n(4762),o=n(8473),i=n(1278),a=Object,c=r("".split);e.exports=o((function(){return!a("z").propertyIsEnumerable(0)}))?function(e){return"String"===i(e)?c(e,""):a(e)}:a},2429:(e,t,n)=>{"use strict";var r=n(1483),o=n(1704),i=n(1953);e.exports=function(e,t,n){var a,c;return i&&r(a=t.constructor)&&a!==n&&o(c=a.prototype)&&c!==n.prototype&&i(e,c),e}},7268:(e,t,n)=>{"use strict";var r=n(4762),o=n(1483),i=n(1831),a=r(Function.toString);o(i.inspectSource)||(i.inspectSource=function(e){return a(e)}),e.exports=i.inspectSource},8041:(e,t,n)=>{"use strict";var r=n(8612),o=n(4762),i=n(1507),a=n(1704),c=n(5755),s=n(5835).f,l=n(2278),u=n(2020),p=n(706),d=n(1866),f=n(6530),m=!1,v=d("meta"),y=0,h=function(e){s(e,v,{value:{objectID:"O"+y++,weakData:{}}})},A=e.exports={enable:function(){A.enable=function(){},m=!0;var e=l.f,t=o([].splice),n={};n[v]=1,e(n).length&&(l.f=function(n){for(var r=e(n),o=0,i=r.length;o<i;o++)if(r[o]===v){t(r,o,1);break}return r},r({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:u.f}))},fastKey:function(e,t){if(!a(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!c(e,v)){if(!p(e))return"F";if(!t)return"E";h(e)}return e[v].objectID},getWeakData:function(e,t){if(!c(e,v)){if(!p(e))return!0;if(!t)return!1;h(e)}return e[v].weakData},onFreeze:function(e){return f&&m&&p(e)&&!c(e,v)&&h(e),e}};i[v]=!0},4483:(e,t,n)=>{"use strict";var r,o,i,a=n(4644),c=n(8389),s=n(1704),l=n(9037),u=n(5755),p=n(1831),d=n(5409),f=n(1507),m="Object already initialized",v=c.TypeError,y=c.WeakMap;if(a||p.state){var h=p.state||(p.state=new y);h.get=h.get,h.has=h.has,h.set=h.set,r=function(e,t){if(h.has(e))throw new v(m);return t.facade=e,h.set(e,t),t},o=function(e){return h.get(e)||{}},i=function(e){return h.has(e)}}else{var A=d("state");f[A]=!0,r=function(e,t){if(u(e,A))throw new v(m);return t.facade=e,l(e,A,t),t},o=function(e){return u(e,A)?e[A]:{}},i=function(e){return u(e,A)}}e.exports={set:r,get:o,has:i,enforce:function(e){return i(e)?o(e):r(e,{})},getterFor:function(e){return function(t){var n;if(!s(t)||(n=o(t)).type!==e)throw new v("Incompatible receiver, "+e+" required");return n}}}},5299:(e,t,n)=>{"use strict";var r=n(1),o=n(6775),i=r("iterator"),a=Array.prototype;e.exports=function(e){return void 0!==e&&(o.Array===e||a[i]===e)}},4914:(e,t,n)=>{"use strict";var r=n(1278);e.exports=Array.isArray||function(e){return"Array"===r(e)}},1483:e=>{"use strict";var t="object"==typeof document&&document.all;e.exports=void 0===t&&void 0!==t?function(e){return"function"==typeof e||e===t}:function(e){return"function"==typeof e}},943:(e,t,n)=>{"use strict";var r=n(4762),o=n(8473),i=n(1483),a=n(6145),c=n(1409),s=n(7268),l=function(){},u=c("Reflect","construct"),p=/^\s*(?:class|function)\b/,d=r(p.exec),f=!p.test(l),m=function(e){if(!i(e))return!1;try{return u(l,[],e),!0}catch(e){return!1}},v=function(e){if(!i(e))return!1;switch(a(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return f||!!d(p,s(e))}catch(e){return!0}};v.sham=!0,e.exports=!u||o((function(){var e;return m(m.call)||!m(Object)||!m((function(){e=!0}))||e}))?v:m},8730:(e,t,n)=>{"use strict";var r=n(8473),o=n(1483),i=/#|\.prototype\./,a=function(e,t){var n=s[c(e)];return n===u||n!==l&&(o(t)?r(t):!!t)},c=a.normalize=function(e){return String(e).replace(i,".").toLowerCase()},s=a.data={},l=a.NATIVE="N",u=a.POLYFILL="P";e.exports=a},5983:e=>{"use strict";e.exports=function(e){return null==e}},1704:(e,t,n)=>{"use strict";var r=n(1483);e.exports=function(e){return"object"==typeof e?null!==e:r(e)}},735:(e,t,n)=>{"use strict";var r=n(1704);e.exports=function(e){return r(e)||null===e}},9557:e=>{"use strict";e.exports=!1},4786:(e,t,n)=>{"use strict";var r=n(1704),o=n(1278),i=n(1)("match");e.exports=function(e){var t;return r(e)&&(void 0!==(t=e[i])?!!t:"RegExp"===o(e))}},1423:(e,t,n)=>{"use strict";var r=n(1409),o=n(1483),i=n(4815),a=n(5022),c=Object;e.exports=a?function(e){return"symbol"==typeof e}:function(e){var t=r("Symbol");return o(t)&&i(t.prototype,c(e))}},1506:(e,t,n)=>{"use strict";var r=n(2914),o=n(1807),i=n(2293),a=n(8761),c=n(5299),s=n(6960),l=n(4815),u=n(4887),p=n(6665),d=n(6721),f=TypeError,m=function(e,t){this.stopped=e,this.result=t},v=m.prototype;e.exports=function(e,t,n){var y,h,A,b,g,k,_,C=n&&n.that,w=!(!n||!n.AS_ENTRIES),x=!(!n||!n.IS_RECORD),S=!(!n||!n.IS_ITERATOR),j=!(!n||!n.INTERRUPTED),O=r(t,C),E=function(e){return y&&d(y,"normal",e),new m(!0,e)},P=function(e){return w?(i(e),j?O(e[0],e[1],E):O(e[0],e[1])):j?O(e,E):O(e)};if(x)y=e.iterator;else if(S)y=e;else{if(!(h=p(e)))throw new f(a(e)+" is not iterable");if(c(h)){for(A=0,b=s(e);b>A;A++)if((g=P(e[A]))&&l(v,g))return g;return new m(!1)}y=u(e,h)}for(k=x?e.next:y.next;!(_=o(k,y)).done;){try{g=P(_.value)}catch(e){d(y,"throw",e)}if("object"==typeof g&&g&&l(v,g))return g}return new m(!1)}},6721:(e,t,n)=>{"use strict";var r=n(1807),o=n(2293),i=n(2564);e.exports=function(e,t,n){var a,c;o(e);try{if(!(a=i(e,"return"))){if("throw"===t)throw n;return n}a=r(a,e)}catch(e){c=!0,a=e}if("throw"===t)throw n;if(c)throw a;return o(a),n}},1040:(e,t,n)=>{"use strict";var r=n(1851).IteratorPrototype,o=n(5290),i=n(7738),a=n(2277),c=n(6775),s=function(){return this};e.exports=function(e,t,n,l){var u=t+" Iterator";return e.prototype=o(r,{next:i(+!l,n)}),a(e,u,!1,!0),c[u]=s,e}},5662:(e,t,n)=>{"use strict";var r=n(8612),o=n(1807),i=n(9557),a=n(2048),c=n(1483),s=n(1040),l=n(3181),u=n(1953),p=n(2277),d=n(9037),f=n(7914),m=n(1),v=n(6775),y=n(1851),h=a.PROPER,A=a.CONFIGURABLE,b=y.IteratorPrototype,g=y.BUGGY_SAFARI_ITERATORS,k=m("iterator"),_="keys",C="values",w="entries",x=function(){return this};e.exports=function(e,t,n,a,m,y,S){s(n,t,a);var j,O,E,P=function(e){if(e===m&&T)return T;if(!g&&e&&e in D)return D[e];switch(e){case _:case C:case w:return function(){return new n(this,e)}}return function(){return new n(this)}},z=t+" Iterator",I=!1,D=e.prototype,B=D[k]||D["@@iterator"]||m&&D[m],T=!g&&B||P(m),N="Array"===t&&D.entries||B;if(N&&(j=l(N.call(new e)))!==Object.prototype&&j.next&&(i||l(j)===b||(u?u(j,b):c(j[k])||f(j,k,x)),p(j,z,!0,!0),i&&(v[z]=x)),h&&m===C&&B&&B.name!==C&&(!i&&A?d(D,"name",C):(I=!0,T=function(){return o(B,this)})),m)if(O={values:P(C),keys:y?T:P(_),entries:P(w)},S)for(E in O)(g||I||!(E in D))&&f(D,E,O[E]);else r({target:t,proto:!0,forced:g||I},O);return i&&!S||D[k]===T||f(D,k,T,{name:m}),v[t]=T,O}},1851:(e,t,n)=>{"use strict";var r,o,i,a=n(8473),c=n(1483),s=n(1704),l=n(5290),u=n(3181),p=n(7914),d=n(1),f=n(9557),m=d("iterator"),v=!1;[].keys&&("next"in(i=[].keys())?(o=u(u(i)))!==Object.prototype&&(r=o):v=!0),!s(r)||a((function(){var e={};return r[m].call(e)!==e}))?r={}:f&&(r=l(r)),c(r[m])||p(r,m,(function(){return this})),e.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:v}},6775:e=>{"use strict";e.exports={}},6960:(e,t,n)=>{"use strict";var r=n(8324);e.exports=function(e){return r(e.length)}},169:(e,t,n)=>{"use strict";var r=n(4762),o=n(8473),i=n(1483),a=n(5755),c=n(382),s=n(2048).CONFIGURABLE,l=n(7268),u=n(4483),p=u.enforce,d=u.get,f=String,m=Object.defineProperty,v=r("".slice),y=r("".replace),h=r([].join),A=c&&!o((function(){return 8!==m((function(){}),"length",{value:8}).length})),b=String(String).split("String"),g=e.exports=function(e,t,n){"Symbol("===v(f(t),0,7)&&(t="["+y(f(t),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),n&&n.getter&&(t="get "+t),n&&n.setter&&(t="set "+t),(!a(e,"name")||s&&e.name!==t)&&(c?m(e,"name",{value:t,configurable:!0}):e.name=t),A&&n&&a(n,"arity")&&e.length!==n.arity&&m(e,"length",{value:n.arity});try{n&&a(n,"constructor")&&n.constructor?c&&m(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(e){}var r=p(e);return a(r,"source")||(r.source=h(b,"string"==typeof t?t:"")),e};Function.prototype.toString=g((function(){return i(this)&&d(this).source||l(this)}),"toString")},1703:e=>{"use strict";var t=Math.ceil,n=Math.floor;e.exports=Math.trunc||function(e){var r=+e;return(r>0?n:t)(r)}},553:(e,t,n)=>{"use strict";var r,o,i,a,c,s=n(8389),l=n(8123),u=n(2914),p=n(7007).set,d=n(5459),f=n(8417),m=n(4466),v=n(6639),y=n(4334),h=s.MutationObserver||s.WebKitMutationObserver,A=s.document,b=s.process,g=s.Promise,k=l("queueMicrotask");if(!k){var _=new d,C=function(){var e,t;for(y&&(e=b.domain)&&e.exit();t=_.get();)try{t()}catch(e){throw _.head&&r(),e}e&&e.enter()};f||y||v||!h||!A?!m&&g&&g.resolve?((a=g.resolve(void 0)).constructor=g,c=u(a.then,a),r=function(){c(C)}):y?r=function(){b.nextTick(C)}:(p=u(p,s),r=function(){p(C)}):(o=!0,i=A.createTextNode(""),new h(C).observe(i,{characterData:!0}),r=function(){i.data=o=!o}),k=function(e){_.head||r(),_.add(e)}}e.exports=k},1173:(e,t,n)=>{"use strict";var r=n(8120),o=TypeError,i=function(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw new o("Bad Promise constructor");t=e,n=r})),this.resolve=r(t),this.reject=r(n)};e.exports.f=function(e){return new i(e)}},4989:(e,t,n)=>{"use strict";var r=n(4786),o=TypeError;e.exports=function(e){if(r(e))throw new o("The method doesn't accept regular expressions");return e}},1439:(e,t,n)=>{"use strict";var r=n(382),o=n(4762),i=n(1807),a=n(8473),c=n(3658),s=n(4347),l=n(7611),u=n(2347),p=n(2121),d=Object.assign,f=Object.defineProperty,m=o([].concat);e.exports=!d||a((function(){if(r&&1!==d({b:1},d(f({},"a",{enumerable:!0,get:function(){f(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},n=Symbol("assign detection"),o="abcdefghijklmnopqrst";return e[n]=7,o.split("").forEach((function(e){t[e]=e})),7!==d({},e)[n]||c(d({},t)).join("")!==o}))?function(e,t){for(var n=u(e),o=arguments.length,a=1,d=s.f,f=l.f;o>a;)for(var v,y=p(arguments[a++]),h=d?m(c(y),d(y)):c(y),A=h.length,b=0;A>b;)v=h[b++],r&&!i(f,y,v)||(n[v]=y[v]);return n}:d},5290:(e,t,n)=>{"use strict";var r,o=n(2293),i=n(5799),a=n(4741),c=n(1507),s=n(2811),l=n(3145),u=n(5409),p="prototype",d="script",f=u("IE_PROTO"),m=function(){},v=function(e){return"<"+d+">"+e+"</"+d+">"},y=function(e){e.write(v("")),e.close();var t=e.parentWindow.Object;return e=null,t},h=function(){try{r=new ActiveXObject("htmlfile")}catch(e){}var e,t,n;h="undefined"!=typeof document?document.domain&&r?y(r):(t=l("iframe"),n="java"+d+":",t.style.display="none",s.appendChild(t),t.src=String(n),(e=t.contentWindow.document).open(),e.write(v("document.F=Object")),e.close(),e.F):y(r);for(var o=a.length;o--;)delete h[p][a[o]];return h()};c[f]=!0,e.exports=Object.create||function(e,t){var n;return null!==e?(m[p]=o(e),n=new m,m[p]=null,n[f]=e):n=h(),void 0===t?n:i.f(n,t)}},5799:(e,t,n)=>{"use strict";var r=n(382),o=n(3896),i=n(5835),a=n(2293),c=n(5599),s=n(3658);t.f=r&&!o?Object.defineProperties:function(e,t){a(e);for(var n,r=c(t),o=s(t),l=o.length,u=0;l>u;)i.f(e,n=o[u++],r[n]);return e}},5835:(e,t,n)=>{"use strict";var r=n(382),o=n(1799),i=n(3896),a=n(2293),c=n(3815),s=TypeError,l=Object.defineProperty,u=Object.getOwnPropertyDescriptor,p="enumerable",d="configurable",f="writable";t.f=r?i?function(e,t,n){if(a(e),t=c(t),a(n),"function"==typeof e&&"prototype"===t&&"value"in n&&f in n&&!n[f]){var r=u(e,t);r&&r[f]&&(e[t]=n.value,n={configurable:d in n?n[d]:r[d],enumerable:p in n?n[p]:r[p],writable:!1})}return l(e,t,n)}:l:function(e,t,n){if(a(e),t=c(t),a(n),o)try{return l(e,t,n)}catch(e){}if("get"in n||"set"in n)throw new s("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},4961:(e,t,n)=>{"use strict";var r=n(382),o=n(1807),i=n(7611),a=n(7738),c=n(5599),s=n(3815),l=n(5755),u=n(1799),p=Object.getOwnPropertyDescriptor;t.f=r?p:function(e,t){if(e=c(e),t=s(t),u)try{return p(e,t)}catch(e){}if(l(e,t))return a(!o(i.f,e,t),e[t])}},2020:(e,t,n)=>{"use strict";var r=n(1278),o=n(5599),i=n(2278).f,a=n(1698),c="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return c&&"Window"===r(e)?function(e){try{return i(e)}catch(e){return a(c)}}(e):i(o(e))}},2278:(e,t,n)=>{"use strict";var r=n(6742),o=n(4741).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,o)}},4347:(e,t)=>{"use strict";t.f=Object.getOwnPropertySymbols},3181:(e,t,n)=>{"use strict";var r=n(5755),o=n(1483),i=n(2347),a=n(5409),c=n(9441),s=a("IE_PROTO"),l=Object,u=l.prototype;e.exports=c?l.getPrototypeOf:function(e){var t=i(e);if(r(t,s))return t[s];var n=t.constructor;return o(n)&&t instanceof n?n.prototype:t instanceof l?u:null}},706:(e,t,n)=>{"use strict";var r=n(8473),o=n(1704),i=n(1278),a=n(9214),c=Object.isExtensible,s=r((function(){c(1)}));e.exports=s||a?function(e){return!!o(e)&&(!a||"ArrayBuffer"!==i(e))&&(!c||c(e))}:c},4815:(e,t,n)=>{"use strict";var r=n(4762);e.exports=r({}.isPrototypeOf)},6742:(e,t,n)=>{"use strict";var r=n(4762),o=n(5755),i=n(5599),a=n(6651).indexOf,c=n(1507),s=r([].push);e.exports=function(e,t){var n,r=i(e),l=0,u=[];for(n in r)!o(c,n)&&o(r,n)&&s(u,n);for(;t.length>l;)o(r,n=t[l++])&&(~a(u,n)||s(u,n));return u}},3658:(e,t,n)=>{"use strict";var r=n(6742),o=n(4741);e.exports=Object.keys||function(e){return r(e,o)}},7611:(e,t)=>{"use strict";var n={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,o=r&&!n.call({1:2},1);t.f=o?function(e){var t=r(this,e);return!!t&&t.enumerable}:n},1953:(e,t,n)=>{"use strict";var r=n(680),o=n(2293),i=n(3852);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=r(Object.prototype,"__proto__","set"))(n,[]),t=n instanceof Array}catch(e){}return function(n,r){return o(n),i(r),t?e(n,r):n.__proto__=r,n}}():void 0)},5627:(e,t,n)=>{"use strict";var r=n(382),o=n(8473),i=n(4762),a=n(3181),c=n(3658),s=n(5599),l=i(n(7611).f),u=i([].push),p=r&&o((function(){var e=Object.create(null);return e[2]=2,!l(e,2)})),d=function(e){return function(t){for(var n,o=s(t),i=c(o),d=p&&null===a(o),f=i.length,m=0,v=[];f>m;)n=i[m++],r&&!(d?n in o:l(o,n))||u(v,e?[n,o[n]]:o[n]);return v}};e.exports={entries:d(!0),values:d(!1)}},5685:(e,t,n)=>{"use strict";var r=n(4338),o=n(6145);e.exports=r?{}.toString:function(){return"[object "+o(this)+"]"}},348:(e,t,n)=>{"use strict";var r=n(1807),o=n(1483),i=n(1704),a=TypeError;e.exports=function(e,t){var n,c;if("string"===t&&o(n=e.toString)&&!i(c=r(n,e)))return c;if(o(n=e.valueOf)&&!i(c=r(n,e)))return c;if("string"!==t&&o(n=e.toString)&&!i(c=r(n,e)))return c;throw new a("Can't convert object to primitive value")}},9497:(e,t,n)=>{"use strict";var r=n(1409),o=n(4762),i=n(2278),a=n(4347),c=n(2293),s=o([].concat);e.exports=r("Reflect","ownKeys")||function(e){var t=i.f(c(e)),n=a.f;return n?s(t,n(e)):t}},6589:(e,t,n)=>{"use strict";var r=n(8389);e.exports=r},4193:e=>{"use strict";e.exports=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}}},5502:(e,t,n)=>{"use strict";var r=n(8389),o=n(2832),i=n(1483),a=n(8730),c=n(7268),s=n(1),l=n(6956),u=n(938),p=n(9557),d=n(6170),f=o&&o.prototype,m=s("species"),v=!1,y=i(r.PromiseRejectionEvent),h=a("Promise",(function(){var e=c(o),t=e!==String(o);if(!t&&66===d)return!0;if(p&&(!f.catch||!f.finally))return!0;if(!d||d<51||!/native code/.test(e)){var n=new o((function(e){e(1)})),r=function(e){e((function(){}),(function(){}))};if((n.constructor={})[m]=r,!(v=n.then((function(){}))instanceof r))return!0}return!t&&(l||u)&&!y}));e.exports={CONSTRUCTOR:h,REJECTION_EVENT:y,SUBCLASSING:v}},2832:(e,t,n)=>{"use strict";var r=n(8389);e.exports=r.Promise},2172:(e,t,n)=>{"use strict";var r=n(2293),o=n(1704),i=n(1173);e.exports=function(e,t){if(r(e),o(t)&&t.constructor===e)return t;var n=i.f(e);return(0,n.resolve)(t),n.promise}},1407:(e,t,n)=>{"use strict";var r=n(2832),o=n(1554),i=n(5502).CONSTRUCTOR;e.exports=i||!o((function(e){r.all(e).then(void 0,(function(){}))}))},7150:(e,t,n)=>{"use strict";var r=n(5835).f;e.exports=function(e,t,n){n in e||r(e,n,{configurable:!0,get:function(){return t[n]},set:function(e){t[n]=e}})}},5459:e=>{"use strict";var t=function(){this.head=null,this.tail=null};t.prototype={add:function(e){var t={item:e,next:null},n=this.tail;n?n.next=t:this.head=t,this.tail=t},get:function(){var e=this.head;if(e)return null===(this.head=e.next)&&(this.tail=null),e.item}},e.exports=t},2428:(e,t,n)=>{"use strict";var r=n(1807),o=n(2293),i=n(1483),a=n(1278),c=n(8865),s=TypeError;e.exports=function(e,t){var n=e.exec;if(i(n)){var l=r(n,e,t);return null!==l&&o(l),l}if("RegExp"===a(e))return r(c,e,t);throw new s("RegExp#exec called on incompatible receiver")}},8865:(e,t,n)=>{"use strict";var r,o,i=n(1807),a=n(4762),c=n(6261),s=n(6653),l=n(7435),u=n(7255),p=n(5290),d=n(4483).get,f=n(3933),m=n(4528),v=u("native-string-replace",String.prototype.replace),y=RegExp.prototype.exec,h=y,A=a("".charAt),b=a("".indexOf),g=a("".replace),k=a("".slice),_=(o=/b*/g,i(y,r=/a/,"a"),i(y,o,"a"),0!==r.lastIndex||0!==o.lastIndex),C=l.BROKEN_CARET,w=void 0!==/()??/.exec("")[1];(_||w||C||f||m)&&(h=function(e){var t,n,r,o,a,l,u,f=this,m=d(f),x=c(e),S=m.raw;if(S)return S.lastIndex=f.lastIndex,t=i(h,S,x),f.lastIndex=S.lastIndex,t;var j=m.groups,O=C&&f.sticky,E=i(s,f),P=f.source,z=0,I=x;if(O&&(E=g(E,"y",""),-1===b(E,"g")&&(E+="g"),I=k(x,f.lastIndex),f.lastIndex>0&&(!f.multiline||f.multiline&&"\n"!==A(x,f.lastIndex-1))&&(P="(?: "+P+")",I=" "+I,z++),n=new RegExp("^(?:"+P+")",E)),w&&(n=new RegExp("^"+P+"$(?!\\s)",E)),_&&(r=f.lastIndex),o=i(y,O?n:f,I),O?o?(o.input=k(o.input,z),o[0]=k(o[0],z),o.index=f.lastIndex,f.lastIndex+=o[0].length):f.lastIndex=0:_&&o&&(f.lastIndex=f.global?o.index+o[0].length:r),w&&o&&o.length>1&&i(v,o[0],n,(function(){for(a=1;a<arguments.length-2;a++)void 0===arguments[a]&&(o[a]=void 0)})),o&&j)for(o.groups=l=p(null),a=0;a<j.length;a++)l[(u=j[a])[0]]=o[u[1]];return o}),e.exports=h},6653:(e,t,n)=>{"use strict";var r=n(2293);e.exports=function(){var e=r(this),t="";return e.hasIndices&&(t+="d"),e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.unicodeSets&&(t+="v"),e.sticky&&(t+="y"),t}},9736:(e,t,n)=>{"use strict";var r=n(1807),o=n(5755),i=n(4815),a=n(6653),c=RegExp.prototype;e.exports=function(e){var t=e.flags;return void 0!==t||"flags"in c||o(e,"flags")||!i(c,e)?t:r(a,e)}},7435:(e,t,n)=>{"use strict";var r=n(8473),o=n(8389).RegExp,i=r((function(){var e=o("a","y");return e.lastIndex=2,null!==e.exec("abcd")})),a=i||r((function(){return!o("a","y").sticky})),c=i||r((function(){var e=o("^r","gy");return e.lastIndex=2,null!==e.exec("str")}));e.exports={BROKEN_CARET:c,MISSED_STICKY:a,UNSUPPORTED_Y:i}},3933:(e,t,n)=>{"use strict";var r=n(8473),o=n(8389).RegExp;e.exports=r((function(){var e=o(".","s");return!(e.dotAll&&e.test("\n")&&"s"===e.flags)}))},4528:(e,t,n)=>{"use strict";var r=n(8473),o=n(8389).RegExp;e.exports=r((function(){var e=o("(?<a>b)","g");return"b"!==e.exec("b").groups.a||"bc"!=="b".replace(e,"$<a>c")}))},3312:(e,t,n)=>{"use strict";var r=n(5983),o=TypeError;e.exports=function(e){if(r(e))throw new o("Can't call method on "+e);return e}},8123:(e,t,n)=>{"use strict";var r=n(8389),o=n(382),i=Object.getOwnPropertyDescriptor;e.exports=function(e){if(!o)return r[e];var t=i(r,e);return t&&t.value}},9570:(e,t,n)=>{"use strict";var r,o=n(8389),i=n(3067),a=n(1483),c=n(5413),s=n(9966),l=n(1698),u=n(4066),p=o.Function,d=/MSIE .\./.test(s)||c&&((r=o.Bun.version.split(".")).length<3||"0"===r[0]&&(r[1]<3||"3"===r[1]&&"0"===r[2]));e.exports=function(e,t){var n=t?2:1;return d?function(r,o){var c=u(arguments.length,1)>n,s=a(r)?r:p(r),d=c?l(arguments,n):[],f=c?function(){i(s,this,d)}:s;return t?e(f,o):e(f)}:e}},240:(e,t,n)=>{"use strict";var r=n(1409),o=n(3864),i=n(1),a=n(382),c=i("species");e.exports=function(e){var t=r(e);a&&t&&!t[c]&&o(t,c,{configurable:!0,get:function(){return this}})}},2277:(e,t,n)=>{"use strict";var r=n(5835).f,o=n(5755),i=n(1)("toStringTag");e.exports=function(e,t,n){e&&!n&&(e=e.prototype),e&&!o(e,i)&&r(e,i,{configurable:!0,value:t})}},5409:(e,t,n)=>{"use strict";var r=n(7255),o=n(1866),i=r("keys");e.exports=function(e){return i[e]||(i[e]=o(e))}},1831:(e,t,n)=>{"use strict";var r=n(9557),o=n(8389),i=n(2095),a="__core-js_shared__",c=e.exports=o[a]||i(a,{});(c.versions||(c.versions=[])).push({version:"3.36.0",mode:r?"pure":"global",copyright:"© 2014-2024 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.36.0/LICENSE",source:"https://github.com/zloirock/core-js"})},7255:(e,t,n)=>{"use strict";var r=n(1831);e.exports=function(e,t){return r[e]||(r[e]=t||{})}},483:(e,t,n)=>{"use strict";var r=n(2293),o=n(2374),i=n(5983),a=n(1)("species");e.exports=function(e,t){var n,c=r(e).constructor;return void 0===c||i(n=r(c)[a])?t:o(n)}},9105:(e,t,n)=>{"use strict";var r=n(4762),o=n(3005),i=n(6261),a=n(3312),c=r("".charAt),s=r("".charCodeAt),l=r("".slice),u=function(e){return function(t,n){var r,u,p=i(a(t)),d=o(n),f=p.length;return d<0||d>=f?e?"":void 0:(r=s(p,d))<55296||r>56319||d+1===f||(u=s(p,d+1))<56320||u>57343?e?c(p,d):r:e?l(p,d,d+2):u-56320+(r-55296<<10)+65536}};e.exports={codeAt:u(!1),charAt:u(!0)}},4544:(e,t,n)=>{"use strict";var r=n(4762),o=n(3312),i=n(6261),a=n(5870),c=r("".replace),s=RegExp("^["+a+"]+"),l=RegExp("(^|[^"+a+"])["+a+"]+$"),u=function(e){return function(t){var n=i(o(t));return 1&e&&(n=c(n,s,"")),2&e&&(n=c(n,l,"$1")),n}};e.exports={start:u(1),end:u(2),trim:u(3)}},6029:(e,t,n)=>{"use strict";var r=n(6170),o=n(8473),i=n(8389).String;e.exports=!!Object.getOwnPropertySymbols&&!o((function(){var e=Symbol("symbol detection");return!i(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},8192:(e,t,n)=>{"use strict";var r=n(1807),o=n(1409),i=n(1),a=n(7914);e.exports=function(){var e=o("Symbol"),t=e&&e.prototype,n=t&&t.valueOf,c=i("toPrimitive");t&&!t[c]&&a(t,c,(function(e){return r(n,this)}),{arity:1})}},3218:(e,t,n)=>{"use strict";var r=n(6029);e.exports=r&&!!Symbol.for&&!!Symbol.keyFor},7007:(e,t,n)=>{"use strict";var r,o,i,a,c=n(8389),s=n(3067),l=n(2914),u=n(1483),p=n(5755),d=n(8473),f=n(2811),m=n(1698),v=n(3145),y=n(4066),h=n(8417),A=n(4334),b=c.setImmediate,g=c.clearImmediate,k=c.process,_=c.Dispatch,C=c.Function,w=c.MessageChannel,x=c.String,S=0,j={},O="onreadystatechange";d((function(){r=c.location}));var E=function(e){if(p(j,e)){var t=j[e];delete j[e],t()}},P=function(e){return function(){E(e)}},z=function(e){E(e.data)},I=function(e){c.postMessage(x(e),r.protocol+"//"+r.host)};b&&g||(b=function(e){y(arguments.length,1);var t=u(e)?e:C(e),n=m(arguments,1);return j[++S]=function(){s(t,void 0,n)},o(S),S},g=function(e){delete j[e]},A?o=function(e){k.nextTick(P(e))}:_&&_.now?o=function(e){_.now(P(e))}:w&&!h?(a=(i=new w).port2,i.port1.onmessage=z,o=l(a.postMessage,a)):c.addEventListener&&u(c.postMessage)&&!c.importScripts&&r&&"file:"!==r.protocol&&!d(I)?(o=I,c.addEventListener("message",z,!1)):o=O in v("script")?function(e){f.appendChild(v("script"))[O]=function(){f.removeChild(this),E(e)}}:function(e){setTimeout(P(e),0)}),e.exports={set:b,clear:g}},2430:(e,t,n)=>{"use strict";var r=n(4762);e.exports=r(1..valueOf)},3392:(e,t,n)=>{"use strict";var r=n(3005),o=Math.max,i=Math.min;e.exports=function(e,t){var n=r(e);return n<0?o(n+t,0):i(n,t)}},5599:(e,t,n)=>{"use strict";var r=n(2121),o=n(3312);e.exports=function(e){return r(o(e))}},3005:(e,t,n)=>{"use strict";var r=n(1703);e.exports=function(e){var t=+e;return t!=t||0===t?0:r(t)}},8324:(e,t,n)=>{"use strict";var r=n(3005),o=Math.min;e.exports=function(e){var t=r(e);return t>0?o(t,9007199254740991):0}},2347:(e,t,n)=>{"use strict";var r=n(3312),o=Object;e.exports=function(e){return o(r(e))}},2355:(e,t,n)=>{"use strict";var r=n(1807),o=n(1704),i=n(1423),a=n(2564),c=n(348),s=n(1),l=TypeError,u=s("toPrimitive");e.exports=function(e,t){if(!o(e)||i(e))return e;var n,s=a(e,u);if(s){if(void 0===t&&(t="default"),n=r(s,e,t),!o(n)||i(n))return n;throw new l("Can't convert object to primitive value")}return void 0===t&&(t="number"),c(e,t)}},3815:(e,t,n)=>{"use strict";var r=n(2355),o=n(1423);e.exports=function(e){var t=r(e,"string");return o(t)?t:t+""}},4338:(e,t,n)=>{"use strict";var r={};r[n(1)("toStringTag")]="z",e.exports="[object z]"===String(r)},6261:(e,t,n)=>{"use strict";var r=n(6145),o=String;e.exports=function(e){if("Symbol"===r(e))throw new TypeError("Cannot convert a Symbol value to a string");return o(e)}},8761:e=>{"use strict";var t=String;e.exports=function(e){try{return t(e)}catch(e){return"Object"}}},1866:(e,t,n)=>{"use strict";var r=n(4762),o=0,i=Math.random(),a=r(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+a(++o+i,36)}},5022:(e,t,n)=>{"use strict";var r=n(6029);e.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},3896:(e,t,n)=>{"use strict";var r=n(382),o=n(8473);e.exports=r&&o((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},4066:e=>{"use strict";var t=TypeError;e.exports=function(e,n){if(e<n)throw new t("Not enough arguments");return e}},4644:(e,t,n)=>{"use strict";var r=n(8389),o=n(1483),i=r.WeakMap;e.exports=o(i)&&/native code/.test(String(i))},7849:(e,t,n)=>{"use strict";var r=n(6589),o=n(5755),i=n(5373),a=n(5835).f;e.exports=function(e){var t=r.Symbol||(r.Symbol={});o(t,e)||a(t,e,{value:i.f(e)})}},5373:(e,t,n)=>{"use strict";var r=n(1);t.f=r},1:(e,t,n)=>{"use strict";var r=n(8389),o=n(7255),i=n(5755),a=n(1866),c=n(6029),s=n(5022),l=r.Symbol,u=o("wks"),p=s?l.for||l:l&&l.withoutSetter||a;e.exports=function(e){return i(u,e)||(u[e]=c&&i(l,e)?l[e]:p("Symbol."+e)),u[e]}},5870:e=>{"use strict";e.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},4776:(e,t,n)=>{"use strict";var r=n(8612),o=n(8473),i=n(4914),a=n(1704),c=n(2347),s=n(6960),l=n(1091),u=n(670),p=n(4551),d=n(4595),f=n(1),m=n(6170),v=f("isConcatSpreadable"),y=m>=51||!o((function(){var e=[];return e[v]=!1,e.concat()[0]!==e})),h=function(e){if(!a(e))return!1;var t=e[v];return void 0!==t?!!t:i(e)};r({target:"Array",proto:!0,arity:1,forced:!y||!d("concat")},{concat:function(e){var t,n,r,o,i,a=c(this),d=p(a,0),f=0;for(t=-1,r=arguments.length;t<r;t++)if(h(i=-1===t?a:arguments[t]))for(o=s(i),l(f+o),n=0;n<o;n++,f++)n in i&&u(d,f,i[n]);else l(f+1),u(d,f++,i);return d.length=f,d}})},4382:(e,t,n)=>{"use strict";var r=n(8612),o=n(2867).filter;r({target:"Array",proto:!0,forced:!n(4595)("filter")},{filter:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}})},2084:(e,t,n)=>{"use strict";var r=n(8612),o=n(2867).find,i=n(7095),a="find",c=!0;a in[]&&Array(1)[a]((function(){c=!1})),r({target:"Array",proto:!0,forced:c},{find:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),i(a)},9892:(e,t,n)=>{"use strict";var r=n(8612),o=n(6142);r({target:"Array",stat:!0,forced:!n(1554)((function(e){Array.from(e)}))},{from:o})},6281:(e,t,n)=>{"use strict";var r=n(8612),o=n(6651).includes,i=n(8473),a=n(7095);r({target:"Array",proto:!0,forced:i((function(){return!Array(1).includes()}))},{includes:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),a("includes")},4962:(e,t,n)=>{"use strict";var r=n(5599),o=n(7095),i=n(6775),a=n(4483),c=n(5835).f,s=n(5662),l=n(5247),u=n(9557),p=n(382),d="Array Iterator",f=a.set,m=a.getterFor(d);e.exports=s(Array,"Array",(function(e,t){f(this,{type:d,target:r(e),index:0,kind:t})}),(function(){var e=m(this),t=e.target,n=e.index++;if(!t||n>=t.length)return e.target=void 0,l(void 0,!0);switch(e.kind){case"keys":return l(n,!1);case"values":return l(t[n],!1)}return l([n,t[n]],!1)}),"values");var v=i.Arguments=i.Array;if(o("keys"),o("values"),o("entries"),!u&&p&&"values"!==v.name)try{c(v,"name",{value:"values"})}catch(e){}},6216:(e,t,n)=>{"use strict";var r=n(8612),o=n(4762),i=n(2121),a=n(5599),c=n(3152),s=o([].join);r({target:"Array",proto:!0,forced:i!==Object||!c("join",",")},{join:function(e){return s(a(this),void 0===e?",":e)}})},6584:(e,t,n)=>{"use strict";var r=n(8612),o=n(2867).map;r({target:"Array",proto:!0,forced:!n(4595)("map")},{map:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}})},9336:(e,t,n)=>{"use strict";var r=n(8612),o=n(4914),i=n(943),a=n(1704),c=n(3392),s=n(6960),l=n(5599),u=n(670),p=n(1),d=n(4595),f=n(1698),m=d("slice"),v=p("species"),y=Array,h=Math.max;r({target:"Array",proto:!0,forced:!m},{slice:function(e,t){var n,r,p,d=l(this),m=s(d),A=c(e,m),b=c(void 0===t?m:t,m);if(o(d)&&(n=d.constructor,(i(n)&&(n===y||o(n.prototype))||a(n)&&null===(n=n[v]))&&(n=void 0),n===y||void 0===n))return f(d,A,b);for(r=new(void 0===n?y:n)(h(b-A,0)),p=0;A<b;A++,p++)A in d&&u(r,p,d[A]);return r.length=p,r}})},6448:(e,t,n)=>{"use strict";var r=n(8612),o=n(4762),i=n(8120),a=n(2347),c=n(6960),s=n(6060),l=n(6261),u=n(8473),p=n(7354),d=n(3152),f=n(7332),m=n(8996),v=n(6170),y=n(5158),h=[],A=o(h.sort),b=o(h.push),g=u((function(){h.sort(void 0)})),k=u((function(){h.sort(null)})),_=d("sort"),C=!u((function(){if(v)return v<70;if(!(f&&f>3)){if(m)return!0;if(y)return y<603;var e,t,n,r,o="";for(e=65;e<76;e++){switch(t=String.fromCharCode(e),e){case 66:case 69:case 70:case 72:n=3;break;case 68:case 71:n=4;break;default:n=2}for(r=0;r<47;r++)h.push({k:t+r,v:n})}for(h.sort((function(e,t){return t.v-e.v})),r=0;r<h.length;r++)t=h[r].k.charAt(0),o.charAt(o.length-1)!==t&&(o+=t);return"DGBEFHACIJK"!==o}}));r({target:"Array",proto:!0,forced:g||!k||!_||!C},{sort:function(e){void 0!==e&&i(e);var t=a(this);if(C)return void 0===e?A(t):A(t,e);var n,r,o=[],u=c(t);for(r=0;r<u;r++)r in t&&b(o,t[r]);for(p(o,function(e){return function(t,n){return void 0===n?-1:void 0===t?1:void 0!==e?+e(t,n)||0:l(t)>l(n)?1:-1}}(e)),n=c(o),r=0;r<n;)t[r]=o[r++];for(;r<u;)s(t,r++);return t}})},4754:(e,t,n)=>{"use strict";var r=n(5755),o=n(7914),i=n(6446),a=n(1)("toPrimitive"),c=Date.prototype;r(c,a)||o(c,a,i)},1908:(e,t,n)=>{"use strict";var r=n(382),o=n(2048).EXISTS,i=n(4762),a=n(3864),c=Function.prototype,s=i(c.toString),l=/function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/,u=i(l.exec);r&&!o&&a(c,"name",{configurable:!0,get:function(){try{return u(l,s(this))[1]}catch(e){return""}}})},6184:(e,t,n)=>{"use strict";var r=n(8612),o=n(1409),i=n(3067),a=n(1807),c=n(4762),s=n(8473),l=n(1483),u=n(1423),p=n(1698),d=n(5215),f=n(6029),m=String,v=o("JSON","stringify"),y=c(/./.exec),h=c("".charAt),A=c("".charCodeAt),b=c("".replace),g=c(1..toString),k=/[\uD800-\uDFFF]/g,_=/^[\uD800-\uDBFF]$/,C=/^[\uDC00-\uDFFF]$/,w=!f||s((function(){var e=o("Symbol")("stringify detection");return"[null]"!==v([e])||"{}"!==v({a:e})||"{}"!==v(Object(e))})),x=s((function(){return'"\\udf06\\ud834"'!==v("\udf06\ud834")||'"\\udead"'!==v("\udead")})),S=function(e,t){var n=p(arguments),r=d(t);if(l(r)||void 0!==e&&!u(e))return n[1]=function(e,t){if(l(r)&&(t=a(r,this,m(e),t)),!u(t))return t},i(v,null,n)},j=function(e,t,n){var r=h(n,t-1),o=h(n,t+1);return y(_,e)&&!y(C,o)||y(C,e)&&!y(_,r)?"\\u"+g(A(e,0),16):e};v&&r({target:"JSON",stat:!0,arity:3,forced:w||x},{stringify:function(e,t,n){var r=p(arguments),o=i(w?S:v,null,r);return x&&"string"==typeof o?b(o,k,j):o}})},2725:(e,t,n)=>{"use strict";n(7446)("Map",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),n(4092))},8551:(e,t,n)=>{"use strict";n(2725)},94:(e,t,n)=>{"use strict";var r=n(8612),o=n(9557),i=n(382),a=n(8389),c=n(6589),s=n(4762),l=n(8730),u=n(5755),p=n(2429),d=n(4815),f=n(1423),m=n(2355),v=n(8473),y=n(2278).f,h=n(4961).f,A=n(5835).f,b=n(2430),g=n(4544).trim,k="Number",_=a[k],C=c[k],w=_.prototype,x=a.TypeError,S=s("".slice),j=s("".charCodeAt),O=l(k,!_(" 0o1")||!_("0b1")||_("+0x1")),E=function(e){var t,n=arguments.length<1?0:_(function(e){var t=m(e,"number");return"bigint"==typeof t?t:function(e){var t,n,r,o,i,a,c,s,l=m(e,"number");if(f(l))throw new x("Cannot convert a Symbol value to a number");if("string"==typeof l&&l.length>2)if(l=g(l),43===(t=j(l,0))||45===t){if(88===(n=j(l,2))||120===n)return NaN}else if(48===t){switch(j(l,1)){case 66:case 98:r=2,o=49;break;case 79:case 111:r=8,o=55;break;default:return+l}for(a=(i=S(l,2)).length,c=0;c<a;c++)if((s=j(i,c))<48||s>o)return NaN;return parseInt(i,r)}return+l}(t)}(e));return d(w,t=this)&&v((function(){b(t)}))?p(Object(n),this,E):n};E.prototype=w,O&&!o&&(w.constructor=E),r({global:!0,constructor:!0,wrap:!0,forced:O},{Number:E});var P=function(e,t){for(var n,r=i?y(t):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(","),o=0;r.length>o;o++)u(t,n=r[o])&&!u(e,n)&&A(e,n,h(t,n))};o&&C&&P(c[k],C),(O||o)&&P(c[k],_)},7575:(e,t,n)=>{"use strict";var r=n(8612),o=n(1439);r({target:"Object",stat:!0,arity:2,forced:Object.assign!==o},{assign:o})},7132:(e,t,n)=>{"use strict";var r=n(8612),o=n(5627).entries;r({target:"Object",stat:!0},{entries:function(e){return o(e)}})},6457:(e,t,n)=>{"use strict";var r=n(8612),o=n(8473),i=n(5599),a=n(4961).f,c=n(382);r({target:"Object",stat:!0,forced:!c||o((function(){a(1)})),sham:!c},{getOwnPropertyDescriptor:function(e,t){return a(i(e),t)}})},8908:(e,t,n)=>{"use strict";var r=n(8612),o=n(382),i=n(9497),a=n(5599),c=n(4961),s=n(670);r({target:"Object",stat:!0,sham:!o},{getOwnPropertyDescriptors:function(e){for(var t,n,r=a(e),o=c.f,l=i(r),u={},p=0;l.length>p;)void 0!==(n=o(r,t=l[p++]))&&s(u,t,n);return u}})},7859:(e,t,n)=>{"use strict";var r=n(8612),o=n(6029),i=n(8473),a=n(4347),c=n(2347);r({target:"Object",stat:!0,forced:!o||i((function(){a.f(1)}))},{getOwnPropertySymbols:function(e){var t=a.f;return t?t(c(e)):[]}})},6437:(e,t,n)=>{"use strict";var r=n(8612),o=n(8473),i=n(2347),a=n(3181),c=n(9441);r({target:"Object",stat:!0,forced:o((function(){a(1)})),sham:!c},{getPrototypeOf:function(e){return a(i(e))}})},3810:(e,t,n)=>{"use strict";var r=n(8612),o=n(2347),i=n(3658);r({target:"Object",stat:!0,forced:n(8473)((function(){i(1)}))},{keys:function(e){return i(o(e))}})},2697:(e,t,n)=>{"use strict";n(8612)({target:"Object",stat:!0},{setPrototypeOf:n(1953)})},8557:(e,t,n)=>{"use strict";var r=n(4338),o=n(7914),i=n(5685);r||o(Object.prototype,"toString",i,{unsafe:!0})},6249:(e,t,n)=>{"use strict";var r=n(8612),o=n(1807),i=n(8120),a=n(1173),c=n(4193),s=n(1506);r({target:"Promise",stat:!0,forced:n(1407)},{all:function(e){var t=this,n=a.f(t),r=n.resolve,l=n.reject,u=c((function(){var n=i(t.resolve),a=[],c=0,u=1;s(e,(function(e){var i=c++,s=!1;u++,o(n,t,e).then((function(e){s||(s=!0,a[i]=e,--u||r(a))}),l)})),--u||r(a)}));return u.error&&l(u.value),n.promise}})},6681:(e,t,n)=>{"use strict";var r=n(8612),o=n(9557),i=n(5502).CONSTRUCTOR,a=n(2832),c=n(1409),s=n(1483),l=n(7914),u=a&&a.prototype;if(r({target:"Promise",proto:!0,forced:i,real:!0},{catch:function(e){return this.then(void 0,e)}}),!o&&s(a)){var p=c("Promise").prototype.catch;u.catch!==p&&l(u,"catch",p,{unsafe:!0})}},8786:(e,t,n)=>{"use strict";var r,o,i,a=n(8612),c=n(9557),s=n(4334),l=n(8389),u=n(1807),p=n(7914),d=n(1953),f=n(2277),m=n(240),v=n(8120),y=n(1483),h=n(1704),A=n(6021),b=n(483),g=n(7007).set,k=n(553),_=n(1339),C=n(4193),w=n(5459),x=n(4483),S=n(2832),j=n(5502),O=n(1173),E="Promise",P=j.CONSTRUCTOR,z=j.REJECTION_EVENT,I=j.SUBCLASSING,D=x.getterFor(E),B=x.set,T=S&&S.prototype,N=S,R=T,M=l.TypeError,q=l.document,$=l.process,U=O.f,F=U,L=!!(q&&q.createEvent&&l.dispatchEvent),H="unhandledrejection",W=function(e){var t;return!(!h(e)||!y(t=e.then))&&t},G=function(e,t){var n,r,o,i=t.value,a=1===t.state,c=a?e.ok:e.fail,s=e.resolve,l=e.reject,p=e.domain;try{c?(a||(2===t.rejection&&Q(t),t.rejection=1),!0===c?n=i:(p&&p.enter(),n=c(i),p&&(p.exit(),o=!0)),n===e.promise?l(new M("Promise-chain cycle")):(r=W(n))?u(r,n,s,l):s(n)):l(i)}catch(e){p&&!o&&p.exit(),l(e)}},V=function(e,t){e.notified||(e.notified=!0,k((function(){for(var n,r=e.reactions;n=r.get();)G(n,e);e.notified=!1,t&&!e.rejection&&J(e)})))},K=function(e,t,n){var r,o;L?((r=q.createEvent("Event")).promise=t,r.reason=n,r.initEvent(e,!1,!0),l.dispatchEvent(r)):r={promise:t,reason:n},!z&&(o=l["on"+e])?o(r):e===H&&_("Unhandled promise rejection",n)},J=function(e){u(g,l,(function(){var t,n=e.facade,r=e.value;if(Y(e)&&(t=C((function(){s?$.emit("unhandledRejection",r,n):K(H,n,r)})),e.rejection=s||Y(e)?2:1,t.error))throw t.value}))},Y=function(e){return 1!==e.rejection&&!e.parent},Q=function(e){u(g,l,(function(){var t=e.facade;s?$.emit("rejectionHandled",t):K("rejectionhandled",t,e.value)}))},X=function(e,t,n){return function(r){e(t,r,n)}},Z=function(e,t,n){e.done||(e.done=!0,n&&(e=n),e.value=t,e.state=2,V(e,!0))},ee=function(e,t,n){if(!e.done){e.done=!0,n&&(e=n);try{if(e.facade===t)throw new M("Promise can't be resolved itself");var r=W(t);r?k((function(){var n={done:!1};try{u(r,t,X(ee,n,e),X(Z,n,e))}catch(t){Z(n,t,e)}})):(e.value=t,e.state=1,V(e,!1))}catch(t){Z({done:!1},t,e)}}};if(P&&(R=(N=function(e){A(this,R),v(e),u(r,this);var t=D(this);try{e(X(ee,t),X(Z,t))}catch(e){Z(t,e)}}).prototype,(r=function(e){B(this,{type:E,done:!1,notified:!1,parent:!1,reactions:new w,rejection:!1,state:0,value:void 0})}).prototype=p(R,"then",(function(e,t){var n=D(this),r=U(b(this,N));return n.parent=!0,r.ok=!y(e)||e,r.fail=y(t)&&t,r.domain=s?$.domain:void 0,0===n.state?n.reactions.add(r):k((function(){G(r,n)})),r.promise})),o=function(){var e=new r,t=D(e);this.promise=e,this.resolve=X(ee,t),this.reject=X(Z,t)},O.f=U=function(e){return e===N||void 0===e?new o(e):F(e)},!c&&y(S)&&T!==Object.prototype)){i=T.then,I||p(T,"then",(function(e,t){var n=this;return new N((function(e,t){u(i,n,e,t)})).then(e,t)}),{unsafe:!0});try{delete T.constructor}catch(e){}d&&d(T,R)}a({global:!0,constructor:!0,wrap:!0,forced:P},{Promise:N}),f(N,E,!1,!0),m(E)},76:(e,t,n)=>{"use strict";n(8786),n(6249),n(6681),n(1681),n(9231),n(5774)},1681:(e,t,n)=>{"use strict";var r=n(8612),o=n(1807),i=n(8120),a=n(1173),c=n(4193),s=n(1506);r({target:"Promise",stat:!0,forced:n(1407)},{race:function(e){var t=this,n=a.f(t),r=n.reject,l=c((function(){var a=i(t.resolve);s(e,(function(e){o(a,t,e).then(n.resolve,r)}))}));return l.error&&r(l.value),n.promise}})},9231:(e,t,n)=>{"use strict";var r=n(8612),o=n(1173);r({target:"Promise",stat:!0,forced:n(5502).CONSTRUCTOR},{reject:function(e){var t=o.f(this);return(0,t.reject)(e),t.promise}})},5774:(e,t,n)=>{"use strict";var r=n(8612),o=n(1409),i=n(9557),a=n(2832),c=n(5502).CONSTRUCTOR,s=n(2172),l=o("Promise"),u=i&&!c;r({target:"Promise",stat:!0,forced:i||c},{resolve:function(e){return s(u&&this===l?a:this,e)}})},1359:(e,t,n)=>{"use strict";var r=n(8612),o=n(1409),i=n(3067),a=n(2164),c=n(2374),s=n(2293),l=n(1704),u=n(5290),p=n(8473),d=o("Reflect","construct"),f=Object.prototype,m=[].push,v=p((function(){function e(){}return!(d((function(){}),[],e)instanceof e)})),y=!p((function(){d((function(){}))})),h=v||y;r({target:"Reflect",stat:!0,forced:h,sham:h},{construct:function(e,t){c(e),s(t);var n=arguments.length<3?e:c(arguments[2]);if(y&&!v)return d(e,t,n);if(e===n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var r=[null];return i(m,r,t),new(i(a,e,r))}var o=n.prototype,p=u(l(o)?o:f),h=i(e,p,t);return l(h)?h:p}})},646:(e,t,n)=>{"use strict";var r=n(382),o=n(8389),i=n(4762),a=n(8730),c=n(2429),s=n(9037),l=n(5290),u=n(2278).f,p=n(4815),d=n(4786),f=n(6261),m=n(9736),v=n(7435),y=n(7150),h=n(7914),A=n(8473),b=n(5755),g=n(4483).enforce,k=n(240),_=n(1),C=n(3933),w=n(4528),x=_("match"),S=o.RegExp,j=S.prototype,O=o.SyntaxError,E=i(j.exec),P=i("".charAt),z=i("".replace),I=i("".indexOf),D=i("".slice),B=/^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/,T=/a/g,N=/a/g,R=new S(T)!==T,M=v.MISSED_STICKY,q=v.UNSUPPORTED_Y;if(a("RegExp",r&&(!R||M||C||w||A((function(){return N[x]=!1,S(T)!==T||S(N)===N||"/a/i"!==String(S(T,"i"))}))))){for(var $=function(e,t){var n,r,o,i,a,u,v=p(j,this),y=d(e),h=void 0===t,A=[],k=e;if(!v&&y&&h&&e.constructor===$)return e;if((y||p(j,e))&&(e=e.source,h&&(t=m(k))),e=void 0===e?"":f(e),t=void 0===t?"":f(t),k=e,C&&"dotAll"in T&&(r=!!t&&I(t,"s")>-1)&&(t=z(t,/s/g,"")),n=t,M&&"sticky"in T&&(o=!!t&&I(t,"y")>-1)&&q&&(t=z(t,/y/g,"")),w&&(i=function(e){for(var t,n=e.length,r=0,o="",i=[],a=l(null),c=!1,s=!1,u=0,p="";r<=n;r++){if("\\"===(t=P(e,r)))t+=P(e,++r);else if("]"===t)c=!1;else if(!c)switch(!0){case"["===t:c=!0;break;case"("===t:E(B,D(e,r+1))&&(r+=2,s=!0),o+=t,u++;continue;case">"===t&&s:if(""===p||b(a,p))throw new O("Invalid capture group name");a[p]=!0,i[i.length]=[p,u],s=!1,p="";continue}s?p+=t:o+=t}return[o,i]}(e),e=i[0],A=i[1]),a=c(S(e,t),v?this:j,$),(r||o||A.length)&&(u=g(a),r&&(u.dotAll=!0,u.raw=$(function(e){for(var t,n=e.length,r=0,o="",i=!1;r<=n;r++)"\\"!==(t=P(e,r))?i||"."!==t?("["===t?i=!0:"]"===t&&(i=!1),o+=t):o+="[\\s\\S]":o+=t+P(e,++r);return o}(e),n)),o&&(u.sticky=!0),A.length&&(u.groups=A)),e!==k)try{s(a,"source",""===k?"(?:)":k)}catch(e){}return a},U=u(S),F=0;U.length>F;)y($,S,U[F++]);j.constructor=$,$.prototype=j,h(o,"RegExp",$,{constructor:!0})}k("RegExp")},5021:(e,t,n)=>{"use strict";var r=n(8612),o=n(8865);r({target:"RegExp",proto:!0,forced:/./.exec!==o},{exec:o})},3687:(e,t,n)=>{"use strict";var r=n(2048).PROPER,o=n(7914),i=n(2293),a=n(6261),c=n(8473),s=n(9736),l="toString",u=RegExp.prototype,p=u[l],d=c((function(){return"/a/b"!==p.call({source:"a",flags:"b"})})),f=r&&p.name!==l;(d||f)&&o(u,l,(function(){var e=i(this);return"/"+a(e.source)+"/"+a(s(e))}),{unsafe:!0})},9203:(e,t,n)=>{"use strict";n(7446)("Set",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),n(4092))},2745:(e,t,n)=>{"use strict";n(9203)},987:(e,t,n)=>{"use strict";var r,o=n(8612),i=n(3786),a=n(4961).f,c=n(8324),s=n(6261),l=n(4989),u=n(3312),p=n(4522),d=n(9557),f=i("".slice),m=Math.min,v=p("endsWith");o({target:"String",proto:!0,forced:!(!d&&!v&&(r=a(String.prototype,"endsWith"),r&&!r.writable)||v)},{endsWith:function(e){var t=s(u(this));l(e);var n=arguments.length>1?arguments[1]:void 0,r=t.length,o=void 0===n?r:m(c(n),r),i=s(e);return f(t,o-i.length,o)===i}})},9425:(e,t,n)=>{"use strict";var r=n(8612),o=n(4762),i=n(4989),a=n(3312),c=n(6261),s=n(4522),l=o("".indexOf);r({target:"String",proto:!0,forced:!s("includes")},{includes:function(e){return!!~l(c(a(this)),c(i(e)),arguments.length>1?arguments[1]:void 0)}})},3994:(e,t,n)=>{"use strict";var r=n(9105).charAt,o=n(6261),i=n(4483),a=n(5662),c=n(5247),s="String Iterator",l=i.set,u=i.getterFor(s);a(String,"String",(function(e){l(this,{type:s,string:o(e),index:0})}),(function(){var e,t=u(this),n=t.string,o=t.index;return o>=n.length?c(void 0,!0):(e=r(n,o),t.index+=e.length,c(e,!1))}))},3819:(e,t,n)=>{"use strict";var r=n(1807),o=n(3358),i=n(2293),a=n(5983),c=n(8324),s=n(6261),l=n(3312),u=n(2564),p=n(4419),d=n(2428);o("match",(function(e,t,n){return[function(t){var n=l(this),o=a(t)?void 0:u(t,e);return o?r(o,t,n):new RegExp(t)[e](s(n))},function(e){var r=i(this),o=s(e),a=n(t,r,o);if(a.done)return a.value;if(!r.global)return d(r,o);var l=r.unicode;r.lastIndex=0;for(var u,f=[],m=0;null!==(u=d(r,o));){var v=s(u[0]);f[m]=v,""===v&&(r.lastIndex=p(o,c(r.lastIndex),l)),m++}return 0===m?null:f}]}))},3062:(e,t,n)=>{"use strict";var r=n(3067),o=n(1807),i=n(4762),a=n(3358),c=n(8473),s=n(2293),l=n(1483),u=n(5983),p=n(3005),d=n(8324),f=n(6261),m=n(3312),v=n(4419),y=n(2564),h=n(708),A=n(2428),b=n(1)("replace"),g=Math.max,k=Math.min,_=i([].concat),C=i([].push),w=i("".indexOf),x=i("".slice),S="$0"==="a".replace(/./,"$0"),j=!!/./[b]&&""===/./[b]("a","$0");a("replace",(function(e,t,n){var i=j?"$":"$0";return[function(e,n){var r=m(this),i=u(e)?void 0:y(e,b);return i?o(i,e,r,n):o(t,f(r),e,n)},function(e,o){var a=s(this),c=f(e);if("string"==typeof o&&-1===w(o,i)&&-1===w(o,"$<")){var u=n(t,a,c,o);if(u.done)return u.value}var m=l(o);m||(o=f(o));var y,b=a.global;b&&(y=a.unicode,a.lastIndex=0);for(var S,j=[];null!==(S=A(a,c))&&(C(j,S),b);)""===f(S[0])&&(a.lastIndex=v(c,d(a.lastIndex),y));for(var O,E="",P=0,z=0;z<j.length;z++){for(var I,D=f((S=j[z])[0]),B=g(k(p(S.index),c.length),0),T=[],N=1;N<S.length;N++)C(T,void 0===(O=S[N])?O:String(O));var R=S.groups;if(m){var M=_([D],T,B,c);void 0!==R&&C(M,R),I=f(r(o,void 0,M))}else I=h(D,c,B,T,R,o);B>=P&&(E+=x(c,P,B)+I,P=B+D.length)}return E+x(c,P)}]}),!!c((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")}))||!S||j)},4062:(e,t,n)=>{"use strict";var r,o=n(8612),i=n(3786),a=n(4961).f,c=n(8324),s=n(6261),l=n(4989),u=n(3312),p=n(4522),d=n(9557),f=i("".slice),m=Math.min,v=p("startsWith");o({target:"String",proto:!0,forced:!(!d&&!v&&(r=a(String.prototype,"startsWith"),r&&!r.writable)||v)},{startsWith:function(e){var t=s(u(this));l(e);var n=c(m(arguments.length>1?arguments[1]:void 0,t.length)),r=s(e);return f(t,n,n+r.length)===r}})},5443:(e,t,n)=>{"use strict";var r=n(8612),o=n(8389),i=n(1807),a=n(4762),c=n(9557),s=n(382),l=n(6029),u=n(8473),p=n(5755),d=n(4815),f=n(2293),m=n(5599),v=n(3815),y=n(6261),h=n(7738),A=n(5290),b=n(3658),g=n(2278),k=n(2020),_=n(4347),C=n(4961),w=n(5835),x=n(5799),S=n(7611),j=n(7914),O=n(3864),E=n(7255),P=n(5409),z=n(1507),I=n(1866),D=n(1),B=n(5373),T=n(7849),N=n(8192),R=n(2277),M=n(4483),q=n(2867).forEach,$=P("hidden"),U="Symbol",F="prototype",L=M.set,H=M.getterFor(U),W=Object[F],G=o.Symbol,V=G&&G[F],K=o.RangeError,J=o.TypeError,Y=o.QObject,Q=C.f,X=w.f,Z=k.f,ee=S.f,te=a([].push),ne=E("symbols"),re=E("op-symbols"),oe=E("wks"),ie=!Y||!Y[F]||!Y[F].findChild,ae=function(e,t,n){var r=Q(W,t);r&&delete W[t],X(e,t,n),r&&e!==W&&X(W,t,r)},ce=s&&u((function(){return 7!==A(X({},"a",{get:function(){return X(this,"a",{value:7}).a}})).a}))?ae:X,se=function(e,t){var n=ne[e]=A(V);return L(n,{type:U,tag:e,description:t}),s||(n.description=t),n},le=function(e,t,n){e===W&&le(re,t,n),f(e);var r=v(t);return f(n),p(ne,r)?(n.enumerable?(p(e,$)&&e[$][r]&&(e[$][r]=!1),n=A(n,{enumerable:h(0,!1)})):(p(e,$)||X(e,$,h(1,A(null))),e[$][r]=!0),ce(e,r,n)):X(e,r,n)},ue=function(e,t){f(e);var n=m(t),r=b(n).concat(me(n));return q(r,(function(t){s&&!i(pe,n,t)||le(e,t,n[t])})),e},pe=function(e){var t=v(e),n=i(ee,this,t);return!(this===W&&p(ne,t)&&!p(re,t))&&(!(n||!p(this,t)||!p(ne,t)||p(this,$)&&this[$][t])||n)},de=function(e,t){var n=m(e),r=v(t);if(n!==W||!p(ne,r)||p(re,r)){var o=Q(n,r);return!o||!p(ne,r)||p(n,$)&&n[$][r]||(o.enumerable=!0),o}},fe=function(e){var t=Z(m(e)),n=[];return q(t,(function(e){p(ne,e)||p(z,e)||te(n,e)})),n},me=function(e){var t=e===W,n=Z(t?re:m(e)),r=[];return q(n,(function(e){!p(ne,e)||t&&!p(W,e)||te(r,ne[e])})),r};l||(j(V=(G=function(){if(d(V,this))throw new J("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?y(arguments[0]):void 0,t=I(e),n=function(e){var r=void 0===this?o:this;r===W&&i(n,re,e),p(r,$)&&p(r[$],t)&&(r[$][t]=!1);var a=h(1,e);try{ce(r,t,a)}catch(e){if(!(e instanceof K))throw e;ae(r,t,a)}};return s&&ie&&ce(W,t,{configurable:!0,set:n}),se(t,e)})[F],"toString",(function(){return H(this).tag})),j(G,"withoutSetter",(function(e){return se(I(e),e)})),S.f=pe,w.f=le,x.f=ue,C.f=de,g.f=k.f=fe,_.f=me,B.f=function(e){return se(D(e),e)},s&&(O(V,"description",{configurable:!0,get:function(){return H(this).description}}),c||j(W,"propertyIsEnumerable",pe,{unsafe:!0}))),r({global:!0,constructor:!0,wrap:!0,forced:!l,sham:!l},{Symbol:G}),q(b(oe),(function(e){T(e)})),r({target:U,stat:!0,forced:!l},{useSetter:function(){ie=!0},useSimple:function(){ie=!1}}),r({target:"Object",stat:!0,forced:!l,sham:!s},{create:function(e,t){return void 0===t?A(e):ue(A(e),t)},defineProperty:le,defineProperties:ue,getOwnPropertyDescriptor:de}),r({target:"Object",stat:!0,forced:!l},{getOwnPropertyNames:fe}),N(),R(G,U),z[$]=!0},2733:(e,t,n)=>{"use strict";var r=n(8612),o=n(382),i=n(8389),a=n(4762),c=n(5755),s=n(1483),l=n(4815),u=n(6261),p=n(3864),d=n(6726),f=i.Symbol,m=f&&f.prototype;if(o&&s(f)&&(!("description"in m)||void 0!==f().description)){var v={},y=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:u(arguments[0]),t=l(m,this)?new f(e):void 0===e?f():f(e);return""===e&&(v[t]=!0),t};d(y,f),y.prototype=m,m.constructor=y;var h="Symbol(description detection)"===String(f("description detection")),A=a(m.valueOf),b=a(m.toString),g=/^Symbol\((.*)\)[^)]+$/,k=a("".replace),_=a("".slice);p(m,"description",{configurable:!0,get:function(){var e=A(this);if(c(v,e))return"";var t=b(e),n=h?_(t,7,-1):k(t,g,"$1");return""===n?void 0:n}}),r({global:!0,constructor:!0,forced:!0},{Symbol:y})}},2484:(e,t,n)=>{"use strict";var r=n(8612),o=n(1409),i=n(5755),a=n(6261),c=n(7255),s=n(3218),l=c("string-to-symbol-registry"),u=c("symbol-to-string-registry");r({target:"Symbol",stat:!0,forced:!s},{for:function(e){var t=a(e);if(i(l,t))return l[t];var n=o("Symbol")(t);return l[t]=n,u[n]=t,n}})},4701:(e,t,n)=>{"use strict";n(7849)("iterator")},9305:(e,t,n)=>{"use strict";n(5443),n(2484),n(1894),n(6184),n(7859)},1894:(e,t,n)=>{"use strict";var r=n(8612),o=n(5755),i=n(1423),a=n(8761),c=n(7255),s=n(3218),l=c("symbol-to-string-registry");r({target:"Symbol",stat:!0,forced:!s},{keyFor:function(e){if(!i(e))throw new TypeError(a(e)+" is not a symbol");if(o(l,e))return l[e]}})},1678:(e,t,n)=>{"use strict";var r=n(7849),o=n(8192);r("toPrimitive"),o()},3630:(e,t,n)=>{"use strict";var r=n(8389),o=n(4842),i=n(1902),a=n(4793),c=n(9037),s=function(e){if(e&&e.forEach!==a)try{c(e,"forEach",a)}catch(t){e.forEach=a}};for(var l in o)o[l]&&s(r[l]&&r[l].prototype);s(i)},2367:(e,t,n)=>{"use strict";var r=n(8389),o=n(4842),i=n(1902),a=n(4962),c=n(9037),s=n(2277),l=n(1)("iterator"),u=a.values,p=function(e,t){if(e){if(e[l]!==u)try{c(e,l,u)}catch(t){e[l]=u}if(s(e,t,!0),o[t])for(var n in a)if(e[n]!==a[n])try{c(e,n,a[n])}catch(t){e[n]=a[n]}}};for(var d in o)p(r[d]&&r[d].prototype,d);p(i,"DOMTokenList")},9833:(e,t,n)=>{"use strict";var r=n(8612),o=n(8389),i=n(9570)(o.setInterval,!0);r({global:!0,bind:!0,forced:o.setInterval!==i},{setInterval:i})},3989:(e,t,n)=>{"use strict";var r=n(8612),o=n(8389),i=n(9570)(o.setTimeout,!0);r({global:!0,bind:!0,forced:o.setTimeout!==i},{setTimeout:i})},7089:(e,t,n)=>{"use strict";n(9833),n(3989)}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nc=void 0;var r={};return(()=>{"use strict";n.r(r),n.d(r,{addEventListener:()=>hr,defaultConfig:()=>pr,defaultTranslations:()=>dr,getConfigTranslations:()=>br,getElement:()=>yr,getElementID:()=>vr,getManager:()=>Er,language:()=>ct,render:()=>kr,renderContextualConsentNotices:()=>_r,resetManagers:()=>Or,setup:()=>xr,show:()=>Sr,updateConfig:()=>cn,validateConfig:()=>wr,version:()=>Pr}),n(9305),n(2733),n(4701),n(1678),n(4776),n(4382),n(2084),n(9892),n(4962),n(6584),n(9336),n(4754),n(1908),n(8551),n(94),n(6457),n(8908),n(3810),n(8557),n(5021),n(3687),n(3994),n(3630),n(2367);var e,t,o,i,a,c,s,l,u={},p=[],d=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,f=Array.isArray;function m(e,t){for(var n in t)e[n]=t[n];return e}function v(e){var t=e.parentNode;t&&t.removeChild(e)}function y(t,n,r){var o,i,a,c={};for(a in n)"key"==a?o=n[a]:"ref"==a?i=n[a]:c[a]=n[a];if(arguments.length>2&&(c.children=arguments.length>3?e.call(arguments,2):r),"function"==typeof t&&null!=t.defaultProps)for(a in t.defaultProps)void 0===c[a]&&(c[a]=t.defaultProps[a]);return h(t,c,o,i,null)}function h(e,n,r,i,a){var c={type:e,props:n,key:r,ref:i,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:null==a?++o:a,__i:-1,__u:0};return null==a&&null!=t.vnode&&t.vnode(c),c}function A(e){return e.children}function b(e,t){this.props=e,this.context=t}function g(e,t){if(null==t)return e.__?g(e.__,e.__i+1):null;for(var n;t<e.__k.length;t++)if(null!=(n=e.__k[t])&&null!=n.__e)return n.__e;return"function"==typeof e.type?g(e):null}function k(e,n,r){var o,i=e.__v,a=i.__e,c=e.__P;if(c)return(o=m({},i)).__v=i.__v+1,t.vnode&&t.vnode(o),B(c,o,i,e.__n,void 0!==c.ownerSVGElement,32&i.__u?[a]:null,n,null==a?g(i):a,!!(32&i.__u),r),o.__v=i.__v,o.__.__k[o.__i]=o,o.__d=void 0,o.__e!=a&&_(o),o}function _(e){var t,n;if(null!=(e=e.__)&&null!=e.__c){for(e.__e=e.__c.base=null,t=0;t<e.__k.length;t++)if(null!=(n=e.__k[t])&&null!=n.__e){e.__e=e.__c.base=n.__e;break}return _(e)}}function C(e){(!e.__d&&(e.__d=!0)&&i.push(e)&&!w.__r++||a!==t.debounceRendering)&&((a=t.debounceRendering)||c)(w)}function w(){var e,n,r,o=[],a=[];for(i.sort(s);e=i.shift();)e.__d&&(r=i.length,n=k(e,o,a)||n,0===r||i.length>r?(T(o,n,a),a.length=o.length=0,n=void 0,i.sort(s)):n&&t.__c&&t.__c(n,p));n&&T(o,n,a),w.__r=0}function x(e,t,n,r,o,i,a,c,s,l,d){var f,m,v,y,h,A=r&&r.__k||p,b=t.length;for(n.__d=s,S(n,t,A),s=n.__d,f=0;f<b;f++)null!=(v=n.__k[f])&&"boolean"!=typeof v&&"function"!=typeof v&&(m=-1===v.__i?u:A[v.__i]||u,v.__i=f,B(e,v,m,o,i,a,c,s,l,d),y=v.__e,v.ref&&m.ref!=v.ref&&(m.ref&&R(m.ref,null,v),d.push(v.ref,v.__c||y,v)),null==h&&null!=y&&(h=y),65536&v.__u||m.__k===v.__k?s=j(v,s,e):"function"==typeof v.type&&void 0!==v.__d?s=v.__d:y&&(s=y.nextSibling),v.__d=void 0,v.__u&=-196609);n.__d=s,n.__e=h}function S(e,t,n){var r,o,i,a,c,s=t.length,l=n.length,u=l,p=0;for(e.__k=[],r=0;r<s;r++)a=r+p,null!=(o=e.__k[r]=null==(o=t[r])||"boolean"==typeof o||"function"==typeof o?null:"string"==typeof o||"number"==typeof o||"bigint"==typeof o||o.constructor==String?h(null,o,null,null,null):f(o)?h(A,{children:o},null,null,null):void 0===o.constructor&&o.__b>0?h(o.type,o.props,o.key,o.ref?o.ref:null,o.__v):o)?(o.__=e,o.__b=e.__b+1,c=E(o,n,a,u),o.__i=c,i=null,-1!==c&&(u--,(i=n[c])&&(i.__u|=131072)),null==i||null===i.__v?(-1==c&&p--,"function"!=typeof o.type&&(o.__u|=65536)):c!==a&&(c===a+1?p++:c>a?u>s-a?p+=c-a:p--:c<a?c==a-1&&(p=c-a):p=0,c!==r+p&&(o.__u|=65536))):(i=n[a])&&null==i.key&&i.__e&&0==(131072&i.__u)&&(i.__e==e.__d&&(e.__d=g(i)),M(i,i,!1),n[a]=null,u--);if(u)for(r=0;r<l;r++)null!=(i=n[r])&&0==(131072&i.__u)&&(i.__e==e.__d&&(e.__d=g(i)),M(i,i))}function j(e,t,n){var r,o;if("function"==typeof e.type){for(r=e.__k,o=0;r&&o<r.length;o++)r[o]&&(r[o].__=e,t=j(r[o],t,n));return t}e.__e!=t&&(n.insertBefore(e.__e,t||null),t=e.__e);do{t=t&&t.nextSibling}while(null!=t&&8===t.nodeType);return t}function O(e,t){return t=t||[],null==e||"boolean"==typeof e||(f(e)?e.some((function(e){O(e,t)})):t.push(e)),t}function E(e,t,n,r){var o=e.key,i=e.type,a=n-1,c=n+1,s=t[n];if(null===s||s&&o==s.key&&i===s.type&&0==(131072&s.__u))return n;if(r>(null!=s&&0==(131072&s.__u)?1:0))for(;a>=0||c<t.length;){if(a>=0){if((s=t[a])&&0==(131072&s.__u)&&o==s.key&&i===s.type)return a;a--}if(c<t.length){if((s=t[c])&&0==(131072&s.__u)&&o==s.key&&i===s.type)return c;c++}}return-1}function P(e,t,n){"-"===t[0]?e.setProperty(t,null==n?"":n):e[t]=null==n?"":"number"!=typeof n||d.test(t)?n:n+"px"}function z(e,t,n,r,o){var i;e:if("style"===t)if("string"==typeof n)e.style.cssText=n;else{if("string"==typeof r&&(e.style.cssText=r=""),r)for(t in r)n&&t in n||P(e.style,t,"");if(n)for(t in n)r&&n[t]===r[t]||P(e.style,t,n[t])}else if("o"===t[0]&&"n"===t[1])i=t!==(t=t.replace(/(PointerCapture)$|Capture$/i,"$1")),t=t.toLowerCase()in e?t.toLowerCase().slice(2):t.slice(2),e.l||(e.l={}),e.l[t+i]=n,n?r?n.u=r.u:(n.u=Date.now(),e.addEventListener(t,i?D:I,i)):e.removeEventListener(t,i?D:I,i);else{if(o)t=t.replace(/xlink(H|:h)/,"h").replace(/sName$/,"s");else if("width"!==t&&"height"!==t&&"href"!==t&&"list"!==t&&"form"!==t&&"tabIndex"!==t&&"download"!==t&&"rowSpan"!==t&&"colSpan"!==t&&"role"!==t&&t in e)try{e[t]=null==n?"":n;break e}catch(e){}"function"==typeof n||(null==n||!1===n&&"-"!==t[4]?e.removeAttribute(t):e.setAttribute(t,n))}}function I(e){if(this.l){var n=this.l[e.type+!1];if(e.t){if(e.t<=n.u)return}else e.t=Date.now();return n(t.event?t.event(e):e)}}function D(e){if(this.l)return this.l[e.type+!0](t.event?t.event(e):e)}function B(e,n,r,o,i,a,c,s,l,u){var p,d,v,y,h,g,k,_,C,w,S,j,O,E,P,z=n.type;if(void 0!==n.constructor)return null;128&r.__u&&(l=!!(32&r.__u),a=[s=n.__e=r.__e]),(p=t.__b)&&p(n);e:if("function"==typeof z)try{if(_=n.props,C=(p=z.contextType)&&o[p.__c],w=p?C?C.props.value:p.__:o,r.__c?k=(d=n.__c=r.__c).__=d.__E:("prototype"in z&&z.prototype.render?n.__c=d=new z(_,w):(n.__c=d=new b(_,w),d.constructor=z,d.render=q),C&&C.sub(d),d.props=_,d.state||(d.state={}),d.context=w,d.__n=o,v=d.__d=!0,d.__h=[],d._sb=[]),null==d.__s&&(d.__s=d.state),null!=z.getDerivedStateFromProps&&(d.__s==d.state&&(d.__s=m({},d.__s)),m(d.__s,z.getDerivedStateFromProps(_,d.__s))),y=d.props,h=d.state,d.__v=n,v)null==z.getDerivedStateFromProps&&null!=d.componentWillMount&&d.componentWillMount(),null!=d.componentDidMount&&d.__h.push(d.componentDidMount);else{if(null==z.getDerivedStateFromProps&&_!==y&&null!=d.componentWillReceiveProps&&d.componentWillReceiveProps(_,w),!d.__e&&(null!=d.shouldComponentUpdate&&!1===d.shouldComponentUpdate(_,d.__s,w)||n.__v===r.__v)){for(n.__v!==r.__v&&(d.props=_,d.state=d.__s,d.__d=!1),n.__e=r.__e,n.__k=r.__k,n.__k.forEach((function(e){e&&(e.__=n)})),S=0;S<d._sb.length;S++)d.__h.push(d._sb[S]);d._sb=[],d.__h.length&&c.push(d);break e}null!=d.componentWillUpdate&&d.componentWillUpdate(_,d.__s,w),null!=d.componentDidUpdate&&d.__h.push((function(){d.componentDidUpdate(y,h,g)}))}if(d.context=w,d.props=_,d.__P=e,d.__e=!1,j=t.__r,O=0,"prototype"in z&&z.prototype.render){for(d.state=d.__s,d.__d=!1,j&&j(n),p=d.render(d.props,d.state,d.context),E=0;E<d._sb.length;E++)d.__h.push(d._sb[E]);d._sb=[]}else do{d.__d=!1,j&&j(n),p=d.render(d.props,d.state,d.context),d.state=d.__s}while(d.__d&&++O<25);d.state=d.__s,null!=d.getChildContext&&(o=m(m({},o),d.getChildContext())),v||null==d.getSnapshotBeforeUpdate||(g=d.getSnapshotBeforeUpdate(y,h)),x(e,f(P=null!=p&&p.type===A&&null==p.key?p.props.children:p)?P:[P],n,r,o,i,a,c,s,l,u),d.base=n.__e,n.__u&=-161,d.__h.length&&c.push(d),k&&(d.__E=d.__=null)}catch(e){n.__v=null,l||null!=a?(n.__e=s,n.__u|=l?160:32,a[a.indexOf(s)]=null):(n.__e=r.__e,n.__k=r.__k),t.__e(e,n,r)}else null==a&&n.__v===r.__v?(n.__k=r.__k,n.__e=r.__e):n.__e=N(r.__e,n,r,o,i,a,c,l,u);(p=t.diffed)&&p(n)}function T(e,n,r){for(var o=0;o<r.length;o++)R(r[o],r[++o],r[++o]);t.__c&&t.__c(n,e),e.some((function(n){try{e=n.__h,n.__h=[],e.some((function(e){e.call(n)}))}catch(e){t.__e(e,n.__v)}}))}function N(t,n,r,o,i,a,c,s,l){var p,d,m,y,h,A,b,k=r.props,_=n.props,C=n.type;if("svg"===C&&(i=!0),null!=a)for(p=0;p<a.length;p++)if((h=a[p])&&"setAttribute"in h==!!C&&(C?h.localName===C:3===h.nodeType)){t=h,a[p]=null;break}if(null==t){if(null===C)return document.createTextNode(_);t=i?document.createElementNS("http://www.w3.org/2000/svg",C):document.createElement(C,_.is&&_),a=null,s=!1}if(null===C)k===_||s&&t.data===_||(t.data=_);else{if(a=a&&e.call(t.childNodes),k=r.props||u,!s&&null!=a)for(k={},p=0;p<t.attributes.length;p++)k[(h=t.attributes[p]).name]=h.value;for(p in k)h=k[p],"children"==p||("dangerouslySetInnerHTML"==p?m=h:"key"===p||p in _||z(t,p,null,h,i));for(p in _)h=_[p],"children"==p?y=h:"dangerouslySetInnerHTML"==p?d=h:"value"==p?A=h:"checked"==p?b=h:"key"===p||s&&"function"!=typeof h||k[p]===h||z(t,p,h,k[p],i);if(d)s||m&&(d.__html===m.__html||d.__html===t.innerHTML)||(t.innerHTML=d.__html),n.__k=[];else if(m&&(t.innerHTML=""),x(t,f(y)?y:[y],n,r,o,i&&"foreignObject"!==C,a,c,a?a[0]:r.__k&&g(r,0),s,l),null!=a)for(p=a.length;p--;)null!=a[p]&&v(a[p]);s||(p="value",void 0!==A&&(A!==t[p]||"progress"===C&&!A||"option"===C&&A!==k[p])&&z(t,p,A,k[p],!1),p="checked",void 0!==b&&b!==t[p]&&z(t,p,b,k[p],!1))}return t}function R(e,n,r){try{"function"==typeof e?e(n):e.current=n}catch(e){t.__e(e,r)}}function M(e,n,r){var o,i;if(t.unmount&&t.unmount(e),(o=e.ref)&&(o.current&&o.current!==e.__e||R(o,null,n)),null!=(o=e.__c)){if(o.componentWillUnmount)try{o.componentWillUnmount()}catch(e){t.__e(e,n)}o.base=o.__P=null,e.__c=void 0}if(o=e.__k)for(i=0;i<o.length;i++)o[i]&&M(o[i],n,r||"function"!=typeof e.type);r||null==e.__e||v(e.__e),e.__=e.__e=e.__d=void 0}function q(e,t,n){return this.constructor(e,n)}function $(n,r,o){var i,a,c,s;t.__&&t.__(n,r),a=(i="function"==typeof o)?null:o&&o.__k||r.__k,c=[],s=[],B(r,n=(!i&&o||r).__k=y(A,null,[n]),a||u,u,void 0!==r.ownerSVGElement,!i&&o?[o]:a?null:r.firstChild?e.call(r.childNodes):null,c,!i&&o?o:a?a.__e:r.firstChild,i,s),n.__d=void 0,T(c,n,s)}function U(e,t){$(e,t,U)}function F(t,n,r){var o,i,a,c,s=m({},t.props);for(a in t.type&&t.type.defaultProps&&(c=t.type.defaultProps),n)"key"==a?o=n[a]:"ref"==a?i=n[a]:s[a]=void 0===n[a]&&void 0!==c?c[a]:n[a];return arguments.length>2&&(s.children=arguments.length>3?e.call(arguments,2):r),h(t.type,s,o||t.key,i||t.ref,null)}e=p.slice,t={__e:function(e,t,n,r){for(var o,i,a;t=t.__;)if((o=t.__c)&&!o.__)try{if((i=o.constructor)&&null!=i.getDerivedStateFromError&&(o.setState(i.getDerivedStateFromError(e)),a=o.__d),null!=o.componentDidCatch&&(o.componentDidCatch(e,r||{}),a=o.__d),a)return o.__E=o}catch(t){e=t}throw e}},o=0,b.prototype.setState=function(e,t){var n;n=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=m({},this.state),"function"==typeof e&&(e=e(m({},n),this.props)),e&&m(n,e),null!=e&&this.__v&&(t&&this._sb.push(t),C(this))},b.prototype.forceUpdate=function(e){this.__v&&(this.__e=!0,e&&this.__h.push(e),C(this))},b.prototype.render=A,i=[],c="function"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,s=function(e,t){return e.__v.__b-t.__v.__b},w.__r=0,l=0;var L,H,W,G,V=0,K=[],J=[],Y=t,Q=Y.__b,X=Y.__r,Z=Y.diffed,ee=Y.__c,te=Y.unmount,ne=Y.__;function re(e,t){Y.__h&&Y.__h(H,e,V||t),V=0;var n=H.__H||(H.__H={__:[],__h:[]});return e>=n.__.length&&n.__.push({__V:J}),n.__[e]}function oe(e){return V=1,ie(ve,e)}function ie(e,t,n){var r=re(L++,2);if(r.t=e,!r.__c&&(r.__=[n?n(t):ve(void 0,t),function(e){var t=r.__N?r.__N[0]:r.__[0],n=r.t(t,e);t!==n&&(r.__N=[n,r.__[1]],r.__c.setState({}))}],r.__c=H,!H.u)){var o=function(e,t,n){if(!r.__c.__H)return!0;var o=r.__c.__H.__.filter((function(e){return!!e.__c}));if(o.every((function(e){return!e.__N})))return!i||i.call(this,e,t,n);var a=!1;return o.forEach((function(e){if(e.__N){var t=e.__[0];e.__=e.__N,e.__N=void 0,t!==e.__[0]&&(a=!0)}})),!(!a&&r.__c.props===e)&&(!i||i.call(this,e,t,n))};H.u=!0;var i=H.shouldComponentUpdate,a=H.componentWillUpdate;H.componentWillUpdate=function(e,t,n){if(this.__e){var r=i;i=void 0,o(e,t,n),i=r}a&&a.call(this,e,t,n)},H.shouldComponentUpdate=o}return r.__N||r.__}function ae(e,t){var n=re(L++,3);!Y.__s&&me(n.__H,t)&&(n.__=e,n.i=t,H.__H.__h.push(n))}function ce(e,t){var n=re(L++,4);!Y.__s&&me(n.__H,t)&&(n.__=e,n.i=t,H.__h.push(n))}function se(e,t){var n=re(L++,7);return me(n.__H,t)?(n.__V=e(),n.i=t,n.__h=e,n.__V):n.__}function le(){for(var e;e=K.shift();)if(e.__P&&e.__H)try{e.__H.__h.forEach(de),e.__H.__h.forEach(fe),e.__H.__h=[]}catch(t){e.__H.__h=[],Y.__e(t,e.__v)}}Y.__b=function(e){H=null,Q&&Q(e)},Y.__=function(e,t){e&&t.__k&&t.__k.__m&&(e.__m=t.__k.__m),ne&&ne(e,t)},Y.__r=function(e){X&&X(e),L=0;var t=(H=e.__c).__H;t&&(W===H?(t.__h=[],H.__h=[],t.__.forEach((function(e){e.__N&&(e.__=e.__N),e.__V=J,e.__N=e.i=void 0}))):(t.__h.forEach(de),t.__h.forEach(fe),t.__h=[],L=0)),W=H},Y.diffed=function(e){Z&&Z(e);var t=e.__c;t&&t.__H&&(t.__H.__h.length&&(1!==K.push(t)&&G===Y.requestAnimationFrame||((G=Y.requestAnimationFrame)||pe)(le)),t.__H.__.forEach((function(e){e.i&&(e.__H=e.i),e.__V!==J&&(e.__=e.__V),e.i=void 0,e.__V=J}))),W=H=null},Y.__c=function(e,t){t.some((function(e){try{e.__h.forEach(de),e.__h=e.__h.filter((function(e){return!e.__||fe(e)}))}catch(n){t.some((function(e){e.__h&&(e.__h=[])})),t=[],Y.__e(n,e.__v)}})),ee&&ee(e,t)},Y.unmount=function(e){te&&te(e);var t,n=e.__c;n&&n.__H&&(n.__H.__.forEach((function(e){try{de(e)}catch(e){t=e}})),n.__H=void 0,t&&Y.__e(t,n.__v))};var ue="function"==typeof requestAnimationFrame;function pe(e){var t,n=function(){clearTimeout(r),ue&&cancelAnimationFrame(t),setTimeout(e)},r=setTimeout(n,100);ue&&(t=requestAnimationFrame(n))}function de(e){var t=H,n=e.__c;"function"==typeof n&&(e.__c=void 0,n()),H=t}function fe(e){var t=H;e.__c=e.__(),H=t}function me(e,t){return!e||e.length!==t.length||t.some((function(t,n){return t!==e[n]}))}function ve(e,t){return"function"==typeof t?t(e):t}function ye(e,t){for(var n in t)e[n]=t[n];return e}function he(e,t){for(var n in e)if("__source"!==n&&!(n in t))return!0;for(var r in t)if("__source"!==r&&e[r]!==t[r])return!0;return!1}function Ae(e,t){this.props=e,this.context=t}(Ae.prototype=new b).isPureReactComponent=!0,Ae.prototype.shouldComponentUpdate=function(e,t){return he(this.props,e)||he(this.state,t)};var be=t.__b;t.__b=function(e){e.type&&e.type.__f&&e.ref&&(e.props.ref=e.ref,e.ref=null),be&&be(e)};var ge="undefined"!=typeof Symbol&&Symbol.for&&Symbol.for("react.forward_ref")||3911,ke=function(e,t){return null==e?null:O(O(e).map(t))},_e={map:ke,forEach:ke,count:function(e){return e?O(e).length:0},only:function(e){var t=O(e);if(1!==t.length)throw"Children.only";return t[0]},toArray:O},Ce=t.__e;t.__e=function(e,t,n,r){if(e.then)for(var o,i=t;i=i.__;)if((o=i.__c)&&o.__c)return null==t.__e&&(t.__e=n.__e,t.__k=n.__k),o.__c(e,t);Ce(e,t,n,r)};var we=t.unmount;function xe(e,t,n){return e&&(e.__c&&e.__c.__H&&(e.__c.__H.__.forEach((function(e){"function"==typeof e.__c&&e.__c()})),e.__c.__H=null),null!=(e=ye({},e)).__c&&(e.__c.__P===n&&(e.__c.__P=t),e.__c=null),e.__k=e.__k&&e.__k.map((function(e){return xe(e,t,n)}))),e}function Se(e,t,n){return e&&n&&(e.__v=null,e.__k=e.__k&&e.__k.map((function(e){return Se(e,t,n)})),e.__c&&e.__c.__P===t&&(e.__e&&n.appendChild(e.__e),e.__c.__e=!0,e.__c.__P=n)),e}function je(){this.__u=0,this.t=null,this.__b=null}function Oe(e){var t=e.__.__c;return t&&t.__a&&t.__a(e)}function Ee(){this.u=null,this.o=null}t.unmount=function(e){var t=e.__c;t&&t.__R&&t.__R(),t&&32&e.__u&&(e.type=null),we&&we(e)},(je.prototype=new b).__c=function(e,t){var n=t.__c,r=this;null==r.t&&(r.t=[]),r.t.push(n);var o=Oe(r.__v),i=!1,a=function(){i||(i=!0,n.__R=null,o?o(c):c())};n.__R=a;var c=function(){if(! --r.__u){if(r.state.__a){var e=r.state.__a;r.__v.__k[0]=Se(e,e.__c.__P,e.__c.__O)}var t;for(r.setState({__a:r.__b=null});t=r.t.pop();)t.forceUpdate()}};r.__u++||32&t.__u||r.setState({__a:r.__b=r.__v.__k[0]}),e.then(a,a)},je.prototype.componentWillUnmount=function(){this.t=[]},je.prototype.render=function(e,t){if(this.__b){if(this.__v.__k){var n=document.createElement("div"),r=this.__v.__k[0].__c;this.__v.__k[0]=xe(this.__b,n,r.__O=r.__P)}this.__b=null}var o=t.__a&&y(A,null,e.fallback);return o&&(o.__u&=-33),[y(A,null,t.__a?null:e.children),o]};var Pe=function(e,t,n){if(++n[1]===n[0]&&e.o.delete(t),e.props.revealOrder&&("t"!==e.props.revealOrder[0]||!e.o.size))for(n=e.u;n;){for(;n.length>3;)n.pop()();if(n[1]<n[0])break;e.u=n=n[2]}};function ze(e){return this.getChildContext=function(){return e.context},e.children}function Ie(e){var t=this,n=e.i;t.componentWillUnmount=function(){$(null,t.l),t.l=null,t.i=null},t.i&&t.i!==n&&t.componentWillUnmount(),t.l||(t.i=n,t.l={nodeType:1,parentNode:n,childNodes:[],appendChild:function(e){this.childNodes.push(e),t.i.appendChild(e)},insertBefore:function(e,n){this.childNodes.push(e),t.i.appendChild(e)},removeChild:function(e){this.childNodes.splice(this.childNodes.indexOf(e)>>>1,1),t.i.removeChild(e)}}),$(y(ze,{context:t.context},e.__v),t.l)}(Ee.prototype=new b).__a=function(e){var t=this,n=Oe(t.__v),r=t.o.get(e);return r[0]++,function(o){var i=function(){t.props.revealOrder?(r.push(o),Pe(t,e,r)):o()};n?n(i):i()}},Ee.prototype.render=function(e){this.u=null,this.o=new Map;var t=O(e.children);e.revealOrder&&"b"===e.revealOrder[0]&&t.reverse();for(var n=t.length;n--;)this.o.set(t[n],this.u=[1,0,this.u]);return e.children},Ee.prototype.componentDidUpdate=Ee.prototype.componentDidMount=function(){var e=this;this.o.forEach((function(t,n){Pe(e,n,t)}))};var De="undefined"!=typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103,Be=/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image(!S)|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/,Te=/^on(Ani|Tra|Tou|BeforeInp|Compo)/,Ne=/[A-Z0-9]/g,Re="undefined"!=typeof document,Me=function(e){return("undefined"!=typeof Symbol&&"symbol"==typeof Symbol()?/fil|che|rad/:/fil|che|ra/).test(e)};function qe(e,t,n){return null==t.__k&&(t.textContent=""),$(e,t),"function"==typeof n&&n(),e?e.__c:null}b.prototype.isReactComponent={},["componentWillMount","componentWillReceiveProps","componentWillUpdate"].forEach((function(e){Object.defineProperty(b.prototype,e,{configurable:!0,get:function(){return this["UNSAFE_"+e]},set:function(t){Object.defineProperty(this,e,{configurable:!0,writable:!0,value:t})}})}));var $e=t.event;function Ue(){}function Fe(){return this.cancelBubble}function Le(){return this.defaultPrevented}t.event=function(e){return $e&&(e=$e(e)),e.persist=Ue,e.isPropagationStopped=Fe,e.isDefaultPrevented=Le,e.nativeEvent=e};var He,We={enumerable:!1,configurable:!0,get:function(){return this.class}},Ge=t.vnode;t.vnode=function(e){"string"==typeof e.type&&function(e){var t=e.props,n=e.type,r={};for(var o in t){var i=t[o];if(!("value"===o&&"defaultValue"in t&&null==i||Re&&"children"===o&&"noscript"===n||"class"===o||"className"===o)){var a=o.toLowerCase();"defaultValue"===o&&"value"in t&&null==t.value?o="value":"download"===o&&!0===i?i="":"translate"===a&&"no"===i?i=!1:"ondoubleclick"===a?o="ondblclick":"onchange"!==a||"input"!==n&&"textarea"!==n||Me(t.type)?"onfocus"===a?o="onfocusin":"onblur"===a?o="onfocusout":Te.test(o)?o=a:-1===n.indexOf("-")&&Be.test(o)?o=o.replace(Ne,"-$&").toLowerCase():null===i&&(i=void 0):a=o="oninput","oninput"===a&&r[o=a]&&(o="oninputCapture"),r[o]=i}}"select"==n&&r.multiple&&Array.isArray(r.value)&&(r.value=O(t.children).forEach((function(e){e.props.selected=-1!=r.value.indexOf(e.props.value)}))),"select"==n&&null!=r.defaultValue&&(r.value=O(t.children).forEach((function(e){e.props.selected=r.multiple?-1!=r.defaultValue.indexOf(e.props.value):r.defaultValue==e.props.value}))),t.class&&!t.className?(r.class=t.class,Object.defineProperty(r,"className",We)):(t.className&&!t.class||t.class&&t.className)&&(r.class=r.className=t.className),e.props=r}(e),e.$$typeof=De,Ge&&Ge(e)};var Ve=t.__r;t.__r=function(e){Ve&&Ve(e),He=e.__c};var Ke=t.diffed;t.diffed=function(e){Ke&&Ke(e);var t=e.props,n=e.__e;null!=n&&"textarea"===e.type&&"value"in t&&t.value!==n.value&&(n.value=null==t.value?"":t.value),He=null};var Je={ReactCurrentDispatcher:{current:{readContext:function(e){return He.__n[e.__c].props.value}}}};function Ye(e){return!!e&&e.$$typeof===De}function Qe(e){e()}function Xe(e){var t,n,r=e.v,o=e.__;try{var i=r();return!((t=o)===(n=i)&&(0!==t||1/t==1/n)||t!=t&&n!=n)}catch(e){return!0}}var Ze={useState:oe,useId:function(){var e=re(L++,11);if(!e.__){for(var t=H.__v;null!==t&&!t.__m&&null!==t.__;)t=t.__;var n=t.__m||(t.__m=[0,0]);e.__="P"+n[0]+"-"+n[1]++}return e.__},useReducer:ie,useEffect:ae,useLayoutEffect:ce,useInsertionEffect:ce,useTransition:function(){return[!1,Qe]},useDeferredValue:function(e){return e},useSyncExternalStore:function(e,t){var n=t(),r=oe({h:{__:n,v:t}}),o=r[0].h,i=r[1];return ce((function(){o.__=n,o.v=t,Xe(o)&&i({h:o})}),[e,n,t]),ae((function(){return Xe(o)&&i({h:o}),e((function(){Xe(o)&&i({h:o})}))}),[e]),n},startTransition:Qe,useRef:function(e){return V=5,se((function(){return{current:e}}),[])},useImperativeHandle:function(e,t,n){V=6,ce((function(){return"function"==typeof e?(e(t()),function(){return e(null)}):e?(e.current=t(),function(){return e.current=null}):void 0}),null==n?n:n.concat(e))},useMemo:se,useCallback:function(e,t){return V=8,se((function(){return e}),t)},useContext:function(e){var t=H.context[e.__c],n=re(L++,9);return n.c=e,t?(null==n.__&&(n.__=!0,t.sub(H)),t.props.value):e.__},useDebugValue:function(e,t){Y.useDebugValue&&Y.useDebugValue(t?t(e):e)},version:"17.0.2",Children:_e,render:qe,hydrate:function(e,t,n){return U(e,t),"function"==typeof n&&n(),e?e.__c:null},unmountComponentAtNode:function(e){return!!e.__k&&($(null,e),!0)},createPortal:function(e,t){var n=y(Ie,{__v:e,i:t});return n.containerInfo=t,n},createElement:y,createContext:function(e,t){var n={__c:t="__cC"+l++,__:e,Consumer:function(e,t){return e.children(t)},Provider:function(e){var n,r;return this.getChildContext||(n=[],(r={})[t]=this,this.getChildContext=function(){return r},this.shouldComponentUpdate=function(e){this.props.value!==e.value&&n.some((function(e){e.__e=!0,C(e)}))},this.sub=function(e){n.push(e);var t=e.componentWillUnmount;e.componentWillUnmount=function(){n.splice(n.indexOf(e),1),t&&t.call(e)}}),e.children}};return n.Provider.__=n.Consumer.contextType=n},createFactory:function(e){return y.bind(null,e)},cloneElement:function(e){return Ye(e)?F.apply(null,arguments):e},createRef:function(){return{current:null}},Fragment:A,isValidElement:Ye,isElement:Ye,isFragment:function(e){return Ye(e)&&e.type===A},findDOMNode:function(e){return e&&(e.base||1===e.nodeType&&e)||null},Component:b,PureComponent:Ae,memo:function(e,t){function n(e){var n=this.props.ref,r=n==e.ref;return!r&&n&&(n.call?n(null):n.current=null),t?!t(this.props,e)||!r:he(this.props,e)}function r(t){return this.shouldComponentUpdate=n,y(e,t)}return r.displayName="Memo("+(e.displayName||e.name)+")",r.prototype.isReactComponent=!0,r.__f=!0,r},forwardRef:function(e){function t(t){var n=ye({},t);return delete n.ref,e(n,t.ref||null)}return t.$$typeof=ge,t.render=t,t.prototype.isReactComponent=t.__f=!0,t.displayName="ForwardRef("+(e.displayName||e.name)+")",t},flushSync:function(e,t){return e(t)},unstable_batchedUpdates:function(e,t){return e(t)},StrictMode:A,Suspense:je,SuspenseList:Ee,lazy:function(e){var t,n,r;function o(o){if(t||(t=e()).then((function(e){n=e.default||e}),(function(e){r=e})),r)throw r;if(!n)throw t;return y(n,o)}return o.displayName="Lazy",o.__f=!0,o},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:Je},et=(n(6437),n(2697),n(1359),n(6216),n(6448),n(7089),n(2688)),tt=function(e){var t=e.t;return Ze.createElement("svg",{role:"img","aria-label":t(["close"]),width:"12",height:"12",version:"1.1",xmlns:"http://www.w3.org/2000/svg"},Ze.createElement("title",null,t(["close"])),Ze.createElement("line",{x1:"1",y1:"11",x2:"11",y2:"1",strokeWidth:"1"}),Ze.createElement("line",{x1:"1",y1:"1",x2:"11",y2:"11",strokeWidth:"1"}))};function nt(e){return e.split("-").map((function(e){return e.slice(0,1).toUpperCase()+e.slice(1)})).join(" ")}function rt(e){return function(e){if(Array.isArray(e))return ot(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return ot(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ot(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ot(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function it(e){return it="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},it(e)}tt.propTypes={t:n.n(et)().func},n(7575),n(646),n(987),n(3819);var at=function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];var o,i=it(n[0]);o=0===n.length?{}:"string"===i||"number"===i?Array.prototype.slice.call(n):n[0];for(var a=[],c=e.toString();c.length>0;){var s=c.match(/\{(?!\{)([\w\d]+)\}(?!\})/);if(null!==s){var l=c.substr(0,s.index);c=c.substr(s.index+s[0].length);var u=parseInt(s[1]);a.push(l),u!=u?a.push(o[s[1]]):a.push(o[u])}else a.push(c),c=""}return a};function ct(e){if(void 0!==e&&void 0!==e.lang&&"zz"!==e.lang)return e.lang;var t=(("string"==typeof window.language?window.language:null)||document.documentElement.lang||(void 0!==e&&void 0!==e.languages&&void 0!==e.languages[0]?e.languages[0]:"en")).toLowerCase(),n=new RegExp("^([\\w]+)-([\\w]+)$").exec(t);return null===n?t:n[1]}function st(e,t,n){var r=t;Array.isArray(r)||(r=[r]);for(var o=e,i=0;i<r.length;i++){if(void 0===o)return n;if(void 0!==r[i]&&r[i].endsWith("?")){var a,c=r[i].slice(0,r[i].length-1);void 0!==(a=o instanceof Map?o.get(c):o[c])&&"string"==typeof a&&(o=a)}else o=o instanceof Map?o.get(r[i]):o[r[i]]}return void 0===o||"string"!=typeof o?n:""!==o?o:void 0}function lt(e,t,n,r){var o=r,i=!1;"!"===o[0]&&(o=o.slice(1),i=!0),Array.isArray(o)||(o=[o]);var a=st(e,[t].concat(rt(o)));if(void 0===a&&void 0!==n&&(a=st(e,[n].concat(rt(o)))),void 0===a){if(i)return;return["[missing translation: ".concat(t,"/").concat(o.join("/"),"]")]}for(var c=arguments.length,s=new Array(c>4?c-4:0),l=4;l<c;l++)s[l-4]=arguments[l];return s.length>0?at.apply(void 0,[a].concat(s)):a}const ut=function(e){var t=e.text,n=e.config;if(t instanceof Array||(t=[t]),!0===n.htmlTexts){var r=!1;"<"===t[0][0]&&(r=!0);var o=t.map((function(e,t){return"string"==typeof e?Ze.createElement("span",{key:t,dangerouslySetInnerHTML:{__html:e}}):e}));return r?Ze.createElement(Ze.Fragment,null,o):Ze.createElement("span",null,o)}return Ze.createElement("span",null,t)};function pt(e){return pt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},pt(e)}function dt(){return dt=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},dt.apply(this,arguments)}function ft(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,mt(r.key),r)}}function mt(e){var t=function(e,t){if("object"!=pt(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=pt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==pt(t)?t:String(t)}function vt(e,t,n){return t=ht(t),function(e,t){if(t&&("object"===pt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,yt()?Reflect.construct(t,n||[],ht(e).constructor):t.apply(e,n))}function yt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(yt=function(){return!!e})()}function ht(e){return ht=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ht(e)}function At(e,t){return At=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},At(e,t)}var bt=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),vt(this,t,arguments)}var n,r;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&At(e,t)}(t,e),n=t,r=[{key:"render",value:function(){var e,t=this.props,n=t.checked,r=t.onlyRequiredEnabled,o=t.onToggle,i=t.name,a=t.lang,c=t.config,s=t.translations,l=t.title,u=t.description,p=t.visible,d=t.t,f=this.props.required||!1,m=this.props.optOut||!1,v=this.props.purposes||[],y="service-item-".concat(i),h="".concat(y,"-title"),A=v.map((function(e){return d(["!","purposes",e,"title?"])||nt(e)})).join(", "),b=m?Ze.createElement("span",{className:"cm-opt-out",title:d(["service","optOut","description"])},d(["service","optOut","title"])):"",g=f?Ze.createElement("span",{className:"cm-required",title:d(["service","required","description"])},d(["service","required","title"])):"";v.length>0&&(e=Ze.createElement("p",{className:"purposes"},d(["service",v.length>1?"purposes":"purpose"]),": ",A));var k=u||lt(s,a,"zz",["!","description"])||d(["!",i,"description?"]);return Ze.createElement("div",null,Ze.createElement("input",{id:y,className:"cm-list-input"+(f?" required":"")+(r?" half-checked only-required":""),"aria-labelledby":"".concat(h),"aria-describedby":"".concat(y,"-description"),disabled:f,checked:n||f,tabIndex:p?"0":"-1",type:"checkbox",onChange:function(e){o(e.target.checked)}}),Ze.createElement("label",dt({htmlFor:y,className:"cm-list-label"},f?{tabIndex:"0"}:{}),Ze.createElement("span",{className:"cm-list-title",id:"".concat(h)},l||lt(s,a,"zz",["!","title"])||d(["!",i,"title?"])||nt(i)),g,b,Ze.createElement("span",{className:"cm-switch"},Ze.createElement("div",{className:"slider round active"}))),Ze.createElement("div",{id:"".concat(y,"-description")},k&&Ze.createElement("p",{className:"cm-list-description"},Ze.createElement(ut,{config:c,text:k})),e))}}],r&&ft(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}(Ze.Component);function gt(e){return gt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},gt(e)}function kt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,_t(r.key),r)}}function _t(e){var t=function(e,t){if("object"!=gt(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=gt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==gt(t)?t:String(t)}function Ct(e,t,n){return t=xt(t),function(e,t){if(t&&("object"===gt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return St(e)}(e,wt()?Reflect.construct(t,n||[],xt(e).constructor):t.apply(e,n))}function wt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(wt=function(){return!!e})()}function xt(e){return xt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},xt(e)}function St(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function jt(e,t){return jt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},jt(e,t)}function Ot(){return Ot=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Ot.apply(this,arguments)}var Et=function(e){var t=e.services,n=e.config,r=e.consents,o=e.lang,i=e.toggle,a=e.visible,c=e.t;return t.map((function(e){var t=r[e.name];return Ze.createElement("li",{key:e.name,className:"cm-service"},Ze.createElement(bt,Ot({checked:t||e.required,onToggle:function(t){i([e],t)},config:n,lang:o,visible:a,t:c},e)))}))},Pt=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=Ct(this,t,[e]),e.manager.watch(St(n)),n.state={consents:e.manager.consents},n}var n,r;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&jt(e,t)}(t,e),n=t,(r=[{key:"componentWillUnmount",value:function(){this.props.manager.unwatch(this)}},{key:"update",value:function(e,t,n){e===this.props.manager&&"consents"===t&&this.setState({consents:n})}},{key:"render",value:function(){var e=this.props,t=e.config,n=e.t,r=e.manager,o=e.lang,i=this.state.consents,a=t.services,c=function(e,t){e.map((function(e){e.required||r.updateConsent(e.name,t)}))},s=Ze.createElement(Et,{config:t,lang:o,services:a,t:n,consents:i,toggle:c}),l=a.filter((function(e){return!e.required})),u=l.filter((function(e){return i[e.name]})).length,p=a.filter((function(e){return e.required})).length,d=u===l.length;return a.filter((function(e){return e.required})).length,Ze.createElement("ul",{className:"cm-services"},s,!t.hideToggleAll&&l.length>1&&Ze.createElement("li",{className:"cm-service cm-toggle-all"},Ze.createElement(bt,{name:"disableAll",title:n(["service","disableAll","title"]),description:n(["service","disableAll","description"]),checked:d,config:t,onlyRequiredEnabled:!d&&p>0,onToggle:function(e){c(a,e)},lang:o,t:n})))}}])&&kt(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}(Ze.Component);function zt(e){return zt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},zt(e)}function It(){return It=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},It.apply(this,arguments)}function Dt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Bt(r.key),r)}}function Bt(e){var t=function(e,t){if("object"!=zt(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=zt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==zt(t)?t:String(t)}function Tt(e,t,n){return t=Rt(t),function(e,t){if(t&&("object"===zt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,Nt()?Reflect.construct(t,n||[],Rt(e).constructor):t.apply(e,n))}function Nt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Nt=function(){return!!e})()}function Rt(e){return Rt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Rt(e)}function Mt(e,t){return Mt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Mt(e,t)}var qt=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=Tt(this,t,[e])).state={servicesVisible:!1},n}var n,r;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Mt(e,t)}(t,e),n=t,r=[{key:"render",value:function(){var e,t=this,n=this.props,r=n.allEnabled,o=n.onlyRequiredEnabled,i=n.allDisabled,a=n.services,c=n.config,s=n.onToggle,l=n.name,u=n.lang,p=n.manager,d=n.consents,f=n.title,m=n.description,v=n.t,y=this.state.servicesVisible,h=this.props.required||!1,A=this.props.purposes||[],b="purpose-item-".concat(l),g="".concat(b,"-title"),k=A.map((function(e){return v(["!","purposes",e,"title?"])||nt(e)})).join(", "),_=h?Ze.createElement("span",{className:"cm-required",title:v(["!","service","required","description"])||""},v(["service","required","title"])):"";A.length>0&&(e=Ze.createElement("p",{className:"purposes"},v(["purpose",A.length>1?"purposes":"purpose"]),": ",k));var C=function(e){e.preventDefault();var n="false"!==e.currentTarget.getAttribute("aria-expanded");e.currentTarget.setAttribute("aria-expanded",!n),t.setState({servicesVisible:!y})},w=Ze.createElement(Et,{config:c,lang:u,services:a,toggle:function(e,t){e.map((function(e){e.required||p.updateConsent(e.name,t)}))},consents:d,visible:y,t:v}),x=m||v(["!","purposes",l,"description"]);return Ze.createElement(Ze.Fragment,null,Ze.createElement("input",{id:b,className:"cm-list-input"+(h?" required":"")+(r?"":o?" only-required":" half-checked"),"aria-labelledby":"".concat(g),"aria-describedby":"".concat(b,"-description"),disabled:h,checked:r||!i&&!o,type:"checkbox",onChange:function(e){s(e.target.checked)}}),Ze.createElement("label",It({htmlFor:b,className:"cm-list-label"},h?{tabIndex:"0"}:{}),Ze.createElement("span",{className:"cm-list-title",id:"".concat(g)},f||v(["!","purposes",l,"title?"])||nt(l)),_,Ze.createElement("span",{className:"cm-switch"},Ze.createElement("div",{className:"slider round active"}))),Ze.createElement("div",{id:"".concat(b,"-description")},x&&Ze.createElement("p",{className:"cm-list-description"},Ze.createElement(ut,{config:c,text:x})),e),a.length>0&&Ze.createElement("div",{className:"cm-services"},Ze.createElement("div",{className:"cm-caret"},Ze.createElement("a",{href:"#","aria-haspopup":"true","aria-expanded":"false",tabIndex:"0",onClick:C,onKeyDown:function(e){32===e.keyCode&&C(e)}},y&&Ze.createElement("span",null,"↑")||Ze.createElement("span",null,"↓")," ",a.length," ",v(["purposeItem",a.length>1?"services":"service"]))),Ze.createElement("ul",{className:"cm-content"+(y?" expanded":"")},w)))}}],r&&Dt(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}(Ze.Component);function $t(e){return $t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},$t(e)}function Ut(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return Ft(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Ft(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,c=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){c=!0,i=e},f:function(){try{a||null==n.return||n.return()}finally{if(c)throw i}}}}function Ft(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function Lt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Ht(r.key),r)}}function Ht(e){var t=function(e,t){if("object"!=$t(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=$t(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==$t(t)?t:String(t)}function Wt(e,t,n){return t=Vt(t),function(e,t){if(t&&("object"===$t(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Kt(e)}(e,Gt()?Reflect.construct(t,n||[],Vt(e).constructor):t.apply(e,n))}function Gt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Gt=function(){return!!e})()}function Vt(e){return Vt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Vt(e)}function Kt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Jt(e,t){return Jt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Jt(e,t)}var Yt=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=Wt(this,t,[e]),e.manager.watch(Kt(n)),n.state={consents:e.manager.consents},n}var n,r;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Jt(e,t)}(t,e),n=t,r=[{key:"componentWillUnmount",value:function(){this.props.manager.unwatch(this)}},{key:"update",value:function(e,t,n){e===this.props.manager&&"consents"===t&&this.setState({consents:n})}},{key:"render",value:function(){var e,t=this.props,n=t.config,r=t.t,o=t.manager,i=t.lang,a=this.state.consents,c=n.services,s={},l=Ut(c);try{for(l.s();!(e=l.n()).done;){var u,p=e.value,d=Ut(p.purposes);try{for(d.s();!(u=d.n()).done;){var f=u.value;void 0===s[f]&&(s[f]=[]),s[f].push(p)}}catch(e){d.e(e)}finally{d.f()}}}catch(e){l.e(e)}finally{l.f()}var m=function(e,t){e.map((function(e){var n,r=Ut(s[e]);try{for(r.s();!(n=r.n()).done;){var i=n.value;i.required||o.updateConsent(i.name,t)}}catch(e){r.e(e)}finally{r.f()}}))},v=function(e){var t,n={allEnabled:!0,onlyRequiredEnabled:!0,allDisabled:!0,allRequired:!0},r=Ut(e);try{for(r.s();!(t=r.n()).done;){var o=t.value;o.required||(n.allRequired=!1),a[o.name]?(o.required||(n.onlyRequiredEnabled=!1),n.allDisabled=!1):o.required||(n.allEnabled=!1)}}catch(e){r.e(e)}finally{r.f()}return n.allDisabled&&(n.onlyRequiredEnabled=!1),n},y=n.purposeOrder||[],h=Object.keys(s).sort((function(e,t){return y.indexOf(e)-y.indexOf(t)})).map((function(e){var t=v(s[e]);return Ze.createElement("li",{key:e,className:"cm-purpose"},Ze.createElement(qt,{allEnabled:t.allEnabled,allDisabled:t.allDisabled,onlyRequiredEnabled:t.onlyRequiredEnabled,required:t.allRequired,consents:a,name:e,config:n,lang:i,manager:o,onToggle:function(t){m([e],t)},services:s[e],t:r}))})),A=Object.keys(s).filter((function(e){var t,n=Ut(s[e]);try{for(n.s();!(t=n.n()).done;)if(!t.value.required)return!0}catch(e){n.e(e)}finally{n.f()}return!1})),b=v(c);return Ze.createElement("ul",{className:"cm-purposes"},h,A.length>1&&Ze.createElement("li",{className:"cm-purpose cm-toggle-all"},Ze.createElement(qt,{name:"disableAll",title:r(["service","disableAll","title"]),description:r(["service","disableAll","description"]),allDisabled:b.allDisabled,allEnabled:b.allEnabled,onlyRequiredEnabled:b.onlyRequiredEnabled,onToggle:function(e){m(Object.keys(s),e)},manager:o,consents:a,config:n,lang:i,services:[],t:r})))}}],r&&Lt(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}(Ze.Component);function Qt(e){return Qt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Qt(e)}function Xt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Zt(r.key),r)}}function Zt(e){var t=function(e,t){if("object"!=Qt(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=Qt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Qt(t)?t:String(t)}function en(e,t,n){return t=nn(t),function(e,t){if(t&&("object"===Qt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,tn()?Reflect.construct(t,n||[],nn(e).constructor):t.apply(e,n))}function tn(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(tn=function(){return!!e})()}function nn(e){return nn=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},nn(e)}function rn(e,t){return rn=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},rn(e,t)}var on=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),en(this,t,arguments)}var n,r;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&rn(e,t)}(t,e),n=t,(r=[{key:"componentDidMount",value:function(){this.consentModalRef&&this.consentModalRef.focus()}},{key:"render",value:function(){var e,t,n,r=this,o=this.props,i=o.hide,a=o.confirming,c=o.saveAndHide,s=o.acceptAndHide,l=o.declineAndHide,u=o.config,p=o.manager,d=o.lang,f=o.t,m=u.embedded,v=void 0===u.groupByPurpose||u.groupByPurpose;u.mustConsent||(e=Ze.createElement("button",{title:f(["close"]),"aria-label":f(["close"]),className:"hide",type:"button",onClick:i,tabIndex:"0",ref:function(e){r.consentModalRef=e}},Ze.createElement(tt,{t:f}))),u.hideDeclineAll||p.confirmed||(t=Ze.createElement("button",{disabled:a,className:"cm-btn cm-btn-decline cm-btn-danger cn-decline",type:"button",onClick:l},f(["decline"])));var y,h,A,b=Ze.createElement("button",{disabled:a,className:"cm-btn cm-btn-success cm-btn-info cm-btn-accept",type:"button",onClick:c},f([p.confirmed?"save":"acceptSelected"]));u.acceptAll&&!p.confirmed&&(n=Ze.createElement("button",{disabled:a,className:"cm-btn cm-btn-success cm-btn-accept-all",type:"button",onClick:s},f(["acceptAll"]))),void 0!==u.privacyPolicy?"string"==typeof u.privacyPolicy?y=u.privacyPolicy:"object"===Qt(u.privacyPolicy)&&(y=u.privacyPolicy[d]||u.privacyPolicy.default):void 0!==(y=f(["!","privacyPolicyUrl"],{lang:d}))&&(y=y.join("")),void 0!==y&&(h=Ze.createElement("a",{key:"ppLink",href:y,target:"_blank",rel:"noopener"},f(["privacyPolicy","name"]))),A=v?Ze.createElement(Yt,{t:f,config:u,manager:p,lang:d}):Ze.createElement(Pt,{t:f,config:u,manager:p,lang:d});var g=Ze.createElement("div",{className:"cm-modal cm-klaro"},Ze.createElement("div",{className:"cm-header"},e,Ze.createElement("h1",{className:"title"},Ze.createElement(ut,{config:u,text:f(["consentModal","title"])})),Ze.createElement("p",null,Ze.createElement(ut,{config:u,text:[f(["consentModal","description"])].concat(h&&[" "].concat(f(["privacyPolicy","text"],{privacyPolicy:h}))||[])}))),Ze.createElement("div",{className:"cm-body"},A),Ze.createElement("div",{className:"cm-footer"},Ze.createElement("div",{className:"cm-footer-buttons"},t,b,n),!u.disablePoweredBy&&Ze.createElement("p",{className:"cm-powered-by"},Ze.createElement("a",{target:"_blank",href:u.poweredBy||"https://kiprotect.com/klaro",rel:"noopener"},f(["poweredBy"])))));return m?Ze.createElement("div",{id:"cookieScreen",className:"cookie-modal cm-embedded"},g):Ze.createElement("div",{id:"cookieScreen",className:"cookie-modal"},Ze.createElement("div",{className:"cm-bg",onClick:i}),g)}}])&&Xt(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}(Ze.Component);function an(e){return an="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},an(e)}function cn(e,t,n){void 0===n&&(n=!0);for(var r=Object.keys(t),o=0;o<r.length;o++){var i=r[o],a=t[i],c=e[i];"string"==typeof a?(n||void 0===c)&&(e[i]=a):"object"===an(a)&&("object"===an(c)?cn(c,a,n):(n||void 0===c)&&(e[i]=a))}return e}function sn(e){return sn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},sn(e)}function ln(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function un(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,hn(r.key),r)}}function pn(e,t,n){return t=fn(t),function(e,t){if(t&&("object"===sn(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return mn(e)}(e,dn()?Reflect.construct(t,n||[],fn(e).constructor):t.apply(e,n))}function dn(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(dn=function(){return!!e})()}function fn(e){return fn=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},fn(e)}function mn(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function vn(e,t){return vn=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},vn(e,t)}function yn(e,t,n){return(t=hn(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function hn(e){var t=function(e,t){if("object"!=sn(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=sn(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==sn(t)?t:String(t)}n(2745);var An=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),yn(mn(n=pn(this,t,[e])),"executeButtonClicked",(function(e,t,r){var o=n.state.modal,i=0;e&&(i=n.props.manager.changeAll(t));var a=n.props.manager.confirmed;if(n.props.manager.saveAndApplyConsents(r),e&&!a&&(o||n.props.config.mustConsent)){var c=function(){n.setState({confirming:!1}),n.props.hide()};n.setState({confirming:!0}),0===i?c():setTimeout(c,800)}else n.props.hide()})),yn(mn(n),"saveAndHide",(function(){n.executeButtonClicked(!1,!1,"save")})),yn(mn(n),"acceptAndHide",(function(){n.executeButtonClicked(!0,!0,"accept")})),yn(mn(n),"declineAndHide",(function(){n.executeButtonClicked(!0,!1,"decline")})),n.state={modal:e.modal,confirming:!1},n}var n,r;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&vn(e,t)}(t,e),n=t,r=[{key:"componentDidUpdate",value:function(e){e.modal!==this.props.modal&&this.setState({modal:this.props.modal}),this.noticeRef&&this.noticeRef.focus()}},{key:"render",value:function(){var e,t,n,r=this,o=this.props,i=o.lang,a=o.config,c=o.show,s=o.manager,l=o.testing,u=o.t,p=this.state,d=p.confirming,f=p.modal,m=a.embedded,v=a.noticeAsModal,y=a.hideLearnMore,h=a.purposeOrder||[],A=function(e){for(var t=new Set([]),n=0;n<e.services.length;n++)for(var r=e.services[n].purposes||[],o=0;o<r.length;o++)t.add(r[o]);return Array.from(t)}(a).filter((function(e){return"functional"!==e})).sort((function(e,t){return h.indexOf(e)-h.indexOf(t)})),b=A.map((function(e){return u(["!","purposes",e,"title?"])||nt(e)}));t=1===b.length?b[0]:[].concat((n=b.slice(0,-2),function(e){if(Array.isArray(e))return ln(e)}(n)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(n)||function(e,t){if(e){if("string"==typeof e)return ln(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ln(e,t):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),[b.slice(-2).join(" & ")]).join(", "),void 0!==a.privacyPolicy?"string"==typeof a.privacyPolicy?e=a.privacyPolicy:"object"===sn(a.privacyPolicy)&&(e=a.privacyPolicy[i]||a.privacyPolicy.default):void 0!==(e=u(["!","privacyPolicyUrl"],{lang:i}))&&(e=e.join(""));var g,k=function(e){e.preventDefault(),r.setState({modal:!0})};if(s.changed&&(g=Ze.createElement("p",{className:"cn-changes"},u(["consentNotice","changeDescription"]))),!c&&!l&&!d)return Ze.createElement("div",null);var _,C=(!a.mustConsent||v)&&!s.confirmed&&!a.noNotice,w=a.hideDeclineAll?"":Ze.createElement("button",{className:"cm-btn cm-btn-danger cn-decline",type:"button",onClick:this.declineAndHide},u(["decline"])),x=a.acceptAll?Ze.createElement("button",{className:"cm-btn cm-btn-success",type:"button",onClick:this.acceptAndHide},u(["ok"])):Ze.createElement("button",{className:"cm-btn cm-btn-success",type:"button",onClick:this.saveAndHide},u(["ok"])),S=function(){return v?Ze.createElement("button",{key:"learnMoreLink",className:"cm-btn cm-btn-lern-more cm-btn-info",type:"button",onClick:k},u(["consentNotice","learnMore"])):Ze.createElement("a",{key:"learnMoreLink",className:"cm-link cn-learn-more",href:"#",onClick:k},u(["consentNotice","learnMore"]))};if(void 0!==e&&(_=Ze.createElement("a",{key:"ppLink",href:e},u(["privacyPolicy","name"]))),f||s.confirmed&&!l||!s.confirmed&&a.mustConsent)return Ze.createElement(on,{t:u,lang:i,config:a,hide:function(){a.mustConsent&&!a.acceptAll||(s.confirmed&&!l?r.props.hide():r.setState({modal:!1}),setTimeout((function(){r.noticeRef&&r.noticeRef.focus()}),1))},confirming:d,declineAndHide:this.declineAndHide,saveAndHide:this.saveAndHide,acceptAndHide:this.acceptAndHide,manager:s});var j=Ze.createElement("div",{role:"dialog","aria-describedby":"id-cookie-notice","aria-labelledby":"id-cookie-title",id:"klaro-cookie-notice",tabIndex:"0",autoFocus:!0,ref:function(e){r.noticeRef=e},className:"cookie-notice ".concat(C||l?"":"cookie-notice-hidden"," ").concat(v?"cookie-modal-notice":""," ").concat(m?"cn-embedded":"")},Ze.createElement("div",{className:"cn-body"},u(["!","consentNotice","title"])&&Ze.createElement("h2",{id:"id-cookie-title"},u(["consentNotice","title"])),Ze.createElement("p",{id:"id-cookie-notice"},Ze.createElement(ut,{config:a,text:u(["consentNotice","description"],{purposes:Ze.createElement("strong",{key:"strong"},t),privacyPolicy:_,learnMoreLink:S()})})),l&&Ze.createElement("p",null,u(["consentNotice","testing"])),g,Ze.createElement("div",{className:"cn-ok"},!y&&S(),Ze.createElement("div",{className:"cn-buttons"},w,x))));return v?Ze.createElement("div",{id:"cookieScreen",className:"cookie-modal"},Ze.createElement("div",{className:"cm-bg"}),j):j}}],r&&un(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}(Ze.Component);function bn(e){return bn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},bn(e)}function gn(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,kn(r.key),r)}}function kn(e){var t=function(e,t){if("object"!=bn(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=bn(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==bn(t)?t:String(t)}function _n(e,t,n){return t=wn(t),function(e,t){if(t&&("object"===bn(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return xn(e)}(e,Cn()?Reflect.construct(t,n||[],wn(e).constructor):t.apply(e,n))}function Cn(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Cn=function(){return!!e})()}function wn(e){return wn=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},wn(e)}function xn(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Sn(e,t){return Sn=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Sn(e,t)}var jn=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=_n(this,t,[e]),e.manager.watch(xn(n)),n.state={show:e.show>0||!e.manager.confirmed},n}var n,r;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Sn(e,t)}(t,e),n=t,r=[{key:"componentWillUnmount",value:function(){this.props.manager.unwatch(this)}},{key:"update",value:function(e,t){e===this.props.manager&&"applyConsents"===t&&(!this.props.config.embedded&&this.props.manager.confirmed?this.setState({show:!1}):this.forceUpdate())}},{key:"notifyApi",value:function(){var e=this.props,t=e.api,n=e.modal,r=e.show,o=e.config;if(void 0!==t){if(n||r>0)return;this.props.manager.confirmed||this.props.manager.auxiliaryStore.getWithKey("shown-before")||(t.update(this,"showNotice",{config:o}),this.props.manager.auxiliaryStore.setWithKey("shown-before",!0))}}},{key:"componentDidMount",value:function(){this.notifyApi()}},{key:"componentDidUpdate",value:function(e){if(e.show!==this.props.show){this.notifyApi();var t=this.props.show>0||!this.props.manager.confirmed;t!==this.state.show&&this.setState({show:t})}}},{key:"render",value:function(){var e=this,t=this.props,n=t.config,r=t.t,o=t.lang,i=t.testing,a=t.manager,c=t.modal,s=this.state.show,l=n.additionalClass,u=n.embedded,p=n.stylePrefix;return Ze.createElement("div",{lang:o,className:(p||"klaro")+(void 0!==l?" "+l:"")},Ze.createElement(An,{key:"app-"+this.props.show,t:r,testing:i,show:s,lang:o,modal:c,hide:function(){u||e.setState({show:!1})},config:n,manager:a}))}}],r&&gn(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}(Ze.Component);function On(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const En=function(e){var t=e.manager,n=e.style,r=e.config,o=e.t,i=e.lang,a=e.service,c=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i,a,c=[],s=!0,l=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=i.call(n)).done)&&(c.push(r.value),c.length!==t);s=!0);}catch(e){l=!0,o=e}finally{try{if(!s&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return c}}(e,t)||function(e,t){if(e){if("string"==typeof e)return On(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?On(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(oe(0),2),s=c[0],l=c[1],u=r.additionalClass,p=(r.embedded,r.stylePrefix);ae((function(){var e={update:function(){return l(s+1)}};return t.watch(e),function(){t.unwatch(e)}}));var d=lt(a.translations||{},i,"zz",["!","title"])||o(["!",a.name,"title?"])||nt(a.name);return Ze.createElement("div",{lang:i,className:(p||"klaro")+(void 0!==u?" "+u:"")+" cm-as-context-notice"},Ze.createElement("div",{className:"context-notice"+(void 0!==n?" cm-".concat(n):"")},Ze.createElement("p",null,o(["contextualConsent","description"],{title:d})),Ze.createElement("p",{className:"cm-buttons"},Ze.createElement("button",{className:"cm-btn cm-btn-success",type:"button",onClick:function(){t.updateConsent(a.name,!0),t.applyConsents(!1,!0,a.name),t.updateConsent(a.name,!1)}},o(["contextualConsent","acceptOnce"])),null!==t.store.get()?Ze.createElement("button",{className:"cm-btn cm-btn-success-var",type:"button",onClick:function(){t.updateConsent(a.name,!0),t.confirmed?(t.saveConsents("contextual-accept"),t.applyConsents(!1,!0,a.name)):t.applyConsents(!1,!0,a.name)}},o(["contextualConsent","acceptAlways"])):""),null===t.store.get()&&r.showDescriptionEmptyStore?Ze.createElement(Ze.Fragment,null,Ze.createElement("p",{className:"ccn-description-empty-store"},o(["contextualConsent","descriptionEmptyStore"],{title:d,link:Ze.createElement("a",{key:"modalLink",className:"ccn-modal-link",href:"#",onClick:function(e){e.preventDefault(),Sr(r,!0)}},o(["contextualConsent","modalLinkText"]))}))):""))};var Pn=n(2690);function zn(e){return zn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},zn(e)}function In(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Dn(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?In(Object(n),!0).forEach((function(t){var r,o,i;r=e,o=t,i=n[t],(o=Tn(o))in r?Object.defineProperty(r,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):r[o]=i})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):In(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Bn(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Tn(r.key),r)}}function Tn(e){var t=function(e,t){if("object"!=zn(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=zn(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==zn(t)?t:String(t)}n(76);var Nn=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.url=t,this.id=n,this.opts=Object.assign({},r)}var t,n;return t=e,(n=[{key:"getLocationData",value:function(e){var t=e.records||{};return{pathname:void 0===t.savePathname||t.savePathname?location.pathname:void 0,port:""!==location.port?parseInt(location.port):0,hostname:location.hostname,protocol:location.protocol.slice(0,location.protocol.length-1)}}},{key:"getUserData",value:function(){return{client_version:Pr(),client_name:"klaro:web"}}},{key:"getBaseConsentData",value:function(e){return{location_data:this.getLocationData(e),user_data:this.getUserData(e)}}},{key:"update",value:function(e,t,n){if("saveConsents"===t){if("save"===n.type&&0===Object.keys(n.changes).length)return;var r=Dn(Dn({},this.getBaseConsentData(e.config)),{},{consent_data:{consents:n.consents,changes:"save"===n.type?n.changes:void 0,type:n.type,config:e.config.id}});this.submitConsentData(r)}else if("showNotice"===t){var o=Dn(Dn({},this.getBaseConsentData(n.config)),{},{consent_data:{consents:{},changes:{},type:"show",config:n.config.id}});this.submitConsentData(o)}}},{key:"apiRequest",value:function(e,t,n,r){var o=this;return new Promise((function(i,a){var c,s,l=new XMLHttpRequest;l.addEventListener("load",(function(){var e=JSON.parse(l.response);l.status<200||l.status>=300?(e.status=l.status,a(e)):i(e,l.status)})),l.addEventListener("error",(function(){a({status:0,xhr:l})})),void 0!==n&&("GET"===e?t+="?"+(s=n,"?"+Object.keys(s).map((function(e){return e+"="+encodeURIComponent(s[e])})).join("&")):c=JSON.stringify(n)),l.open(e,o.url+t),void 0!==c&&l.setRequestHeader("Content-Type",r||"application/json;charset=UTF-8"),l.send(c)}))}},{key:"submitConsentData",value:function(e){return this.apiRequest("POST","/v1/privacy-managers/"+this.id+"/submit",e,"text/plain;charset=UTF-8")}},{key:"loadConfig",value:function(e){return this.apiRequest("GET","/v1/privacy-managers/"+this.id+"/config.json?name="+e+(this.opts.testing?"&testing=true":""))}},{key:"loadConfigs",value:function(){return this.apiRequest("GET","/v1/privacy-managers/"+this.id+"/configs.json"+(this.opts.testing?"&testing=true":""))}}])&&Bn(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),Rn=(n(7132),n(4062),n(5482));function Mn(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i,a,c=[],s=!0,l=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=i.call(n)).done)&&(c.push(r.value),c.length!==t);s=!0);}catch(e){l=!0,o=e}finally{try{if(!s&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return c}}(e,t)||qn(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function qn(e,t){if(e){if("string"==typeof e)return $n(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?$n(e,t):void 0}}function $n(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function Un(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function Fn(e){for(var t=new Map([]),n=0,r=Object.keys(e);n<r.length;n++){var o=r[n],i=e[o];"string"==typeof o&&("string"==typeof i||null===i?t.set(o,i):t.set(o,Fn(i)))}return t}function Ln(e,t,n,r){var o=function(e,t,n){if(n instanceof Map){var r=new Map([]);Ln(r,n,!0,!1),e.set(t,r)}else e.set(t,n)};if(!(t instanceof Map&&e instanceof Map))throw new Error("Parameters are not maps!");void 0===n&&(n=!0),void 0===r&&(r=!1),r&&(e=new e.constructor(e));var i,a=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return Un(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Un(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,c=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){c=!0,i=e},f:function(){try{a||null==n.return||n.return()}finally{if(c)throw i}}}}(t.keys());try{for(a.s();!(i=a.n()).done;){var c=i.value,s=t.get(c),l=e.get(c);if(e.has(c))if(s instanceof Map&&l instanceof Map)e.set(c,Ln(l,s,n,r));else{if(!n)continue;o(e,c,s)}else o(e,c,s)}}catch(e){a.e(e)}finally{a.f()}return e}var Hn={top:{_meta:{incompatibleWith:["bottom"]},"notice-top":"20px","notice-bottom":"auto"},bottom:{_meta:{incompatibleWith:["top"]},"notice-bottom":"20px","notice-top":"auto"},left:{_meta:{incompatibleWith:["wide"]},"notice-left":"20px","notice-right":"auto"},right:{_meta:{incompatibleWith:["wide"]},"notice-right":"20px","notice-left":"auto"},wide:{"notice-left":"20px","notice-right":"auto","notice-max-width":"calc(100vw - 60px)","notice-position":"fixed"},light:{"button-text-color":"#fff",dark1:"#fafafa",dark2:"#777",dark3:"#555",light1:"#444",light2:"#666",light3:"#111",green3:"#f00"}},Wn=n(5292),Gn=n.n(Wn),Vn=n(9893),Kn=n.n(Vn),Jn=n(9383),Yn=n.n(Jn),Qn=n(6884),Xn=n.n(Qn),Zn=n(9088),er=n.n(Zn),tr=n(7997),nr=n.n(tr),rr=n(679),or={};function ir(e){return ir="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ir(e)}function ar(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function cr(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?ar(Object(n),!0).forEach((function(t){var r,o,i;r=e,o=t,i=n[t],o=function(e){var t=function(e,t){if("object"!=ir(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=ir(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==ir(t)?t:String(t)}(o),o in r?Object.defineProperty(r,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):r[o]=i})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ar(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function sr(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=lr(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,c=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){c=!0,i=e},f:function(){try{a||null==n.return||n.return()}finally{if(c)throw i}}}}function lr(e,t){if(e){if("string"==typeof e)return ur(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ur(e,t):void 0}}function ur(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}or.styleTagTransform=nr(),or.setAttributes=Xn(),or.insert=Yn().bind(null,"head"),or.domAPI=Kn(),or.insertStyleElement=er(),Gn()(rr.A,or),rr.A&&rr.A.locals&&rr.A.locals;var pr,dr=new Map([]),fr={},mr={};function vr(e,t){return(e.elementID||"klaro")+(t?"-ide":"")}function yr(e,t){var n=vr(e,t),r=document.getElementById(n);return null===r&&((r=document.createElement("div")).id=n,document.body.appendChild(r)),r}function hr(e,t){if(void 0===fr[e]?fr[e]=[t]:fr[e].push(t),void 0!==mr[e]){var n,r=sr(mr[e]);try{for(r.s();!(n=r.n()).done;){var o=n.value;if(!1===t.apply(void 0,function(e){if(Array.isArray(e))return ur(e)}(i=o)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(i)||lr(i)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()))break}}catch(e){r.e(e)}finally{r.f()}}var i}function Ar(e){for(var t=fr[e],n=arguments.length,r=new Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];if(void 0===mr[e]?mr[e]=[r]:mr[e].push(r),void 0!==t){var i,a=sr(t);try{for(a.s();!(i=a.n()).done;)if(!0===i.value.apply(void 0,r))return!0}catch(e){a.e(e)}finally{a.f()}}}function br(e){var t=new Map([]);return Ln(t,dr),Ln(t,Fn(e.translations||{})),t}var gr=1;function kr(e,t){if(void 0!==e){t=t||{},Ar("render",e=wr(e),t);var n=0;t.show&&(n=gr++);var r=yr(e),o=Er(e);void 0!==t.api&&o.watch(t.api),function(e,t,n){if(void 0!==e.styling){var r=Object.assign({},e.styling);if(void 0!==r.theme){var o=r.theme;o instanceof Array||(o=[o]),r={};var i,a=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=qn(e))){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,c=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){c=!0,i=e},f:function(){try{a||null==n.return||n.return()}finally{if(c)throw i}}}}(o);try{for(a.s();!(i=a.n()).done;){var c=t[i.value];if(void 0!==c)for(var s=0,l=Object.entries(c);s<l.length;s++){var u=Mn(l[s],2),p=u[0],d=u[1];p.startsWith("_")||(r[p]=d)}}}catch(e){a.e(e)}finally{a.f()}for(var f=0,m=Object.entries(e.styling);f<m.length;f++){var v=Mn(m[f],2),y=v[0],h=v[1];"theme"!==y&&(r[y]=h)}}void 0===n&&(n=document.documentElement);for(var A=0,b=Object.entries(r);A<b.length;A++){var g=Mn(b[A],2),k=g[0],_=g[1];n.style.setProperty("--"+k,_)}window.document.documentMode&&n===document.documentElement&&(0,Rn.N3)(r)}}(e,Hn,r);var i=ct(e),a=br(e),c=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return lt.apply(void 0,[a,i,e.fallbackLang||"zz"].concat(n))},s=qe(Ze.createElement(jn,{t:c,lang:i,manager:o,config:e,testing:t.testing,modal:t.modal,api:t.api,show:n}),r);return _r(o,c,i,e,t),s}}function _r(e,t,n,r,o){var i,a=[],c=sr(r.services);try{for(c.s();!(i=c.n()).done;){var s,l=i.value,u=e.getConsent(l.name)&&e.confirmed,p=sr(document.querySelectorAll("[data-name='"+l.name+"']"));try{for(p.s();!(s=p.n()).done;){var d=s.value,f=(0,Rn.RT)(d);if("placeholder"!==f.type&&("IFRAME"===d.tagName||"DIV"===d.tagName)){var m=d.previousElementSibling;if(null!==m){var v=(0,Rn.RT)(m);"placeholder"===v.type&&v.name===l.name||(m=null)}if(null===m){(m=document.createElement("DIV")).style.maxWidth=d.width+"px",m.style.height=d.height+"px",(0,Rn.X7)({type:"placeholder",name:l.name},m),u&&(m.style.display="none"),d.parentElement.insertBefore(m,d);var y=qe(Ze.createElement(En,{t,lang:n,manager:e,config:r,service:l,style:f.style,testing:o.testing,api:o.api}),m);a.push(y)}"IFRAME"===d.tagName&&(f.src=d.src),void 0===f["modified-by-klaro"]&&void 0===d.style.display&&(f["original-display"]=d.style.display),f["modified-by-klaro"]="yes",(0,Rn.X7)(f,d),u||(d.src="",d.style.display="none")}}}catch(e){p.e(e)}finally{p.f()}}}catch(e){c.e(e)}finally{c.f()}return a}function Cr(e){/complete|interactive|loaded/.test(document.readyState)?e():window.addEventListener("DOMContentLoaded",e)}function wr(e){var t=cr({},e);return 2===t.version||(void 0!==t.apps&&void 0===t.services&&(t.services=t.apps,console.warn("Warning, your configuration file is outdated. Please change `apps` to `services`"),delete t.apps),void 0!==t.translations&&void 0!==t.translations.apps&&void 0===t.services&&(t.translations.services=t.translations.apps,console.warn("Warning, your configuration file is outdated. Please change `apps` to `services` in the `translations` key"),delete t.translations.apps)),t}function xr(e){if(void 0!==window){var t=(0,Rn.XZ)("klaro"),n=new Map(decodeURI(location.hash.slice(1)).split("&").map((function(e){return e.split("=")})).map((function(e){return 1===e.length?[e[0],!0]:e}))),r=n.get("klaro-testing"),o=function(e){var t=cr(cr({},e),{},{testing:r});pr.noAutoLoad||pr.testing&&!t.testing||kr(pr,t)};if(void 0!==e)pr=e,Cr((function(){return o({})}));else if(null!==t){var i=function(e){var t=e.getAttribute("data-klaro-id");if(null!==t)return t;var n=/.*\/privacy-managers\/([a-f0-9]+)\/klaro.*\.js/.exec(e.src);return null!==n?n[1]:null}(t),a=function(e){var t=e.getAttribute("data-klaro-api-url");if(null!==t)return t;var n=/(http(?:s)?:\/\/[^/]+)\/v1\/privacy-managers\/([a-f0-9]+)\/klaro.*\.js/.exec(e.src);return null!==n?n[1]:null}(t),c=function(e,t){if(e.has("klaro-config"))return e.get("klaro-config");var n=t.getAttribute("data-klaro-config");return null!==n?n:"default"}(n,t);if(null!==i){var s=new Nn(a,i,{testing:r});if(void 0!==window.klaroApiConfigs){if(!0===Ar("apiConfigsLoaded",window.klaroApiConfigs,s))return;var l=window.klaroApiConfigs.find((function(e){return e.name===c&&("active"===e.status||r)}));void 0!==l?(pr=l,Cr((function(){return o({api:s})}))):Ar("apiConfigsFailed",{})}else s.loadConfig(c).then((function(e){!0!==Ar("apiConfigsLoaded",[e],s)&&(pr=e,Cr((function(){return o({api:s})})))})).catch((function(e){console.error(e,"cannot load Klaro configs"),Ar("apiConfigsFailed",e)}))}else{var u=t.getAttribute("data-klaro-config")||"klaroConfig";void 0!==(pr=window[u])&&Cr((function(){return o({})}))}}n.has("klaro-ide")&&function(e){var t=/^(.*)(\/[^/]+)$/.exec(e.src)[1]||"",n=document.createElement("script");n.src=""!==t?t+"/ide.js":"ide.js",n.type="application/javascript";var r,o=sr(n.attributes);try{for(o.s();!(r=o.n()).done;){var i=r.value;n.setAttribute(i.name,i.value)}}catch(e){o.e(e)}finally{o.f()}document.head.appendChild(n)}(t)}}function Sr(e,t,n){return kr(e=e||pr,{show:!0,modal:t,api:n}),!1}var jr={};function Or(){for(var e in Object.keys(jr))delete jr[e]}function Er(e){var t=(e=e||pr).storageName||e.cookieName||"default";return void 0===jr[t]&&(jr[t]=new Pn.default(wr(e))),jr[t]}function Pr(){return"v"==="v0.7.19"[0]?"v0.7.19".slice(1):"v0.7.19"}var zr=Fn({ca:{acceptAll:"Accepta-les totes",acceptSelected:"Accepta les escollides",service:{disableAll:{description:"Useu aquest botó per a habilitar o deshabilitar totes les aplicacions.",title:"Habilita/deshabilita totes les aplicacions"},optOut:{description:"Aquesta aplicació es carrega per defecte, però podeu desactivar-la",title:"(opt-out)"},purpose:"Finalitat",purposes:"Finalitats",required:{description:"Aquesta aplicació es necessita sempre",title:"(necessària)"}},close:"Tanca",consentModal:{description:"Aquí podeu veure i personalitzar la informació que recopilem sobre vós.",privacyPolicy:{name:"política de privadesa",text:"Per a més informació, consulteu la nostra {privacyPolicy}."},title:"Informació que recopilem"},consentNotice:{changeDescription:"Hi ha hagut canvis des de la vostra darrera visita. Actualitzeu el vostre consentiment.",description:"Recopilem i processem la vostra informació personal amb les següents finalitats: {purposes}.",imprint:{name:"Empremta"},learnMore:"Saber-ne més",privacyPolicy:{name:"política de privadesa"}},decline:"Rebutja",ok:"Accepta",poweredBy:"Funciona amb Klaro!",purposeItem:{service:"aplicació",services:"aplicacions"},save:"Desa"},cs:{privacyPolicy:{name:"zásady ochrany soukromí",text:'Pro další informace si přečtete naše <tr-hint v="privacy policy">{privacyPolicy}</tr-hint>.'},consentModal:{title:"Služby, které bychom rádi využili",description:"Zde můžete posoudit a přizpůsobit služby, které bychom rádi na tomto webu používali. Máte to pod kontrolou! Povolte nebo zakažte služby, jak uznáte za vhodné."},consentNotice:{testing:"Testing mode!",changeDescription:"Od vaší poslední návštěvy došlo ke změnám, obnovte prosím svůj souhlas.",description:"„Dobrý den! Můžeme povolit některé další služby pro {purposes}? Svůj souhlas můžete kdykoliv změnit nebo odvolat.“","learnMore|capitalize":"Vyberu si"},účely:{functional:{"title|capitalize":"Poskytování služeb",description:"Tyto služby jsou nezbytné pro správné fungování tohoto webu. Nelze je zde deaktivovat, protože služba by jinak nefungovala správně.\n"},performance:{"title|capitalize":"Optimalizace výkonu",description:"V rámci těchto služeb jsou zpracovávány osobní údaje za účelem optimalizace služeb, které jsou na tomto webu poskytovány.\n"},marketing:{"title|capitalize":"Marketing",description:"V rámci těchto služeb jsou zpracovávány osobní údaje, aby se vám zobrazoval relevantní obsah o produktech, službách nebo tématech, které by vás mohly zajímat."},advertising:{"title|capitalize":"Reklama",description:"V rámci těchto služeb jsou zpracovávány osobní údaje, aby vám zobrazovaly personalizované nebo zájmově orientované reklamy."}},purposeItem:{service:"Jednoduchá služba <tr-snip></tr-snip> , kterou nainstaluji do svého počítače.",services:"Několik jednoduchých služeb <tr-snip></tr-snip> , které nainstaluji do svého počítače."},"ok|capitalize":"To je v pořádku",save:"uložit","decline|capitalize":"Nepřijímám",close:"zavřít",acceptAll:"přijmout vše",acceptSelected:"přijmout vybrané",service:{disableAll:{title:"povolit nebo zakázat všechny služby",description:"Pomocí tohoto přepínače můžete povolit nebo zakázat všechny služby."},optOut:{title:"(opt-out)",description:"Tato služba se načítá ve výchozím nastavení (ale můžete ji zrušit)"},required:{title:"(vždy vyžadováno)",description:"Tato služba je vždy vyžadována"},purposes:"Zpracování  pro účely <tr-snip></tr-snip>",purpose:"Zpracování pro účely <tr-snip></tr-snip>"},poweredBy:"Realizováno pomocí Klaro!",contextualConsent:{description:"Chcete načíst externí obsah dodávaný prostřednictvím {title}?",acceptOnce:"Ano",acceptAlways:"Vždy"}},da:{acceptAll:"Tillad alle",acceptSelected:"Tillad udvalgte",service:{disableAll:{description:"Brug denne kontakt til at aktivere/deaktivere alle apps.",title:"Aktiver/deaktiver alle applikatione"},optOut:{description:"Denne applikation indlæses som standard (men du kan deaktivere den)",title:"Opt-Out"},purpose:"Formål",purposes:"Formål",required:{description:"Denne applikation er altid nødvendig",title:"(Altid nødvendig)"}},close:"Luk",consentModal:{description:"Her kan du se og ændre, hvilke informationer vi gemmer om dig.",privacyPolicy:{name:"Flere informationer finde du under {privacyPolicy}",text:"databeskyttelseserklæring."},title:"Informationer, som vi gemmer"},consentNotice:{changeDescription:"Der har været ændringer siden dit sidste besøg. Opdater dit valg.",description:"Vi gemmer og behandler dine personlige oplysninger til følgende formål: {purposes}.",imprint:{name:""},learnMore:"Læs mere",privacyPolicy:{name:"Datenschutzerklärung"}},decline:"Afvis",ok:"Ok",poweredBy:"Realiseret med Klaro!",purposeItem:{service:"",services:""},save:"Gem"},de:{acceptAll:"Alle akzeptieren",acceptSelected:"Ausgewählte akzeptieren",close:"Schließen",consentModal:{description:"Hier können Sie die Dienste, die wir auf dieser Website nutzen möchten, bewerten und anpassen. Sie haben das Sagen! Aktivieren oder deaktivieren Sie die Dienste, wie Sie es für richtig halten.",privacyPolicy:{name:"Datenschutzerklärung",text:"Um mehr zu erfahren, lesen Sie bitte unsere {privacyPolicy}."},title:"Dienste, die wir nutzen möchten"},consentNotice:{changeDescription:"Seit Ihrem letzten Besuch gab es Änderungen, bitte erneuern Sie Ihre Zustimmung.",title:"Cookie-Einstellungen",description:"Hallo! Könnten wir bitte einige zusätzliche Dienste für {purposes} aktivieren? Sie können Ihre Zustimmung später jederzeit ändern oder zurückziehen.",imprint:{name:"Impressum"},learnMore:"Lassen Sie mich wählen",privacyPolicy:{name:"Datenschutzerklärung"},testing:"Testmodus!"},contextualConsent:{acceptAlways:"Immer",acceptOnce:"Ja",description:"Möchten Sie von {title} bereitgestellte externe Inhalte laden?",descriptionEmptyStore:"Um diesem Dienst dauerhaft zustimmen zu können, müssen Sie {title} in den {link} zustimmen.",modalLinkText:"Cookie-Einstellungen"},decline:"Ich lehne ab",ok:"Das ist ok",poweredBy:"Realisiert mit Klaro!",privacyPolicy:{name:"Datenschutzerklärung",text:"Um mehr zu erfahren, lesen Sie bitte unsere {privacyPolicy}."},purposeItem:{service:"Dienst",services:"Dienste"},purposes:{advertising:{description:"Diese Dienste verarbeiten persönliche Informationen, um Ihnen personalisierte oder interessenbezogene Werbung zu zeigen.",title:"Werbung"},functional:{description:"Diese Dienste sind für die korrekte Funktion dieser Website unerlässlich. Sie können sie hier nicht deaktivieren, da der Dienst sonst nicht richtig funktionieren würde.\n",title:"Dienstbereitstellung"},marketing:{description:"Diese Dienste verarbeiten persönliche Daten, um Ihnen relevante Inhalte über Produkte, Dienstleistungen oder Themen zu zeigen, die Sie interessieren könnten.",title:"Marketing"},performance:{description:"Diese Dienste verarbeiten personenbezogene Daten, um den von dieser Website angebotenen Service zu optimieren.\n",title:"Optimierung der Leistung"}},save:"Speichern",service:{disableAll:{description:"Mit diesem Schalter können Sie alle Dienste aktivieren oder deaktivieren.",title:"Alle Dienste aktivieren oder deaktivieren"},optOut:{description:"Diese Dienste werden standardmäßig geladen (Sie können sich jedoch abmelden)",title:"(Opt-out)"},purpose:"Zweck",purposes:"Zwecke",required:{description:"Dieser Service ist immer erforderlich",title:"(immer erforderlich)"}}},el:{acceptAll:"",acceptAll_en:"Accept all",acceptSelected:"",acceptSelected_en:"Accept selected",service:{disableAll:{description:"Χρησιμοποίησε αυτό τον διακόπτη για να ενεργοποιήσεις/απενεργοποιήσεις όλες τις εφαρμογές.",title:"Για όλες τις εφαρμογές"},optOut:{description:"Είναι προκαθορισμένο να φορτώνεται, άλλα μπορεί να παραληφθεί",title:"(μη απαιτούμενο)"},purpose:"Σκοπός",purposes:"Σκοποί",required:{description:"Δεν γίνεται να λειτουργήσει σωστά η εφαρμογή χωρίς αυτό",title:"(απαιτούμενο)"}},close:"Κλείσιμο",consentModal:{description:"Εδώ μπορείς να δεις και να ρυθμίσεις τις πληροφορίες που συλλέγουμε σχετικά με εσένα.",privacyPolicy:{name:"Πολιτική Απορρήτου",text:"Για περισσότερες πληροφορίες, παρακαλώ διαβάστε την {privacyPolicy}."},title:"Πληροφορίες που συλλέγουμε"},consentNotice:{changeDescription:"Πραγματοποιήθηκαν αλλαγές μετά την τελευταία σας επίσκεψη παρακαλούμε ανανεώστε την συγκατάθεση σας.",description:"Συγκεντρώνουμε και επεξεργαζόμαστε τα προσωπικά δεδομένα σας για τους παρακάτω λόγους: {purposes}.",imprint:{name:"",name_en:"imprint"},learnMore:"Περισσότερα",privacyPolicy:{name:"Πολιτική Απορρήτου"}},decline:"Απόρριπτω",ok:"OK",poweredBy:"Υποστηρίζεται από το Klaro!",purposeItem:{service:"",services:""},save:"Αποθήκευση"},en:{acceptAll:"Accept all",acceptSelected:"Accept selected",close:"Close",consentModal:{description:"Here you can assess and customize the services that we'd like to use on this website. You're in charge! Enable or disable services as you see fit.",title:"Services we would like to use"},consentNotice:{changeDescription:"There were changes since your last visit, please renew your consent.",title:"Cookie Consent",description:"Hi! Could we please enable some additional services for {purposes}? You can always change or withdraw your consent later.",learnMore:"Let me choose",testing:"Testing mode!"},contextualConsent:{acceptAlways:"Always",acceptOnce:"Yes",description:"Do you want to load external content supplied by {title}?",descriptionEmptyStore:"To agree to this service permanently, you must accept {title} in the {link}.",modalLinkText:"Consent Manager"},decline:"I decline",ok:"That's ok",poweredBy:"Realized with Klaro!",privacyPolicy:{name:"privacy policy",text:"To learn more, please read our {privacyPolicy}."},purposeItem:{service:"service",services:"services"},purposes:{advertising:{description:"These services process personal information to show you personalized or interest-based advertisements.",title:"Advertising"},functional:{description:"These services are essential for the correct functioning of this website. You cannot disable them here as the service would not work correctly otherwise.\n",title:"Service Provision"},marketing:{description:"These services process personal information to show you relevant content about products, services or topics that you might be interested in.",title:"Marketing"},performance:{description:"These services process personal information to optimize the service that this website offers.\n",title:"Performance Optimization"}},save:"Save",service:{disableAll:{description:"Use this switch to enable or disable all services.",title:"Enable or disable all services"},optOut:{description:"This services is loaded by default (but you can opt out)",title:"(opt-out)"},purpose:"purpose",purposes:"purposes",required:{description:"This services is always required",title:"(always required)"}}},zh:{acceptAll:"照单全收",acceptSelected:"接受选择",close:"密切",consentModal:{description:"在这里，您可以评估和定制我们希望在本网站上使用的服务。您是负责人！您可以根据自己的需要启用或禁用服务。启用或禁用您认为合适的服务。",privacyPolicy:{name:"隐私政策",text:"要了解更多，请阅读我们的{privacyPolicy} 。"},title:"我们想使用的服务"},consentNotice:{changeDescription:"自上次访问后有变化，请更新您的同意。",description:"你好！我们可以为{purposes} 启用一些额外的服务吗？您可以随时更改或撤回您的同意。",imprint:{name:"印记"},learnMore:"让我来选",privacyPolicy:{name:"隐私政策"},testing:"测试模式！"},contextualConsent:{acceptAlways:"总是",acceptOnce:"是的，是的",description:"你想加载由{title} 提供的外部内容吗？"},decline:"我拒绝",ok:"没事的",poweredBy:"与Klaro一起实现!",privacyPolicy:{name:"隐私政策",text:"要了解更多，请阅读我们的{privacyPolicy} 。"},purposeItem:{service:"服务",services:"服务"},purposes:{advertising:{description:"这些服务处理个人信息，向您展示个性化或基于兴趣的广告。",title:"广告宣传"},functional:{description:"这些服务对于本网站的正常运行是必不可少的。您不能在这里禁用它们，否则服务将无法正常运行。\n",title:"服务提供"},marketing:{description:"这些服务会处理个人信息，向您展示您可能感兴趣的产品、服务或主题的相关内容。",title:"市场营销"},performance:{description:"这些服务处理个人信息是为了优化本网站提供的服务。\n",title:"性能优化"}},save:"挽救",service:{disableAll:{description:"使用此开关可启用或禁用所有服务。",title:"启用或停用所有服务"},optOut:{description:"这个服务是默认加载的(但你可以选择退出)",title:"(选择退出)"},purpose:"目的",purposes:"目的",required:{description:"这种服务是必须的",title:"(总是需要)"}}},pt:{acceptAll:"Aceitar todos",acceptSelected:"Aceitar selecionados",close:"Fechar",consentModal:{description:"Aqui você pode avaliar e personalizar os serviços que gostaríamos de usar neste website. Você está no comando! Habilite ou desabilite os serviços como julgar conveniente.",privacyPolicy:{name:"política de privacidade",text:"Para saber mais, por favor, leia nossa {privacyPolicy}."},title:"Serviços que gostaríamos de utilizar"},consentNotice:{changeDescription:"Houve mudanças desde sua última visita, queira renovar seu consentimento.",description:"Olá! Poderíamos, por favor, habilitar alguns serviços adicionais para {purposes}? Você pode sempre mudar ou retirar seu consentimento mais tarde.",imprint:{name:"imprimir"},learnMore:"Deixe-me escolher",privacyPolicy:{name:"política de privacidade"},testing:"Modo de teste!"},contextualConsent:{acceptAlways:"Sempre",acceptOnce:"Sim",description:"Você deseja carregar conteúdo externo fornecido por {title}?"},decline:"Recusar",ok:"Aceito.",poweredBy:"Realizado com Klaro!",privacyPolicy:{name:"política de privacidade",text:"Para saber mais, por favor, leia nossa {privacyPolicy}."},purposeItem:{service:"serviço",services:"serviços"},purposes:{advertising:{description:"Esses serviços processam informações pessoais para mostrar a você anúncios personalizados ou baseados em interesses.",title:"Publicidade"},functional:{description:"Esses serviços são essenciais para o correto funcionamento deste website. Você não pode desativá-los aqui, pois de outra forma o serviço não funcionaria corretamente.\n",title:"Prestação de serviços"},marketing:{description:"Esses serviços processam informações pessoais para mostrar a você conteúdo relevante sobre produtos, serviços ou tópicos que possam ser do seu interesse.",title:"Marketing"},performance:{description:"Esses serviços processam informações pessoais para otimizar o serviço que este website oferece.\n",title:"Otimização do desempenho"}},save:"Salvar",service:{disableAll:{description:"Use essa chave para habilitar ou desabilitar todos os serviços.",title:"Habilitar ou desabilitar todos os serviços"},optOut:{description:"Estes serviços são carregados por padrão (mas o você pode optar por não participar).",title:"(opt-out)"},purpose:"Objetivo",purposes:"Objetivos",required:{description:"Esses serviços são sempre necessários",title:"(sempre necessário)"}}},es:{acceptAll:"Aceptar todas",acceptSelected:"Aceptar seleccionadas",close:"Cerrar",consentModal:{description:"Aquí puede evaluar y personalizar los servicios que nos gustaría utilizar en este sitio web. ¡Usted decide! Habilite o deshabilite los servicios como considere oportuno.",privacyPolicy:{name:"política de privacidad",text:"Para saber más, por favor lea nuestra {privacyPolicy}."},title:"Servicios que nos gustaría utilizar"},consentNotice:{changeDescription:"Ha habido cambios en las cookies desde su última visita. Debe renovar su consentimiento.",description:"¡Hola! ¿Podríamos habilitar algunos servicios adicionales para {purposes}? Siempre podrá cambiar o retirar su consentimiento más tarde.",imprint:{name:"Imprimir"},learnMore:"Quiero elegir",privacyPolicy:{name:"política de privacidad"},testing:"¡Modo de prueba!"},contextualConsent:{acceptAlways:"Siempre",acceptOnce:"Sí",description:"¿Quieres cargar el contenido externo suministrado por {title}?"},decline:"Descartar todas",ok:"De acuerdo",poweredBy:"¡Realizado con Klaro!",privacyPolicy:{name:"política de privacidad",text:"Para saber más, por favor lea nuestra {privacyPolicy}."},purposeItem:{service:"servicio",services:"servicios"},purposes:{advertising:{description:"Estos servicios procesan información personal para mostrarle anuncios personalizados o basados en intereses.",title:"Publicidad"},functional:{description:"Estos servicios son esenciales para el correcto funcionamiento de este sitio web. No puede desactivarlos ya que la página no funcionaría correctamente.",title:"Prestación de servicios"},marketing:{description:"Estos servicios procesan información personal para mostrarle contenido relevante sobre productos, servicios o temas que puedan interesarle.",title:"Marketing"},performance:{description:"Estos servicios procesan información personal para optimizar el servicio que ofrece este sitio.",title:"Optimización del rendimiento"}},save:"Guardar",service:{disableAll:{description:"Utilice este interruptor para activar o desactivar todos los servicios.",title:"Activar o desactivar todos los servicios"},optOut:{description:"Este servicio está habilitado por defecto (pero puede optar por lo contrario)",title:"(desactivar)"},purpose:"Finalidad",purposes:"Finalidades",required:{description:"Este servicio es necesario siempre",title:"(siempre requerido)"}}},fi:{acceptAll:"",acceptAll_en:"Accept all",acceptSelected:"",acceptSelected_en:"Accept selected",service:{disableAll:{description:"Aktivoi kaikki päälle/pois.",title:"Valitse kaikki"},optOut:{description:"Ladataan oletuksena (mutta voit ottaa sen pois päältä)",title:"(ladataan oletuksena)"},purpose:"Käyttötarkoitus",purposes:"Käyttötarkoitukset",required:{description:"Sivusto vaatii tämän aina",title:"(vaaditaan)"}},close:"Sulje",consentModal:{description:"Voit tarkastella ja muokata sinusta keräämiämme tietoja.",privacyPolicy:{name:"tietosuojasivultamme",text:"Voit lukea lisätietoja {privacyPolicy}."},title:"Keräämämme tiedot"},consentNotice:{changeDescription:"Olemme tehneet muutoksia ehtoihin viime vierailusi jälkeen, tarkista ehdot.",description:"Keräämme ja käsittelemme henkilötietoja seuraaviin tarkoituksiin: {purposes}.",imprint:{name:"",name_en:"imprint"},learnMore:"Lue lisää",privacyPolicy:{name:"tietosuojasivultamme"}},decline:"Hylkää",ok:"Hyväksy",poweredBy:"Palvelun tarjoaa Klaro!",purposeItem:{service:"",services:""},save:"Tallenna"},fr:{acceptAll:"Accepter tout",acceptSelected:"Accepter sélectionné",close:"Fermer",consentModal:{description:"Vous pouvez ici évaluer et personnaliser les services que nous aimerions utiliser sur ce site. C'est vous qui décidez ! Activez ou désactivez les services comme bon vous semble.",privacyPolicy:{name:"politique de confidentialité",text:"Pour en savoir plus, veuillez lire notre {privacyPolicy}."},title:"Services que nous souhaitons utiliser"},consentNotice:{changeDescription:"Il y a eu des changements depuis votre dernière visite, veuillez renouveler votre consentement.",description:"Bonjour ! Pourrions-nous activer des services supplémentaires pour {purposes}? Vous pouvez toujours modifier ou retirer votre consentement plus tard.",imprint:{name:"mentions légales"},learnMore:"Laissez-moi choisir",privacyPolicy:{name:"politique de confidentialité"},testing:"Mode test !"},contextualConsent:{acceptAlways:"Toujours",acceptOnce:"Oui",description:"Vous souhaitez charger un contenu externe fourni par {title}?"},decline:"Je refuse",ok:"C'est bon.",poweredBy:"Réalisé avec Klaro !",privacyPolicy:{name:"politique de confidentialité",text:"Pour en savoir plus, veuillez lire notre {privacyPolicy}."},purposeItem:{service:"service",services:"services"},purposes:{advertising:{description:"Ces services traitent les informations personnelles pour vous présenter des publicités personnalisées ou basées sur des intérêts.",title:"Publicité"},functional:{description:"Ces services sont essentiels au bon fonctionnement de ce site. Vous ne pouvez pas les désactiver ici car le service ne fonctionnerait pas correctement autrement.\n",title:"Prestation de services"},marketing:{description:"Ces services traitent les informations personnelles afin de vous présenter un contenu pertinent sur les produits, les services ou les sujets qui pourraient vous intéresser.",title:"Marketing"},performance:{description:"Ces services traitent les informations personnelles afin d'optimiser le service que ce site Web offre.\n",title:"Optimisation de la performance"}},save:"Enregistrer",service:{disableAll:{description:"Utilisez ce commutateur pour activer ou désactiver tous les services.",title:"Activer ou désactiver tous les services"},optOut:{description:"Ce service est chargé par défaut (mais vous pouvez le désactiver)",title:"(opt-out)"},purpose:"Objet",purposes:"Fins",required:{description:"Ce service est toujours nécessaire",title:"(toujours requis)"}}},gl:{acceptAll:"Aceptar todas",acceptSelected:"Aceptar seleccionadas",close:"Pechar",consentModal:{description:"Aquí pode avaliar e personalizar os servizos que nos gustaría utilizar neste sitio web. ¡Vostede decide! Habilite ou deshabilite os servicios como lle conveña.",privacyPolicy:{name:"política de privacidade",text:"Para saber máis, por favor lea a nosa {privacyPolicy}."},title:"Servizos que nos gustaría utilizar"},consentNotice:{changeDescription:"Houbo cambios nas cookies dende a súa última visita. Debe renovar o seu consentimento.",description:"¡Ola! ¿Poderíamos habilitar algúns servizos adicionais para {purposes}? Sempre poderá cambiar ou retirar o séu consentimento máis tarde.",imprint:{name:"Imprimir"},learnMore:"Quero elixir",privacyPolicy:{name:"política de privacidade"},testing:"¡Modo de proba!"},decline:"Descartar todas",ok:"De acordo",poweredBy:"¡Realizado con Klaro!",privacyPolicy:{name:"política de privacidade",text:"Para saber máis, por favor lea a nosa {privacyPolicy}."},purposeItem:{service:"servizo",services:"servizos"},purposes:{advertising:{description:"Estes servizos procesan información persoal para mostrarlle anuncios personalizados ou basados en intereses.",title:"Publicidade"},functional:{description:"Estes servizos son esenciais para o correcto funcionamiento deste sitio web. Non pode desactivalos xa que a páxina non funcionaría correctamente.",title:"Prestación de servizos"},marketing:{description:"Estes servizos procesan información persoal para mostrarlle contido relevante sobre produtos, servizos ou temas que poidan interesarlle.",title:"Marketing"},performance:{description:"Estes servizos procesan información persoal para optimizar o servizo que ofrece este sitio.",title:"Optimización do rendimento"}},save:"Gardar",service:{disableAll:{description:"Utilice este interruptor para activar ou desactivar todos os servizos.",title:"Activar ou desactivar todos os servizos"},optOut:{description:"Este servizo está habilitado por defecto (pero pode optar polo contrario)",title:"(desactivar)"},purpose:"Finalidade",purposes:"Finalidades",required:{description:"Este servizo é necesario sempre",title:"(sempre requirido)"}}},hu:{acceptAll:"Mind elfogad",acceptAll_en:"Accept all",acceptSelected:"Kiválasztottat elfogad",acceptSelected_en:"Accept selected",service:{disableAll:{description:"Használja ezt a kapcsolót az összes alkalmazás engedélyezéséhez/letiltásához.",title:"Összes app átkapcsolása"},optOut:{description:"Ez az alkalmazás alapértelmezés szerint betöltött (de ki lehet kapcsolni)",title:"(leiratkozás)"},purpose:"Cél",purposes:"Célok",required:{description:"Ez az alkalmazás mindig szükséges",title:"(mindig szükséges)"}},close:"Elvet",consentModal:{description:"Itt láthatja és testreszabhatja az önről gyűjtött információkat.",privacyPolicy:{name:"adatvédelmi irányelveinket",text:"További információért kérjük, olvassa el az {privacyPolicy}."},title:"Információk, amiket gyűjtünk"},consentNotice:{changeDescription:"Az utolsó látogatás óta változások történtek, kérjük, frissítse a hozzájárulását.",description:"Személyes adatait összegyűjtjük és feldolgozzuk az alábbi célokra: {purposes}.",imprint:{name:"impresszum",name_en:"imprint"},learnMore:"Tudjon meg többet",privacyPolicy:{name:"adatvédelmi irányelveinket"}},contextualConsent:{acceptAlways:"Mindig",acceptOnce:"Igen",description:"Be akarod tölteni a {title} által szolgáltatott külső tartalmakat?"},decline:"Elutasít",ok:"Elfogad",poweredBy:"Powered by Klaro!",purposeItem:{service:"",services:""},save:"Mentés"},hr:{acceptAll:"",acceptAll_en:"Prihvati sve",acceptSelected:"",acceptSelected_en:"Prihvati odabrane",service:{disableAll:{description:"Koristite ovaj prekidač da omogućite/onemogućite sve aplikacije odjednom.",title:"Izmeijeni sve"},optOut:{description:"Ova aplikacija je učitana automatski (ali je možete onemogućiti)",title:"(onemogućite)"},purpose:"Svrha",purposes:"Svrhe",required:{description:"Ova aplikacija je uvijek obavezna",title:"(obavezna)"}},close:"Zatvori",consentModal:{description:"Ovdje možete vidjeti i podesiti informacije koje prikupljamo o Vama.",privacyPolicy:{name:"pravila privatnosti",text:"Za više informacije pročitajte naša {privacyPolicy}."},title:"Informacije koje prikupljamo"},consentNotice:{changeDescription:"Došlo je do promjena od Vaše posljednjeg posjećivanja web stranice, molimo Vas da ažurirate svoja odobrenja.",description:"Mi prikupljamo i procesiramo Vaše osobne podatke radi slijedećeg: {purposes}.",imprint:{name:"",name_en:"imprint"},learnMore:"Saznajte više",privacyPolicy:{name:"pravila privatnosti"}},decline:"Odbij",ok:"U redu",poweredBy:"Pokreće Klaro!",purposeItem:{service:"",services:""},save:"Spremi"},it:{acceptAll:"Accettare tutti",acceptSelected:"Accettare selezionato",close:"Chiudi",consentModal:{description:"Qui può valutare e personalizzare i servizi che vorremmo utilizzare su questo sito web. È lei il responsabile! Abilitare o disabilitare i servizi come meglio crede.",privacyPolicy:{name:"informativa sulla privacy",text:"Per saperne di più, legga la nostra {privacyPolicy}."},title:"Servizi che desideriamo utilizzare"},consentNotice:{changeDescription:"Ci sono stati dei cambiamenti rispetto alla sua ultima visita, la preghiamo di rinnovare il suo consenso.",description:"Salve, possiamo attivare alcuni servizi aggiuntivi per {purposes}? Può sempre modificare o ritirare il suo consenso in un secondo momento.",imprint:{name:"impronta"},learnMore:"Lasciatemi scegliere",privacyPolicy:{name:"informativa sulla privacy"},testing:"Modalità di test!"},contextualConsent:{acceptAlways:"Sempre",acceptOnce:"Sì",description:"Vuole caricare contenuti esterni forniti da {title}?"},decline:"Rifiuto",ok:"Va bene così",poweredBy:"Realizzato con Klaro!",privacyPolicy:{name:"informativa sulla privacy",text:"Per saperne di più, legga la nostra {privacyPolicy}."},purposeItem:{service:"servizio",services:"servizi"},purposes:{advertising:{description:"Questi servizi elaborano le informazioni personali per mostrarle annunci pubblicitari personalizzati o basati su interessi.",title:"Pubblicità"},functional:{description:"Questi servizi sono essenziali per il corretto funzionamento di questo sito web. Non può disattivarli qui perché altrimenti il servizio non funzionerebbe correttamente.\n",title:"Fornitura di servizi"},marketing:{description:"Questi servizi elaborano le informazioni personali per mostrarle contenuti rilevanti su prodotti, servizi o argomenti che potrebbero interessarla.",title:"Marketing"},performance:{description:"Questi servizi elaborano le informazioni personali per ottimizzare il servizio offerto da questo sito web.\n",title:"Ottimizzazione delle prestazioni"}},save:"Salva",service:{disableAll:{description:"Utilizzi questo interruttore per attivare o disattivare tutti i servizi.",title:"Attivare o disattivare tutti i servizi"},optOut:{description:"Questo servizio è caricato di default (ma è possibile scegliere di non usufruirne)",title:"(opt-out)"},purpose:"Scopo dell",purposes:"Finalità",required:{description:"Questo servizio è sempre richiesto",title:"(sempre richiesto)"}}},nl:{acceptAll:"Accepteer alle",acceptSelected:"Geselecteerde",close:"Sluit",consentModal:{description:"Hier kunt u de diensten die wij op deze website willen gebruiken beoordelen en aanpassen. U heeft de leiding! Schakel de diensten naar eigen inzicht in of uit.",privacyPolicy:{name:"privacybeleid",text:"Voor meer informatie kunt u ons {privacyPolicy} lezen."},title:"Diensten die we graag willen gebruiken"},consentNotice:{changeDescription:"Er waren veranderingen sinds uw laatste bezoek, gelieve uw toestemming te hernieuwen.",description:"Hallo, kunnen wij u een aantal extra diensten aanbieden voor {purposes}? U kunt uw toestemming later altijd nog wijzigen of intrekken.",imprint:{name:"impressum"},learnMore:"Laat me kiezen",privacyPolicy:{name:"privacybeleid"},testing:"Testmodus!"},contextualConsent:{acceptAlways:"Altijd",acceptOnce:"Ja",description:"Wilt u externe content laden die door {title} wordt aangeleverd ?"},decline:"Ik weiger",ok:"Dat is oké",poweredBy:"Gerealiseerd met Klaro!",privacyPolicy:{name:"privacybeleid",text:"Voor meer informatie kunt u ons {privacyPolicy} lezen."},purposeItem:{service:"service",services:"diensten"},purposes:{advertising:{description:"Deze diensten verwerken persoonlijke informatie om u gepersonaliseerde of op interesse gebaseerde advertenties te tonen.",title:"Reclame"},functional:{description:"Deze diensten zijn essentieel voor het correct functioneren van deze website. U kunt ze hier niet uitschakelen omdat de dienst anders niet correct zou werken.\n",title:"Dienstverlening"},marketing:{description:"Deze diensten verwerken persoonlijke informatie om u relevante inhoud te tonen over producten, diensten of onderwerpen waarin u geïnteresseerd zou kunnen zijn.",title:"Marketing"},performance:{description:"Deze diensten verwerken persoonlijke informatie om de service die deze website biedt te optimaliseren.\n",title:"Optimalisatie van de prestaties"}},save:"Opslaan",service:{disableAll:{description:"Gebruik deze schakelaar om alle diensten in of uit te schakelen.",title:"Alle diensten in- of uitschakelen"},optOut:{description:"Deze diensten worden standaard geladen (maar u kunt zich afmelden)",title:"(opt-out)"},purpose:"Verwerkingsdoel",purposes:"Verwerkingsdoeleinden",required:{description:"Deze diensten zijn altijd nodig",title:"(altijd nodig)"}}},no:{acceptAll:"Godtar alle",acceptSelected:"Godtar valgt",service:{disableAll:{description:"Bruk denne for å skru av/på alle apper.",title:"Bytt alle apper"},optOut:{description:"Denne appen er lastet som standard (men du kan skru det av)",title:"(opt-out)"},purpose:"Årsak",purposes:"Årsaker",required:{description:"Denne applikasjonen er alltid påkrevd",title:"(alltid påkrevd)"}},close:"",close_en:"Close",consentModal:{description:"Her kan du se og velge hvilken informasjon vi samler inn om deg.",privacyPolicy:{name:"personvernerklæring",text:"For å lære mer, vennligst les vår {privacyPolicy}."},title:"Informasjon vi samler inn"},consentNotice:{changeDescription:"Det har skjedd endringer siden ditt siste besøk, vennligst oppdater ditt samtykke.",description:"Vi samler inn og prosesserer din personlige informasjon av følgende årsaker: {purposes}.",imprint:{name:"",name_en:"imprint"},learnMore:"Lær mer",privacyPolicy:{name:"personvernerklæring"}},decline:"Avslå",ok:"OK",poweredBy:"Laget med Klaro!",purposeItem:{service:"",services:""},save:"Opslaan"},oc:{acceptAll:"Tot acceptar",acceptSelected:"Acceptar çò seleccionat",close:"Tampar",consentModal:{description:"Aquí podètz mesurar e personalizar los servicis que volriam utilizar sus aqueste site web. Avètz lo darrièr mot ! Activatz o desactivatz segon vòstra causida.",title:"Servicis que volriam utilizar"},consentNotice:{changeDescription:"I aguèt de modificacions dempuèi vòstra darrièra visita, mercés de repassar vòstre consentiment.",description:"Adieu ! Poiriam activar mai de servici per {purposes} ? Podètz totjorn modificar o tirar vòstre consentiment mai tard.",learnMore:"Me daissar causir",testing:"Mòde tèst !"},contextualConsent:{acceptAlways:"Totjorn",acceptOnce:"Òc",description:"Volètz cargar de contenguts extèrn provesits per {title} ?"},decline:"Refusi",ok:"Es bon",poweredBy:"Realizat amb Klaro !",privacyPolicy:{name:"politica de confidencialitat",text:"Per ne saber mai, vejatz nòstra {privacyPolicy}."},purposeItem:{service:"servici",services:"servicis"},purposes:{advertising:{description:"Aquestes servicis tractan d’informacions personalas per vos mostrar de reclamas personalizadas o basadas suls interèsses.",title:"Reclama"},functional:{description:"Aquestes servicis son essencials pel foncionament corrèct d’aqueste site web. Los podètz pas desactivar aquí pr’amor que lo servici foncionariá pas coma cal autrament.\n",title:"Servici de provision"},marketing:{description:"Aquestes servicis tractan d’informacions personalas per vos mostrar de contenguts a prepaus de produits, de servicis o tèmas que poirián vos interessar.",title:"Marketing"},performance:{description:"Aquestes servicis tractan d’informacions per optimizar lo servici qu’aqueste site web prepausa.\n",title:"Optimizacion de las performanças"}},save:"Salvar",service:{disableAll:{description:"Utilizatz aqueste alternator per activar o desactivar totes los servicis.",title:"Activar o desactivar totes los servicis"},optOut:{description:"Aqueste servici es cargar per defaut (mas lo podètz desactivar)",title:"(opt-out)"},purpose:"finalitat",purposes:"finalitat",required:{description:"Aqueste servici es totjorn requesit",title:"(totjorn requesit)"}}},ro:{acceptAll:"",acceptAll_en:"Accept all",acceptSelected:"",acceptSelected_en:"Accept selected",service:{disableAll:{description:"Utilizați acest switch pentru a activa/dezactiva toate aplicațiile.",title:"Comutați între toate aplicațiile"},optOut:{description:"Această aplicație este încărcată în mod implicit (dar puteți renunța)",title:"(opt-out)"},purpose:"Scop",purposes:"Scopuri",required:{description:"Această aplicație este întotdeauna necesară",title:"(întotdeauna necesar)"}},close:"",close_en:"Close",consentModal:{description:"Aici puteți vedea și personaliza informațiile pe care le colectăm despre dvs.",privacyPolicy:{name:"politica privacy",text:"Pentru a afla mai multe, vă rugăm să citiți {privacyPolicy}."},title:"Informațiile pe care le colectăm"},consentNotice:{changeDescription:"Au existat modificări de la ultima vizită, vă rugăm să actualizați consimțământul.",description:"Colectăm și procesăm informațiile dvs. personale în următoarele scopuri: {purposes}.",imprint:{name:"",name_en:"imprint"},learnMore:"Află mai multe",privacyPolicy:{name:"politica privacy"}},decline:"Renunță",ok:"OK",poweredBy:"Realizat de Klaro!",purposeItem:{service:"",services:""},save:"Salvează"},sr:{acceptAll:"",acceptAll_en:"Accept all",acceptSelected:"",acceptSelected_en:"Accept selected",service:{disableAll:{description:"Koristite ovaj prekidač da omogućite/onesposobite sve aplikacije odjednom.",title:"Izmeni sve"},optOut:{description:"Ova aplikacija je učitana automatski (ali je možete onesposobiti)",title:"(onesposobite)"},purpose:"Svrha",purposes:"Svrhe",required:{description:"Ova aplikacija je uvek neophodna",title:"(neophodna)"}},close:"Zatvori",consentModal:{description:"Ovde možete videti i podesiti informacije koje prikupljamo o Vama.",privacyPolicy:{name:"politiku privatnosti",text:"Za više informacije pročitajte našu {privacyPolicy}."},title:"Informacije koje prikupljamo"},consentNotice:{changeDescription:"Došlo je do promena od Vaše poslednje posete, molimo Vas da ažurirate svoja odobrenja.",description:"Mi prikupljamo i procesiramo Vaše lične podatke radi sledećeg: {purposes}.",imprint:{name:"",name_en:"imprint"},learnMore:"Saznajte više",privacyPolicy:{name:"politiku privatnosti"}},decline:"Odbij",ok:"U redu",poweredBy:"Pokreće Klaro!",purposeItem:{service:"",services:""},save:"Sačuvaj"},sr_cyrl:{consentModal:{title:"Информације које прикупљамо",description:"Овде можете видет и подесити информације које прикупљамо о Вама.\n",privacyPolicy:{name:"политику приватности",text:"За више информација прочитајте нашу {privacyPolicy}.\n"}},consentNotice:{changeDescription:"Дошло је до промена од Ваше последнје посете, молимо Вас да ажурирате своја одобрења.",description:"Ми прикупљамо и процесирамо Ваше личне податке ради следећег: {purposes}.\n",learnMore:"Сазнајте више",privacyPolicy:{name:"политику приватности"}},ok:"У реду",save:"Сачувај",decline:"Одбиј",close:"Затвори",service:{disableAll:{title:"Измени све",description:"Користите овај прекидач да омогућите/онеспособите све апликације одједном."},optOut:{title:"(онеспособите)",description:"Ова апликација је учитана аутоматски (али је можете онеспособити)"},required:{title:"(неопходна)",description:"Ова апликација је увек неопходна."},purposes:"Сврхе",purpose:"Сврха"},poweredBy:"Покреће Кларо!"},sv:{acceptAll:"Acceptera alla",acceptSelected:"Acceptera markerat",service:{disableAll:{description:"Använd detta reglage för att aktivera/avaktivera samtliga appar.",title:"Ändra för alla appar"},optOut:{description:"Den här appen laddas som standardinställning (men du kan avaktivera den)",title:"(Avaktivera)"},purpose:"Syfte",purposes:"Syften",required:{description:"Den här applikationen krävs alltid",title:"(Krävs alltid)"}},close:"Stäng",consentModal:{description:"Här kan du se och anpassa vilken information vi samlar om dig.",privacyPolicy:{name:"Integritetspolicy",text:"För att veta mer, läs vår {privacyPolicy}."},title:"Information som vi samlar"},consentNotice:{changeDescription:"Det har skett förändringar sedan ditt senaste besök, var god uppdatera ditt medgivande.",description:"Vi samlar och bearbetar din personliga data i följande syften: {purposes}.",imprint:{name:"",name_en:"imprint"},learnMore:"Läs mer",privacyPolicy:{name:"Integritetspolicy"}},decline:"Avböj",ok:"OK",poweredBy:"Körs på Klaro!",purposeItem:{service:"",services:""},save:"Spara"},tr:{acceptAll:"",acceptAll_en:"Accept all",acceptSelected:"",acceptSelected_en:"Accept selected",service:{disableAll:{description:"Toplu açma/kapama için bu düğmeyi kullanabilirsin.",title:"Tüm uygulamaları aç/kapat"},optOut:{description:"Bu uygulama varsayılanda yüklendi (ancak iptal edebilirsin)",title:"(isteğe bağlı)"},purpose:"Amaç",purposes:"Amaçlar",required:{description:"Bu uygulama her zaman gerekli",title:"(her zaman gerekli)"}},close:"Kapat",consentModal:{description:"Hakkınızda topladığımız bilgileri burada görebilir ve özelleştirebilirsiniz.",privacyPolicy:{name:"Gizlilik Politikası",text:"Daha fazlası için lütfen {privacyPolicy} sayfamızı okuyun."},title:"Sakladığımız bilgiler"},consentNotice:{changeDescription:"Son ziyaretinizden bu yana değişiklikler oldu, lütfen seçiminizi güncelleyin.",description:"Kişisel bilgilerinizi aşağıdaki amaçlarla saklıyor ve işliyoruz: {purposes}.",imprint:{name:"",name_en:"imprint"},learnMore:"Daha fazla bilgi",privacyPolicy:{name:"Gizlilik Politikası"}},decline:"Reddet",ok:"Tamam",poweredBy:"Klaro tarafından geliştirildi!",purposeItem:{service:"",services:""},save:"Kaydet"},pl:{acceptAll:"Zaakceptuj wszystkie",acceptSelected:"Zaakceptuj wybrane",close:"Zamknij",consentModal:{description:"Tutaj mogą Państwo ocenić i dostosować usługi, które chcielibyśmy wykorzystać na tej stronie. Włączaj lub wyłączaj usługi według własnego uznania.",privacyPolicy:{name:"polityką prywatności",text:"Aby dowiedzieć się więcej, prosimy o zapoznanie się z naszą {privacyPolicy}."},title:"Usługi, z których chcielibyśmy skorzystać"},consentNotice:{changeDescription:"Od Twojej ostatniej wizyty nastąpiły zmiany, prosimy o odnowienie zgody.",description:"Czy możemy włączyć dodatkowe usługi dla {purposes}? W każdej chwili mogą Państwo później zmienić lub wycofać swoją zgodę.",imprint:{name:"Imprint"},learnMore:"Pozwól mi wybrać",privacyPolicy:{name:"polityka prywatności"},testing:"Tryb testowy!"},contextualConsent:{acceptAlways:"Zawsze",acceptOnce:"Tak",description:"Czy chcą Państwo załadować treści zewnętrzne dostarczane przez {title}?"},decline:"Odmawiam",ok:"Ok",poweredBy:"Technologia dostarczona przez Klaro",privacyPolicy:{name:"polityka prywatności",text:"Aby dowiedzieć się więcej, prosimy o zapoznanie się z naszą {privacyPolicy}."},purposeItem:{service:"usługa",services:"usługi"},purposes:{advertising:{description:"Usługi te przetwarzają dane osobowe w celu pokazania Państwu spersonalizowanych lub opartych na zainteresowaniach reklam.",title:"Reklama"},functional:{description:"Usługi te są niezbędne do prawidłowego funkcjonowania niniejszej strony internetowej. Nie mogą Państwo ich tutaj wyłączyć, ponieważ w przeciwnym razie strona nie działałaby prawidłowo.\n",title:"Świadczenie usług"},marketing:{description:"Usługi te przetwarzają dane osobowe w celu pokazania Państwu istotnych treści dotyczących produktów, usług lub tematów, którymi mogą być Państwo zainteresowani.",title:"Marketing"},performance:{description:"Usługi te przetwarzają dane osobowe w celu optymalizacji usług oferowanych przez tę stronę.\n",title:"Optymalizacja wydajności"}},save:"Zapisz",service:{disableAll:{description:"Za pomocą tego przełącznika można włączać lub wyłączać wszystkie usługi.",title:"Włącz lub wyłącz wszystkie usługi"},optOut:{description:"Ta usługa jest domyślnie załadowana (ale mogą Państwo z niej zrezygnować)",title:"(opt-out)"},purpose:"Cel",purposes:"Cele",required:{description:"Usługi te są zawsze wymagane",title:"(zawsze wymagane)"}}},ru:{acceptAll:"Принять всё",acceptSelected:"Принять выбранные",service:{disableAll:{description:"Используйте этот переключатель, чтобы включить/отключить все приложения.",title:"Переключить все приложения"},optOut:{description:"Это приложение включено по умолчанию (но вы можете отказаться)",title:"(отказаться)"},purpose:"Намерение",purposes:"Намерения",required:{description:"Это обязательное приложение",title:"(всегда обязательный)"}},close:"Закрыть",consentModal:{description:"Здесь вы можете просмотреть и настроить, какую информацию о вас мы храним.",privacyPolicy:{name:"Соглашение",text:"Чтобы узнать больше, пожалуйста, прочитайте наше {privacyPolicy}."},title:"Информация, которую мы сохраняем"},consentNotice:{changeDescription:"Со времени вашего последнего визита произошли изменения, обновите своё согласие.",description:"Мы собираем и обрабатываем вашу личную информацию для следующих целей: {purposes}.",imprint:{name:"",name_en:"imprint"},learnMore:"Настроить",privacyPolicy:{name:"политика конфиденциальности"}},decline:"Отклонить",ok:"Принять",poweredBy:"Работает на Кларо!",purposeItem:{service:"",services:""},save:"Сохранить"}});Ln(dr,zr),xr()})(),r})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,